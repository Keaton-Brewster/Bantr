[{"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/index.js":"1","/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/App.js":"2","/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/reportWebVitals.js":"3","/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/utils/ConvorsationProvider.jsx":"4","/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Pages/Signup/index.jsx":"5","/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Pages/Login/index.jsx":"6","/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Pages/Home/index.jsx":"7","/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/utils/API.js":"8","/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/utils/useViewport.jsx":"9","/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/Conversations.jsx":"10","/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/Messages.jsx":"11","/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/MessageContextMenu.jsx":"12"},{"size":427,"mtime":1622337617145,"results":"13","hashOfConfig":"14"},{"size":687,"mtime":1622782852039,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1622210818766,"results":"16","hashOfConfig":"14"},{"size":1585,"mtime":1622784002329,"results":"17","hashOfConfig":"14"},{"size":3127,"mtime":1622758328877,"results":"18","hashOfConfig":"14"},{"size":1680,"mtime":1622758332902,"results":"19","hashOfConfig":"14"},{"size":2135,"mtime":1623669781572,"results":"20","hashOfConfig":"14"},{"size":1057,"mtime":1622783409029,"results":"21","hashOfConfig":"14"},{"size":472,"mtime":1622774256779,"results":"22","hashOfConfig":"14"},{"size":2005,"mtime":1623671433323,"results":"23","hashOfConfig":"14"},{"size":5969,"mtime":1624459195641,"results":"24","hashOfConfig":"14"},{"size":193,"mtime":1623973389744,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"15fj877",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/index.js",[],["53","54"],"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/App.js",[],"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/reportWebVitals.js",[],"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/utils/ConvorsationProvider.jsx",[],"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Pages/Signup/index.jsx",[],"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Pages/Login/index.jsx",[],"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Pages/Home/index.jsx",["55","56","57"],"import { useEffect } from \"react\";\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport { useConversations } from \"../../utils/ConvorsationProvider\";\nimport API from \"../../utils/API\";\nimport useViewport from \"../../utils/useViewport\";\nimport Conversations from \"../../Comps/Conversations\";\nimport Messages from \"../../Comps/Messages\";\nimport \"./home.css\";\n\nexport default function Home() {\n  const {\n    selectedConversationState,\n    userState,\n    messageState,\n    loadingMessagesState,\n    mobileViewState,\n  } = useConversations();\n  const [user, setUser] = userState;\n  const [selectedConversation, setSelectedConversation] =\n    selectedConversationState;\n  const [messages, setMessages] = messageState;\n  const [loadingMessages, setLoadingMessages] = loadingMessagesState;\n  const [mobileView, setMobileView] = mobileViewState;\n  const { width } = useViewport();\n\n  function sendMessage(text) {\n    // Yet another place where I ran into id issues.. this is going to be a mess to fix later\n    const convo_id = selectedConversation.id;\n    // const convo_id = selectedConversation._id;\n    API.sendMessage(convo_id, user._id, text)\n      .then((data) => {\n        console.log(data);\n        setMessages([...messages, data]);\n      })\n      .catch((e) => console.error(e));\n  }\n\n  useEffect(() => {\n    if (width <= 575) {\n      setMobileView({ conversations: true, messages: false });\n      return;\n    }\n    setMobileView({ conversations: true, messages: true });\n  }, [width, setSelectedConversation, setMobileView]);\n\n  return (\n    <>\n      {width > 575 ? (\n        <Container fluid>\n          <Row>\n            <Col sm={3}>\n              <Conversations />\n            </Col>\n            <Col sm={9} id=\"messageBox\">\n              <Messages sendMessage={sendMessage} />\n            </Col>\n          </Row>\n        </Container>\n      ) : (\n        <Container fluid>\n          <Conversations />\n          {loadingMessages ? (\n            <Spinner id=\"spinner\" animation=\"border\" />\n          ) : (\n            <Messages sendMessage={sendMessage} />\n          )}\n        </Container>\n      )}\n    </>\n  );\n}\n","/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/utils/API.js",[],"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/utils/useViewport.jsx",[],"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/Conversations.jsx",["58","59","60","61","62"],"import { useRef } from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport { useConversations } from \"../utils/ConvorsationProvider\";\nimport API from \"../utils/API\";\nimport useViewport from \"../utils/useViewport\";\n\nexport default function Conversations() {\n  const {\n    messageState,\n    conversationState,\n    selectedConversationState,\n    mobileViewState,\n    loadingMessagesState,\n  } = useConversations();\n  const [messages, setMessages] = messageState;\n  const [conversations, setConversations] = conversationState;\n  const [selectedConversation, setSelectedConversation] =\n    selectedConversationState;\n  const [mobileView, setMobileView] = mobileViewState;\n  const [loadingMessages, setLoadingMessages] = loadingMessagesState;\n\n  const searchRef = useRef();\n\n  const { width } = useViewport();\n\n  return (\n    <div className={mobileView.conversations ? \"show\" : \"hide\"}>\n      {/* <input\n        id=\"searchConversationsInput\"\n        type=\"text\"\n        ref={searchRef}\n        placeholder=\"search\"\n      /> */}\n\n      {conversations.map((convo, i) => {\n        return (\n          <Row\n            key={i}\n            className=\"convoBox\"\n            // className={selectedConversation._id === convo._id ? \"selected\" : \"notSelected\"}\n            // Just another place where I am having to use a different \"id\"\n            // onClick={(e) => selectConversation(e, convo._id)}\n            onClick={() => {\n              setLoadingMessages(true);\n              API.selectConversation(convo.id).then((messages) => {\n                if (width <= 575)\n                  setMobileView({\n                    conversations: false,\n                    messages: true,\n                  });\n                setSelectedConversation(convo);\n                setMessages(messages);\n                setLoadingMessages(false);\n              });\n            }}\n          >\n            {convo.name || \"New Conversation\"}\n          </Row>\n        );\n      })}\n      <div id=\"bottomOfConvos\" />\n    </div>\n  );\n}\n","/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/Messages.jsx",["63","64","65","66","67"],"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/MessageContextMenu.jsx",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":18,"column":16,"nodeType":"74","messageId":"75","endLine":18,"endColumn":23},{"ruleId":"72","severity":1,"message":"76","line":22,"column":27,"nodeType":"74","messageId":"75","endLine":22,"endColumn":45},{"ruleId":"72","severity":1,"message":"77","line":23,"column":10,"nodeType":"74","messageId":"75","endLine":23,"endColumn":20},{"ruleId":"72","severity":1,"message":"78","line":15,"column":10,"nodeType":"74","messageId":"75","endLine":15,"endColumn":18},{"ruleId":"72","severity":1,"message":"79","line":16,"column":25,"nodeType":"74","messageId":"75","endLine":16,"endColumn":41},{"ruleId":"72","severity":1,"message":"80","line":17,"column":10,"nodeType":"74","messageId":"75","endLine":17,"endColumn":30},{"ruleId":"72","severity":1,"message":"81","line":20,"column":10,"nodeType":"74","messageId":"75","endLine":20,"endColumn":25},{"ruleId":"72","severity":1,"message":"82","line":22,"column":9,"nodeType":"74","messageId":"75","endLine":22,"endColumn":18},{"ruleId":"72","severity":1,"message":"83","line":1,"column":18,"nodeType":"74","messageId":"75","endLine":1,"endColumn":27},{"ruleId":"72","severity":1,"message":"84","line":1,"column":39,"nodeType":"74","messageId":"75","endLine":1,"endColumn":50},{"ruleId":"72","severity":1,"message":"85","line":10,"column":20,"nodeType":"74","messageId":"75","endLine":10,"endColumn":31},{"ruleId":"72","severity":1,"message":"73","line":11,"column":16,"nodeType":"74","messageId":"75","endLine":11,"endColumn":23},{"ruleId":"72","severity":1,"message":"86","line":13,"column":23,"nodeType":"74","messageId":"75","endLine":13,"endColumn":37},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","'setLoadingMessages' is assigned a value but never used.","'mobileView' is assigned a value but never used.","'messages' is assigned a value but never used.","'setConversations' is assigned a value but never used.","'selectedConversation' is assigned a value but never used.","'loadingMessages' is assigned a value but never used.","'searchRef' is assigned a value but never used.","'useEffect' is defined but never used.","'useCallback' is defined but never used.","'setMessages' is assigned a value but never used.","'setContextMenu' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]