{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useViewport = () => {\n  _s();\n\n  const [width, setWidth] = useState(window.innerWidth);\n  const [mobileView, setMobileView] = useState({\n    conversations: true,\n    messages: false\n  });\n  useEffect(() => {\n    const handleWindowResize = () => setWidth(window.innerWidth);\n\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []); // useEffect(() => {\n  //   if (width < 575) {\n  //     return;\n  //   }\n  //   setMobileView({ conversations: true, messages: true });\n  // }, [width]);\n\n  return {\n    width,\n    mobileView,\n    setMobileView\n  };\n};\n\n_s(useViewport, \"SPTujeGvHwXp6ayKvSfDZl0Y9fY=\");\n\nexport default useViewport;","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/utils/useViewport.js"],"names":["useState","useEffect","useViewport","width","setWidth","window","innerWidth","mobileView","setMobileView","conversations","messages","handleWindowResize","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACK,MAAM,CAACC,UAAR,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC;AAC3CS,IAAAA,aAAa,EAAE,IAD4B;AAE3CC,IAAAA,QAAQ,EAAE;AAFiC,GAAD,CAA5C;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,kBAAkB,GAAG,MAAMP,QAAQ,CAACC,MAAM,CAACC,UAAR,CAAzC;;AACAD,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCD,kBAAlC;AACA,WAAO,MAAMN,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCF,kBAArC,CAAb;AACD,GAJQ,EAIN,EAJM,CAAT,CAPwB,CAaxB;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAO;AAAER,IAAAA,KAAF;AAASI,IAAAA,UAAT;AAAqBC,IAAAA;AAArB,GAAP;AACD,CArBD;;GAAMN,W;;AAuBN,eAAeA,WAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useViewport = () => {\n  const [width, setWidth] = useState(window.innerWidth);\n  const [mobileView, setMobileView] = useState({\n    conversations: true,\n    messages: false,\n  });\n\n  useEffect(() => {\n    const handleWindowResize = () => setWidth(window.innerWidth);\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []);\n\n  // useEffect(() => {\n  //   if (width < 575) {\n  //     return;\n  //   }\n  //   setMobileView({ conversations: true, messages: true });\n  // }, [width]);\n\n  return { width, mobileView, setMobileView };\n};\n\nexport default useViewport;\n"]},"metadata":{},"sourceType":"module"}