{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Groups/CometChatTransferOwnershipMemberList/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatTransferOwnershipMemberListItem } from \"../\";\nimport { CometChatBackdrop } from \"../../Shared\";\nimport * as enums from \"../../../util/enums.js\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { modalWrapperStyle, modalCloseStyle, modalBodyStyle, modalCaptionStyle, modalListStyle, listHeaderStyle, listStyle, nameColumnStyle, scopeColumnStyle, modalFootStyle, modalErrorStyle } from \"./style\";\nimport clearIcon from \"./resources/close.svg\";\nimport transferIcon from \"./resources/transferring.svg\";\n\nclass CometChatTransferOwnershipMemberList extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleScroll = e => {\n      const bottom = Math.round(e.currentTarget.scrollHeight - e.currentTarget.scrollTop) === Math.round(e.currentTarget.clientHeight);\n\n      if (bottom) {\n        this.props.actionGenerated(enums.ACTIONS[\"FETCH_GROUP_MEMBERS\"]);\n      }\n    };\n\n    this.updateMembers = (action, member, scope) => {\n      switch (action) {\n        case enums.ACTIONS[\"CHANGE_OWNERSHIP_GROUP_MEMBER\"]:\n          this.changeOwnership(member, scope);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.updateGroupOwner = member => {\n      this.setState({\n        newGroupOwner: member === null || member === void 0 ? void 0 : member.uid\n      });\n    };\n\n    this.transferOwnership = () => {\n      var _this$context, _this$context$item;\n\n      const guid = (_this$context = this.context) === null || _this$context === void 0 ? void 0 : (_this$context$item = _this$context.item) === null || _this$context$item === void 0 ? void 0 : _this$context$item.guid;\n      const uid = this.state.newGroupOwner;\n\n      if (!guid || !uid) {\n        return false;\n      }\n\n      this.setState({\n        transferringOwnership: true\n      });\n      CometChat.transferGroupOwnership(guid, uid).then(response => {\n        this.setState({\n          transferringOwnership: false\n        });\n        this.props.actionGenerated(enums.ACTIONS[\"OWNERSHIP_TRANSFERRED\"], uid);\n      }).catch(error => {\n        this.setState({\n          transferringOwnership: false,\n          errorMessage: Translator.translate(\"SOMETHING_WRONG\", this.props.lang)\n        });\n      });\n    };\n\n    this.changeOwnership = () => {};\n\n    this.setUserColumnTitle = editAccess => {\n      if (this._isMounted) {\n        if (editAccess !== null && this.mq.matches) {\n          this.setState({\n            userColumnTitle: Translator.translate(\"AVATAR\", this.context.language)\n          });\n        } else {\n          this.setState({\n            userColumnTitle: Translator.translate(\"NAME\", this.context.language)\n          });\n        }\n      }\n    };\n\n    this._isMounted = false;\n    const chatWindow = context.UIKitSettings.chatWindow;\n    this.mq = chatWindow.matchMedia(context.theme.breakPoints[1]);\n    let userColumnTitle = Translator.translate(\"NAME\", context.language);\n\n    if (this.mq.matches) {\n      userColumnTitle = Translator.translate(\"AVATAR\", context.language);\n    }\n\n    this.state = {\n      userColumnTitle: userColumnTitle,\n      newGroupOwner: null,\n      transferringOwnership: false,\n      errorMessage: \"\"\n    };\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const memberList = [...this.context.groupMembers];\n    const groupMembers = memberList.filter(member => {\n      var _this$props, _this$props$loggedinu;\n\n      return (member === null || member === void 0 ? void 0 : member.uid) !== ((_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$loggedinu = _this$props.loggedinuser) === null || _this$props$loggedinu === void 0 ? void 0 : _this$props$loggedinu.uid);\n    }).map(member => {\n      return jsx(CometChatTransferOwnershipMemberListItem, {\n        loggedinuser: this.props.loggedinuser,\n        key: member === null || member === void 0 ? void 0 : member.uid,\n        checked: this.updateGroupOwner,\n        member: member,\n        actionGenerated: this.updateMembers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 12\n        }\n      });\n    });\n    let transferBtn = null;\n\n    if (memberList.length) {\n      const transferText = this.state.transferringOwnership ? Translator.translate(\"TRANSFERRING\", this.props.lang) : Translator.translate(\"TRANSFER\", this.props.lang);\n      transferBtn = jsx(\"div\", {\n        css: modalFootStyle(this.state, this.context, transferIcon),\n        className: \"modal__transferownership\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 5\n        }\n      }, jsx(\"button\", {\n        type: \"button\",\n        onClick: this.transferOwnership,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 6\n        }\n      }, jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }\n      }, transferText)));\n    }\n\n    return jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 4\n      }\n    }, jsx(CometChatBackdrop, {\n      show: true,\n      clicked: this.props.close,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }\n    }), jsx(\"div\", {\n      css: modalWrapperStyle(this.props, this.context),\n      className: \"modal__groupmembers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }\n    }, jsx(\"span\", {\n      css: modalCloseStyle(clearIcon, this.context),\n      className: \"modal__close\",\n      onClick: this.props.close,\n      title: Translator.translate(\"CLOSE\", this.context.language),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 6\n      }\n    }), jsx(\"div\", {\n      css: modalBodyStyle(),\n      className: \"modal__body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 6\n      }\n    }, jsx(\"div\", {\n      css: modalCaptionStyle(Translator.getDirection(this.context.language)),\n      className: \"modal__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, Translator.translate(\"GROUP_MEMBERS\", this.context.language)), jsx(\"div\", {\n      css: modalErrorStyle(this.context),\n      className: \"modal__error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, this.state.errorMessage), jsx(\"div\", {\n      css: modalListStyle(this.context),\n      className: \"modal__content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, jsx(\"div\", {\n      css: listHeaderStyle(this.context),\n      className: \"content__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 8\n      }\n    }, jsx(\"div\", {\n      css: nameColumnStyle(this.props, this.context),\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, this.state.userColumnTitle), jsx(\"div\", {\n      css: scopeColumnStyle(this.context),\n      className: \"scope\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, Translator.translate(\"SCOPE\", this.context.language))), jsx(\"div\", {\n      css: listStyle(),\n      className: \"content__list\",\n      onScroll: this.handleScroll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 8\n      }\n    }, groupMembers)), transferBtn)));\n  }\n\n}\n\nCometChatTransferOwnershipMemberList.contextType = CometChatContext;\nexport { CometChatTransferOwnershipMemberList };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Groups/CometChatTransferOwnershipMemberList/index.js"],"names":["React","jsx","CometChat","CometChatTransferOwnershipMemberListItem","CometChatBackdrop","enums","CometChatContext","Translator","modalWrapperStyle","modalCloseStyle","modalBodyStyle","modalCaptionStyle","modalListStyle","listHeaderStyle","listStyle","nameColumnStyle","scopeColumnStyle","modalFootStyle","modalErrorStyle","CometChatTransferOwnershipMemberList","Component","constructor","props","context","handleScroll","e","bottom","Math","round","currentTarget","scrollHeight","scrollTop","clientHeight","actionGenerated","ACTIONS","updateMembers","action","member","scope","changeOwnership","updateGroupOwner","setState","newGroupOwner","uid","transferOwnership","guid","item","state","transferringOwnership","transferGroupOwnership","then","response","catch","error","errorMessage","translate","lang","setUserColumnTitle","editAccess","_isMounted","mq","matches","userColumnTitle","language","chatWindow","UIKitSettings","matchMedia","theme","breakPoints","componentWillUnmount","render","memberList","groupMembers","filter","loggedinuser","map","transferBtn","length","transferText","transferIcon","close","clearIcon","getDirection","contextType"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { CometChatTransferOwnershipMemberListItem } from \"../\";\nimport { CometChatBackdrop } from \"../../Shared\";\n\nimport * as enums from \"../../../util/enums.js\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\n\nimport Translator from \"../../../resources/localization/translator\";\n\nimport {\n    modalWrapperStyle,\n    modalCloseStyle,\n    modalBodyStyle,\n    modalCaptionStyle,\n    modalListStyle,\n    listHeaderStyle,\n    listStyle,\n    nameColumnStyle,\n    scopeColumnStyle,\n\tmodalFootStyle,\n\tmodalErrorStyle\n} from \"./style\";\n\nimport clearIcon from \"./resources/close.svg\";\nimport transferIcon from \"./resources/transferring.svg\";\n\nclass CometChatTransferOwnershipMemberList extends React.Component {\n\tstatic contextType = CometChatContext;\n\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\n\t\tthis._isMounted = false;\n\t\tconst chatWindow = context.UIKitSettings.chatWindow;\n\t\tthis.mq = chatWindow.matchMedia(context.theme.breakPoints[1]);\n\n\t\tlet userColumnTitle = Translator.translate(\"NAME\", context.language);\n\t\tif (this.mq.matches) {\n\t\t\tuserColumnTitle = Translator.translate(\"AVATAR\", context.language);\n\t\t}\n\n\t\tthis.state = {\n\t\t\tuserColumnTitle: userColumnTitle,\n\t\t\tnewGroupOwner: null,\n\t\t\ttransferringOwnership: false,\n\t\t\terrorMessage: \"\",\n\t\t};\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis._isMounted = false;\n\t}\n\n\thandleScroll = e => {\n\t\tconst bottom = Math.round(e.currentTarget.scrollHeight - e.currentTarget.scrollTop) === Math.round(e.currentTarget.clientHeight);\n\t\tif (bottom) {\n\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"FETCH_GROUP_MEMBERS\"]);\n\t\t}\n\t};\n\n\tupdateMembers = (action, member, scope) => {\n\t\tswitch (action) {\n\t\t\tcase enums.ACTIONS[\"CHANGE_OWNERSHIP_GROUP_MEMBER\"]:\n\t\t\t\tthis.changeOwnership(member, scope);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tupdateGroupOwner = member => {\n\t\tthis.setState({ newGroupOwner: member?.uid });\n\t};\n\n\ttransferOwnership = () => {\n\n\t\tconst guid = this.context?.item?.guid;\n\t\tconst uid = this.state.newGroupOwner;\n\n\t\tif (!guid || !uid) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.setState({ transferringOwnership: true });\n\t\tCometChat.transferGroupOwnership(guid, uid).then(response => {\n\t\t\tthis.setState({ transferringOwnership: false });\n\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"OWNERSHIP_TRANSFERRED\"], uid);\n\n\t\t}).catch(error => {\n\t\t\tthis.setState({ transferringOwnership: false, errorMessage: Translator.translate(\"SOMETHING_WRONG\", this.props.lang) });\n\t\t});\n\t};\n\n\tchangeOwnership = () => {};\n\n\tsetUserColumnTitle = editAccess => {\n\t\tif (this._isMounted) {\n\t\t\tif (editAccess !== null && this.mq.matches) {\n\t\t\t\tthis.setState({ userColumnTitle: Translator.translate(\"AVATAR\", this.context.language) });\n\t\t\t} else {\n\t\t\t\tthis.setState({ userColumnTitle: Translator.translate(\"NAME\", this.context.language) });\n\t\t\t}\n\t\t}\n\t};\n\n\trender() {\n\n\t\tconst memberList = [...this.context.groupMembers];\n\t\tconst groupMembers = memberList\n\t\t\t.filter(member => member?.uid !== this.props?.loggedinuser?.uid)\n\t\t\t.map(member => {\n\t\t\t\treturn <CometChatTransferOwnershipMemberListItem loggedinuser={this.props.loggedinuser} key={member?.uid} checked={this.updateGroupOwner} member={member} actionGenerated={this.updateMembers} />;\n\t\t\t});\n\n\t\tlet transferBtn = null;\n\t\tif(memberList.length) {\n\n\t\t\tconst transferText = this.state.transferringOwnership ? Translator.translate(\"TRANSFERRING\", this.props.lang) : Translator.translate(\"TRANSFER\", this.props.lang);\n\t\t\ttransferBtn = (\n\t\t\t\t<div css={modalFootStyle(this.state, this.context, transferIcon)} className=\"modal__transferownership\">\n\t\t\t\t\t<button type=\"button\" onClick={this.transferOwnership}>\n\t\t\t\t\t\t<span>{transferText}</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<CometChatBackdrop show={true} clicked={this.props.close} />\n\t\t\t\t<div css={modalWrapperStyle(this.props, this.context)} className=\"modal__groupmembers\">\n\t\t\t\t\t<span css={modalCloseStyle(clearIcon, this.context)} className=\"modal__close\" onClick={this.props.close} title={Translator.translate(\"CLOSE\", this.context.language)}></span>\n\t\t\t\t\t<div css={modalBodyStyle()} className=\"modal__body\">\n\t\t\t\t\t\t<div css={modalCaptionStyle(Translator.getDirection(this.context.language))} className=\"modal__title\">{Translator.translate(\"GROUP_MEMBERS\", this.context.language)}</div>\n\t\t\t\t\t\t<div css={modalErrorStyle(this.context)} className=\"modal__error\">{this.state.errorMessage}</div>\n\t\t\t\t\t\t<div css={modalListStyle(this.context)} className=\"modal__content\">\n\t\t\t\t\t\t\t<div css={listHeaderStyle(this.context)} className=\"content__header\">\n\t\t\t\t\t\t\t\t<div css={nameColumnStyle(this.props, this.context)} className=\"name\">\n\t\t\t\t\t\t\t\t\t{this.state.userColumnTitle}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div css={scopeColumnStyle(this.context)} className=\"scope\">\n\t\t\t\t\t\t\t\t\t{Translator.translate(\"SCOPE\", this.context.language)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div css={listStyle()} className=\"content__list\" onScroll={this.handleScroll}>\n\t\t\t\t\t\t\t\t{groupMembers}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{transferBtn}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport { CometChatTransferOwnershipMemberList };"]},"metadata":{},"sourceType":"module"}