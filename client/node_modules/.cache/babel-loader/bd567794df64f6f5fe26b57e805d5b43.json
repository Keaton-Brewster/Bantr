{"ast":null,"code":"import _extends from \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/Extensions/CometChatSenderWhiteboardBubble/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChatMessageActions, CometChatThreadedMessageReplyCount, CometChatReadReceipt } from \"../../\";\nimport { CometChatMessageReactions } from \"../\";\nimport { CometChatContext } from \"../../../../util/CometChatContext\";\nimport { checkMessageForExtensionsData } from \"../../../../util/common\";\nimport { theme } from \"../../../../resources/theme\";\nimport Translator from \"../../../../resources/localization/translator\";\nimport { messageContainerStyle, messageWrapperStyle, messageTxtWrapperStyle, messageTxtContainerStyle, messageTxtStyle, messageTxtIconStyle, messageBtnStyle, messageInfoWrapperStyle, messageReactionsWrapperStyle } from \"./style\";\nimport whiteboardIcon from \"./resources/collaborative-whiteboard.svg\";\n\nclass CometChatSenderWhiteboardBubble extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.messageFrom = \"sender\";\n\n    this.launchCollaborativeWhiteboard = () => {\n      let whiteboardUrl = null;\n      let whiteboardData = checkMessageForExtensionsData(this.state.message, \"whiteboard\");\n\n      if (whiteboardData && whiteboardData.hasOwnProperty(\"board_url\") && whiteboardData.board_url.length) {\n        let username = this.props.loggedInUser.name.split(\" \").join(\"_\"); // Appending the username to the board_url\n\n        whiteboardUrl = whiteboardData.board_url + \"&username=\" + username;\n        window.open(whiteboardUrl, \"\", \"fullscreen=yes, scrollbars=auto\");\n      }\n    };\n\n    this.handleMouseHover = () => {\n      this.setState(this.toggleHoverState);\n    };\n\n    this.toggleHoverState = state => {\n      return {\n        isHovering: !state.isHovering\n      };\n    };\n\n    const message = Object.assign({}, props.message, {\n      messageFrom: this.messageFrom\n    });\n    this.state = {\n      message: message,\n      isHovering: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const previousMessageStr = JSON.stringify(prevProps.message);\n    const currentMessageStr = JSON.stringify(this.props.message);\n\n    if (previousMessageStr !== currentMessageStr) {\n      const message = Object.assign({}, this.props.message, {\n        messageFrom: this.messageFrom\n      });\n      this.setState({\n        message: message\n      });\n    }\n  }\n\n  render() {\n    let messageReactions = null;\n    const reactionsData = checkMessageForExtensionsData(this.state.message, \"reactions\");\n\n    if (reactionsData) {\n      if (Object.keys(reactionsData).length) {\n        messageReactions = jsx(\"div\", {\n          css: messageReactionsWrapperStyle(),\n          className: \"message__reaction__wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }\n        }, jsx(CometChatMessageReactions, _extends({}, this.props, {\n          message: this.state.message,\n          reaction: reactionsData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }\n        })));\n      }\n    }\n\n    let toolTipView = null;\n\n    if (this.state.isHovering) {\n      toolTipView = jsx(CometChatMessageActions, _extends({}, this.props, {\n        message: this.state.message,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    const documentTitle = Translator.translate(\"CREATED_WHITEBOARD\", this.props.lang);\n    return jsx(\"div\", {\n      css: messageContainerStyle(),\n      className: \"sender__message__container message__document\",\n      onMouseEnter: this.handleMouseHover,\n      onMouseLeave: this.handleMouseHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, toolTipView, jsx(\"div\", {\n      css: messageWrapperStyle(),\n      className: \"message__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, jsx(\"div\", {\n      css: messageTxtWrapperStyle(this.context),\n      className: \"message__whiteboard__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, jsx(\"div\", {\n      css: messageTxtContainerStyle(),\n      className: \"message__whiteboard__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, jsx(\"i\", {\n      css: messageTxtIconStyle(whiteboardIcon, this.context),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }), jsx(\"p\", {\n      css: messageTxtStyle(),\n      className: \"document__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, documentTitle)), jsx(\"ul\", {\n      css: messageBtnStyle(this.context),\n      className: \"document__button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, jsx(\"li\", {\n      onClick: this.launchCollaborativeWhiteboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, Translator.translate(\"LAUNCH\", this.props.lang)))))), messageReactions, jsx(\"div\", {\n      css: messageInfoWrapperStyle(),\n      className: \"message__info__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, jsx(CometChatThreadedMessageReplyCount, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    })), jsx(CometChatReadReceipt, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatSenderWhiteboardBubble.contextType = CometChatContext;\nCometChatSenderWhiteboardBubble.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme\n};\nCometChatSenderWhiteboardBubble.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object\n};\nexport { CometChatSenderWhiteboardBubble };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/Extensions/CometChatSenderWhiteboardBubble/index.js"],"names":["React","jsx","PropTypes","CometChatMessageActions","CometChatThreadedMessageReplyCount","CometChatReadReceipt","CometChatMessageReactions","CometChatContext","checkMessageForExtensionsData","theme","Translator","messageContainerStyle","messageWrapperStyle","messageTxtWrapperStyle","messageTxtContainerStyle","messageTxtStyle","messageTxtIconStyle","messageBtnStyle","messageInfoWrapperStyle","messageReactionsWrapperStyle","CometChatSenderWhiteboardBubble","PureComponent","constructor","props","messageFrom","launchCollaborativeWhiteboard","whiteboardUrl","whiteboardData","state","message","hasOwnProperty","board_url","length","username","loggedInUser","name","split","join","window","open","handleMouseHover","setState","toggleHoverState","isHovering","Object","assign","componentDidUpdate","prevProps","previousMessageStr","JSON","stringify","currentMessageStr","render","messageReactions","reactionsData","keys","toolTipView","documentTitle","translate","lang","context","whiteboardIcon","contextType","defaultProps","getDefaultLanguage","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  CometChatMessageActions,\n  CometChatThreadedMessageReplyCount,\n  CometChatReadReceipt,\n} from \"../../\";\nimport { CometChatMessageReactions } from \"../\";\n\nimport { CometChatContext } from \"../../../../util/CometChatContext\";\nimport { checkMessageForExtensionsData } from \"../../../../util/common\";\n\nimport { theme } from \"../../../../resources/theme\";\nimport Translator from \"../../../../resources/localization/translator\";\n\nimport {\n  messageContainerStyle,\n  messageWrapperStyle,\n  messageTxtWrapperStyle,\n  messageTxtContainerStyle,\n  messageTxtStyle,\n  messageTxtIconStyle,\n  messageBtnStyle,\n  messageInfoWrapperStyle,\n  messageReactionsWrapperStyle,\n} from \"./style\";\n\nimport whiteboardIcon from \"./resources/collaborative-whiteboard.svg\";\n\nclass CometChatSenderWhiteboardBubble extends React.PureComponent {\n  static contextType = CometChatContext;\n  messageFrom = \"sender\";\n\n  constructor(props) {\n    super(props);\n    const message = Object.assign({}, props.message, {\n      messageFrom: this.messageFrom,\n    });\n\n    this.state = {\n      message: message,\n      isHovering: false,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const previousMessageStr = JSON.stringify(prevProps.message);\n    const currentMessageStr = JSON.stringify(this.props.message);\n\n    if (previousMessageStr !== currentMessageStr) {\n      const message = Object.assign({}, this.props.message, {\n        messageFrom: this.messageFrom,\n      });\n      this.setState({ message: message });\n    }\n  }\n\n  launchCollaborativeWhiteboard = () => {\n    let whiteboardUrl = null;\n    let whiteboardData = checkMessageForExtensionsData(\n      this.state.message,\n      \"whiteboard\"\n    );\n    if (\n      whiteboardData &&\n      whiteboardData.hasOwnProperty(\"board_url\") &&\n      whiteboardData.board_url.length\n    ) {\n      let username = this.props.loggedInUser.name.split(\" \").join(\"_\");\n      // Appending the username to the board_url\n      whiteboardUrl = whiteboardData.board_url + \"&username=\" + username;\n      window.open(whiteboardUrl, \"\", \"fullscreen=yes, scrollbars=auto\");\n    }\n  };\n\n  handleMouseHover = () => {\n    this.setState(this.toggleHoverState);\n  };\n\n  toggleHoverState = (state) => {\n    return {\n      isHovering: !state.isHovering,\n    };\n  };\n\n  render() {\n    let messageReactions = null;\n    const reactionsData = checkMessageForExtensionsData(\n      this.state.message,\n      \"reactions\"\n    );\n    if (reactionsData) {\n      if (Object.keys(reactionsData).length) {\n        messageReactions = (\n          <div\n            css={messageReactionsWrapperStyle()}\n            className=\"message__reaction__wrapper\"\n          >\n            <CometChatMessageReactions\n              {...this.props}\n              message={this.state.message}\n              reaction={reactionsData}\n            />\n          </div>\n        );\n      }\n    }\n\n    let toolTipView = null;\n    if (this.state.isHovering) {\n      toolTipView = (\n        <CometChatMessageActions {...this.props} message={this.state.message} />\n      );\n    }\n\n    const documentTitle = Translator.translate(\n      \"CREATED_WHITEBOARD\",\n      this.props.lang\n    );\n    return (\n      <div\n        css={messageContainerStyle()}\n        className=\"sender__message__container message__document\"\n        onMouseEnter={this.handleMouseHover}\n        onMouseLeave={this.handleMouseHover}\n      >\n        {toolTipView}\n\n        <div css={messageWrapperStyle()} className=\"message__wrapper\">\n          <div\n            css={messageTxtWrapperStyle(this.context)}\n            className=\"message__whiteboard__wrapper\"\n          >\n            <div\n              css={messageTxtContainerStyle()}\n              className=\"message__whiteboard__container\"\n            >\n              <i css={messageTxtIconStyle(whiteboardIcon, this.context)}></i>\n              <p css={messageTxtStyle()} className=\"document__title\">\n                {documentTitle}\n              </p>\n            </div>\n            <ul\n              css={messageBtnStyle(this.context)}\n              className=\"document__button\"\n            >\n              <li onClick={this.launchCollaborativeWhiteboard}>\n                <p>{Translator.translate(\"LAUNCH\", this.props.lang)}</p>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        {messageReactions}\n\n        <div css={messageInfoWrapperStyle()} className=\"message__info__wrapper\">\n          <CometChatThreadedMessageReplyCount\n            {...this.props}\n            message={this.state.message}\n          />\n          <CometChatReadReceipt {...this.props} message={this.state.message} />\n        </div>\n      </div>\n    );\n  }\n}\n\n// Specifies the default values for props:\nCometChatSenderWhiteboardBubble.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n};\n\nCometChatSenderWhiteboardBubble.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n};\n\nexport { CometChatSenderWhiteboardBubble };\n"]},"metadata":{},"sourceType":"module"}