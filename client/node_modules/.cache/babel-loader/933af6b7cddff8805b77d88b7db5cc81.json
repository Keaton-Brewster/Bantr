{"ast":null,"code":"import _extends from \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Messages/CometChatReceiverTextMessageBubble/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport twemoji from \"twemoji\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatMessageActions, CometChatThreadedMessageReplyCount, CometChatReadReceipt, CometChatLinkPreview } from \"../\";\nimport { CometChatMessageReactions } from \"../Extensions\";\nimport { CometChatAvatar } from \"../../Shared\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport { linkify, checkMessageForExtensionsData } from \"../../../util/common\";\nimport * as enums from \"../../../util/enums.js\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { theme } from \"../../../resources/theme\";\nimport { messageContainerStyle, messageWrapperStyle, messageThumbnailStyle, messageDetailStyle, nameWrapperStyle, nameStyle, messageTxtContainerStyle, messageTxtWrapperStyle, messageTxtStyle, messageInfoWrapperStyle, messageReactionsWrapperStyle } from \"./style\";\n\nclass CometChatReceiverTextMessageBubble extends React.Component {\n  constructor(props) {\n    super(props);\n    this.messageFrom = \"receiver\";\n\n    this.getMessageText = () => {\n      let messageText = this.state.message.text; //xss extensions data\n\n      const xssData = checkMessageForExtensionsData(this.state.message, \"xss-filter\");\n\n      if (xssData && xssData.hasOwnProperty(\"sanitized_text\") && xssData.hasOwnProperty(\"hasXSS\") && xssData.hasXSS === \"yes\") {\n        messageText = xssData.sanitized_text;\n      } //datamasking extensions data\n\n\n      const maskedData = checkMessageForExtensionsData(this.state.message, \"data-masking\");\n\n      if (maskedData && maskedData.hasOwnProperty(\"data\") && maskedData.data.hasOwnProperty(\"sensitive_data\") && maskedData.data.hasOwnProperty(\"message_masked\") && maskedData.data.sensitive_data === \"yes\") {\n        messageText = maskedData.data.message_masked;\n      } //profanity extensions data\n\n\n      const profaneData = checkMessageForExtensionsData(this.state.message, \"profanity-filter\");\n\n      if (profaneData && profaneData.hasOwnProperty(\"profanity\") && profaneData.hasOwnProperty(\"message_clean\") && profaneData.profanity === \"yes\") {\n        messageText = profaneData.message_clean;\n      }\n\n      const formattedText = linkify(messageText);\n      const emojiParsedMessage = twemoji.parse(formattedText, {\n        folder: \"svg\",\n        ext: \".svg\"\n      });\n      const parsedMessage = ReactHtmlParser(emojiParsedMessage, {\n        decodeEntities: false\n      });\n      const emojiMessage = parsedMessage.filter(message => message instanceof Object && message.type === \"img\");\n      let showVariation = true; //if larger size emojis feature is disabled\n\n      if (this.state.enableLargerSizeEmojis === false) {\n        showVariation = false;\n      }\n\n      messageText = jsx(\"div\", {\n        css: messageTxtWrapperStyle(this.context),\n        className: \"message__txt__wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 4\n        }\n      }, jsx(\"p\", {\n        css: messageTxtStyle(parsedMessage, emojiMessage, showVariation),\n        className: \"message__txt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 5\n        }\n      }, parsedMessage, this.state.translatedMessage));\n      return messageText;\n    };\n\n    this.translateMessage = message => {\n      const messageId = message.id;\n      const messageText = message.text;\n      const browserLanguageCode = Translator.getBrowserLanguage().toLowerCase();\n      let translateToLanguage = browserLanguageCode;\n\n      if (browserLanguageCode.indexOf(\"-\") !== -1) {\n        const browserLanguageArray = browserLanguageCode.split(\"-\");\n        translateToLanguage = browserLanguageArray[0];\n      }\n\n      let translatedMessage = \"\";\n      CometChat.callExtension(\"message-translation\", \"POST\", \"v2/translate\", {\n        msgId: messageId,\n        text: messageText,\n        languages: [translateToLanguage]\n      }).then(result => {\n        if (result && result.hasOwnProperty(\"language_original\") && result[\"language_original\"] !== translateToLanguage) {\n          if (result.hasOwnProperty(\"translations\") && result.translations.length) {\n            const messageTranslation = result.translations[0];\n\n            if (messageTranslation.hasOwnProperty(\"message_translated\")) {\n              translatedMessage = `\\n(${messageTranslation[\"message_translated\"]})`;\n            }\n          } else {\n            this.props.actionGenerated(enums.ACTIONS[\"ERROR\"], [], \"SOMETHING_WRONG\");\n          }\n        } else {\n          this.props.actionGenerated(enums.ACTIONS[\"INFO\"], [], \"SAME_LANGUAGE_MESSAGE\");\n        }\n\n        this.setState({\n          translatedMessage: translatedMessage\n        });\n      }).catch(error => this.props.actionGenerated(enums.ACTIONS[\"ERROR\"], [], \"SOMETHING_WRONG\"));\n    };\n\n    this.enableLargerSizeEmojis = () => {\n      this.context.FeatureRestriction.isLargerSizeEmojisEnabled().then(response => {\n        if (response !== this.state.enableLargerSizeEmojis) {\n          this.setState({\n            enableLargerSizeEmojis: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableLargerSizeEmojis !== false) {\n          this.setState({\n            enableLargerSizeEmojis: false\n          });\n        }\n      });\n    };\n\n    this.handleMouseHover = () => {\n      this.setState(this.toggleHoverState);\n    };\n\n    this.toggleHoverState = state => {\n      return {\n        isHovering: !state.isHovering\n      };\n    };\n\n    const _message = Object.assign({}, props.message, {\n      messageFrom: this.messageFrom\n    });\n\n    this.state = {\n      message: _message,\n      translatedMessage: \"\",\n      isHovering: false,\n      enableLargerSizeEmojis: false\n    };\n  }\n\n  componentDidMount() {\n    this.enableLargerSizeEmojis();\n  }\n\n  componentDidUpdate(prevProps) {\n    const previousMessageStr = JSON.stringify(prevProps.message);\n    const currentMessageStr = JSON.stringify(this.props.message);\n\n    if (previousMessageStr !== currentMessageStr) {\n      const message = Object.assign({}, this.props.message, {\n        messageFrom: this.messageFrom\n      });\n      this.setState({\n        message: message,\n        translatedMessage: \"\"\n      });\n    }\n\n    this.enableLargerSizeEmojis();\n  }\n\n  render() {\n    let avatar = null,\n        name = null;\n\n    if (this.state.message.receiverType === CometChat.RECEIVER_TYPE.GROUP) {\n      avatar = jsx(\"div\", {\n        css: messageThumbnailStyle(),\n        className: \"message__thumbnail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 5\n        }\n      }, jsx(CometChatAvatar, {\n        user: this.state.message.sender,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 6\n        }\n      }));\n      name = jsx(\"div\", {\n        css: nameWrapperStyle(avatar),\n        className: \"message__name__wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 5\n        }\n      }, jsx(\"span\", {\n        css: nameStyle(this.context),\n        className: \"message__name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 6\n        }\n      }, this.state.message.sender.name));\n    }\n\n    let messageText = this.getMessageText(); //linkpreview extensions data\n\n    const linkPreviewData = checkMessageForExtensionsData(this.state.message, \"link-preview\");\n\n    if (linkPreviewData && linkPreviewData.hasOwnProperty(\"links\") && linkPreviewData[\"links\"].length) {\n      messageText = jsx(CometChatLinkPreview, _extends({}, this.props, {\n        message: this.state.message,\n        messageText: messageText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 18\n        }\n      }));\n    } //messagereactions extensions data\n\n\n    let messageReactions = null;\n    const reactionsData = checkMessageForExtensionsData(this.state.message, \"reactions\");\n\n    if (reactionsData) {\n      if (Object.keys(reactionsData).length) {\n        messageReactions = jsx(\"div\", {\n          css: messageReactionsWrapperStyle(),\n          className: \"message__reaction__wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 6\n          }\n        }, jsx(CometChatMessageReactions, _extends({}, this.props, {\n          message: this.state.message,\n          reaction: reactionsData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 7\n          }\n        })));\n      }\n    }\n\n    let toolTipView = null;\n\n    if (this.state.isHovering) {\n      toolTipView = jsx(CometChatMessageActions, _extends({}, this.props, {\n        message: this.state.message,\n        name: name,\n        translateMessage: this.translateMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 18\n        }\n      }));\n    }\n\n    return jsx(\"div\", {\n      css: messageContainerStyle(),\n      className: \"receiver__message__container message__text\",\n      onMouseEnter: this.handleMouseHover,\n      onMouseLeave: this.handleMouseHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 4\n      }\n    }, jsx(\"div\", {\n      css: messageWrapperStyle(),\n      className: \"message__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 5\n      }\n    }, avatar, jsx(\"div\", {\n      css: messageDetailStyle(),\n      className: \"message__details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 6\n      }\n    }, name, toolTipView, jsx(\"div\", {\n      css: messageTxtContainerStyle(),\n      className: \"message__text__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }\n    }, messageText), messageReactions, jsx(\"div\", {\n      css: messageInfoWrapperStyle(),\n      className: \"message__info__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }\n    }, jsx(CometChatReadReceipt, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 8\n      }\n    })), jsx(CometChatThreadedMessageReplyCount, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 8\n      }\n    }))))));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatReceiverTextMessageBubble.contextType = CometChatContext;\nCometChatReceiverTextMessageBubble.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme\n};\nCometChatReceiverTextMessageBubble.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object\n};\nexport { CometChatReceiverTextMessageBubble };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Messages/CometChatReceiverTextMessageBubble/index.js"],"names":["React","jsx","twemoji","ReactHtmlParser","PropTypes","CometChat","CometChatMessageActions","CometChatThreadedMessageReplyCount","CometChatReadReceipt","CometChatLinkPreview","CometChatMessageReactions","CometChatAvatar","CometChatContext","linkify","checkMessageForExtensionsData","enums","Translator","theme","messageContainerStyle","messageWrapperStyle","messageThumbnailStyle","messageDetailStyle","nameWrapperStyle","nameStyle","messageTxtContainerStyle","messageTxtWrapperStyle","messageTxtStyle","messageInfoWrapperStyle","messageReactionsWrapperStyle","CometChatReceiverTextMessageBubble","Component","constructor","props","messageFrom","getMessageText","messageText","state","message","text","xssData","hasOwnProperty","hasXSS","sanitized_text","maskedData","data","sensitive_data","message_masked","profaneData","profanity","message_clean","formattedText","emojiParsedMessage","parse","folder","ext","parsedMessage","decodeEntities","emojiMessage","filter","Object","type","showVariation","enableLargerSizeEmojis","context","translatedMessage","translateMessage","messageId","id","browserLanguageCode","getBrowserLanguage","toLowerCase","translateToLanguage","indexOf","browserLanguageArray","split","callExtension","msgId","languages","then","result","translations","length","messageTranslation","actionGenerated","ACTIONS","setState","catch","error","FeatureRestriction","isLargerSizeEmojisEnabled","response","handleMouseHover","toggleHoverState","isHovering","assign","componentDidMount","componentDidUpdate","prevProps","previousMessageStr","JSON","stringify","currentMessageStr","render","avatar","name","receiverType","RECEIVER_TYPE","GROUP","sender","linkPreviewData","messageReactions","reactionsData","keys","toolTipView","contextType","defaultProps","lang","getDefaultLanguage","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport twemoji from \"twemoji\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { CometChatMessageActions, CometChatThreadedMessageReplyCount, CometChatReadReceipt, CometChatLinkPreview} from \"../\";\nimport { CometChatMessageReactions } from \"../Extensions\";\nimport { CometChatAvatar } from \"../../Shared\";\n\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport { linkify, checkMessageForExtensionsData } from \"../../../util/common\";\nimport * as enums from \"../../../util/enums.js\";\n\nimport Translator from \"../../../resources/localization/translator\";\nimport { theme } from \"../../../resources/theme\";\n\nimport {\n\tmessageContainerStyle,\n\tmessageWrapperStyle,\n\tmessageThumbnailStyle,\n\tmessageDetailStyle,\n\tnameWrapperStyle,\n\tnameStyle,\n\tmessageTxtContainerStyle,\n\tmessageTxtWrapperStyle,\n\tmessageTxtStyle,\n\tmessageInfoWrapperStyle,\n\tmessageReactionsWrapperStyle\n} from \"./style\";\n\nclass CometChatReceiverTextMessageBubble extends React.Component {\n\tstatic contextType = CometChatContext;\n\tmessageFrom = \"receiver\";\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tconst message = Object.assign({}, props.message, {messageFrom: this.messageFrom});\n\t\tthis.state = {\n\t\t\tmessage: message,\n\t\t\ttranslatedMessage: \"\",\n\t\t\tisHovering: false,\n\t\t\tenableLargerSizeEmojis: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.enableLargerSizeEmojis();\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tconst previousMessageStr = JSON.stringify(prevProps.message);\n\t\tconst currentMessageStr = JSON.stringify(this.props.message);\n\n\t\tif (previousMessageStr !== currentMessageStr) {\n\t\t\tconst message = Object.assign({}, this.props.message, {messageFrom: this.messageFrom});\n\t\t\tthis.setState({message: message, translatedMessage: \"\"});\n\t\t}\n\n\t\tthis.enableLargerSizeEmojis();\n\t}\n\n\tgetMessageText = () => {\n\t\tlet messageText = this.state.message.text;\n\n\t\t//xss extensions data\n\t\tconst xssData = checkMessageForExtensionsData(this.state.message, \"xss-filter\");\n\t\tif (xssData && xssData.hasOwnProperty(\"sanitized_text\") && xssData.hasOwnProperty(\"hasXSS\") && xssData.hasXSS === \"yes\") {\n\t\t\tmessageText = xssData.sanitized_text;\n\t\t}\n\n\t\t//datamasking extensions data\n\t\tconst maskedData = checkMessageForExtensionsData(this.state.message, \"data-masking\");\n\t\tif (maskedData && maskedData.hasOwnProperty(\"data\") && maskedData.data.hasOwnProperty(\"sensitive_data\") && maskedData.data.hasOwnProperty(\"message_masked\") && maskedData.data.sensitive_data === \"yes\") {\n\t\t\tmessageText = maskedData.data.message_masked;\n\t\t}\n\n\t\t//profanity extensions data\n\t\tconst profaneData = checkMessageForExtensionsData(this.state.message, \"profanity-filter\");\n\t\tif (profaneData && profaneData.hasOwnProperty(\"profanity\") && profaneData.hasOwnProperty(\"message_clean\") && profaneData.profanity === \"yes\") {\n\t\t\tmessageText = profaneData.message_clean;\n\t\t}\n\n\t\tconst formattedText = linkify(messageText);\n\n\t\tconst emojiParsedMessage = twemoji.parse(formattedText, {folder: \"svg\", ext: \".svg\"});\n\t\tconst parsedMessage = ReactHtmlParser(emojiParsedMessage, {decodeEntities: false});\n\t\tconst emojiMessage = parsedMessage.filter(message => message instanceof Object && message.type === \"img\");\n\n\t\tlet showVariation = true;\n\t\t//if larger size emojis feature is disabled\n\t\tif (this.state.enableLargerSizeEmojis === false) {\n\t\t\tshowVariation = false;\n\t\t}\n\n\t\tmessageText = (\n\t\t\t<div css={messageTxtWrapperStyle(this.context)} className=\"message__txt__wrapper\">\n\t\t\t\t<p css={messageTxtStyle(parsedMessage, emojiMessage, showVariation)} className=\"message__txt\">\n\t\t\t\t\t{parsedMessage}\n\t\t\t\t\t{this.state.translatedMessage}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\n\t\treturn messageText;\n\t};\n\n\ttranslateMessage = message => {\n\t\tconst messageId = message.id;\n\t\tconst messageText = message.text;\n\n\n\t\tconst browserLanguageCode = Translator.getBrowserLanguage().toLowerCase();\n\t\tlet translateToLanguage = browserLanguageCode;\n\t\tif (browserLanguageCode.indexOf(\"-\") !== -1) {\n\t\t\tconst browserLanguageArray = browserLanguageCode.split(\"-\");\n\t\t\ttranslateToLanguage = browserLanguageArray[0];\n\t\t}\n\n\t\tlet translatedMessage = \"\";\n\t\tCometChat.callExtension(\"message-translation\", \"POST\", \"v2/translate\", {\n\t\t\tmsgId: messageId,\n\t\t\ttext: messageText,\n\t\t\tlanguages: [translateToLanguage],\n\t\t})\n\t\t\t.then(result => {\n\t\t\t\tif (result && result.hasOwnProperty(\"language_original\") && result[\"language_original\"] !== translateToLanguage) {\n\t\t\t\t\tif (result.hasOwnProperty(\"translations\") && result.translations.length) {\n\t\t\t\t\t\tconst messageTranslation = result.translations[0];\n\t\t\t\t\t\tif (messageTranslation.hasOwnProperty(\"message_translated\")) {\n\t\t\t\t\t\t\ttranslatedMessage = `\\n(${messageTranslation[\"message_translated\"]})`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"ERROR\"], [], \"SOMETHING_WRONG\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"INFO\"], [], \"SAME_LANGUAGE_MESSAGE\");\n\t\t\t\t}\n\n\t\t\t\tthis.setState({ translatedMessage: translatedMessage });\n\t\t\t})\n\t\t\t.catch(error => this.props.actionGenerated(enums.ACTIONS[\"ERROR\"], [], \"SOMETHING_WRONG\"));\n\t};\n\n\tenableLargerSizeEmojis = () => {\n\t\tthis.context.FeatureRestriction.isLargerSizeEmojisEnabled()\n\t\t\t.then(response => {\n\t\t\t\tif (response !== this.state.enableLargerSizeEmojis) {\n\t\t\t\t\tthis.setState({enableLargerSizeEmojis: response});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tif (this.state.enableLargerSizeEmojis !== false) {\n\t\t\t\t\tthis.setState({enableLargerSizeEmojis: false});\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\thandleMouseHover = () => {\n\t\tthis.setState(this.toggleHoverState);\n\t};\n\n\ttoggleHoverState = state => {\n\t\treturn {\n\t\t\tisHovering: !state.isHovering,\n\t\t};\n\t};\n\n\trender() {\n\t\tlet avatar = null,\n\t\t\tname = null;\n\t\tif (this.state.message.receiverType === CometChat.RECEIVER_TYPE.GROUP) {\n\t\t\tavatar = (\n\t\t\t\t<div css={messageThumbnailStyle()} className=\"message__thumbnail\">\n\t\t\t\t\t<CometChatAvatar user={this.state.message.sender} />\n\t\t\t\t</div>\n\t\t\t);\n\n\t\t\tname = (\n\t\t\t\t<div css={nameWrapperStyle(avatar)} className=\"message__name__wrapper\">\n\t\t\t\t\t<span css={nameStyle(this.context)} className=\"message__name\">\n\t\t\t\t\t\t{this.state.message.sender.name}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tlet messageText = this.getMessageText();\n\t\t//linkpreview extensions data\n\t\tconst linkPreviewData = checkMessageForExtensionsData(this.state.message, \"link-preview\");\n\t\tif (linkPreviewData && linkPreviewData.hasOwnProperty(\"links\") && linkPreviewData[\"links\"].length) {\n\t\t\tmessageText = <CometChatLinkPreview {...this.props} message={this.state.message} messageText={messageText} />;\n\t\t}\n\n\t\t//messagereactions extensions data\n\t\tlet messageReactions = null;\n\t\tconst reactionsData = checkMessageForExtensionsData(this.state.message, \"reactions\");\n\t\tif (reactionsData) {\n\t\t\tif (Object.keys(reactionsData).length) {\n\t\t\t\tmessageReactions = (\n\t\t\t\t\t<div css={messageReactionsWrapperStyle()} className=\"message__reaction__wrapper\">\n\t\t\t\t\t\t<CometChatMessageReactions {...this.props} message={this.state.message} reaction={reactionsData} />\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tlet toolTipView = null;\n\t\tif (this.state.isHovering) {\n\t\t\ttoolTipView = <CometChatMessageActions {...this.props} message={this.state.message} name={name} translateMessage={this.translateMessage} />;\n\t\t}\n\n\t\treturn (\n\t\t\t<div css={messageContainerStyle()} className=\"receiver__message__container message__text\" onMouseEnter={this.handleMouseHover} onMouseLeave={this.handleMouseHover}>\n\t\t\t\t<div css={messageWrapperStyle()} className=\"message__wrapper\">\n\t\t\t\t\t{avatar}\n\t\t\t\t\t<div css={messageDetailStyle()} className=\"message__details\">\n\t\t\t\t\t\t{name}\n\t\t\t\t\t\t{toolTipView}\n\t\t\t\t\t\t<div css={messageTxtContainerStyle()} className=\"message__text__container\">\n\t\t\t\t\t\t\t{messageText}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{messageReactions}\n\n\t\t\t\t\t\t<div css={messageInfoWrapperStyle()} className=\"message__info__wrapper\">\n\t\t\t\t\t\t\t<CometChatReadReceipt {...this.props} message={this.state.message} />\n\t\t\t\t\t\t\t<CometChatThreadedMessageReplyCount {...this.props} message={this.state.message} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// Specifies the default values for props:\nCometChatReceiverTextMessageBubble.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme\n};\n\nCometChatReceiverTextMessageBubble.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object\n}\n\nexport { CometChatReceiverTextMessageBubble };"]},"metadata":{},"sourceType":"module"}