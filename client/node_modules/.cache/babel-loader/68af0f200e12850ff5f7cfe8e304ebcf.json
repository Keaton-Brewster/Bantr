{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Groups/CometChatGroupListWithMessages/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatGroupList } from \"../\";\nimport { CometChatMessages } from \"../../Messages\";\nimport { CometChatIncomingDirectCall } from \"../../Calls\";\nimport { CometChatContextProvider } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { groupScreenStyle, groupScreenSidebarStyle, groupScreenMainStyle } from \"./style\";\n\nclass CometChatGroupListWithMessages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loggedInUser = null;\n\n    this.itemClicked = (group, type) => {\n      this.contextProviderRef.setTypeAndItem(type, group);\n      this.toggleSideBar();\n    };\n\n    this.actionHandler = (action, item, count, ...otherProps) => {\n      switch (action) {\n        case enums.ACTIONS[\"TOGGLE_SIDEBAR\"]:\n          this.toggleSideBar();\n          break;\n\n        case enums.GROUP_MEMBER_SCOPE_CHANGED:\n        case enums.GROUP_MEMBER_KICKED:\n        case enums.GROUP_MEMBER_BANNED:\n          this.groupUpdated(action, item, count, ...otherProps);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.toggleSideBar = () => {\n      const sidebarview = this.state.sidebarview;\n      this.setState({\n        sidebarview: !sidebarview\n      });\n    };\n\n    this.groupUpdated = (key, message, group, options) => {\n      switch (key) {\n        case enums.GROUP_MEMBER_BANNED:\n        case enums.GROUP_MEMBER_KICKED:\n          {\n            if (this.contextProviderRef.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.contextProviderRef.item.guid === group.guid && options.user.uid === this.loggedInUser.uid) {\n              this.contextProviderRef.setItem({});\n              this.contextProviderRef.setType(\"\");\n            }\n\n            break;\n          }\n\n        case enums.GROUP_MEMBER_SCOPE_CHANGED:\n          {\n            if (this.contextProviderRef.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.contextProviderRef.item.guid === group.guid && options.user.uid === this.loggedInUser.uid) {\n              const newObject = Object.assign({}, this.contextProviderRef.item, {\n                \"scope\": options[\"scope\"]\n              });\n              this.contextProviderRef.setItem(newObject);\n              this.contextProviderRef.setType(CometChat.ACTION_TYPE.TYPE_GROUP);\n            }\n\n            break;\n          }\n\n        default:\n          break;\n      }\n    };\n\n    this.state = {\n      sidebarview: false,\n      lang: props.lang\n    };\n    this.groupListRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.chatWithGroup.length === 0) {\n      this.toggleSideBar();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.lang !== this.props.lang) {\n      this.setState({\n        lang: this.props.lang\n      });\n    }\n  }\n\n  render() {\n    let messageScreen = jsx(CometChatMessages, {\n      theme: this.props.theme,\n      lang: this.state.lang,\n      _parent: \"groups\",\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 4\n      }\n    });\n    return jsx(CometChatContextProvider, {\n      ref: el => this.contextProviderRef = el,\n      group: this.props.chatWithGroup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 4\n      }\n    }, jsx(\"div\", {\n      css: groupScreenStyle(this.props),\n      className: \"cometchat cometchat--groups\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }\n    }, jsx(\"div\", {\n      css: groupScreenSidebarStyle(this.state, this.props),\n      className: \"groups__sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 6\n      }\n    }, jsx(CometChatGroupList, {\n      ref: el => this.groupListRef = el,\n      _parent: \"glwm\",\n      theme: this.props.theme,\n      lang: this.state.lang,\n      onItemClick: this.itemClicked,\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    })), jsx(\"div\", {\n      css: groupScreenMainStyle(this.state, this.props),\n      className: \"groups__main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 6\n      }\n    }, messageScreen), jsx(CometChatIncomingDirectCall, {\n      theme: this.props.theme,\n      lang: this.state.lang,\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 6\n      }\n    })));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatGroupListWithMessages.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  chatWithGroup: \"\"\n};\nCometChatGroupListWithMessages.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  chatWithGroup: PropTypes.string\n};\nexport { CometChatGroupListWithMessages };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Groups/CometChatGroupListWithMessages/index.js"],"names":["React","jsx","PropTypes","CometChat","CometChatGroupList","CometChatMessages","CometChatIncomingDirectCall","CometChatContextProvider","enums","theme","Translator","groupScreenStyle","groupScreenSidebarStyle","groupScreenMainStyle","CometChatGroupListWithMessages","Component","constructor","props","loggedInUser","itemClicked","group","type","contextProviderRef","setTypeAndItem","toggleSideBar","actionHandler","action","item","count","otherProps","ACTIONS","GROUP_MEMBER_SCOPE_CHANGED","GROUP_MEMBER_KICKED","GROUP_MEMBER_BANNED","groupUpdated","sidebarview","state","setState","key","message","options","ACTION_TYPE","TYPE_GROUP","guid","user","uid","setItem","setType","newObject","Object","assign","lang","groupListRef","createRef","componentDidMount","chatWithGroup","length","componentDidUpdate","prevProps","render","messageScreen","el","defaultProps","getDefaultLanguage","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { CometChatGroupList } from \"../\";\nimport { CometChatMessages } from \"../../Messages\";\nimport { CometChatIncomingDirectCall } from \"../../Calls\";\n\nimport { CometChatContextProvider } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\n\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\n\nimport {\n\tgroupScreenStyle,\n\tgroupScreenSidebarStyle,\n\tgroupScreenMainStyle,\n} from \"./style\"\n\nclass CometChatGroupListWithMessages extends React.Component {\n\n\tloggedInUser = null;\n\n\tconstructor(props) {\n\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tsidebarview: false,\n\t\t\tlang: props.lang,\n\t\t}\n\n\t\tthis.groupListRef = React.createRef();\n\t}\n\n\tcomponentDidMount() {\n\n\t\tif (this.props.chatWithGroup.length === 0) {\n\t\t\tthis.toggleSideBar();\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\n\t\tif (prevProps.lang !== this.props.lang) {\n\t\t\tthis.setState({ lang: this.props.lang });\n\t\t}\n\t}\n\n\titemClicked = (group, type) => {\n\t\t\n\t\tthis.contextProviderRef.setTypeAndItem(type, group);\n\t\tthis.toggleSideBar()\n\t}\n\n\tactionHandler = (action, item, count, ...otherProps) => {\n\t\t\n\t\tswitch(action) {\n\t\t\tcase enums.ACTIONS[\"TOGGLE_SIDEBAR\"]:\n\t\t\t\tthis.toggleSideBar();\n\t\t\tbreak;\n\t\t\tcase enums.GROUP_MEMBER_SCOPE_CHANGED:\n\t\t\tcase enums.GROUP_MEMBER_KICKED:\n\t\t\tcase enums.GROUP_MEMBER_BANNED:\n\t\t\t\tthis.groupUpdated(action, item, count, ...otherProps);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t}\n\n\ttoggleSideBar = () => {\n\n\t\tconst sidebarview = this.state.sidebarview;\n\t\tthis.setState({ sidebarview: !sidebarview });\n\t}\n\n/**\n If the logged in user is banned, kicked or scope changed, update the chat window accordingly\n */\n\tgroupUpdated = (key, message, group, options) => {\n\t\t\n\t\tswitch(key) {\n\t\t\tcase enums.GROUP_MEMBER_BANNED:\n\t\t\tcase enums.GROUP_MEMBER_KICKED: {\n\n\t\t\t\tif (this.contextProviderRef.type === CometChat.ACTION_TYPE.TYPE_GROUP\n\t\t\t\t&& this.contextProviderRef.item.guid === group.guid\n\t\t\t\t&& options.user.uid === this.loggedInUser.uid) {\n\n\t\t\t\t\tthis.contextProviderRef.setItem({});\n\t\t\t\t\tthis.contextProviderRef.setType(\"\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase enums.GROUP_MEMBER_SCOPE_CHANGED: {\n\t\t\t\t\n\t\t\t\tif (this.contextProviderRef.type === CometChat.ACTION_TYPE.TYPE_GROUP\n\t\t\t\t&& this.contextProviderRef.item.guid === group.guid\n\t\t\t\t&& options.user.uid === this.loggedInUser.uid) {\n\n\t\t\t\t\tconst newObject = Object.assign({}, this.contextProviderRef.item, {\"scope\": options[\"scope\"]})\n\t\t\t\t\tthis.contextProviderRef.setItem(newObject);\n\t\t\t\t\tthis.contextProviderRef.setType(CometChat.ACTION_TYPE.TYPE_GROUP);\n\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t}\n\n\trender() {\n\n\t\tlet messageScreen = (\n\t\t\t<CometChatMessages\n\t\t\ttheme={this.props.theme}\n\t\t\tlang={this.state.lang}\n\t\t\t_parent=\"groups\"\n\t\t\tactionGenerated={this.actionHandler} />\n\t\t);\n\n\t\treturn (\n\t\t\t<CometChatContextProvider ref={el => this.contextProviderRef = el} group={this.props.chatWithGroup}>\n\t\t\t\t<div css={groupScreenStyle(this.props)} className=\"cometchat cometchat--groups\">\n\t\t\t\t\t<div css={groupScreenSidebarStyle(this.state, this.props)} className=\"groups__sidebar\">\n\t\t\t\t\t\t<CometChatGroupList \n\t\t\t\t\t\tref={el => this.groupListRef = el}\n\t\t\t\t\t\t_parent=\"glwm\"\n\t\t\t\t\t\ttheme={this.props.theme}\n\t\t\t\t\t\tlang={this.state.lang}\n\t\t\t\t\t\tonItemClick={this.itemClicked}\n\t\t\t\t\t\tactionGenerated={this.actionHandler} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div css={groupScreenMainStyle(this.state, this.props)} className=\"groups__main\">{messageScreen}</div>\n\t\t\t\t\t<CometChatIncomingDirectCall \n\t\t\t\t\ttheme={this.props.theme} \n\t\t\t\t\tlang={this.state.lang} \n\t\t\t\t\tactionGenerated={this.actionHandler} />\n\t\t\t\t</div>\n\t\t\t</CometChatContextProvider>\n\t\t);\n\t}\n}\n\n// Specifies the default values for props:\nCometChatGroupListWithMessages.defaultProps = {\n\tlang: Translator.getDefaultLanguage(),\n\ttheme: theme,\n\tchatWithGroup: \"\",\n};\n\nCometChatGroupListWithMessages.propTypes = {\n\tlang: PropTypes.string,\n\ttheme: PropTypes.object,\n\tchatWithGroup: PropTypes.string,\n}\n\nexport { CometChatGroupListWithMessages };"]},"metadata":{},"sourceType":"module"}