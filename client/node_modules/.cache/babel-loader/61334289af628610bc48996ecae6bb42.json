{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/Messages.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect, useCallback } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport { useConversations } from \"../utils/ConversationProvider\";\nimport { useViewportContext } from \"../utils/ViewportProvider\";\nimport ChatInput from \"./ChatInput\";\nimport MessageContextMenu from \"./MessageContextMenu\";\nimport SingleMessage from \"./SingleMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Messages() {\n  _s();\n\n  var _selectedConversation;\n\n  const {\n    sendMessage,\n    selectedConversation\n  } = useConversations();\n  const [contextMenuShow, setContextMenuShow] = useState(false);\n  const textRef = useRef();\n  const {\n    mobileScreen,\n    show,\n    setShow,\n    bottomOfMessages,\n    scrollToBottomMessages\n  } = useViewportContext(); // Handler function for message context menu\n\n  function handleRightClick(event, element) {\n    if (contextMenuShow) return;\n    event.preventDefault(); //? const messageIndex = element.getAttribute(\"data-key\");\n\n    setContextMenuShow(true);\n  } // Handler function for clicking away from the message context menu\n\n\n  const dismissContextMenu = useCallback(() => {\n    if (!contextMenuShow) return;\n    setContextMenuShow(false);\n  }, [contextMenuShow]); // Hook to add the dismiss handler function\n\n  useEffect(() => {\n    document.addEventListener(\"click\", dismissContextMenu);\n    return () => {\n      document.removeEventListener(\"click\", dismissContextMenu);\n    };\n  }, [dismissContextMenu]); // When a new conversation is sleceted,\n  // Scroll to the bottom right away\n\n  useEffect(() => {\n    scrollToBottomMessages(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedConversation]);\n  return (\n    /*#__PURE__*/\n    //This is only important for when you are viewing the Mobile app\n    _jsxDEV(\"div\", {\n      className: show.messages ? \"show\" : \"hide\",\n      children: [/*#__PURE__*/_jsxDEV(MessageContextMenu, {\n        show: contextMenuShow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"messageWrapper\",\n        children: [mobileScreen ? /*#__PURE__*/_jsxDEV(Navbar, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"backButton\",\n            onClick: () => {\n              setShow({\n                convos: true,\n                messages: false\n              });\n            },\n            children: /*#__PURE__*/_jsxDEV(FaArrowLeft, {\n              className: \"bg-danger backButton\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column flex-grow-1\",\n          id: \"messages\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-grow-1 overflow-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-column align-items-start justify-content-end px-3\",\n              children: [selectedConversation === null || selectedConversation === void 0 ? void 0 : (_selectedConversation = selectedConversation.messages) === null || _selectedConversation === void 0 ? void 0 : _selectedConversation.map((message, i) => {\n                return /*#__PURE__*/_jsxDEV(SingleMessage, {\n                  index: i,\n                  data: [message, selectedConversation.messages],\n                  handleRightClick: handleRightClick\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: bottomOfMessages\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n          textRef: textRef,\n          sendMessage: sendMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Messages, \"KuL2BJrsgA+lOzcTZFmVN3bdLAQ=\", false, function () {\n  return [useConversations, useViewportContext];\n});\n\n_c = Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/Messages.jsx"],"names":["React","useRef","useState","useEffect","useCallback","Navbar","FaArrowLeft","useConversations","useViewportContext","ChatInput","MessageContextMenu","SingleMessage","Messages","sendMessage","selectedConversation","contextMenuShow","setContextMenuShow","textRef","mobileScreen","show","setShow","bottomOfMessages","scrollToBottomMessages","handleRightClick","event","element","preventDefault","dismissContextMenu","document","addEventListener","removeEventListener","messages","convos","map","message","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,WAA7C,QAAgE,OAAhE;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AACjC,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAwCP,gBAAgB,EAA9D;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAMe,OAAO,GAAGhB,MAAM,EAAtB;AACA,QAAM;AACJiB,IAAAA,YADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,gBAJI;AAKJC,IAAAA;AALI,MAMFd,kBAAkB,EANtB,CAJiC,CAYjC;;AACA,WAASe,gBAAT,CAA0BC,KAA1B,EAAiCC,OAAjC,EAA0C;AACxC,QAAIV,eAAJ,EAAqB;AACrBS,IAAAA,KAAK,CAACE,cAAN,GAFwC,CAGxC;;AACAV,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAlBgC,CAoBjC;;;AACA,QAAMW,kBAAkB,GAAGvB,WAAW,CAAC,MAAM;AAC3C,QAAI,CAACW,eAAL,EAAsB;AACtBC,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,GAHqC,EAGnC,CAACD,eAAD,CAHmC,CAAtC,CArBiC,CAyBjC;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCF,kBAAnC;AACA,WAAO,MAAM;AACXC,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCH,kBAAtC;AACD,KAFD;AAGD,GALQ,EAKN,CAACA,kBAAD,CALM,CAAT,CA1BiC,CAiCjC;AACA;;AACAxB,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,sBAAsB,GADR,CAEd;AACD,GAHQ,EAGN,CAACR,oBAAD,CAHM,CAAT;AAKA;AAAA;AACE;AACA;AAAK,MAAA,SAAS,EAAEK,IAAI,CAACY,QAAL,GAAgB,MAAhB,GAAyB,MAAzC;AAAA,8BACE,QAAC,kBAAD;AAAoB,QAAA,IAAI,EAAEhB;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAK,QAAA,EAAE,EAAC,gBAAR;AAAA,mBACGG,YAAY,gBACX,QAAC,MAAD;AAAA,iCACE;AACE,YAAA,EAAE,EAAC,YADL;AAEE,YAAA,OAAO,EAAE,MAAM;AACbE,cAAAA,OAAO,CAAC;AACNY,gBAAAA,MAAM,EAAE,IADF;AAEND,gBAAAA,QAAQ,EAAE;AAFJ,eAAD,CAAP;AAID,aAPH;AAAA,mCASE,QAAC,WAAD;AAAa,cAAA,SAAS,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADW,GAcT,IAfN,eAiBE;AAAK,UAAA,SAAS,EAAC,gCAAf;AAAgD,UAAA,EAAE,EAAC,UAAnD;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,2BAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,+DAAf;AAAA,yBACGjB,oBADH,aACGA,oBADH,gDACGA,oBAAoB,CAAEiB,QADzB,0DACG,sBAAgCE,GAAhC,CAAoC,CAACC,OAAD,EAAUC,CAAV,KAAgB;AACnD,oCACE,QAAC,aAAD;AAEE,kBAAA,KAAK,EAAEA,CAFT;AAGE,kBAAA,IAAI,EAAE,CAACD,OAAD,EAAUpB,oBAAoB,CAACiB,QAA/B,CAHR;AAIE,kBAAA,gBAAgB,EAAER;AAJpB,mBACOY,CADP;AAAA;AAAA;AAAA;AAAA,wBADF;AAQD,eATA,CADH,eAWE;AAAK,gBAAA,GAAG,EAAEd;AAAV;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAmCE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAEJ,OAApB;AAA6B,UAAA,WAAW,EAAEJ;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AA4CD;;GApFuBD,Q;UACwBL,gB,EAS1CC,kB;;;KAVkBI,Q","sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport { useConversations } from \"../utils/ConversationProvider\";\nimport { useViewportContext } from \"../utils/ViewportProvider\";\nimport ChatInput from \"./ChatInput\";\nimport MessageContextMenu from \"./MessageContextMenu\";\nimport SingleMessage from \"./SingleMessage\";\n\nexport default function Messages() {\n  const { sendMessage, selectedConversation } = useConversations();\n  const [contextMenuShow, setContextMenuShow] = useState(false);\n  const textRef = useRef();\n  const {\n    mobileScreen,\n    show,\n    setShow,\n    bottomOfMessages,\n    scrollToBottomMessages,\n  } = useViewportContext();\n\n  // Handler function for message context menu\n  function handleRightClick(event, element) {\n    if (contextMenuShow) return;\n    event.preventDefault();\n    //? const messageIndex = element.getAttribute(\"data-key\");\n    setContextMenuShow(true);\n  }\n\n  // Handler function for clicking away from the message context menu\n  const dismissContextMenu = useCallback(() => {\n    if (!contextMenuShow) return;\n    setContextMenuShow(false);\n  }, [contextMenuShow]);\n  // Hook to add the dismiss handler function\n  useEffect(() => {\n    document.addEventListener(\"click\", dismissContextMenu);\n    return () => {\n      document.removeEventListener(\"click\", dismissContextMenu);\n    };\n  }, [dismissContextMenu]);\n\n  // When a new conversation is sleceted,\n  // Scroll to the bottom right away\n  useEffect(() => {\n    scrollToBottomMessages();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedConversation]);\n\n  return (\n    //This is only important for when you are viewing the Mobile app\n    <div className={show.messages ? \"show\" : \"hide\"}>\n      <MessageContextMenu show={contextMenuShow} />\n\n      <div id=\"messageWrapper\">\n        {mobileScreen ? (\n          <Navbar>\n            <button\n              id=\"backButton\"\n              onClick={() => {\n                setShow({\n                  convos: true,\n                  messages: false,\n                });\n              }}\n            >\n              <FaArrowLeft className=\"bg-danger backButton\" />\n            </button>\n          </Navbar>\n        ) : null}\n\n        <div className=\"d-flex flex-column flex-grow-1\" id=\"messages\">\n          <div className=\"flex-grow-1 overflow-auto\">\n            <div className=\"d-flex flex-column align-items-start justify-content-end px-3\">\n              {selectedConversation?.messages?.map((message, i) => {\n                return (\n                  <SingleMessage\n                    key={i}\n                    index={i}\n                    data={[message, selectedConversation.messages]}\n                    handleRightClick={handleRightClick}\n                  />\n                );\n              })}\n              <div ref={bottomOfMessages}></div>\n            </div>\n          </div>\n        </div>\n\n        <ChatInput textRef={textRef} sendMessage={sendMessage} />\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}