{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/Desktop/Conversations.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport { useConversations } from \"../../utils/ConvorsationProvider\";\nimport API from \"../../utils/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Conversations() {\n  _s();\n\n  const {\n    messageState,\n    conversationState,\n    selectedConversationState\n  } = useConversations();\n  const [messages, setMessages] = messageState;\n  const [conversations, setConversations] = conversationState;\n  const [selectedConversation, setSelectedConversation] = selectedConversationState;\n  const searchRef = useRef();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"searchConversationsInput\",\n      type: \"text\",\n      ref: searchRef,\n      placeholder: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), conversations.map((convo, i) => {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        className: \"convoBox\",\n        id: selectedConversation.id === convo.id ? \"selected\" : \"#\" // className={selectedConversation._id === convo._id ? \"selected\" : \"notSelected\"}\n        // Just another place where I am having to use a different \"id\"\n        // onClick={(e) => selectConversation(e, convo._id)}\n        ,\n        onClick: () => API.selectConversation(convo.id).then(messages => {\n          setSelectedConversation(convo);\n          setMessages(messages);\n        }),\n        children: convo.name || \"New Conversation\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bottomOfConvos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Conversations, \"6Yz5LjNa+LKWySJMIv5u6346Byc=\", false, function () {\n  return [useConversations];\n});\n\n_c = Conversations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversations\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/Desktop/Conversations.jsx"],"names":["useRef","Row","useConversations","API","Conversations","messageState","conversationState","selectedConversationState","messages","setMessages","conversations","setConversations","selectedConversation","setSelectedConversation","searchRef","map","convo","i","id","selectConversation","then","name"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,gBAAT,QAAiC,kCAAjC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,iBAAhB;AAAmCC,IAAAA;AAAnC,MACJL,gBAAgB,EADlB;AAEA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BJ,YAAhC;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCL,iBAA1C;AACA,QAAM,CAACM,oBAAD,EAAuBC,uBAAvB,IACJN,yBADF;AAEA,QAAMO,SAAS,GAAGd,MAAM,EAAxB;AAEA,sBACE;AAAA,4BACE;AACE,MAAA,EAAE,EAAC,0BADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,GAAG,EAAEc,SAHP;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,YADF,EAQGJ,aAAa,CAACK,GAAd,CAAkB,CAACC,KAAD,EAAQC,CAAR,KAAc;AAC/B,0BACE,QAAC,GAAD;AAEE,QAAA,SAAS,EAAC,UAFZ;AAGE,QAAA,EAAE,EAAEL,oBAAoB,CAACM,EAArB,KAA4BF,KAAK,CAACE,EAAlC,GAAuC,UAAvC,GAAoD,GAH1D,CAIE;AACA;AACA;AANF;AAOE,QAAA,OAAO,EAAE,MACPf,GAAG,CAACgB,kBAAJ,CAAuBH,KAAK,CAACE,EAA7B,EAAiCE,IAAjC,CAAuCZ,QAAD,IAAc;AAClDK,UAAAA,uBAAuB,CAACG,KAAD,CAAvB;AACAP,UAAAA,WAAW,CAACD,QAAD,CAAX;AACD,SAHD,CARJ;AAAA,kBAcGQ,KAAK,CAACK,IAAN,IAAc;AAdjB,SACOJ,CADP;AAAA;AAAA;AAAA;AAAA,cADF;AAkBD,KAnBA,CARH,eA4BE;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YA5BF;AAAA,kBADF;AAgCD;;GAzCuBb,a;UAEpBF,gB;;;KAFoBE,a","sourcesContent":["import { useRef } from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport { useConversations } from \"../../utils/ConvorsationProvider\";\nimport API from \"../../utils/API\";\n\nexport default function Conversations() {\n  const { messageState, conversationState, selectedConversationState } =\n    useConversations();\n  const [messages, setMessages] = messageState;\n  const [conversations, setConversations] = conversationState;\n  const [selectedConversation, setSelectedConversation] =\n    selectedConversationState;\n  const searchRef = useRef();\n\n  return (\n    <>\n      <input\n        id=\"searchConversationsInput\"\n        type=\"text\"\n        ref={searchRef}\n        placeholder=\"search\"\n      />\n\n      {conversations.map((convo, i) => {\n        return (\n          <Row\n            key={i}\n            className=\"convoBox\"\n            id={selectedConversation.id === convo.id ? \"selected\" : \"#\"}\n            // className={selectedConversation._id === convo._id ? \"selected\" : \"notSelected\"}\n            // Just another place where I am having to use a different \"id\"\n            // onClick={(e) => selectConversation(e, convo._id)}\n            onClick={() =>\n              API.selectConversation(convo.id).then((messages) => {\n                setSelectedConversation(convo);\n                setMessages(messages);\n              })\n            }\n          >\n            {convo.name || \"New Conversation\"}\n          </Row>\n        );\n      })}\n      <div id=\"bottomOfConvos\" />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}