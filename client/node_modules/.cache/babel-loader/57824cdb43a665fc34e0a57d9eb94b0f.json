{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Pages/Home/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport API from \"../../utils/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [conversations, setConversations] = useState([]);\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    API.getConvos().then(convos => setConversations(convos), setIsLoading(false)).catch(e => console.error(e));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this) : conversations.map(convo => {\n          return /*#__PURE__*/_jsxDEV(Row, {\n            children: convo.participants\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"Cybk01cWCska3bhdqyaNv5HtgSI=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Pages/Home/index.jsx"],"names":["React","useEffect","useState","Container","Row","Col","Spinner","API","Home","isLoading","setIsLoading","conversations","setConversations","messages","setMessages","getConvos","then","convos","catch","e","console","error","map","convo","participants"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,OAA9B,QAA6C,iBAA7C;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,GAAG,CAACQ,SAAJ,GACGC,IADH,CACSC,MAAD,IAAYL,gBAAgB,CAACK,MAAD,CADpC,EAC8CP,YAAY,CAAC,KAAD,CAD1D,EAEGQ,KAFH,CAEUC,CAAD,IAAOC,OAAO,CAACC,KAAR,CAAcF,CAAd,CAFhB;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA,8BACE,QAAC,GAAD;AAAA,kBACGV,SAAS,gBACR,QAAC,OAAD;AAAS,UAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADQ,GAGRE,aAAa,CAACW,GAAd,CAAmBC,KAAD,IAAW;AAC3B,8BAAO,QAAC,GAAD;AAAA,sBAAMA,KAAK,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFD;AAJJ;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgBD;;GA3BuBhB,I;;KAAAA,I","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport API from \"../../utils/API\";\n\nexport default function Home() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [conversations, setConversations] = useState([]);\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    API.getConvos()\n      .then((convos) => setConversations(convos), setIsLoading(false))\n      .catch((e) => console.error(e));\n  }, []);\n\n  return (\n    <>\n      <Container fluid>\n        <Col>\n          {isLoading ? (\n            <Spinner animation=\"border\" />\n          ) : (\n            conversations.map((convo) => {\n              return <Row>{convo.participants}</Row>;\n            })\n          )}\n        </Col>\n        <Col></Col>\n      </Container>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}