{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Groups/CometChatGroupList/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { GroupListManager } from \"./controller\";\nimport { CometChatCreateGroup, CometChatGroupListItem } from \"../../Groups\";\nimport { CometChatToastNotification } from \"../../Shared\";\nimport { CometChatContextProvider, CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { groupWrapperStyle, groupHeaderStyle, groupHeaderCloseStyle, groupHeaderTitleStyle, groupAddStyle, groupSearchStyle, groupSearchButtonStyle, groupSearchInputStyle, groupMsgStyle, groupMsgTxtStyle, groupListStyle } from \"./style\";\nimport searchIcon from \"./resources/search.svg\";\nimport navigateIcon from \"./resources/back.svg\";\nimport addIcon from \"./resources/create.svg\";\n\nclass CometChatGroupList extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.loggedInUser = null;\n\n    this.enableSearchGroup = () => {\n      this.getContext().FeatureRestriction.isGroupSearchEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableSearchGroup) {\n          this.setState({\n            enableSearchGroup: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableSearchGroup !== false) {\n          this.setState({\n            enableSearchGroup: false\n          });\n        }\n      });\n    };\n\n    this.enableCreateGroup = () => {\n      this.getContext().FeatureRestriction.isGroupCreationEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableCreateGroup) {\n          this.setState({\n            enableCreateGroup: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableCreateGroup !== false) {\n          this.setState({\n            enableCreateGroup: false\n          });\n        }\n      });\n    };\n\n    this.enableJoinGroup = () => {\n      this.getContext().FeatureRestriction.isJoinLeaveGroupsEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableJoinGroup) {\n          this.setState({\n            enableJoinGroup: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableJoinGroup !== false) {\n          this.setState({\n            enableJoinGroup: false\n          });\n        }\n      });\n    };\n\n    this.groupUpdated = (key, message, group, options) => {\n      switch (key) {\n        case enums.GROUP_MEMBER_SCOPE_CHANGED:\n          this.updateMemberChanged(group, options);\n          break;\n\n        case enums.GROUP_MEMBER_KICKED:\n        case enums.GROUP_MEMBER_BANNED:\n        case enums.GROUP_MEMBER_LEFT:\n          this.updateMemberRemoved(group, options);\n          break;\n\n        case enums.GROUP_MEMBER_ADDED:\n          this.updateMemberAdded(group, options);\n          break;\n\n        case enums.GROUP_MEMBER_JOINED:\n          this.updateMemberJoined(group, options);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.updateMemberRemoved = (group, options) => {\n      let grouplist = [...this.state.grouplist]; //search for group\n\n      let groupKey = grouplist.findIndex(g => g.guid === group.guid);\n\n      if (groupKey > -1) {\n        if (options && this.loggedInUser.uid === options.user.uid) {\n          let groupObj = { ...grouplist[groupKey]\n          };\n          let membersCount = parseInt(group.membersCount);\n          let hasJoined = group.hasJoined;\n          let newgroupObj = Object.assign({}, groupObj, {\n            membersCount: membersCount,\n            hasJoined: hasJoined\n          });\n          grouplist.splice(groupKey, 1, newgroupObj);\n          this.setState({\n            grouplist: grouplist\n          });\n        } else {\n          let groupObj = { ...grouplist[groupKey]\n          };\n          let membersCount = parseInt(group.membersCount);\n          let newgroupObj = Object.assign({}, groupObj, {\n            membersCount: membersCount\n          });\n          grouplist.splice(groupKey, 1, newgroupObj);\n          this.setState({\n            grouplist: grouplist\n          });\n        }\n      }\n    };\n\n    this.updateMemberAdded = (group, options) => {\n      let grouplist = [...this.state.grouplist]; //search for group\n\n      let groupKey = grouplist.findIndex(g => g.guid === group.guid);\n\n      if (groupKey > -1) {\n        let groupObj = { ...grouplist[groupKey]\n        };\n        let membersCount = parseInt(group.membersCount);\n        let scope = group.hasOwnProperty(\"scope\") ? group.scope : \"\";\n        let hasJoined = group.hasOwnProperty(\"hasJoined\") ? group.hasJoined : false;\n\n        if (options && this.loggedInUser.uid === options.user.uid) {\n          scope = CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT;\n          hasJoined = true;\n        }\n\n        let newgroupObj = Object.assign({}, groupObj, {\n          membersCount: membersCount,\n          scope: scope,\n          hasJoined: hasJoined\n        });\n        grouplist.splice(groupKey, 1, newgroupObj);\n        this.setState({\n          grouplist: grouplist\n        });\n      } else {\n        let groupObj = { ...group\n        };\n        let scope = groupObj.hasOwnProperty(\"scope\") ? groupObj.scope : \"\";\n        let hasJoined = groupObj.hasOwnProperty(\"hasJoined\") ? groupObj.hasJoined : false;\n        let membersCount = parseInt(groupObj.membersCount);\n\n        if (options && this.loggedInUser.uid === options.user.uid) {\n          scope = CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT;\n          hasJoined = true;\n        }\n\n        let newgroupObj = Object.assign({}, groupObj, {\n          membersCount: membersCount,\n          scope: scope,\n          hasJoined: hasJoined\n        });\n        grouplist.unshift(newgroupObj);\n        this.setState({\n          grouplist: grouplist\n        });\n      }\n    };\n\n    this.updateMemberJoined = (group, options) => {\n      let grouplist = [...this.state.grouplist]; //search for group\n\n      let groupKey = grouplist.findIndex(g => g.guid === group.guid);\n\n      if (groupKey > -1) {\n        let groupObj = { ...grouplist[groupKey]\n        };\n        let scope = groupObj.scope;\n        let membersCount = parseInt(group.membersCount);\n\n        if (options && this.loggedInUser.uid === options.user.uid) {\n          scope = CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT;\n        }\n\n        let newgroupObj = Object.assign({}, groupObj, {\n          membersCount: membersCount,\n          scope: scope\n        });\n        grouplist.splice(groupKey, 1, newgroupObj);\n        this.setState({\n          grouplist: grouplist\n        });\n      }\n    };\n\n    this.updateMemberChanged = (group, options) => {\n      let grouplist = [...this.state.grouplist]; //search for group\n\n      let groupKey = grouplist.findIndex(g => g.guid === group.guid);\n\n      if (groupKey > -1) {\n        let groupObj = { ...grouplist[groupKey]\n        };\n\n        if (options && this.loggedInUser.uid === options.user.uid) {\n          let newgroupObj = Object.assign({}, groupObj, {\n            scope: options.scope\n          });\n          grouplist.splice(groupKey, 1, newgroupObj);\n          this.setState({\n            grouplist: grouplist\n          });\n        }\n      }\n    };\n\n    this.handleScroll = e => {\n      const bottom = Math.round(e.currentTarget.scrollHeight - e.currentTarget.scrollTop) === Math.round(e.currentTarget.clientHeight);\n      if (bottom) this.getGroups();\n    };\n\n    this.handleClick = group => {\n      if (!this.props.onItemClick) return;\n\n      if (group.hasJoined === false) {\n        //if join group feature is disabled\n        if (this.state.enableJoinGroup === false) {\n          return false;\n        }\n\n        let password = \"\";\n\n        if (group.type === CometChat.GROUP_TYPE.PASSWORD) {\n          password = prompt(Translator.translate(\"ENTER_YOUR_PASSWORD\", this.state.lang));\n        }\n\n        const guid = group.guid;\n        const groupType = group.type;\n        CometChat.joinGroup(guid, groupType, password).then(response => {\n          if (typeof response === \"object\" && Object.keys(response).length) {\n            const groups = [...this.state.grouplist];\n            let groupKey = groups.findIndex((g, k) => g.guid === guid);\n\n            if (groupKey > -1) {\n              const groupObj = groups[groupKey];\n              const newGroupObj = Object.assign({}, groupObj, response, {\n                scope: CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT\n              });\n              groups.splice(groupKey, 1, newGroupObj);\n              this.setState({\n                grouplist: groups\n              });\n              this.props.onItemClick(newGroupObj, CometChat.ACTION_TYPE.TYPE_GROUP);\n            }\n          } else {\n            this.toastRef.setError(\"SOMETHING_WRONG\");\n          }\n        }).catch(error => {\n          if (error.hasOwnProperty(\"code\") && error.code && error.code === \"ERR_WRONG_GROUP_PASS\") {\n            this.toastRef.setError(\"WRONG_PASSWORD\");\n          } else {\n            this.toastRef.setError(\"SOMETHING_WRONG\");\n          }\n        });\n      } else {\n        this.props.onItemClick(group, CometChat.ACTION_TYPE.TYPE_GROUP);\n      }\n    };\n\n    this.handleMenuClose = () => {\n      if (!this.props.actionGenerated) {\n        return false;\n      }\n\n      this.props.actionGenerated(enums.ACTIONS[\"TOGGLE_SIDEBAR\"]);\n    };\n\n    this.searchGroup = e => {\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n      }\n\n      let val = e.target.value;\n      this.timeout = setTimeout(() => {\n        this.setState({\n          grouplist: [],\n          decoratorMessage: Translator.translate(\"LOADING\", this.state.lang)\n        });\n        this.GroupListManager = new GroupListManager(val);\n        this.getGroups();\n      }, 500);\n    };\n\n    this.markMessagesRead = message => {\n      if (!(message.getReadAt() || message.getReadByMeAt())) {\n        if (message.getReceiverType() === CometChat.RECEIVER_TYPE.USER) {\n          CometChat.markAsRead(message.getId().toString(), message.getSender().getUid(), message.getReceiverType());\n        } else {\n          CometChat.markAsRead(message.getId().toString(), message.getReceiverId(), message.getReceiverType());\n        }\n      }\n    };\n\n    this.getGroups = () => {\n      this.GroupListManager.fetchNextGroups().then(groupList => {\n        if (groupList.length === 0) {\n          if (this.state.grouplist.length === 0) {\n            this.setState({\n              decoratorMessage: Translator.translate(\"NO_GROUPS_FOUND\", this.state.lang)\n            });\n          }\n        } else {\n          this.setState({\n            grouplist: [...this.state.grouplist, ...groupList],\n            decoratorMessage: \"\"\n          });\n        }\n      }).catch(error => this.setState({\n        decoratorMessage: Translator.translate(\"SOMETHING_WRONG\", this.state.lang)\n      }));\n    };\n\n    this.createGroupHandler = flag => {\n      this.setState({\n        createGroup: flag\n      });\n    };\n\n    this.createGroupActionHandler = (action, group) => {\n      if (action === enums.ACTIONS[\"GROUP_CREATED\"]) {\n        this.handleClick(group);\n        const groupList = [...this.state.grouplist];\n        groupList.unshift(group);\n        this.setState({\n          grouplist: groupList,\n          createGroup: false\n        });\n      }\n    };\n\n    this.getContext = () => {\n      if (this.props._parent.length) {\n        return this.context;\n      } else {\n        return this.contextProviderRef.state;\n      }\n    };\n\n    this.state = {\n      grouplist: [],\n      createGroup: false,\n      lang: props.lang,\n      enableSearchGroup: false,\n      enableCreateGroup: false,\n      enableJoinGroup: false,\n      decoratorMessage: Translator.translate(\"LOADING\", props.lang)\n    };\n    this.contextProviderRef = /*#__PURE__*/React.createRef();\n    this.groupListRef = /*#__PURE__*/React.createRef();\n    this.toastRef = /*#__PURE__*/React.createRef();\n    CometChat.getLoggedinUser().then(user => this.loggedInUser = user).catch(error => this.setState({\n      decoratorMessage: Translator.translate(\"SOMETHING_WRONG\", this.state.lang)\n    }));\n  }\n\n  componentDidMount() {\n    this.item = this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP ? this.getContext().item : null;\n    this.enableSearchGroup();\n    this.enableCreateGroup();\n    this.enableJoinGroup();\n    this.GroupListManager = new GroupListManager();\n    this.getGroups();\n    this.GroupListManager.attachListeners(this.groupUpdated);\n  }\n\n  componentDidUpdate(prevProps) {\n    //if group detail(membersCount) is updated, update grouplist\n    if (this.item && Object.keys(this.item).length && this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP && this.item.guid === this.getContext().item.guid && this.item.membersCount !== this.getContext().item.membersCount) {\n      const groups = [...this.state.grouplist];\n      let groupKey = groups.findIndex(group => group.guid === this.getContext().item.guid);\n\n      if (groupKey > -1) {\n        const groupObj = groups[groupKey];\n        let newGroupObj = Object.assign({}, groupObj, {\n          membersCount: this.getContext().item.membersCount\n        });\n        groups.splice(groupKey, 1, newGroupObj);\n        this.setState({\n          grouplist: groups\n        });\n      }\n    } //upon user deleting a group, remove group from group list\n\n\n    if (this.getContext().deletedGroupId.trim().length) {\n      const guid = this.getContext().deletedGroupId.trim();\n      const groups = [...this.state.grouplist];\n      const groupKey = groups.findIndex(group => group.guid === guid);\n\n      if (groupKey > -1) {\n        groups.splice(groupKey, 1);\n        this.setState({\n          grouplist: groups\n        });\n      }\n    }\n\n    if (prevProps.lang !== this.props.lang) {\n      this.setState({\n        lang: this.props.lang\n      });\n    }\n\n    this.item = this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP ? this.getContext().item : null;\n    this.enableSearchGroup();\n    this.enableCreateGroup();\n    this.enableJoinGroup();\n  }\n\n  componentWillUnmount() {\n    this.GroupListManager = null;\n  }\n  /**\n   * if search group feature is disabled\n   */\n\n\n  render() {\n    let messageContainer = null;\n\n    if (this.state.decoratorMessage.length !== 0) {\n      messageContainer = jsx(\"div\", {\n        css: groupMsgStyle(),\n        className: \"groups__decorator-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 9\n        }\n      }, jsx(\"p\", {\n        css: groupMsgTxtStyle(this.getContext()),\n        className: \"decorator-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 11\n        }\n      }, this.state.decoratorMessage));\n    }\n\n    const groups = this.state.grouplist.map(group => {\n      let selectedGroup = this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP && this.getContext().item.guid === group.guid ? group : null;\n      return jsx(CometChatGroupListItem, {\n        key: group.guid,\n        theme: this.props.theme,\n        group: group,\n        lang: this.state.lang,\n        selectedGroup: selectedGroup,\n        clickHandler: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 9\n        }\n      });\n    });\n    let createGroupBtn = jsx(\"div\", {\n      css: groupAddStyle(addIcon, this.context),\n      title: Translator.translate(\"CREATE_GROUP\", this.state.lang),\n      onClick: () => this.createGroupHandler(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 7\n      }\n    }, jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 9\n      }\n    })); //if create group feature is disabled\n\n    if (this.state.enableCreateGroup === false) {\n      createGroupBtn = null;\n    }\n\n    let closeBtn = jsx(\"div\", {\n      css: groupHeaderCloseStyle(navigateIcon, this.props),\n      className: \"header__close\",\n      onClick: this.handleMenuClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 7\n      }\n    });\n\n    if (this.getContext() && Object.keys(this.getContext().item).length === 0) {\n      closeBtn = null;\n    }\n\n    let searchGroup = null;\n\n    if (this.state.enableSearchGroup) {\n      searchGroup = jsx(\"div\", {\n        css: groupSearchStyle(),\n        className: \"groups__search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 9\n        }\n      }, jsx(\"button\", {\n        type: \"button\",\n        className: \"search__button\",\n        css: groupSearchButtonStyle(searchIcon, this.getContext()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }\n      }), jsx(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        css: groupSearchInputStyle(),\n        className: \"search__input\",\n        placeholder: Translator.translate(\"SEARCH\", this.state.lang),\n        onChange: this.searchGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    let createGroup = null;\n\n    if (this.state.createGroup) {\n      createGroup = jsx(CometChatCreateGroup, {\n        theme: this.props.theme,\n        lang: this.state.lang,\n        close: () => this.createGroupHandler(false),\n        actionGenerated: this.createGroupActionHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 9\n        }\n      });\n    }\n\n    const groupListTemplate = jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 7\n      }\n    }, jsx(\"div\", {\n      css: groupWrapperStyle(this.props, this.getContext()),\n      className: \"groups\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 9\n      }\n    }, jsx(\"div\", {\n      css: groupHeaderStyle(this.getContext()),\n      className: \"groups__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 11\n      }\n    }, closeBtn, jsx(\"h4\", {\n      css: groupHeaderTitleStyle(this.props),\n      className: \"header__title\",\n      dir: Translator.getDirection(this.state.lang),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 13\n      }\n    }, Translator.translate(\"GROUPS\", this.state.lang)), createGroupBtn), searchGroup, messageContainer, jsx(\"div\", {\n      css: groupListStyle(),\n      className: \"groups__list\",\n      onScroll: this.handleScroll,\n      ref: el => this.groupListRef = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 11\n      }\n    }, groups)), createGroup, jsx(CometChatToastNotification, {\n      ref: el => this.toastRef = el,\n      context: this.getContext(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 9\n      }\n    }));\n    let groupListWrapper = groupListTemplate; //if used as a standalone component, add errorboundary and context provider\n\n    if (this.props._parent === \"\") {\n      groupListWrapper = jsx(CometChatContextProvider, {\n        ref: el => this.contextProviderRef = el,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 9\n        }\n      }, groupListTemplate);\n    }\n\n    return groupListWrapper;\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatGroupList.contextType = CometChatContext;\nCometChatGroupList.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  onItemClick: () => {},\n  _parent: \"\"\n};\nCometChatGroupList.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  onItemClick: PropTypes.func,\n  _parent: PropTypes.string\n};\nexport { CometChatGroupList };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Groups/CometChatGroupList/index.js"],"names":["React","jsx","PropTypes","CometChat","GroupListManager","CometChatCreateGroup","CometChatGroupListItem","CometChatToastNotification","CometChatContextProvider","CometChatContext","enums","theme","Translator","groupWrapperStyle","groupHeaderStyle","groupHeaderCloseStyle","groupHeaderTitleStyle","groupAddStyle","groupSearchStyle","groupSearchButtonStyle","groupSearchInputStyle","groupMsgStyle","groupMsgTxtStyle","groupListStyle","CometChatGroupList","PureComponent","constructor","props","loggedInUser","enableSearchGroup","getContext","FeatureRestriction","isGroupSearchEnabled","then","response","state","setState","catch","error","enableCreateGroup","isGroupCreationEnabled","enableJoinGroup","isJoinLeaveGroupsEnabled","groupUpdated","key","message","group","options","GROUP_MEMBER_SCOPE_CHANGED","updateMemberChanged","GROUP_MEMBER_KICKED","GROUP_MEMBER_BANNED","GROUP_MEMBER_LEFT","updateMemberRemoved","GROUP_MEMBER_ADDED","updateMemberAdded","GROUP_MEMBER_JOINED","updateMemberJoined","grouplist","groupKey","findIndex","g","guid","uid","user","groupObj","membersCount","parseInt","hasJoined","newgroupObj","Object","assign","splice","scope","hasOwnProperty","GROUP_MEMBER_SCOPE","PARTICIPANT","unshift","handleScroll","e","bottom","Math","round","currentTarget","scrollHeight","scrollTop","clientHeight","getGroups","handleClick","onItemClick","password","type","GROUP_TYPE","PASSWORD","prompt","translate","lang","groupType","joinGroup","keys","length","groups","k","newGroupObj","ACTION_TYPE","TYPE_GROUP","toastRef","setError","code","handleMenuClose","actionGenerated","ACTIONS","searchGroup","timeout","clearTimeout","val","target","value","setTimeout","decoratorMessage","markMessagesRead","getReadAt","getReadByMeAt","getReceiverType","RECEIVER_TYPE","USER","markAsRead","getId","toString","getSender","getUid","getReceiverId","fetchNextGroups","groupList","createGroupHandler","flag","createGroup","createGroupActionHandler","action","_parent","context","contextProviderRef","createRef","groupListRef","getLoggedinUser","componentDidMount","item","attachListeners","componentDidUpdate","prevProps","deletedGroupId","trim","componentWillUnmount","render","messageContainer","map","selectedGroup","createGroupBtn","addIcon","closeBtn","navigateIcon","searchIcon","groupListTemplate","getDirection","el","groupListWrapper","contextType","defaultProps","getDefaultLanguage","propTypes","string","object","func"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { GroupListManager } from \"./controller\";\n\nimport { CometChatCreateGroup, CometChatGroupListItem } from \"../../Groups\";\nimport { CometChatToastNotification } from \"../../Shared\";\n\nimport {\n  CometChatContextProvider,\n  CometChatContext,\n} from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\n\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\n\nimport {\n  groupWrapperStyle,\n  groupHeaderStyle,\n  groupHeaderCloseStyle,\n  groupHeaderTitleStyle,\n  groupAddStyle,\n  groupSearchStyle,\n  groupSearchButtonStyle,\n  groupSearchInputStyle,\n  groupMsgStyle,\n  groupMsgTxtStyle,\n  groupListStyle,\n} from \"./style\";\n\nimport searchIcon from \"./resources/search.svg\";\nimport navigateIcon from \"./resources/back.svg\";\nimport addIcon from \"./resources/create.svg\";\n\nclass CometChatGroupList extends React.PureComponent {\n  item;\n  timeout;\n  loggedInUser = null;\n\n  static contextType = CometChatContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      grouplist: [],\n      createGroup: false,\n      lang: props.lang,\n      enableSearchGroup: false,\n      enableCreateGroup: false,\n      enableJoinGroup: false,\n      decoratorMessage: Translator.translate(\"LOADING\", props.lang),\n    };\n\n    this.contextProviderRef = React.createRef();\n    this.groupListRef = React.createRef();\n    this.toastRef = React.createRef();\n\n    CometChat.getLoggedinUser()\n      .then((user) => (this.loggedInUser = user))\n      .catch((error) =>\n        this.setState({\n          decoratorMessage: Translator.translate(\n            \"SOMETHING_WRONG\",\n            this.state.lang\n          ),\n        })\n      );\n  }\n\n  componentDidMount() {\n    this.item =\n      this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP\n        ? this.getContext().item\n        : null;\n    this.enableSearchGroup();\n    this.enableCreateGroup();\n    this.enableJoinGroup();\n\n    this.GroupListManager = new GroupListManager();\n    this.getGroups();\n    this.GroupListManager.attachListeners(this.groupUpdated);\n  }\n\n  componentDidUpdate(prevProps) {\n    //if group detail(membersCount) is updated, update grouplist\n    if (\n      this.item &&\n      Object.keys(this.item).length &&\n      this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP &&\n      this.item.guid === this.getContext().item.guid &&\n      this.item.membersCount !== this.getContext().item.membersCount\n    ) {\n      const groups = [...this.state.grouplist];\n\n      let groupKey = groups.findIndex(\n        (group) => group.guid === this.getContext().item.guid\n      );\n      if (groupKey > -1) {\n        const groupObj = groups[groupKey];\n        let newGroupObj = Object.assign({}, groupObj, {\n          membersCount: this.getContext().item.membersCount,\n        });\n\n        groups.splice(groupKey, 1, newGroupObj);\n        this.setState({ grouplist: groups });\n      }\n    }\n\n    //upon user deleting a group, remove group from group list\n    if (this.getContext().deletedGroupId.trim().length) {\n      const guid = this.getContext().deletedGroupId.trim();\n\n      const groups = [...this.state.grouplist];\n      const groupKey = groups.findIndex((group) => group.guid === guid);\n\n      if (groupKey > -1) {\n        groups.splice(groupKey, 1);\n        this.setState({ grouplist: groups });\n      }\n    }\n\n    if (prevProps.lang !== this.props.lang) {\n      this.setState({ lang: this.props.lang });\n    }\n\n    this.item =\n      this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP\n        ? this.getContext().item\n        : null;\n    this.enableSearchGroup();\n    this.enableCreateGroup();\n    this.enableJoinGroup();\n  }\n\n  componentWillUnmount() {\n    this.GroupListManager = null;\n  }\n\n  /**\n   * if search group feature is disabled\n   */\n  enableSearchGroup = () => {\n    this.getContext()\n      .FeatureRestriction.isGroupSearchEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableSearchGroup) {\n          this.setState({ enableSearchGroup: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableSearchGroup !== false) {\n          this.setState({ enableSearchGroup: false });\n        }\n      });\n  };\n\n  /**\n   * if create group feature is disabled\n   */\n  enableCreateGroup = () => {\n    this.getContext()\n      .FeatureRestriction.isGroupCreationEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableCreateGroup) {\n          this.setState({ enableCreateGroup: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableCreateGroup !== false) {\n          this.setState({ enableCreateGroup: false });\n        }\n      });\n  };\n\n  /**\n   * if join group feature is disabled\n   */\n  enableJoinGroup = () => {\n    this.getContext()\n      .FeatureRestriction.isJoinLeaveGroupsEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableJoinGroup) {\n          this.setState({ enableJoinGroup: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableJoinGroup !== false) {\n          this.setState({ enableJoinGroup: false });\n        }\n      });\n  };\n\n  groupUpdated = (key, message, group, options) => {\n    switch (key) {\n      case enums.GROUP_MEMBER_SCOPE_CHANGED:\n        this.updateMemberChanged(group, options);\n        break;\n      case enums.GROUP_MEMBER_KICKED:\n      case enums.GROUP_MEMBER_BANNED:\n      case enums.GROUP_MEMBER_LEFT:\n        this.updateMemberRemoved(group, options);\n        break;\n      case enums.GROUP_MEMBER_ADDED:\n        this.updateMemberAdded(group, options);\n        break;\n      case enums.GROUP_MEMBER_JOINED:\n        this.updateMemberJoined(group, options);\n        break;\n      default:\n        break;\n    }\n  };\n\n  updateMemberRemoved = (group, options) => {\n    let grouplist = [...this.state.grouplist];\n\n    //search for group\n    let groupKey = grouplist.findIndex((g) => g.guid === group.guid);\n\n    if (groupKey > -1) {\n      if (options && this.loggedInUser.uid === options.user.uid) {\n        let groupObj = { ...grouplist[groupKey] };\n        let membersCount = parseInt(group.membersCount);\n        let hasJoined = group.hasJoined;\n\n        let newgroupObj = Object.assign({}, groupObj, {\n          membersCount: membersCount,\n          hasJoined: hasJoined,\n        });\n\n        grouplist.splice(groupKey, 1, newgroupObj);\n        this.setState({ grouplist: grouplist });\n      } else {\n        let groupObj = { ...grouplist[groupKey] };\n        let membersCount = parseInt(group.membersCount);\n\n        let newgroupObj = Object.assign({}, groupObj, {\n          membersCount: membersCount,\n        });\n\n        grouplist.splice(groupKey, 1, newgroupObj);\n        this.setState({ grouplist: grouplist });\n      }\n    }\n  };\n\n  updateMemberAdded = (group, options) => {\n    let grouplist = [...this.state.grouplist];\n\n    //search for group\n    let groupKey = grouplist.findIndex((g) => g.guid === group.guid);\n\n    if (groupKey > -1) {\n      let groupObj = { ...grouplist[groupKey] };\n\n      let membersCount = parseInt(group.membersCount);\n\n      let scope = group.hasOwnProperty(\"scope\") ? group.scope : \"\";\n      let hasJoined = group.hasOwnProperty(\"hasJoined\")\n        ? group.hasJoined\n        : false;\n\n      if (options && this.loggedInUser.uid === options.user.uid) {\n        scope = CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT;\n        hasJoined = true;\n      }\n\n      let newgroupObj = Object.assign({}, groupObj, {\n        membersCount: membersCount,\n        scope: scope,\n        hasJoined: hasJoined,\n      });\n\n      grouplist.splice(groupKey, 1, newgroupObj);\n      this.setState({ grouplist: grouplist });\n    } else {\n      let groupObj = { ...group };\n\n      let scope = groupObj.hasOwnProperty(\"scope\") ? groupObj.scope : \"\";\n      let hasJoined = groupObj.hasOwnProperty(\"hasJoined\")\n        ? groupObj.hasJoined\n        : false;\n      let membersCount = parseInt(groupObj.membersCount);\n\n      if (options && this.loggedInUser.uid === options.user.uid) {\n        scope = CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT;\n        hasJoined = true;\n      }\n\n      let newgroupObj = Object.assign({}, groupObj, {\n        membersCount: membersCount,\n        scope: scope,\n        hasJoined: hasJoined,\n      });\n\n      grouplist.unshift(newgroupObj);\n      this.setState({ grouplist: grouplist });\n    }\n  };\n\n  updateMemberJoined = (group, options) => {\n    let grouplist = [...this.state.grouplist];\n\n    //search for group\n    let groupKey = grouplist.findIndex((g) => g.guid === group.guid);\n\n    if (groupKey > -1) {\n      let groupObj = { ...grouplist[groupKey] };\n\n      let scope = groupObj.scope;\n      let membersCount = parseInt(group.membersCount);\n\n      if (options && this.loggedInUser.uid === options.user.uid) {\n        scope = CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT;\n      }\n\n      let newgroupObj = Object.assign({}, groupObj, {\n        membersCount: membersCount,\n        scope: scope,\n      });\n\n      grouplist.splice(groupKey, 1, newgroupObj);\n      this.setState({ grouplist: grouplist });\n    }\n  };\n\n  updateMemberChanged = (group, options) => {\n    let grouplist = [...this.state.grouplist];\n\n    //search for group\n    let groupKey = grouplist.findIndex((g) => g.guid === group.guid);\n\n    if (groupKey > -1) {\n      let groupObj = { ...grouplist[groupKey] };\n      if (options && this.loggedInUser.uid === options.user.uid) {\n        let newgroupObj = Object.assign({}, groupObj, { scope: options.scope });\n\n        grouplist.splice(groupKey, 1, newgroupObj);\n        this.setState({ grouplist: grouplist });\n      }\n    }\n  };\n\n  handleScroll = (e) => {\n    const bottom =\n      Math.round(e.currentTarget.scrollHeight - e.currentTarget.scrollTop) ===\n      Math.round(e.currentTarget.clientHeight);\n    if (bottom) this.getGroups();\n  };\n\n  handleClick = (group) => {\n    if (!this.props.onItemClick) return;\n\n    if (group.hasJoined === false) {\n      //if join group feature is disabled\n      if (this.state.enableJoinGroup === false) {\n        return false;\n      }\n\n      let password = \"\";\n      if (group.type === CometChat.GROUP_TYPE.PASSWORD) {\n        password = prompt(\n          Translator.translate(\"ENTER_YOUR_PASSWORD\", this.state.lang)\n        );\n      }\n\n      const guid = group.guid;\n      const groupType = group.type;\n\n      CometChat.joinGroup(guid, groupType, password)\n        .then((response) => {\n          if (typeof response === \"object\" && Object.keys(response).length) {\n            const groups = [...this.state.grouplist];\n\n            let groupKey = groups.findIndex((g, k) => g.guid === guid);\n            if (groupKey > -1) {\n              const groupObj = groups[groupKey];\n              const newGroupObj = Object.assign({}, groupObj, response, {\n                scope: CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT,\n              });\n\n              groups.splice(groupKey, 1, newGroupObj);\n              this.setState({ grouplist: groups });\n\n              this.props.onItemClick(\n                newGroupObj,\n                CometChat.ACTION_TYPE.TYPE_GROUP\n              );\n            }\n          } else {\n            this.toastRef.setError(\"SOMETHING_WRONG\");\n          }\n        })\n        .catch((error) => {\n          if (\n            error.hasOwnProperty(\"code\") &&\n            error.code &&\n            error.code === \"ERR_WRONG_GROUP_PASS\"\n          ) {\n            this.toastRef.setError(\"WRONG_PASSWORD\");\n          } else {\n            this.toastRef.setError(\"SOMETHING_WRONG\");\n          }\n        });\n    } else {\n      this.props.onItemClick(group, CometChat.ACTION_TYPE.TYPE_GROUP);\n    }\n  };\n\n  handleMenuClose = () => {\n    if (!this.props.actionGenerated) {\n      return false;\n    }\n\n    this.props.actionGenerated(enums.ACTIONS[\"TOGGLE_SIDEBAR\"]);\n  };\n\n  searchGroup = (e) => {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n\n    let val = e.target.value;\n    this.timeout = setTimeout(() => {\n      this.setState({\n        grouplist: [],\n        decoratorMessage: Translator.translate(\"LOADING\", this.state.lang),\n      });\n\n      this.GroupListManager = new GroupListManager(val);\n      this.getGroups();\n    }, 500);\n  };\n\n  markMessagesRead = (message) => {\n    if (!(message.getReadAt() || message.getReadByMeAt())) {\n      if (message.getReceiverType() === CometChat.RECEIVER_TYPE.USER) {\n        CometChat.markAsRead(\n          message.getId().toString(),\n          message.getSender().getUid(),\n          message.getReceiverType()\n        );\n      } else {\n        CometChat.markAsRead(\n          message.getId().toString(),\n          message.getReceiverId(),\n          message.getReceiverType()\n        );\n      }\n    }\n  };\n\n  getGroups = () => {\n    this.GroupListManager.fetchNextGroups()\n      .then((groupList) => {\n        if (groupList.length === 0) {\n          if (this.state.grouplist.length === 0) {\n            this.setState({\n              decoratorMessage: Translator.translate(\n                \"NO_GROUPS_FOUND\",\n                this.state.lang\n              ),\n            });\n          }\n        } else {\n          this.setState({\n            grouplist: [...this.state.grouplist, ...groupList],\n            decoratorMessage: \"\",\n          });\n        }\n      })\n      .catch((error) =>\n        this.setState({\n          decoratorMessage: Translator.translate(\n            \"SOMETHING_WRONG\",\n            this.state.lang\n          ),\n        })\n      );\n  };\n\n  createGroupHandler = (flag) => {\n    this.setState({ createGroup: flag });\n  };\n\n  createGroupActionHandler = (action, group) => {\n    if (action === enums.ACTIONS[\"GROUP_CREATED\"]) {\n      this.handleClick(group);\n\n      const groupList = [...this.state.grouplist];\n      groupList.unshift(group);\n\n      this.setState({ grouplist: groupList, createGroup: false });\n    }\n  };\n\n  getContext = () => {\n    if (this.props._parent.length) {\n      return this.context;\n    } else {\n      return this.contextProviderRef.state;\n    }\n  };\n\n  render() {\n    let messageContainer = null;\n\n    if (this.state.decoratorMessage.length !== 0) {\n      messageContainer = (\n        <div css={groupMsgStyle()} className=\"groups__decorator-message\">\n          <p\n            css={groupMsgTxtStyle(this.getContext())}\n            className=\"decorator-message\"\n          >\n            {this.state.decoratorMessage}\n          </p>\n        </div>\n      );\n    }\n\n    const groups = this.state.grouplist.map((group) => {\n      let selectedGroup =\n        this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP &&\n        this.getContext().item.guid === group.guid\n          ? group\n          : null;\n\n      return (\n        <CometChatGroupListItem\n          key={group.guid}\n          theme={this.props.theme}\n          group={group}\n          lang={this.state.lang}\n          selectedGroup={selectedGroup}\n          clickHandler={this.handleClick}\n        />\n      );\n    });\n\n    let createGroupBtn = (\n      <div\n        css={groupAddStyle(addIcon, this.context)}\n        title={Translator.translate(\"CREATE_GROUP\", this.state.lang)}\n        onClick={() => this.createGroupHandler(true)}\n      >\n        <i></i>\n      </div>\n    );\n\n    //if create group feature is disabled\n    if (this.state.enableCreateGroup === false) {\n      createGroupBtn = null;\n    }\n\n    let closeBtn = (\n      <div\n        css={groupHeaderCloseStyle(navigateIcon, this.props)}\n        className=\"header__close\"\n        onClick={this.handleMenuClose}\n      ></div>\n    );\n    if (this.getContext() && Object.keys(this.getContext().item).length === 0) {\n      closeBtn = null;\n    }\n\n    let searchGroup = null;\n    if (this.state.enableSearchGroup) {\n      searchGroup = (\n        <div css={groupSearchStyle()} className=\"groups__search\">\n          <button\n            type=\"button\"\n            className=\"search__button\"\n            css={groupSearchButtonStyle(searchIcon, this.getContext())}\n          />\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            css={groupSearchInputStyle()}\n            className=\"search__input\"\n            placeholder={Translator.translate(\"SEARCH\", this.state.lang)}\n            onChange={this.searchGroup}\n          />\n        </div>\n      );\n    }\n\n    let createGroup = null;\n    if (this.state.createGroup) {\n      createGroup = (\n        <CometChatCreateGroup\n          theme={this.props.theme}\n          lang={this.state.lang}\n          close={() => this.createGroupHandler(false)}\n          actionGenerated={this.createGroupActionHandler}\n        />\n      );\n    }\n\n    const groupListTemplate = (\n      <React.Fragment>\n        <div\n          css={groupWrapperStyle(this.props, this.getContext())}\n          className=\"groups\"\n        >\n          <div\n            css={groupHeaderStyle(this.getContext())}\n            className=\"groups__header\"\n          >\n            {closeBtn}\n            <h4\n              css={groupHeaderTitleStyle(this.props)}\n              className=\"header__title\"\n              dir={Translator.getDirection(this.state.lang)}\n            >\n              {Translator.translate(\"GROUPS\", this.state.lang)}\n            </h4>\n            {createGroupBtn}\n          </div>\n          {searchGroup}\n          {messageContainer}\n          <div\n            css={groupListStyle()}\n            className=\"groups__list\"\n            onScroll={this.handleScroll}\n            ref={(el) => (this.groupListRef = el)}\n          >\n            {groups}\n          </div>\n        </div>\n        {createGroup}\n        <CometChatToastNotification\n          ref={(el) => (this.toastRef = el)}\n          context={this.getContext()}\n        />\n      </React.Fragment>\n    );\n\n    let groupListWrapper = groupListTemplate;\n    //if used as a standalone component, add errorboundary and context provider\n    if (this.props._parent === \"\") {\n      groupListWrapper = (\n        <CometChatContextProvider ref={(el) => (this.contextProviderRef = el)}>\n          {groupListTemplate}\n        </CometChatContextProvider>\n      );\n    }\n\n    return groupListWrapper;\n  }\n}\n\n// Specifies the default values for props:\nCometChatGroupList.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  onItemClick: () => {},\n  _parent: \"\",\n};\n\nCometChatGroupList.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  onItemClick: PropTypes.func,\n  _parent: PropTypes.string,\n};\n\nexport { CometChatGroupList };\n"]},"metadata":{},"sourceType":"module"}