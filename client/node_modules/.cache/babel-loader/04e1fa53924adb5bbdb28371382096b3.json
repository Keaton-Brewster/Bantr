{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/CometChatUI/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatNavBar } from \"./CometChatNavBar\";\nimport { CometChatMessages } from \"../Messages\";\nimport { CometChatIncomingCall, CometChatIncomingDirectCall } from \"../Calls\";\nimport { CometChatContextProvider } from \"../../util/CometChatContext\";\nimport * as enums from \"../../util/enums.js\";\nimport { theme } from \"../../resources/theme\";\nimport Translator from \"../../resources/localization/translator\";\nimport { unifiedStyle, unifiedSidebarStyle, unifiedMainStyle } from \"./style\";\n\nclass CometChatUI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loggedInUser = null;\n\n    this.navBarAction = (action, type, item) => {\n      switch (action) {\n        case enums.ACTIONS[\"ITEM_CLICKED\"]:\n          this.itemClicked(item, type);\n          break;\n\n        case enums.ACTIONS[\"TOGGLE_SIDEBAR\"]:\n          this.toggleSideBar();\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.itemClicked = (item, type) => {\n      this.contextProviderRef.setTypeAndItem(type, item);\n      this.toggleSideBar();\n    };\n\n    this.actionHandler = (action, item, count, ...otherProps) => {\n      switch (action) {\n        case enums.ACTIONS[\"TOGGLE_SIDEBAR\"]:\n          this.toggleSideBar();\n          break;\n\n        case enums.GROUP_MEMBER_SCOPE_CHANGED:\n        case enums.GROUP_MEMBER_KICKED:\n        case enums.GROUP_MEMBER_BANNED:\n          this.groupUpdated(action, item, count, ...otherProps);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.toggleSideBar = () => {\n      const sidebarview = this.state.sidebarview;\n      this.setState({\n        sidebarview: !sidebarview\n      });\n    };\n\n    this.groupUpdated = (key, message, group, options) => {\n      switch (key) {\n        case enums.GROUP_MEMBER_BANNED:\n        case enums.GROUP_MEMBER_KICKED:\n          {\n            if (this.contextProviderRef.state.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.contextProviderRef.state.item.guid === group.guid && options.user.uid === this.loggedInUser.uid) {\n              this.contextProviderRef.setItem({});\n              this.contextProviderRef.setType(\"\");\n            }\n\n            break;\n          }\n\n        case enums.GROUP_MEMBER_SCOPE_CHANGED:\n          {\n            if (this.contextProviderRef.state.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.contextProviderRef.state.item.guid === group.guid && options.user.uid === this.loggedInUser.uid) {\n              const newObject = Object.assign({}, this.contextProviderRef.state.item, {\n                scope: options[\"scope\"]\n              });\n              this.contextProviderRef.setItem(newObject);\n              this.contextProviderRef.setType(CometChat.ACTION_TYPE.TYPE_GROUP);\n            }\n\n            break;\n          }\n\n        default:\n          break;\n      }\n    };\n\n    this.state = {\n      sidebarview: false,\n      lang: props.lang\n    };\n    this.navBarRef = /*#__PURE__*/React.createRef();\n    this.contextProviderRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.chatWithUser.length === 0 && this.props.chatWithGroup.length === 0) {\n      this.toggleSideBar();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.lang !== this.props.lang) {\n      this.setState({\n        lang: this.props.lang\n      });\n    }\n  }\n\n  render() {\n    let messageScreen = jsx(CometChatMessages, {\n      theme: this.props.theme,\n      lang: this.state.lang,\n      _parent: \"unified\",\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    });\n    return jsx(CometChatContextProvider, {\n      ref: el => this.contextProviderRef = el,\n      user: this.props.chatWithUser,\n      group: this.props.chatWithGroup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, jsx(\"div\", {\n      css: unifiedStyle(this.props),\n      className: \"cometchat cometchat--unified\",\n      dir: Translator.getDirection(this.state.lang),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, jsx(\"div\", {\n      css: unifiedSidebarStyle(this.state, this.props),\n      className: \"unified__sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, jsx(CometChatNavBar, {\n      ref: el => this.navBarRef = el,\n      theme: this.props.theme,\n      lang: this.state.lang,\n      actionGenerated: this.navBarAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    })), jsx(\"div\", {\n      css: unifiedMainStyle(this.state, this.props),\n      className: \"unified__main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }, messageScreen), jsx(CometChatIncomingCall, {\n      theme: this.props.theme,\n      lang: this.state.lang,\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }), jsx(CometChatIncomingDirectCall, {\n      theme: this.props.theme,\n      lang: this.state.lang,\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatUI.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  chatWithUser: \"\",\n  chatWithGroup: \"\"\n};\nCometChatUI.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  chatWithUser: PropTypes.string,\n  chatWithGroup: PropTypes.string\n};\nexport { CometChatUI };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/CometChatUI/index.js"],"names":["React","jsx","PropTypes","CometChat","CometChatNavBar","CometChatMessages","CometChatIncomingCall","CometChatIncomingDirectCall","CometChatContextProvider","enums","theme","Translator","unifiedStyle","unifiedSidebarStyle","unifiedMainStyle","CometChatUI","Component","constructor","props","loggedInUser","navBarAction","action","type","item","ACTIONS","itemClicked","toggleSideBar","contextProviderRef","setTypeAndItem","actionHandler","count","otherProps","GROUP_MEMBER_SCOPE_CHANGED","GROUP_MEMBER_KICKED","GROUP_MEMBER_BANNED","groupUpdated","sidebarview","state","setState","key","message","group","options","ACTION_TYPE","TYPE_GROUP","guid","user","uid","setItem","setType","newObject","Object","assign","scope","lang","navBarRef","createRef","componentDidMount","chatWithUser","length","chatWithGroup","componentDidUpdate","prevProps","render","messageScreen","el","getDirection","defaultProps","getDefaultLanguage","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { CometChatNavBar } from \"./CometChatNavBar\";\nimport { CometChatMessages } from \"../Messages\";\nimport { CometChatIncomingCall, CometChatIncomingDirectCall } from \"../Calls\";\n\nimport { CometChatContextProvider } from \"../../util/CometChatContext\";\nimport * as enums from \"../../util/enums.js\";\nimport { theme } from \"../../resources/theme\";\nimport Translator from \"../../resources/localization/translator\";\n\nimport { unifiedStyle, unifiedSidebarStyle, unifiedMainStyle } from \"./style\";\n\nclass CometChatUI extends React.Component {\n  loggedInUser = null;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      sidebarview: false,\n      lang: props.lang,\n    };\n\n    this.navBarRef = React.createRef();\n    this.contextProviderRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (\n      this.props.chatWithUser.length === 0 &&\n      this.props.chatWithGroup.length === 0\n    ) {\n      this.toggleSideBar();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.lang !== this.props.lang) {\n      this.setState({ lang: this.props.lang });\n    }\n  }\n\n  navBarAction = (action, type, item) => {\n    switch (action) {\n      case enums.ACTIONS[\"ITEM_CLICKED\"]:\n        this.itemClicked(item, type);\n        break;\n      case enums.ACTIONS[\"TOGGLE_SIDEBAR\"]:\n        this.toggleSideBar();\n        break;\n      default:\n        break;\n    }\n  };\n\n  itemClicked = (item, type) => {\n    this.contextProviderRef.setTypeAndItem(type, item);\n    this.toggleSideBar();\n  };\n\n  actionHandler = (action, item, count, ...otherProps) => {\n    switch (action) {\n      case enums.ACTIONS[\"TOGGLE_SIDEBAR\"]:\n        this.toggleSideBar();\n        break;\n      case enums.GROUP_MEMBER_SCOPE_CHANGED:\n      case enums.GROUP_MEMBER_KICKED:\n      case enums.GROUP_MEMBER_BANNED:\n        this.groupUpdated(action, item, count, ...otherProps);\n        break;\n      default:\n        break;\n    }\n  };\n\n  toggleSideBar = () => {\n    const sidebarview = this.state.sidebarview;\n    this.setState({ sidebarview: !sidebarview });\n  };\n\n  /**\n\t If the logged in user is banned, kicked or scope changed, update the chat window accordingly\n\t */\n  groupUpdated = (key, message, group, options) => {\n    switch (key) {\n      case enums.GROUP_MEMBER_BANNED:\n      case enums.GROUP_MEMBER_KICKED: {\n        if (\n          this.contextProviderRef.state.type ===\n            CometChat.ACTION_TYPE.TYPE_GROUP &&\n          this.contextProviderRef.state.item.guid === group.guid &&\n          options.user.uid === this.loggedInUser.uid\n        ) {\n          this.contextProviderRef.setItem({});\n          this.contextProviderRef.setType(\"\");\n        }\n        break;\n      }\n      case enums.GROUP_MEMBER_SCOPE_CHANGED: {\n        if (\n          this.contextProviderRef.state.type ===\n            CometChat.ACTION_TYPE.TYPE_GROUP &&\n          this.contextProviderRef.state.item.guid === group.guid &&\n          options.user.uid === this.loggedInUser.uid\n        ) {\n          const newObject = Object.assign(\n            {},\n            this.contextProviderRef.state.item,\n            { scope: options[\"scope\"] }\n          );\n          this.contextProviderRef.setItem(newObject);\n          this.contextProviderRef.setType(CometChat.ACTION_TYPE.TYPE_GROUP);\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  render() {\n    let messageScreen = (\n      <CometChatMessages\n        theme={this.props.theme}\n        lang={this.state.lang}\n        _parent=\"unified\"\n        actionGenerated={this.actionHandler}\n      />\n    );\n\n    return (\n      <CometChatContextProvider\n        ref={(el) => (this.contextProviderRef = el)}\n        user={this.props.chatWithUser}\n        group={this.props.chatWithGroup}\n      >\n        <div\n          css={unifiedStyle(this.props)}\n          className=\"cometchat cometchat--unified\"\n          dir={Translator.getDirection(this.state.lang)}\n        >\n          <div\n            css={unifiedSidebarStyle(this.state, this.props)}\n            className=\"unified__sidebar\"\n          >\n            <CometChatNavBar\n              ref={(el) => (this.navBarRef = el)}\n              theme={this.props.theme}\n              lang={this.state.lang}\n              actionGenerated={this.navBarAction}\n            />\n          </div>\n          <div\n            css={unifiedMainStyle(this.state, this.props)}\n            className=\"unified__main\"\n          >\n            {messageScreen}\n          </div>\n          <CometChatIncomingCall\n            theme={this.props.theme}\n            lang={this.state.lang}\n            actionGenerated={this.actionHandler}\n          />\n          <CometChatIncomingDirectCall\n            theme={this.props.theme}\n            lang={this.state.lang}\n            actionGenerated={this.actionHandler}\n          />\n        </div>\n      </CometChatContextProvider>\n    );\n  }\n}\n\n// Specifies the default values for props:\nCometChatUI.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  chatWithUser: \"\",\n  chatWithGroup: \"\",\n};\n\nCometChatUI.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  chatWithUser: PropTypes.string,\n  chatWithGroup: PropTypes.string,\n};\n\nexport { CometChatUI };\n"]},"metadata":{},"sourceType":"module"}