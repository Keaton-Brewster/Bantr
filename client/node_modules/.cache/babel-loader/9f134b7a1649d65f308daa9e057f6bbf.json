{"ast":null,"code":"import _extends from \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Groups/CometChatGroupDetails/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { GroupDetailManager } from \"./controller\";\nimport { CometChatConfirmDialog, CometChatToastNotification } from \"../../Shared\";\nimport { CometChatViewGroupMemberList, CometChatAddGroupMemberList, CometChatBanGroupMemberList, CometChatTransferOwnershipMemberList } from \"../../Groups\";\nimport { CometChatSharedMediaView } from \"../../Shared/CometChatSharedMediaView/index.js\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { theme } from \"../../../resources/theme\";\nimport { detailStyle, headerStyle, headerCloseStyle, headerTitleStyle, detailPaneStyle, sectionStyle, sectionHeaderStyle, sectionContentStyle, contentItemStyle, itemLinkStyle } from \"./style\";\nimport navigateIcon from \"./resources/back.svg\";\n\nclass CometChatGroupDetails extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.enableAddGroupMembers = () => {\n      this.context.FeatureRestriction.isAddingGroupMembersEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableAddGroupMembers && this._isMounted) {\n          this.setState({\n            enableAddGroupMembers: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableAddGroupMembers !== false && this._isMounted) {\n          this.setState({\n            enableAddGroupMembers: false\n          });\n        }\n      });\n    };\n\n    this.enableChangeScope = () => {\n      this.context.FeatureRestriction.isChangingGroupMemberScopeEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableChangeScope && this._isMounted) {\n          this.setState({\n            enableChangeScope: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableChangeScope !== false && this._isMounted) {\n          this.setState({\n            enableChangeScope: false\n          });\n        }\n      });\n    };\n\n    this.enableKickGroupMembers = () => {\n      this.context.FeatureRestriction.isKickingGroupMembersEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableKickGroupMembers && this._isMounted) {\n          this.setState({\n            enableKickGroupMembers: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableKickGroupMembers !== false && this._isMounted) {\n          this.setState({\n            enableKickGroupMembers: false\n          });\n        }\n      });\n    };\n\n    this.enableBanGroupMembers = () => {\n      this.context.FeatureRestriction.isBanningGroupMembersEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableBanGroupMembers && this._isMounted) {\n          this.setState({\n            enableBanGroupMembers: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableBanGroupMembers !== false && this._isMounted) {\n          this.setState({\n            enableBanGroupMembers: false\n          });\n        }\n      });\n    };\n\n    this.enableDeleteGroup = () => {\n      this.context.FeatureRestriction.isGroupDeletionEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableDeleteGroup && this._isMounted) {\n          this.setState({\n            enableDeleteGroup: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableDeleteGroup !== false && this._isMounted) {\n          this.setState({\n            enableDeleteGroup: false\n          });\n        }\n      });\n    };\n\n    this.enableViewGroupMembers = () => {\n      this.context.FeatureRestriction.isViewingGroupMembersEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableViewGroupMembers && this._isMounted) {\n          this.setState({\n            enableViewGroupMembers: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableViewGroupMembers !== false && this._isMounted) {\n          this.setState({\n            enableViewGroupMembers: false\n          });\n        }\n      });\n    };\n\n    this.enableLeaveGroup = () => {\n      this.context.FeatureRestriction.isJoinLeaveGroupsEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableLeaveGroup && this._isMounted) {\n          this.setState({\n            enableLeaveGroup: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableLeaveGroup !== false && this._isMounted) {\n          this.setState({\n            enableLeaveGroup: false\n          });\n        }\n      });\n    };\n\n    this.enableSharedMedia = () => {\n      this.context.FeatureRestriction.isSharedMediaEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableSharedMedia && this._isMounted) {\n          this.setState({\n            enableSharedMedia: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableSharedMedia !== false && this._isMounted) {\n          this.setState({\n            enableSharedMedia: false\n          });\n        }\n      });\n    };\n\n    this.enableBlockUser = () => {\n      this.context.FeatureRestriction.isBlockUserEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableBlockUser && this._isMounted) {\n          this.setState({\n            enableBlockUser: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableBlockUser !== false && this._isMounted) {\n          this.setState({\n            enableBlockUser: false\n          });\n        }\n      });\n    };\n\n    this.groupUpdated = (key, message, group, options) => {\n      const guid = this.context.item.guid;\n\n      if (guid !== group.guid) {\n        return false;\n      }\n\n      switch (key) {\n        case enums.USER_ONLINE:\n        case enums.USER_OFFLINE:\n          this.updateGroupMemberPresence(options.user);\n          break;\n\n        case enums.GROUP_MEMBER_ADDED:\n        case enums.GROUP_MEMBER_JOINED:\n          {\n            const member = options.user;\n            const updatedMember = Object.assign({}, member, {\n              scope: CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT\n            });\n            this.addParticipants([updatedMember], false);\n          }\n          break;\n\n        case enums.GROUP_MEMBER_LEFT:\n        case enums.GROUP_MEMBER_KICKED:\n          {\n            const member = options.user;\n            this.removeParticipants(member, false);\n          }\n          break;\n\n        case enums.GROUP_MEMBER_BANNED:\n          {\n            const member = options.user; //this.setAvatar(member);\n\n            this.banMembers([member]);\n            this.removeParticipants(member, false);\n          }\n          break;\n\n        case enums.GROUP_MEMBER_UNBANNED:\n          {\n            const member = options.user;\n            this.unbanMembers([member]);\n          }\n          break;\n\n        case enums.GROUP_MEMBER_SCOPE_CHANGED:\n          {\n            const member = options.user;\n            const updatedMember = Object.assign({}, member, {\n              scope: options[\"scope\"]\n            });\n            this.updateParticipants(updatedMember);\n          }\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.updateGroupMemberPresence = member => {\n      let memberlist = [...this.context.groupMembers]; //search for user\n\n      let memberKey = memberlist.findIndex((m, k) => m.uid === member.uid); //if found in the list, update user object\n\n      if (memberKey > -1) {\n        let memberObj = memberlist[memberKey];\n        let newMemberObj = Object.assign({}, memberObj, member);\n        memberlist.splice(memberKey, 1, newMemberObj);\n        this.context.updateGroupMembers(memberlist);\n      }\n\n      let bannedmemberlist = [...this.context.bannedGroupMembers]; //search for user\n\n      let bannedMemberKey = bannedmemberlist.findIndex((m, k) => m.uid === member.uid); //if found in the list, update user object\n\n      if (bannedMemberKey > -1) {\n        let bannedMemberObj = bannedmemberlist[bannedMemberKey];\n        let newBannedMemberObj = Object.assign({}, bannedMemberObj, member);\n        bannedmemberlist.splice(bannedMemberKey, 1, newBannedMemberObj);\n        this.updateBannedGroupMembers(bannedmemberlist);\n      }\n    };\n\n    this.getGroupMembers = () => {\n      const administratorslist = [],\n            moderatorslist = [];\n      this.GroupDetailManager.fetchNextGroupMembers().then(groupMembers => {\n        groupMembers.forEach(member => {\n          if (member.scope === CometChat.GROUP_MEMBER_SCOPE.ADMIN) {\n            administratorslist.push(member);\n          }\n\n          if (member.scope === CometChat.GROUP_MEMBER_SCOPE.MODERATOR) {\n            moderatorslist.push(member);\n          }\n        });\n        this.context.setAllGroupMembers(groupMembers, administratorslist, moderatorslist);\n      }).catch(error => this.toastRef.setError(\"SOMETHING_WRONG\"));\n    };\n\n    this.getBannedGroupMembers = () => {\n      if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT) {\n        return false;\n      }\n\n      this.GroupDetailManager.fetchNextBannedGroupMembers().then(bannedMembers => {\n        this.context.setBannedGroupMembers(bannedMembers);\n      }).catch(error => this.toastRef.setError(\"SOMETHING_WRONG\"));\n    };\n\n    this.deleteGroup = () => {\n      this.setState({\n        showDeleteConfirmDialog: true,\n        showLeaveGroupConfirmDialog: false,\n        showTransferOwnershipConfirmDialog: false\n      });\n    };\n\n    this.onDeleteConfirm = e => {\n      const optionSelected = e.target.value;\n      this.setState({\n        showDeleteConfirmDialog: false\n      });\n\n      if (optionSelected === \"no\") {\n        return false;\n      }\n\n      const guid = this.context.item.guid;\n      CometChat.deleteGroup(guid).then(response => {\n        if (response) {\n          this.context.setToastMessage(\"success\", \"GROUP_DELETION_SUCCESS\");\n          this.context.setDeletedGroupId(guid);\n        } else {\n          this.toastRef.setError(\"SOMETHING_WRONG\");\n        }\n      }).catch(error => this.toastRef.setError(\"SOMETHING_WRONG\"));\n    };\n\n    this.onLeaveConfirm = e => {\n      const optionSelected = e.target.value;\n      this.setState({\n        showLeaveGroupConfirmDialog: false\n      });\n\n      if (optionSelected === \"no\") {\n        return false;\n      }\n\n      const guid = this.context.item.guid;\n      CometChat.leaveGroup(guid).then(response => {\n        if (response) {\n          this.context.setLeftGroupId(guid);\n        } else {\n          this.toastRef.setError(\"SOMETHING_WRONG\");\n        }\n      }).catch(error => this.toastRef.setError(\"SOMETHING_WRONG\"));\n    };\n\n    this.onTransferConfirm = e => {\n      const optionSelected = e.target.value;\n      this.setState({\n        showTransferOwnershipConfirmDialog: false\n      });\n\n      if (optionSelected === \"no\") {\n        return false;\n      }\n\n      this.setState({\n        transferOwnership: true\n      });\n    };\n\n    this.leaveGroup = () => {\n      var _this$context$item, _this$state$loggedInU;\n\n      /**\n       * If loggeduser is the owner of the group; ask him to transfer ownership before leaving the group else show leave group confirmtion dialog\n       */\n      if (((_this$context$item = this.context.item) === null || _this$context$item === void 0 ? void 0 : _this$context$item.owner) === ((_this$state$loggedInU = this.state.loggedInUser) === null || _this$state$loggedInU === void 0 ? void 0 : _this$state$loggedInU.uid)) {\n        this.setState({\n          showTransferOwnershipConfirmDialog: true,\n          showDeleteConfirmDialog: false,\n          showLeaveGroupConfirmDialog: false\n        });\n      } else {\n        this.setState({\n          showLeaveGroupConfirmDialog: true,\n          showTransferOwnershipConfirmDialog: false,\n          showDeleteConfirmDialog: false\n        });\n      }\n    };\n\n    this.clickHandler = (action, flag) => {\n      switch (action) {\n        case \"viewmember\":\n          this.setState({\n            viewMember: flag\n          });\n          break;\n\n        case \"addmember\":\n          this.setState({\n            addMember: flag\n          });\n          break;\n\n        case \"banmember\":\n          this.setState({\n            banMember: flag\n          });\n          break;\n\n        case \"transferownership\":\n          this.setState({\n            transferOwnership: flag\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.membersActionHandler = (action, members) => {\n      switch (action) {\n        case enums.ACTIONS[\"FETCH_GROUP_MEMBERS\"]:\n          this.getGroupMembers();\n          break;\n\n        case enums.ACTIONS[\"FETCH_BANNED_GROUP_MEMBERS\"]:\n          this.getBannedGroupMembers();\n          break;\n\n        case enums.ACTIONS[\"UNBAN_GROUP_MEMBER_SUCCESS\"]:\n          this.unbanMembers(members);\n          break;\n\n        case enums.ACTIONS[\"ADD_GROUP_MEMBER_SUCCESS\"]:\n          this.addParticipants(members);\n          break;\n\n        case enums.ACTIONS[\"BAN_GROUPMEMBER_SUCCESS\"]:\n        case enums.ACTIONS[\"KICK_GROUPMEMBER_SUCCESS\"]:\n          this.removeParticipants(members);\n          break;\n\n        case enums.ACTIONS[\"SCOPECHANGE_GROUPMEMBER_SUCCESS\"]:\n          this.updateParticipants(members);\n          break;\n\n        case enums.ACTIONS[\"OWNERSHIP_TRANSFERRED\"]:\n          this.updateOwnership(members);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.banMembers = members => {\n      this.context.setBannedGroupMembers(members);\n    };\n\n    this.unbanMembers = members => {\n      const bannedMembers = [...this.context.bannedGroupMembers];\n      const unbannedMembers = [];\n      const filteredBannedMembers = bannedMembers.filter(bannedmember => {\n        const found = members.find(member => bannedmember.uid === member.uid);\n\n        if (found) {\n          unbannedMembers.push(found);\n          return false;\n        }\n\n        return true;\n      });\n      this.props.actionGenerated(enums.ACTIONS[\"UNBAN_GROUP_MEMBER_SUCCESS\"], unbannedMembers);\n      this.context.updateBannedGroupMembers(filteredBannedMembers);\n    };\n\n    this.addParticipants = (members, triggerUpdate = true) => {\n      this.context.setGroupMembers(members);\n      this.props.actionGenerated(enums.ACTIONS[\"ADD_GROUP_MEMBER_SUCCESS\"], members);\n\n      if (triggerUpdate) {\n        const newItem = { ...this.context.item,\n          membersCount: this.context.groupMembers.length\n        };\n        this.context.setItem(newItem);\n      }\n    };\n\n    this.removeParticipants = (member, triggerUpdate = true) => {\n      const groupmembers = [...this.context.groupMembers];\n      const filteredMembers = groupmembers.filter(groupmember => {\n        if (groupmember.uid === member.uid) {\n          return false;\n        }\n\n        return true;\n      });\n      this.context.updateGroupMembers(filteredMembers);\n\n      if (triggerUpdate) {\n        const newItem = { ...this.context.item,\n          membersCount: filteredMembers.length\n        };\n        this.context.setItem(newItem);\n      }\n    };\n\n    this.updateParticipants = updatedMember => {\n      const memberlist = [...this.context.groupMembers];\n      const memberKey = memberlist.findIndex(member => member.uid === updatedMember.uid);\n\n      if (memberKey > -1) {\n        const memberObj = memberlist[memberKey];\n        const newMemberObj = Object.assign({}, memberObj, updatedMember, {\n          scope: updatedMember[\"scope\"]\n        });\n        memberlist.splice(memberKey, 1, newMemberObj);\n        this.props.actionGenerated(enums.ACTIONS[\"SCOPECHANGE_GROUPMEMBER_SUCCESS\"], [newMemberObj]);\n        this.context.updateGroupMembers(memberlist);\n      }\n    };\n\n    this.updateOwnership = uid => {\n      const item = { ...this.context.item,\n        owner: uid\n      };\n      const type = CometChat.RECEIVER_TYPE.GROUP;\n      this.setState({\n        transferOwnership: false\n      });\n      this.context.setTypeAndItem(type, item);\n    };\n\n    this._isMounted = false;\n    this.state = {\n      loggedInUser: null,\n      memberlist: [],\n      bannedmemberlist: [],\n      administratorslist: [],\n      moderatorslist: [],\n      viewMember: false,\n      addMember: false,\n      banMember: false,\n      addAdministrator: false,\n      addModerator: false,\n      enableAddGroupMembers: false,\n      enableChangeScope: false,\n      enableKickGroupMembers: false,\n      enableBanGroupMembers: false,\n      enableDeleteGroup: false,\n      enableViewGroupMembers: false,\n      enableLeaveGroup: false,\n      enableSharedMedia: false,\n      showDeleteConfirmDialog: false,\n      showLeaveGroupConfirmDialog: false,\n      showTransferOwnershipConfirmDialog: false,\n      transferOwnership: false\n    };\n    this.toastRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    CometChat.getLoggedinUser().then(user => {\n      if (this._isMounted) {\n        this.setState({\n          loggedInUser: user\n        });\n      }\n    }).catch(error => this.toastRef.setError(\"SOMETHING_WRONG\"));\n    this._isMounted = true;\n    this.context.clearGroupMembers();\n    this.item = this.context.item;\n    const guid = this.context.item.guid;\n    this.GroupDetailManager = new GroupDetailManager(guid);\n    this.getGroupMembers();\n    this.getBannedGroupMembers();\n    this.GroupDetailManager.attachListeners(this.groupUpdated);\n    this.enableAddGroupMembers();\n    this.enableChangeScope();\n    this.enableKickGroupMembers();\n    this.enableBanGroupMembers();\n    this.enableViewGroupMembers();\n    this.enableDeleteGroup();\n    this.enableLeaveGroup();\n    this.enableSharedMedia();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.item.guid !== this.context.item.guid) {\n      this.context.clearGroupMembers();\n      const guid = this.context.item.guid;\n      this.GroupDetailManager.removeListeners();\n      this.GroupDetailManager = new GroupDetailManager(guid);\n      this.getGroupMembers();\n      this.getBannedGroupMembers();\n      this.GroupDetailManager.attachListeners(this.groupUpdated);\n    }\n\n    this.item = this.context.item;\n    this.enableAddGroupMembers();\n    this.enableChangeScope();\n    this.enableKickGroupMembers();\n    this.enableBanGroupMembers();\n    this.enableViewGroupMembers();\n    this.enableDeleteGroup();\n    this.enableLeaveGroup();\n    this.enableSharedMedia();\n  }\n\n  componentWillUnmount() {\n    this.GroupDetailManager.removeListeners();\n    this.GroupDetailManager = null;\n    this._isMounted = false;\n  }\n\n  render() {\n    var _this$context, _this$context$item2;\n\n    if (this.state.loggedInUser === null) {\n      return null;\n    }\n\n    let viewMembersBtn = jsx(\"div\", {\n      css: contentItemStyle(),\n      className: \"content__item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 7\n      }\n    }, jsx(\"div\", {\n      css: itemLinkStyle(this.context, 0),\n      className: \"item__link\",\n      onClick: () => this.clickHandler(\"viewmember\", true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 9\n      }\n    }, Translator.translate(\"VIEW_MEMBERS\", this.context.language)));\n    let addMembersBtn = null,\n        deleteGroupBtn = null,\n        bannedMembersBtn = null;\n\n    if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.ADMIN) {\n      addMembersBtn = jsx(\"div\", {\n        css: contentItemStyle(),\n        className: \"content__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 9\n        }\n      }, jsx(\"div\", {\n        css: itemLinkStyle(this.context, 0),\n        className: \"item__link\",\n        onClick: () => this.clickHandler(\"addmember\", true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }\n      }, Translator.translate(\"ADD_MEMBERS\", this.context.language)));\n      deleteGroupBtn = jsx(\"div\", {\n        css: contentItemStyle(),\n        className: \"content__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 9\n        }\n      }, jsx(\"span\", {\n        css: itemLinkStyle(this.context, 1),\n        className: \"item__link\",\n        onClick: this.deleteGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 11\n        }\n      }, Translator.translate(\"DELETE_AND_EXIT\", this.context.language)));\n    }\n\n    if (this.context.item.scope !== CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT) {\n      bannedMembersBtn = jsx(\"div\", {\n        css: contentItemStyle(),\n        className: \"content__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 9\n        }\n      }, jsx(\"div\", {\n        css: itemLinkStyle(this.context, 0),\n        className: \"item__link\",\n        onClick: () => this.clickHandler(\"banmember\", true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 11\n        }\n      }, Translator.translate(\"BANNED_MEMBERS\", this.context.language)));\n    }\n\n    let leaveGroupBtn = jsx(\"div\", {\n      css: contentItemStyle(),\n      className: \"content__item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 7\n      }\n    }, jsx(\"span\", {\n      css: itemLinkStyle(this.context, 0),\n      className: \"item__link\",\n      onClick: this.leaveGroup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 9\n      }\n    }, Translator.translate(\"LEAVE_GROUP\", this.context.language)));\n    let sharedmediaView = jsx(CometChatSharedMediaView, {\n      containerHeight: \"225px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 27\n      }\n    });\n\n    if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT) {\n      //if viewing group membersfeature is disabled\n      if (this.state.enableViewGroupMembers === false) {\n        viewMembersBtn = null;\n      }\n    } else if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.MODERATOR || this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.ADMIN) {\n      if (this.state.enableViewGroupMembers === false && this.state.enableKickGroupMembers === false && this.state.enableBanGroupMembers === false && this.state.enableChangeScope === false) {\n        //if viewing, kicking/banning, promoting/demoting group membersare feature is disabled\n        viewMembersBtn = null;\n      }\n    } //if adding group members feature is disabled\n\n\n    if (this.state.enableAddGroupMembers === false) {\n      addMembersBtn = null;\n    } //if kicking/banning/unbanning group members feature is disabled\n\n\n    if (this.state.enableBanGroupMembers === false) {\n      bannedMembersBtn = null;\n    } //if deleting group feature is disabled\n\n\n    if (this.state.enableDeleteGroup === false) {\n      deleteGroupBtn = null;\n    } //if leaving group feature is disabled\n\n\n    if (this.state.enableLeaveGroup === false || ((_this$context = this.context) === null || _this$context === void 0 ? void 0 : (_this$context$item2 = _this$context.item) === null || _this$context$item2 === void 0 ? void 0 : _this$context$item2.membersCount) === 1) {\n      leaveGroupBtn = null;\n    } //if viewing shared media group feature is disabled\n\n\n    if (this.state.enableSharedMedia === false) {\n      sharedmediaView = null;\n    }\n\n    let members = jsx(\"div\", {\n      css: sectionStyle(),\n      className: \"section section__members\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 7\n      }\n    }, jsx(\"h6\", {\n      css: sectionHeaderStyle(this.context),\n      className: \"section__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 9\n      }\n    }, Translator.translate(\"MEMBERS\", this.context.language)), jsx(\"div\", {\n      css: sectionContentStyle(),\n      className: \"section__content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 9\n      }\n    }, viewMembersBtn, addMembersBtn, bannedMembersBtn));\n    let options = jsx(\"div\", {\n      css: sectionStyle(),\n      className: \"section section__options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 7\n      }\n    }, jsx(\"h6\", {\n      css: sectionHeaderStyle(this.context),\n      className: \"section__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 9\n      }\n    }, Translator.translate(\"OPTIONS\", this.context.language)), jsx(\"div\", {\n      css: sectionContentStyle(),\n      className: \"section__content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 9\n      }\n    }, leaveGroupBtn, deleteGroupBtn));\n\n    if (viewMembersBtn === null && addMembersBtn === null && bannedMembersBtn === null) {\n      members = null;\n    }\n\n    if (leaveGroupBtn === null && deleteGroupBtn === null) {\n      options = null;\n    }\n\n    let viewMembers = null;\n\n    if (this.state.viewMember) {\n      viewMembers = jsx(CometChatViewGroupMemberList, {\n        loggedinuser: this.state.loggedInUser,\n        enableChangeScope: this.state.enableChangeScope,\n        enableKickGroupMembers: this.state.enableKickGroupMembers,\n        enableBanGroupMembers: this.state.enableBanGroupMembers,\n        close: () => this.clickHandler(\"viewmember\", false),\n        actionGenerated: this.membersActionHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 9\n        }\n      });\n    }\n\n    let addMembers = null;\n\n    if (this.state.addMember) {\n      addMembers = jsx(CometChatAddGroupMemberList, {\n        close: () => this.clickHandler(\"addmember\", false),\n        actionGenerated: this.membersActionHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 9\n        }\n      });\n    }\n\n    let bannedMembers = null;\n\n    if (this.state.banMember) {\n      bannedMembers = jsx(CometChatBanGroupMemberList, {\n        loggedinuser: this.state.loggedInUser,\n        close: () => this.clickHandler(\"banmember\", false),\n        actionGenerated: this.membersActionHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 9\n        }\n      });\n    }\n\n    let showDeleteConfirmDialog = null;\n\n    if (this.state.showDeleteConfirmDialog) {\n      showDeleteConfirmDialog = jsx(CometChatConfirmDialog, _extends({}, this.props, {\n        onClick: this.onDeleteConfirm,\n        message: Translator.translate(\"DELETE_CONFIRM\", this.context.language),\n        confirmButtonText: Translator.translate(\"DELETE\", this.context.language),\n        cancelButtonText: Translator.translate(\"CANCEL\", this.context.language),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    let showLeaveGroupConfirmDialog = null;\n\n    if (this.state.showLeaveGroupConfirmDialog) {\n      showLeaveGroupConfirmDialog = jsx(CometChatConfirmDialog, _extends({}, this.props, {\n        onClick: this.onLeaveConfirm,\n        message: Translator.translate(\"LEAVE_CONFIRM\", this.context.language),\n        confirmButtonText: Translator.translate(\"LEAVE\", this.context.language),\n        cancelButtonText: Translator.translate(\"CANCEL\", this.context.language),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    let showTransferOwnershipConfirmDialog = null;\n\n    if (this.state.showTransferOwnershipConfirmDialog) {\n      showTransferOwnershipConfirmDialog = jsx(CometChatConfirmDialog, _extends({}, this.props, {\n        onClick: this.onTransferConfirm,\n        message: Translator.translate(\"TRANSFER_CONFIRM\", this.context.language),\n        confirmButtonText: Translator.translate(\"TRANSFER\", this.context.language),\n        cancelButtonText: Translator.translate(\"CANCEL\", this.context.language),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    let transferOwnership = null;\n\n    if (this.state.transferOwnership) {\n      transferOwnership = jsx(CometChatTransferOwnershipMemberList, {\n        roles: this.roles,\n        loggedinuser: this.state.loggedInUser,\n        actionGenerated: this.membersActionHandler,\n        close: () => this.clickHandler(\"transferownership\", false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return jsx(\"div\", {\n      css: detailStyle(this.context),\n      className: \"detailpane\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 7\n      }\n    }, jsx(\"div\", {\n      css: headerStyle(this.context),\n      className: \"detailpane__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 903,\n        columnNumber: 9\n      }\n    }, jsx(\"div\", {\n      css: headerCloseStyle(navigateIcon, this.context),\n      className: \"header__close\",\n      onClick: () => this.props.actionGenerated(enums.ACTIONS[\"CLOSE_GROUP_DETAIL\"]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 11\n      }\n    }), jsx(\"h4\", {\n      css: headerTitleStyle(),\n      className: \"header__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 911,\n        columnNumber: 11\n      }\n    }, Translator.translate(\"DETAILS\", this.context.language))), jsx(\"div\", {\n      css: detailPaneStyle(),\n      className: \"detailpane__section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 9\n      }\n    }, members, options, sharedmediaView), viewMembers, addMembers, bannedMembers, transferOwnership, showDeleteConfirmDialog, showLeaveGroupConfirmDialog, showTransferOwnershipConfirmDialog, jsx(CometChatToastNotification, {\n      ref: el => this.toastRef = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 9\n      }\n    }));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatGroupDetails.contextType = CometChatContext;\nCometChatGroupDetails.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme\n};\nCometChatGroupDetails.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object\n};\nexport { CometChatGroupDetails };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Groups/CometChatGroupDetails/index.js"],"names":["React","jsx","PropTypes","CometChat","GroupDetailManager","CometChatConfirmDialog","CometChatToastNotification","CometChatViewGroupMemberList","CometChatAddGroupMemberList","CometChatBanGroupMemberList","CometChatTransferOwnershipMemberList","CometChatSharedMediaView","CometChatContext","enums","Translator","theme","detailStyle","headerStyle","headerCloseStyle","headerTitleStyle","detailPaneStyle","sectionStyle","sectionHeaderStyle","sectionContentStyle","contentItemStyle","itemLinkStyle","CometChatGroupDetails","Component","constructor","props","context","enableAddGroupMembers","FeatureRestriction","isAddingGroupMembersEnabled","then","response","state","_isMounted","setState","catch","error","enableChangeScope","isChangingGroupMemberScopeEnabled","enableKickGroupMembers","isKickingGroupMembersEnabled","enableBanGroupMembers","isBanningGroupMembersEnabled","enableDeleteGroup","isGroupDeletionEnabled","enableViewGroupMembers","isViewingGroupMembersEnabled","enableLeaveGroup","isJoinLeaveGroupsEnabled","enableSharedMedia","isSharedMediaEnabled","enableBlockUser","isBlockUserEnabled","groupUpdated","key","message","group","options","guid","item","USER_ONLINE","USER_OFFLINE","updateGroupMemberPresence","user","GROUP_MEMBER_ADDED","GROUP_MEMBER_JOINED","member","updatedMember","Object","assign","scope","GROUP_MEMBER_SCOPE","PARTICIPANT","addParticipants","GROUP_MEMBER_LEFT","GROUP_MEMBER_KICKED","removeParticipants","GROUP_MEMBER_BANNED","banMembers","GROUP_MEMBER_UNBANNED","unbanMembers","GROUP_MEMBER_SCOPE_CHANGED","updateParticipants","memberlist","groupMembers","memberKey","findIndex","m","k","uid","memberObj","newMemberObj","splice","updateGroupMembers","bannedmemberlist","bannedGroupMembers","bannedMemberKey","bannedMemberObj","newBannedMemberObj","updateBannedGroupMembers","getGroupMembers","administratorslist","moderatorslist","fetchNextGroupMembers","forEach","ADMIN","push","MODERATOR","setAllGroupMembers","toastRef","setError","getBannedGroupMembers","fetchNextBannedGroupMembers","bannedMembers","setBannedGroupMembers","deleteGroup","showDeleteConfirmDialog","showLeaveGroupConfirmDialog","showTransferOwnershipConfirmDialog","onDeleteConfirm","e","optionSelected","target","value","setToastMessage","setDeletedGroupId","onLeaveConfirm","leaveGroup","setLeftGroupId","onTransferConfirm","transferOwnership","owner","loggedInUser","clickHandler","action","flag","viewMember","addMember","banMember","membersActionHandler","members","ACTIONS","updateOwnership","unbannedMembers","filteredBannedMembers","filter","bannedmember","found","find","actionGenerated","triggerUpdate","setGroupMembers","newItem","membersCount","length","setItem","groupmembers","filteredMembers","groupmember","type","RECEIVER_TYPE","GROUP","setTypeAndItem","addAdministrator","addModerator","createRef","componentDidMount","getLoggedinUser","clearGroupMembers","attachListeners","componentDidUpdate","prevProps","prevState","removeListeners","componentWillUnmount","render","viewMembersBtn","translate","language","addMembersBtn","deleteGroupBtn","bannedMembersBtn","leaveGroupBtn","sharedmediaView","viewMembers","addMembers","roles","navigateIcon","el","contextType","defaultProps","lang","getDefaultLanguage","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { GroupDetailManager } from \"./controller\";\n\nimport {\n  CometChatConfirmDialog,\n  CometChatToastNotification,\n} from \"../../Shared\";\nimport {\n  CometChatViewGroupMemberList,\n  CometChatAddGroupMemberList,\n  CometChatBanGroupMemberList,\n  CometChatTransferOwnershipMemberList,\n} from \"../../Groups\";\n\nimport { CometChatSharedMediaView } from \"../../Shared/CometChatSharedMediaView/index.js\";\n\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\n\nimport Translator from \"../../../resources/localization/translator\";\nimport { theme } from \"../../../resources/theme\";\n\nimport {\n  detailStyle,\n  headerStyle,\n  headerCloseStyle,\n  headerTitleStyle,\n  detailPaneStyle,\n  sectionStyle,\n  sectionHeaderStyle,\n  sectionContentStyle,\n  contentItemStyle,\n  itemLinkStyle,\n} from \"./style\";\n\nimport navigateIcon from \"./resources/back.svg\";\n\nclass CometChatGroupDetails extends React.Component {\n  item;\n  static contextType = CometChatContext;\n\n  constructor(props, context) {\n    super(props, context);\n\n    this._isMounted = false;\n\n    this.state = {\n      loggedInUser: null,\n      memberlist: [],\n      bannedmemberlist: [],\n      administratorslist: [],\n      moderatorslist: [],\n      viewMember: false,\n      addMember: false,\n      banMember: false,\n      addAdministrator: false,\n      addModerator: false,\n      enableAddGroupMembers: false,\n      enableChangeScope: false,\n      enableKickGroupMembers: false,\n      enableBanGroupMembers: false,\n      enableDeleteGroup: false,\n      enableViewGroupMembers: false,\n      enableLeaveGroup: false,\n      enableSharedMedia: false,\n      showDeleteConfirmDialog: false,\n      showLeaveGroupConfirmDialog: false,\n      showTransferOwnershipConfirmDialog: false,\n      transferOwnership: false,\n    };\n\n    this.toastRef = React.createRef();\n  }\n\n  componentDidMount() {\n    CometChat.getLoggedinUser()\n      .then((user) => {\n        if (this._isMounted) {\n          this.setState({ loggedInUser: user });\n        }\n      })\n      .catch((error) => this.toastRef.setError(\"SOMETHING_WRONG\"));\n\n    this._isMounted = true;\n    this.context.clearGroupMembers();\n\n    this.item = this.context.item;\n\n    const guid = this.context.item.guid;\n    this.GroupDetailManager = new GroupDetailManager(guid);\n    this.getGroupMembers();\n    this.getBannedGroupMembers();\n    this.GroupDetailManager.attachListeners(this.groupUpdated);\n\n    this.enableAddGroupMembers();\n    this.enableChangeScope();\n    this.enableKickGroupMembers();\n    this.enableBanGroupMembers();\n    this.enableViewGroupMembers();\n    this.enableDeleteGroup();\n    this.enableLeaveGroup();\n    this.enableSharedMedia();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.item.guid !== this.context.item.guid) {\n      this.context.clearGroupMembers();\n\n      const guid = this.context.item.guid;\n      this.GroupDetailManager.removeListeners();\n      this.GroupDetailManager = new GroupDetailManager(guid);\n      this.getGroupMembers();\n      this.getBannedGroupMembers();\n      this.GroupDetailManager.attachListeners(this.groupUpdated);\n    }\n\n    this.item = this.context.item;\n    this.enableAddGroupMembers();\n    this.enableChangeScope();\n    this.enableKickGroupMembers();\n    this.enableBanGroupMembers();\n    this.enableViewGroupMembers();\n    this.enableDeleteGroup();\n    this.enableLeaveGroup();\n    this.enableSharedMedia();\n  }\n\n  componentWillUnmount() {\n    this.GroupDetailManager.removeListeners();\n    this.GroupDetailManager = null;\n    this._isMounted = false;\n  }\n\n  enableAddGroupMembers = () => {\n    this.context.FeatureRestriction.isAddingGroupMembersEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableAddGroupMembers && this._isMounted) {\n          this.setState({ enableAddGroupMembers: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableAddGroupMembers !== false && this._isMounted) {\n          this.setState({ enableAddGroupMembers: false });\n        }\n      });\n  };\n\n  enableChangeScope = () => {\n    this.context.FeatureRestriction.isChangingGroupMemberScopeEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableChangeScope && this._isMounted) {\n          this.setState({ enableChangeScope: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableChangeScope !== false && this._isMounted) {\n          this.setState({ enableChangeScope: false });\n        }\n      });\n  };\n\n  enableKickGroupMembers = () => {\n    this.context.FeatureRestriction.isKickingGroupMembersEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableKickGroupMembers && this._isMounted) {\n          this.setState({ enableKickGroupMembers: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableKickGroupMembers !== false && this._isMounted) {\n          this.setState({ enableKickGroupMembers: false });\n        }\n      });\n  };\n\n  enableBanGroupMembers = () => {\n    this.context.FeatureRestriction.isBanningGroupMembersEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableBanGroupMembers && this._isMounted) {\n          this.setState({ enableBanGroupMembers: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableBanGroupMembers !== false && this._isMounted) {\n          this.setState({ enableBanGroupMembers: false });\n        }\n      });\n  };\n\n  enableDeleteGroup = () => {\n    this.context.FeatureRestriction.isGroupDeletionEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableDeleteGroup && this._isMounted) {\n          this.setState({ enableDeleteGroup: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableDeleteGroup !== false && this._isMounted) {\n          this.setState({ enableDeleteGroup: false });\n        }\n      });\n  };\n\n  enableViewGroupMembers = () => {\n    this.context.FeatureRestriction.isViewingGroupMembersEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableViewGroupMembers && this._isMounted) {\n          this.setState({ enableViewGroupMembers: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableViewGroupMembers !== false && this._isMounted) {\n          this.setState({ enableViewGroupMembers: false });\n        }\n      });\n  };\n\n  enableLeaveGroup = () => {\n    this.context.FeatureRestriction.isJoinLeaveGroupsEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableLeaveGroup && this._isMounted) {\n          this.setState({ enableLeaveGroup: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableLeaveGroup !== false && this._isMounted) {\n          this.setState({ enableLeaveGroup: false });\n        }\n      });\n  };\n\n  enableSharedMedia = () => {\n    this.context.FeatureRestriction.isSharedMediaEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableSharedMedia && this._isMounted) {\n          this.setState({ enableSharedMedia: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableSharedMedia !== false && this._isMounted) {\n          this.setState({ enableSharedMedia: false });\n        }\n      });\n  };\n\n  enableBlockUser = () => {\n    this.context.FeatureRestriction.isBlockUserEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableBlockUser && this._isMounted) {\n          this.setState({ enableBlockUser: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableBlockUser !== false && this._isMounted) {\n          this.setState({ enableBlockUser: false });\n        }\n      });\n  };\n\n  groupUpdated = (key, message, group, options) => {\n    const guid = this.context.item.guid;\n    if (guid !== group.guid) {\n      return false;\n    }\n\n    switch (key) {\n      case enums.USER_ONLINE:\n      case enums.USER_OFFLINE:\n        this.updateGroupMemberPresence(options.user);\n        break;\n      case enums.GROUP_MEMBER_ADDED:\n      case enums.GROUP_MEMBER_JOINED:\n        {\n          const member = options.user;\n          const updatedMember = Object.assign({}, member, {\n            scope: CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT,\n          });\n\n          this.addParticipants([updatedMember], false);\n        }\n        break;\n      case enums.GROUP_MEMBER_LEFT:\n      case enums.GROUP_MEMBER_KICKED:\n        {\n          const member = options.user;\n          this.removeParticipants(member, false);\n        }\n        break;\n      case enums.GROUP_MEMBER_BANNED:\n        {\n          const member = options.user;\n          //this.setAvatar(member);\n          this.banMembers([member]);\n          this.removeParticipants(member, false);\n        }\n        break;\n      case enums.GROUP_MEMBER_UNBANNED:\n        {\n          const member = options.user;\n          this.unbanMembers([member]);\n        }\n        break;\n      case enums.GROUP_MEMBER_SCOPE_CHANGED:\n        {\n          const member = options.user;\n          const updatedMember = Object.assign({}, member, {\n            scope: options[\"scope\"],\n          });\n          this.updateParticipants(updatedMember);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  /*\n    Updating group members presence\n    */\n  updateGroupMemberPresence = (member) => {\n    let memberlist = [...this.context.groupMembers];\n    //search for user\n    let memberKey = memberlist.findIndex((m, k) => m.uid === member.uid);\n    //if found in the list, update user object\n    if (memberKey > -1) {\n      let memberObj = memberlist[memberKey];\n      let newMemberObj = Object.assign({}, memberObj, member);\n      memberlist.splice(memberKey, 1, newMemberObj);\n\n      this.context.updateGroupMembers(memberlist);\n    }\n\n    let bannedmemberlist = [...this.context.bannedGroupMembers];\n    //search for user\n    let bannedMemberKey = bannedmemberlist.findIndex(\n      (m, k) => m.uid === member.uid\n    );\n    //if found in the list, update user object\n    if (bannedMemberKey > -1) {\n      let bannedMemberObj = bannedmemberlist[bannedMemberKey];\n      let newBannedMemberObj = Object.assign({}, bannedMemberObj, member);\n      bannedmemberlist.splice(bannedMemberKey, 1, newBannedMemberObj);\n\n      this.updateBannedGroupMembers(bannedmemberlist);\n    }\n  };\n\n  getGroupMembers = () => {\n    const administratorslist = [],\n      moderatorslist = [];\n    this.GroupDetailManager.fetchNextGroupMembers()\n      .then((groupMembers) => {\n        groupMembers.forEach((member) => {\n          if (member.scope === CometChat.GROUP_MEMBER_SCOPE.ADMIN) {\n            administratorslist.push(member);\n          }\n\n          if (member.scope === CometChat.GROUP_MEMBER_SCOPE.MODERATOR) {\n            moderatorslist.push(member);\n          }\n        });\n\n        this.context.setAllGroupMembers(\n          groupMembers,\n          administratorslist,\n          moderatorslist\n        );\n      })\n      .catch((error) => this.toastRef.setError(\"SOMETHING_WRONG\"));\n  };\n\n  getBannedGroupMembers = () => {\n    if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT) {\n      return false;\n    }\n\n    this.GroupDetailManager.fetchNextBannedGroupMembers()\n      .then((bannedMembers) => {\n        this.context.setBannedGroupMembers(bannedMembers);\n      })\n      .catch((error) => this.toastRef.setError(\"SOMETHING_WRONG\"));\n  };\n\n  deleteGroup = () => {\n    this.setState({\n      showDeleteConfirmDialog: true,\n      showLeaveGroupConfirmDialog: false,\n      showTransferOwnershipConfirmDialog: false,\n    });\n  };\n\n  onDeleteConfirm = (e) => {\n    const optionSelected = e.target.value;\n    this.setState({ showDeleteConfirmDialog: false });\n\n    if (optionSelected === \"no\") {\n      return false;\n    }\n\n    const guid = this.context.item.guid;\n    CometChat.deleteGroup(guid)\n      .then((response) => {\n        if (response) {\n          this.context.setToastMessage(\"success\", \"GROUP_DELETION_SUCCESS\");\n          this.context.setDeletedGroupId(guid);\n        } else {\n          this.toastRef.setError(\"SOMETHING_WRONG\");\n        }\n      })\n      .catch((error) => this.toastRef.setError(\"SOMETHING_WRONG\"));\n  };\n\n  onLeaveConfirm = (e) => {\n    const optionSelected = e.target.value;\n    this.setState({ showLeaveGroupConfirmDialog: false });\n\n    if (optionSelected === \"no\") {\n      return false;\n    }\n\n    const guid = this.context.item.guid;\n    CometChat.leaveGroup(guid)\n      .then((response) => {\n        if (response) {\n          this.context.setLeftGroupId(guid);\n        } else {\n          this.toastRef.setError(\"SOMETHING_WRONG\");\n        }\n      })\n      .catch((error) => this.toastRef.setError(\"SOMETHING_WRONG\"));\n  };\n\n  onTransferConfirm = (e) => {\n    const optionSelected = e.target.value;\n    this.setState({ showTransferOwnershipConfirmDialog: false });\n    if (optionSelected === \"no\") {\n      return false;\n    }\n\n    this.setState({ transferOwnership: true });\n  };\n\n  leaveGroup = () => {\n    /**\n     * If loggeduser is the owner of the group; ask him to transfer ownership before leaving the group else show leave group confirmtion dialog\n     */\n    if (this.context.item?.owner === this.state.loggedInUser?.uid) {\n      this.setState({\n        showTransferOwnershipConfirmDialog: true,\n        showDeleteConfirmDialog: false,\n        showLeaveGroupConfirmDialog: false,\n      });\n    } else {\n      this.setState({\n        showLeaveGroupConfirmDialog: true,\n        showTransferOwnershipConfirmDialog: false,\n        showDeleteConfirmDialog: false,\n      });\n    }\n  };\n\n  clickHandler = (action, flag) => {\n    switch (action) {\n      case \"viewmember\":\n        this.setState({ viewMember: flag });\n        break;\n      case \"addmember\":\n        this.setState({ addMember: flag });\n        break;\n      case \"banmember\":\n        this.setState({ banMember: flag });\n        break;\n      case \"transferownership\":\n        this.setState({ transferOwnership: flag });\n        break;\n      default:\n        break;\n    }\n  };\n\n  membersActionHandler = (action, members) => {\n    switch (action) {\n      case enums.ACTIONS[\"FETCH_GROUP_MEMBERS\"]:\n        this.getGroupMembers();\n        break;\n      case enums.ACTIONS[\"FETCH_BANNED_GROUP_MEMBERS\"]:\n        this.getBannedGroupMembers();\n        break;\n      case enums.ACTIONS[\"UNBAN_GROUP_MEMBER_SUCCESS\"]:\n        this.unbanMembers(members);\n        break;\n      case enums.ACTIONS[\"ADD_GROUP_MEMBER_SUCCESS\"]:\n        this.addParticipants(members);\n        break;\n      case enums.ACTIONS[\"BAN_GROUPMEMBER_SUCCESS\"]:\n      case enums.ACTIONS[\"KICK_GROUPMEMBER_SUCCESS\"]:\n        this.removeParticipants(members);\n        break;\n      case enums.ACTIONS[\"SCOPECHANGE_GROUPMEMBER_SUCCESS\"]:\n        this.updateParticipants(members);\n        break;\n      case enums.ACTIONS[\"OWNERSHIP_TRANSFERRED\"]:\n        this.updateOwnership(members);\n        break;\n      default:\n        break;\n    }\n  };\n\n  banMembers = (members) => {\n    this.context.setBannedGroupMembers(members);\n  };\n\n  unbanMembers = (members) => {\n    const bannedMembers = [...this.context.bannedGroupMembers];\n    const unbannedMembers = [];\n\n    const filteredBannedMembers = bannedMembers.filter((bannedmember) => {\n      const found = members.find((member) => bannedmember.uid === member.uid);\n      if (found) {\n        unbannedMembers.push(found);\n        return false;\n      }\n      return true;\n    });\n\n    this.props.actionGenerated(\n      enums.ACTIONS[\"UNBAN_GROUP_MEMBER_SUCCESS\"],\n      unbannedMembers\n    );\n    this.context.updateBannedGroupMembers(filteredBannedMembers);\n  };\n\n  addParticipants = (members, triggerUpdate = true) => {\n    this.context.setGroupMembers(members);\n\n    this.props.actionGenerated(\n      enums.ACTIONS[\"ADD_GROUP_MEMBER_SUCCESS\"],\n      members\n    );\n    if (triggerUpdate) {\n      const newItem = {\n        ...this.context.item,\n        membersCount: this.context.groupMembers.length,\n      };\n      this.context.setItem(newItem);\n    }\n  };\n\n  removeParticipants = (member, triggerUpdate = true) => {\n    const groupmembers = [...this.context.groupMembers];\n    const filteredMembers = groupmembers.filter((groupmember) => {\n      if (groupmember.uid === member.uid) {\n        return false;\n      }\n      return true;\n    });\n\n    this.context.updateGroupMembers(filteredMembers);\n\n    if (triggerUpdate) {\n      const newItem = {\n        ...this.context.item,\n        membersCount: filteredMembers.length,\n      };\n      this.context.setItem(newItem);\n    }\n  };\n\n  updateParticipants = (updatedMember) => {\n    const memberlist = [...this.context.groupMembers];\n\n    const memberKey = memberlist.findIndex(\n      (member) => member.uid === updatedMember.uid\n    );\n    if (memberKey > -1) {\n      const memberObj = memberlist[memberKey];\n      const newMemberObj = Object.assign({}, memberObj, updatedMember, {\n        scope: updatedMember[\"scope\"],\n      });\n\n      memberlist.splice(memberKey, 1, newMemberObj);\n      this.props.actionGenerated(\n        enums.ACTIONS[\"SCOPECHANGE_GROUPMEMBER_SUCCESS\"],\n        [newMemberObj]\n      );\n      this.context.updateGroupMembers(memberlist);\n    }\n  };\n\n  updateOwnership = (uid) => {\n    const item = { ...this.context.item, owner: uid };\n    const type = CometChat.RECEIVER_TYPE.GROUP;\n\n    this.setState({ transferOwnership: false });\n    this.context.setTypeAndItem(type, item);\n  };\n\n  render() {\n    if (this.state.loggedInUser === null) {\n      return null;\n    }\n\n    let viewMembersBtn = (\n      <div css={contentItemStyle()} className=\"content__item\">\n        <div\n          css={itemLinkStyle(this.context, 0)}\n          className=\"item__link\"\n          onClick={() => this.clickHandler(\"viewmember\", true)}\n        >\n          {Translator.translate(\"VIEW_MEMBERS\", this.context.language)}\n        </div>\n      </div>\n    );\n\n    let addMembersBtn = null,\n      deleteGroupBtn = null,\n      bannedMembersBtn = null;\n    if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.ADMIN) {\n      addMembersBtn = (\n        <div css={contentItemStyle()} className=\"content__item\">\n          <div\n            css={itemLinkStyle(this.context, 0)}\n            className=\"item__link\"\n            onClick={() => this.clickHandler(\"addmember\", true)}\n          >\n            {Translator.translate(\"ADD_MEMBERS\", this.context.language)}\n          </div>\n        </div>\n      );\n\n      deleteGroupBtn = (\n        <div css={contentItemStyle()} className=\"content__item\">\n          <span\n            css={itemLinkStyle(this.context, 1)}\n            className=\"item__link\"\n            onClick={this.deleteGroup}\n          >\n            {Translator.translate(\"DELETE_AND_EXIT\", this.context.language)}\n          </span>\n        </div>\n      );\n    }\n\n    if (this.context.item.scope !== CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT) {\n      bannedMembersBtn = (\n        <div css={contentItemStyle()} className=\"content__item\">\n          <div\n            css={itemLinkStyle(this.context, 0)}\n            className=\"item__link\"\n            onClick={() => this.clickHandler(\"banmember\", true)}\n          >\n            {Translator.translate(\"BANNED_MEMBERS\", this.context.language)}\n          </div>\n        </div>\n      );\n    }\n\n    let leaveGroupBtn = (\n      <div css={contentItemStyle()} className=\"content__item\">\n        <span\n          css={itemLinkStyle(this.context, 0)}\n          className=\"item__link\"\n          onClick={this.leaveGroup}\n        >\n          {Translator.translate(\"LEAVE_GROUP\", this.context.language)}\n        </span>\n      </div>\n    );\n\n    let sharedmediaView = <CometChatSharedMediaView containerHeight=\"225px\" />;\n\n    if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT) {\n      //if viewing group membersfeature is disabled\n      if (this.state.enableViewGroupMembers === false) {\n        viewMembersBtn = null;\n      }\n    } else if (\n      this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.MODERATOR ||\n      this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.ADMIN\n    ) {\n      if (\n        this.state.enableViewGroupMembers === false &&\n        this.state.enableKickGroupMembers === false &&\n        this.state.enableBanGroupMembers === false &&\n        this.state.enableChangeScope === false\n      ) {\n        //if viewing, kicking/banning, promoting/demoting group membersare feature is disabled\n        viewMembersBtn = null;\n      }\n    }\n\n    //if adding group members feature is disabled\n    if (this.state.enableAddGroupMembers === false) {\n      addMembersBtn = null;\n    }\n\n    //if kicking/banning/unbanning group members feature is disabled\n    if (this.state.enableBanGroupMembers === false) {\n      bannedMembersBtn = null;\n    }\n\n    //if deleting group feature is disabled\n    if (this.state.enableDeleteGroup === false) {\n      deleteGroupBtn = null;\n    }\n\n    //if leaving group feature is disabled\n    if (\n      this.state.enableLeaveGroup === false ||\n      this.context?.item?.membersCount === 1\n    ) {\n      leaveGroupBtn = null;\n    }\n\n    //if viewing shared media group feature is disabled\n    if (this.state.enableSharedMedia === false) {\n      sharedmediaView = null;\n    }\n\n    let members = (\n      <div css={sectionStyle()} className=\"section section__members\">\n        <h6 css={sectionHeaderStyle(this.context)} className=\"section__header\">\n          {Translator.translate(\"MEMBERS\", this.context.language)}\n        </h6>\n        <div css={sectionContentStyle()} className=\"section__content\">\n          {viewMembersBtn}\n          {addMembersBtn}\n          {bannedMembersBtn}\n        </div>\n      </div>\n    );\n\n    let options = (\n      <div css={sectionStyle()} className=\"section section__options\">\n        <h6 css={sectionHeaderStyle(this.context)} className=\"section__header\">\n          {Translator.translate(\"OPTIONS\", this.context.language)}\n        </h6>\n        <div css={sectionContentStyle()} className=\"section__content\">\n          {leaveGroupBtn}\n          {deleteGroupBtn}\n        </div>\n      </div>\n    );\n\n    if (\n      viewMembersBtn === null &&\n      addMembersBtn === null &&\n      bannedMembersBtn === null\n    ) {\n      members = null;\n    }\n\n    if (leaveGroupBtn === null && deleteGroupBtn === null) {\n      options = null;\n    }\n\n    let viewMembers = null;\n    if (this.state.viewMember) {\n      viewMembers = (\n        <CometChatViewGroupMemberList\n          loggedinuser={this.state.loggedInUser}\n          enableChangeScope={this.state.enableChangeScope}\n          enableKickGroupMembers={this.state.enableKickGroupMembers}\n          enableBanGroupMembers={this.state.enableBanGroupMembers}\n          close={() => this.clickHandler(\"viewmember\", false)}\n          actionGenerated={this.membersActionHandler}\n        />\n      );\n    }\n\n    let addMembers = null;\n    if (this.state.addMember) {\n      addMembers = (\n        <CometChatAddGroupMemberList\n          close={() => this.clickHandler(\"addmember\", false)}\n          actionGenerated={this.membersActionHandler}\n        />\n      );\n    }\n\n    let bannedMembers = null;\n    if (this.state.banMember) {\n      bannedMembers = (\n        <CometChatBanGroupMemberList\n          loggedinuser={this.state.loggedInUser}\n          close={() => this.clickHandler(\"banmember\", false)}\n          actionGenerated={this.membersActionHandler}\n        />\n      );\n    }\n\n    let showDeleteConfirmDialog = null;\n    if (this.state.showDeleteConfirmDialog) {\n      showDeleteConfirmDialog = (\n        <CometChatConfirmDialog\n          {...this.props}\n          onClick={this.onDeleteConfirm}\n          message={Translator.translate(\n            \"DELETE_CONFIRM\",\n            this.context.language\n          )}\n          confirmButtonText={Translator.translate(\n            \"DELETE\",\n            this.context.language\n          )}\n          cancelButtonText={Translator.translate(\n            \"CANCEL\",\n            this.context.language\n          )}\n        />\n      );\n    }\n\n    let showLeaveGroupConfirmDialog = null;\n    if (this.state.showLeaveGroupConfirmDialog) {\n      showLeaveGroupConfirmDialog = (\n        <CometChatConfirmDialog\n          {...this.props}\n          onClick={this.onLeaveConfirm}\n          message={Translator.translate(\"LEAVE_CONFIRM\", this.context.language)}\n          confirmButtonText={Translator.translate(\n            \"LEAVE\",\n            this.context.language\n          )}\n          cancelButtonText={Translator.translate(\n            \"CANCEL\",\n            this.context.language\n          )}\n        />\n      );\n    }\n\n    let showTransferOwnershipConfirmDialog = null;\n    if (this.state.showTransferOwnershipConfirmDialog) {\n      showTransferOwnershipConfirmDialog = (\n        <CometChatConfirmDialog\n          {...this.props}\n          onClick={this.onTransferConfirm}\n          message={Translator.translate(\n            \"TRANSFER_CONFIRM\",\n            this.context.language\n          )}\n          confirmButtonText={Translator.translate(\n            \"TRANSFER\",\n            this.context.language\n          )}\n          cancelButtonText={Translator.translate(\n            \"CANCEL\",\n            this.context.language\n          )}\n        />\n      );\n    }\n\n    let transferOwnership = null;\n    if (this.state.transferOwnership) {\n      transferOwnership = (\n        <CometChatTransferOwnershipMemberList\n          roles={this.roles}\n          loggedinuser={this.state.loggedInUser}\n          actionGenerated={this.membersActionHandler}\n          close={() => this.clickHandler(\"transferownership\", false)}\n        />\n      );\n    }\n\n    return (\n      <div css={detailStyle(this.context)} className=\"detailpane\">\n        <div css={headerStyle(this.context)} className=\"detailpane__header\">\n          <div\n            css={headerCloseStyle(navigateIcon, this.context)}\n            className=\"header__close\"\n            onClick={() =>\n              this.props.actionGenerated(enums.ACTIONS[\"CLOSE_GROUP_DETAIL\"])\n            }\n          ></div>\n          <h4 css={headerTitleStyle()} className=\"header__title\">\n            {Translator.translate(\"DETAILS\", this.context.language)}\n          </h4>\n        </div>\n        <div css={detailPaneStyle()} className=\"detailpane__section\">\n          {members}\n          {options}\n          {sharedmediaView}\n        </div>\n        {viewMembers}\n        {addMembers}\n        {bannedMembers}\n        {transferOwnership}\n        {showDeleteConfirmDialog}\n        {showLeaveGroupConfirmDialog}\n        {showTransferOwnershipConfirmDialog}\n        <CometChatToastNotification ref={(el) => (this.toastRef = el)} />\n      </div>\n    );\n  }\n}\n\n// Specifies the default values for props:\nCometChatGroupDetails.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n};\n\nCometChatGroupDetails.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n};\n\nexport { CometChatGroupDetails };\n"]},"metadata":{},"sourceType":"module"}