{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/CometChatUI/CometChatNavBar/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChatUserList } from \"../../Users\";\nimport { CometChatGroupList } from \"../../Groups\";\nimport { CometChatConversationList } from \"../../Chats\";\nimport { CometChatUserProfile } from \"../../UserProfile\";\nimport * as enums from \"../../../util/enums.js\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { theme } from \"../../../resources/theme\";\nimport tabs from \"../../../resources/tabs.json\";\nimport { footerStyle, navbarStyle, itemStyle, itemLinkStyle, itemLinkTextStyle } from \"./style\";\nimport chatGreyIcon from \"./resources/chats.svg\"; //import chatBlueIcon from \"./resources/chats-selected.svg\";\n\nimport contactGreyIcon from \"./resources/users.svg\"; //import contactBlueIcon from \"./resources/users-selected.svg\";\n\nimport groupGreyIcon from \"./resources/groups.svg\"; //import groupBlueIcon from \"./resources/groups-selected.svg\";\n\nimport moreGreyIcon from \"./resources/more.svg\"; //import moreBlueIcon from \"./resources/more-selected.svg\";\n\nexport class CometChatNavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tabListKeys = [];\n\n    this.getFilteredTabs = () => {\n      return new Promise(resolve => {\n        const filteredTabs = [];\n        const promises = [this.enableChats(), this.enableUsers(), this.enableGroups(), this.enableSettings()];\n        Promise.allSettled(promises).then(results => {\n          this.tabListKeys.forEach(eachTabKey => {\n            results.forEach(result => {\n              const tabKey = result.value[0];\n              const tabEnabled = result.value[1];\n\n              if (eachTabKey === tabKey && tabEnabled === true) {\n                filteredTabs.push(eachTabKey);\n              }\n            });\n          });\n          resolve(filteredTabs);\n        });\n      });\n    };\n\n    this.enableChats = () => {\n      return new Promise(resolve => {\n        this.context.FeatureRestriction.isRecentChatListEnabled().then(response => resolve([\"SIDEBAR_CHATS\", response])).catch(error => resolve([\"SIDEBAR_CHATS\", false]));\n      });\n    };\n\n    this.enableUsers = () => {\n      return new Promise(resolve => {\n        this.context.FeatureRestriction.isUserListEnabled().then(response => resolve([\"SIDEBAR_USERS\", response])).catch(error => resolve([\"SIDEBAR_USERS\", false]));\n      });\n    };\n\n    this.enableGroups = () => {\n      return new Promise(resolve => {\n        this.context.FeatureRestriction.isGroupListEnabled().then(response => resolve([\"SIDEBAR_GROUPS\", response])).catch(error => resolve([\"SIDEBAR_GROUPS\", false]));\n      });\n    };\n\n    this.enableSettings = () => {\n      return new Promise(resolve => {\n        this.context.FeatureRestriction.isUserSettingsEnabled().then(response => resolve([\"SIDEBAR_MOREINFO\", response])).catch(error => resolve([\"SIDEBAR_MOREINFO\", false]));\n      });\n    };\n\n    this.tabChanged = tab => {\n      this.context.setLastMessage(\"\");\n      this.setState({\n        activeTab: tab\n      });\n    };\n\n    this.getActiveTab = () => {\n      switch (this.state.activeTab) {\n        case \"SIDEBAR_USERS\":\n          return jsx(CometChatUserList, {\n            theme: this.props.theme,\n            lang: this.props.lang,\n            _parent: \"unified\",\n            actionGenerated: this.props.actionGenerated,\n            onItemClick: (item, type) => this.props.actionGenerated(enums.ACTIONS[\"ITEM_CLICKED\"], type, item),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 11\n            }\n          });\n\n        case \"SIDEBAR_CALLS\":\n          return null;\n\n        case \"SIDEBAR_CHATS\":\n          return jsx(CometChatConversationList, {\n            theme: this.props.theme,\n            lang: this.props.lang,\n            _parent: \"unified\",\n            actionGenerated: this.props.actionGenerated,\n            onItemClick: (item, type) => this.props.actionGenerated(enums.ACTIONS[\"ITEM_CLICKED\"], type, item),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 11\n            }\n          });\n\n        case \"SIDEBAR_GROUPS\":\n          return jsx(CometChatGroupList, {\n            theme: this.props.theme,\n            lang: this.props.lang,\n            _parent: \"unified\",\n            actionGenerated: this.props.actionGenerated,\n            onItemClick: (item, type) => this.props.actionGenerated(enums.ACTIONS[\"ITEM_CLICKED\"], type, item),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 11\n            }\n          });\n\n        case \"SIDEBAR_MOREINFO\":\n          return jsx(CometChatUserProfile, {\n            theme: this.props.theme,\n            lang: this.props.lang,\n            onItemClick: (item, type) => this.props.actionGenerated(enums.ACTIONS[\"ITEM_CLICKED\"], type, item),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 11\n            }\n          });\n\n        default:\n          return null;\n      }\n    };\n\n    this.getTabList = () => {\n      const chatsTabActive = this.state.activeTab === \"SIDEBAR_CHATS\" ? true : false;\n      const userTabActive = this.state.activeTab === \"SIDEBAR_USERS\" ? true : false;\n      const groupsTabActive = this.state.activeTab === \"SIDEBAR_GROUPS\" ? true : false;\n      const moreTabActive = this.state.activeTab === \"SIDEBAR_MOREINFO\" ? true : false;\n      const tabList = [...this.state.tabList];\n      return tabList.map(tab => {\n        switch (tab) {\n          case \"SIDEBAR_CHATS\":\n            return jsx(\"div\", {\n              key: tab,\n              css: itemStyle(this.props),\n              className: \"navbar__item\",\n              onClick: () => this.tabChanged(\"SIDEBAR_CHATS\"),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 13\n              }\n            }, jsx(\"div\", {\n              css: itemLinkStyle(chatGreyIcon, chatsTabActive, this.context),\n              className: \"item__link item__link__chats\",\n              title: Translator.translate(\"CHATS\", this.props.lang),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 15\n              }\n            }), jsx(\"div\", {\n              css: itemLinkTextStyle(chatsTabActive, this.context),\n              className: \"item__label\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 15\n              }\n            }, Translator.translate(\"CHATS\", this.props.lang)));\n\n          case \"SIDEBAR_USERS\":\n            return jsx(\"div\", {\n              key: tab,\n              css: itemStyle(this.props),\n              className: \"navbar__item\",\n              onClick: () => this.tabChanged(\"SIDEBAR_USERS\"),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 13\n              }\n            }, jsx(\"div\", {\n              css: itemLinkStyle(contactGreyIcon, userTabActive, this.context),\n              className: \"item__link item__link__contacts\",\n              title: Translator.translate(\"USERS\", this.props.lang),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 15\n              }\n            }), jsx(\"div\", {\n              css: itemLinkTextStyle(userTabActive, this.context),\n              className: \"item__label\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 15\n              }\n            }, Translator.translate(\"USERS\", this.props.lang)));\n\n          case \"SIDEBAR_GROUPS\":\n            return jsx(\"div\", {\n              key: tab,\n              css: itemStyle(this.props),\n              className: \"navbar__item\",\n              onClick: () => this.tabChanged(\"SIDEBAR_GROUPS\"),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 13\n              }\n            }, jsx(\"div\", {\n              css: itemLinkStyle(groupGreyIcon, groupsTabActive, this.context),\n              className: \"item__link item__link__groups\",\n              title: Translator.translate(\"GROUPS\", this.props.lang),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 15\n              }\n            }), jsx(\"div\", {\n              css: itemLinkTextStyle(groupsTabActive, this.context),\n              className: \"item__label\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 15\n              }\n            }, Translator.translate(\"GROUPS\", this.props.lang)));\n\n          case \"SIDEBAR_MOREINFO\":\n            return jsx(\"div\", {\n              key: tab,\n              css: itemStyle(this.props),\n              className: \"navbar__item\",\n              onClick: () => this.tabChanged(\"SIDEBAR_MOREINFO\"),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 13\n              }\n            }, jsx(\"div\", {\n              css: itemLinkStyle(moreGreyIcon, moreTabActive, this.context),\n              className: \"item__link item__link__info\",\n              title: Translator.translate(\"MORE\", this.props.lang),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 15\n              }\n            }), jsx(\"div\", {\n              css: itemLinkTextStyle(moreTabActive, this.context),\n              className: \"item__label\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 15\n              }\n            }, Translator.translate(\"MORE\", this.props.lang)));\n\n          default:\n            return null;\n        }\n      });\n    };\n\n    this.state = {\n      activeTab: null,\n      tabList: []\n    };\n  }\n\n  componentDidMount() {\n    let tabList = this.context.UIKitSettings.tabs;\n    tabList.forEach(tabName => {\n      for (const t in tabs) {\n        if (tabName === tabs[t]) {\n          this.tabListKeys.push(t);\n        }\n      }\n    });\n    this.getFilteredTabs().then(filteredTabs => {\n      this.setState({\n        tabList: filteredTabs,\n        activeTab: filteredTabs[0]\n      });\n    });\n  }\n\n  render() {\n    return jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 7\n      }\n    }, this.getActiveTab(), jsx(\"div\", {\n      css: footerStyle(),\n      className: \"sidebar__footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }\n    }, jsx(\"div\", {\n      css: navbarStyle(),\n      className: \"footer__navbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }\n    }, this.getTabList())));\n  }\n\n} // Specifies the default values for props:\n\nCometChatNavBar.contextType = CometChatContext;\nCometChatNavBar.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme\n};\nCometChatNavBar.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object\n};","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/CometChatUI/CometChatNavBar/index.js"],"names":["React","jsx","PropTypes","CometChatUserList","CometChatGroupList","CometChatConversationList","CometChatUserProfile","enums","CometChatContext","Translator","theme","tabs","footerStyle","navbarStyle","itemStyle","itemLinkStyle","itemLinkTextStyle","CometChatNavBar","Component","constructor","props","tabListKeys","getFilteredTabs","Promise","resolve","filteredTabs","promises","enableChats","enableUsers","enableGroups","enableSettings","allSettled","then","results","forEach","eachTabKey","result","tabKey","value","tabEnabled","push","context","FeatureRestriction","isRecentChatListEnabled","response","catch","error","isUserListEnabled","isGroupListEnabled","isUserSettingsEnabled","tabChanged","tab","setLastMessage","setState","activeTab","getActiveTab","state","lang","actionGenerated","item","type","ACTIONS","getTabList","chatsTabActive","userTabActive","groupsTabActive","moreTabActive","tabList","map","chatGreyIcon","translate","contactGreyIcon","groupGreyIcon","moreGreyIcon","componentDidMount","UIKitSettings","tabName","t","render","contextType","defaultProps","getDefaultLanguage","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\n\nimport { CometChatUserList } from \"../../Users\";\nimport { CometChatGroupList } from \"../../Groups\";\nimport { CometChatConversationList } from \"../../Chats\";\nimport { CometChatUserProfile } from \"../../UserProfile\";\n\nimport * as enums from \"../../../util/enums.js\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\n\nimport Translator from \"../../../resources/localization/translator\";\nimport { theme } from \"../../../resources/theme\";\nimport tabs from \"../../../resources/tabs.json\";\n\nimport {\n  footerStyle,\n  navbarStyle,\n  itemStyle,\n  itemLinkStyle,\n  itemLinkTextStyle,\n} from \"./style\";\n\nimport chatGreyIcon from \"./resources/chats.svg\";\n//import chatBlueIcon from \"./resources/chats-selected.svg\";\nimport contactGreyIcon from \"./resources/users.svg\";\n//import contactBlueIcon from \"./resources/users-selected.svg\";\nimport groupGreyIcon from \"./resources/groups.svg\";\n//import groupBlueIcon from \"./resources/groups-selected.svg\";\nimport moreGreyIcon from \"./resources/more.svg\";\n//import moreBlueIcon from \"./resources/more-selected.svg\";\n\nexport class CometChatNavBar extends React.Component {\n  static contextType = CometChatContext;\n\n  tabListKeys = [];\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: null,\n      tabList: [],\n    };\n  }\n\n  componentDidMount() {\n    let tabList = this.context.UIKitSettings.tabs;\n\n    tabList.forEach((tabName) => {\n      for (const t in tabs) {\n        if (tabName === tabs[t]) {\n          this.tabListKeys.push(t);\n        }\n      }\n    });\n\n    this.getFilteredTabs().then((filteredTabs) => {\n      this.setState({ tabList: filteredTabs, activeTab: filteredTabs[0] });\n    });\n  }\n\n  getFilteredTabs = () => {\n    return new Promise((resolve) => {\n      const filteredTabs = [];\n      const promises = [\n        this.enableChats(),\n        this.enableUsers(),\n        this.enableGroups(),\n        this.enableSettings(),\n      ];\n      Promise.allSettled(promises).then((results) => {\n        this.tabListKeys.forEach((eachTabKey) => {\n          results.forEach((result) => {\n            const tabKey = result.value[0];\n            const tabEnabled = result.value[1];\n\n            if (eachTabKey === tabKey && tabEnabled === true) {\n              filteredTabs.push(eachTabKey);\n            }\n          });\n        });\n        resolve(filteredTabs);\n      });\n    });\n  };\n\n  enableChats = () => {\n    return new Promise((resolve) => {\n      this.context.FeatureRestriction.isRecentChatListEnabled()\n        .then((response) => resolve([\"SIDEBAR_CHATS\", response]))\n        .catch((error) => resolve([\"SIDEBAR_CHATS\", false]));\n    });\n  };\n\n  enableUsers = () => {\n    return new Promise((resolve) => {\n      this.context.FeatureRestriction.isUserListEnabled()\n        .then((response) => resolve([\"SIDEBAR_USERS\", response]))\n        .catch((error) => resolve([\"SIDEBAR_USERS\", false]));\n    });\n  };\n\n  enableGroups = () => {\n    return new Promise((resolve) => {\n      this.context.FeatureRestriction.isGroupListEnabled()\n        .then((response) => resolve([\"SIDEBAR_GROUPS\", response]))\n        .catch((error) => resolve([\"SIDEBAR_GROUPS\", false]));\n    });\n  };\n\n  enableSettings = () => {\n    return new Promise((resolve) => {\n      this.context.FeatureRestriction.isUserSettingsEnabled()\n        .then((response) => resolve([\"SIDEBAR_MOREINFO\", response]))\n        .catch((error) => resolve([\"SIDEBAR_MOREINFO\", false]));\n    });\n  };\n\n  tabChanged = (tab) => {\n    this.context.setLastMessage(\"\");\n    this.setState({ activeTab: tab });\n  };\n\n  getActiveTab = () => {\n    switch (this.state.activeTab) {\n      case \"SIDEBAR_USERS\":\n        return (\n          <CometChatUserList\n            theme={this.props.theme}\n            lang={this.props.lang}\n            _parent=\"unified\"\n            actionGenerated={this.props.actionGenerated}\n            onItemClick={(item, type) =>\n              this.props.actionGenerated(\n                enums.ACTIONS[\"ITEM_CLICKED\"],\n                type,\n                item\n              )\n            }\n          />\n        );\n      case \"SIDEBAR_CALLS\":\n        return null;\n      case \"SIDEBAR_CHATS\":\n        return (\n          <CometChatConversationList\n            theme={this.props.theme}\n            lang={this.props.lang}\n            _parent=\"unified\"\n            actionGenerated={this.props.actionGenerated}\n            onItemClick={(item, type) =>\n              this.props.actionGenerated(\n                enums.ACTIONS[\"ITEM_CLICKED\"],\n                type,\n                item\n              )\n            }\n          />\n        );\n      case \"SIDEBAR_GROUPS\":\n        return (\n          <CometChatGroupList\n            theme={this.props.theme}\n            lang={this.props.lang}\n            _parent=\"unified\"\n            actionGenerated={this.props.actionGenerated}\n            onItemClick={(item, type) =>\n              this.props.actionGenerated(\n                enums.ACTIONS[\"ITEM_CLICKED\"],\n                type,\n                item\n              )\n            }\n          />\n        );\n      case \"SIDEBAR_MOREINFO\":\n        return (\n          <CometChatUserProfile\n            theme={this.props.theme}\n            lang={this.props.lang}\n            onItemClick={(item, type) =>\n              this.props.actionGenerated(\n                enums.ACTIONS[\"ITEM_CLICKED\"],\n                type,\n                item\n              )\n            }\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  getTabList = () => {\n    const chatsTabActive =\n      this.state.activeTab === \"SIDEBAR_CHATS\" ? true : false;\n    const userTabActive =\n      this.state.activeTab === \"SIDEBAR_USERS\" ? true : false;\n    const groupsTabActive =\n      this.state.activeTab === \"SIDEBAR_GROUPS\" ? true : false;\n    const moreTabActive =\n      this.state.activeTab === \"SIDEBAR_MOREINFO\" ? true : false;\n\n    const tabList = [...this.state.tabList];\n\n    return tabList.map((tab) => {\n      switch (tab) {\n        case \"SIDEBAR_CHATS\":\n          return (\n            <div\n              key={tab}\n              css={itemStyle(this.props)}\n              className=\"navbar__item\"\n              onClick={() => this.tabChanged(\"SIDEBAR_CHATS\")}\n            >\n              <div\n                css={itemLinkStyle(chatGreyIcon, chatsTabActive, this.context)}\n                className=\"item__link item__link__chats\"\n                title={Translator.translate(\"CHATS\", this.props.lang)}\n              ></div>\n              <div\n                css={itemLinkTextStyle(chatsTabActive, this.context)}\n                className=\"item__label\"\n              >\n                {Translator.translate(\"CHATS\", this.props.lang)}\n              </div>\n            </div>\n          );\n        case \"SIDEBAR_USERS\":\n          return (\n            <div\n              key={tab}\n              css={itemStyle(this.props)}\n              className=\"navbar__item\"\n              onClick={() => this.tabChanged(\"SIDEBAR_USERS\")}\n            >\n              <div\n                css={itemLinkStyle(\n                  contactGreyIcon,\n                  userTabActive,\n                  this.context\n                )}\n                className=\"item__link item__link__contacts\"\n                title={Translator.translate(\"USERS\", this.props.lang)}\n              ></div>\n              <div\n                css={itemLinkTextStyle(userTabActive, this.context)}\n                className=\"item__label\"\n              >\n                {Translator.translate(\"USERS\", this.props.lang)}\n              </div>\n            </div>\n          );\n        case \"SIDEBAR_GROUPS\":\n          return (\n            <div\n              key={tab}\n              css={itemStyle(this.props)}\n              className=\"navbar__item\"\n              onClick={() => this.tabChanged(\"SIDEBAR_GROUPS\")}\n            >\n              <div\n                css={itemLinkStyle(\n                  groupGreyIcon,\n                  groupsTabActive,\n                  this.context\n                )}\n                className=\"item__link item__link__groups\"\n                title={Translator.translate(\"GROUPS\", this.props.lang)}\n              ></div>\n              <div\n                css={itemLinkTextStyle(groupsTabActive, this.context)}\n                className=\"item__label\"\n              >\n                {Translator.translate(\"GROUPS\", this.props.lang)}\n              </div>\n            </div>\n          );\n        case \"SIDEBAR_MOREINFO\":\n          return (\n            <div\n              key={tab}\n              css={itemStyle(this.props)}\n              className=\"navbar__item\"\n              onClick={() => this.tabChanged(\"SIDEBAR_MOREINFO\")}\n            >\n              <div\n                css={itemLinkStyle(moreGreyIcon, moreTabActive, this.context)}\n                className=\"item__link item__link__info\"\n                title={Translator.translate(\"MORE\", this.props.lang)}\n              ></div>\n              <div\n                css={itemLinkTextStyle(moreTabActive, this.context)}\n                className=\"item__label\"\n              >\n                {Translator.translate(\"MORE\", this.props.lang)}\n              </div>\n            </div>\n          );\n        default:\n          return null;\n      }\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.getActiveTab()}\n        <div css={footerStyle()} className=\"sidebar__footer\">\n          <div css={navbarStyle()} className=\"footer__navbar\">\n            {this.getTabList()}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\n// Specifies the default values for props:\nCometChatNavBar.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n};\n\nCometChatNavBar.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n};\n"]},"metadata":{},"sourceType":"module"}