{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/MainContent/Messaging/ConversationInfoScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { useConversations } from \"../../../utils/ConversationProvider\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ConversationInfoScreen({\n  containerRef\n}) {\n  _s();\n\n  const [convoInfo, setConvoInfo] = useState();\n  const {\n    selectedConversation\n  } = useConversations();\n\n  function removeBloatData(conversation) {\n    conversation.messages = [];\n    return conversation;\n  }\n\n  async function getConversationInformation() {\n    const filteredConversation = removeBloatData(selectedConversation);\n    const conversationInformation = await axios.get(`api/conversations/getInfo/${JSON.stringify(filteredConversation)}`);\n    setConvoInfo(conversationInformation);\n  }\n\n  useEffect(() => {\n    getConversationInformation();\n    console.log(convoInfo); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingTop: \"auto\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: convoInfo.name && \"Untiltied Conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConversationInfoScreen, \"n0EswQEZyMSI2Kbgyo2pswL2zL4=\", false, function () {\n  return [useConversations];\n});\n\n_c = ConversationInfoScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConversationInfoScreen\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/MainContent/Messaging/ConversationInfoScreen.jsx"],"names":["useState","useEffect","ListGroup","useConversations","axios","ConversationInfoScreen","containerRef","convoInfo","setConvoInfo","selectedConversation","removeBloatData","conversation","messages","getConversationInformation","filteredConversation","conversationInformation","get","JSON","stringify","console","log","paddingTop","name"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,gBAAT,QAAiC,qCAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,sBAAT,CAAgC;AAAEC,EAAAA;AAAF,CAAhC,EAAkD;AAAA;;AAC/D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;AACA,QAAM;AAAES,IAAAA;AAAF,MAA2BN,gBAAgB,EAAjD;;AAEA,WAASO,eAAT,CAAyBC,YAAzB,EAAuC;AACrCA,IAAAA,YAAY,CAACC,QAAb,GAAwB,EAAxB;AACA,WAAOD,YAAP;AACD;;AAED,iBAAeE,0BAAf,GAA4C;AAC1C,UAAMC,oBAAoB,GAAGJ,eAAe,CAACD,oBAAD,CAA5C;AACA,UAAMM,uBAAuB,GAAG,MAAMX,KAAK,CAACY,GAAN,CACnC,6BAA4BC,IAAI,CAACC,SAAL,CAAeJ,oBAAf,CAAqC,EAD9B,CAAtC;AAGAN,IAAAA,YAAY,CAACO,uBAAD,CAAZ;AACD;;AAEDd,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,0BAA0B;AAC1BM,IAAAA,OAAO,CAACC,GAAR,CAAYb,SAAZ,EAFc,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEc,MAAAA,UAAU,EAAE;AAAd,KAAZ;AAAA,2BACE,QAAC,SAAD;AAAA,6BACE,QAAC,SAAD,CAAW,IAAX;AAAA,+BACE;AAAA,oBAAKd,SAAS,CAACe,IAAV,IAAkB;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAhCuBjB,sB;UAEWF,gB;;;KAFXE,sB","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { useConversations } from \"../../../utils/ConversationProvider\";\nimport axios from \"axios\";\n\nexport default function ConversationInfoScreen({ containerRef }) {\n  const [convoInfo, setConvoInfo] = useState();\n  const { selectedConversation } = useConversations();\n\n  function removeBloatData(conversation) {\n    conversation.messages = [];\n    return conversation;\n  }\n\n  async function getConversationInformation() {\n    const filteredConversation = removeBloatData(selectedConversation);\n    const conversationInformation = await axios.get(\n      `api/conversations/getInfo/${JSON.stringify(filteredConversation)}`\n    );\n    setConvoInfo(conversationInformation);\n  }\n\n  useEffect(() => {\n    getConversationInformation();\n    console.log(convoInfo);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div style={{ paddingTop: \"auto\" }}>\n      <ListGroup>\n        <ListGroup.Item>\n          <h4>{convoInfo.name && \"Untiltied Conversation\"}</h4>\n        </ListGroup.Item>\n      </ListGroup>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}