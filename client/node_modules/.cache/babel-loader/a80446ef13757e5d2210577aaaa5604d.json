{"ast":null,"code":"import _extends from \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Messages/CometChatReceiverImageMessageBubble/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatMessageActions, CometChatThreadedMessageReplyCount, CometChatReadReceipt } from \"../\";\nimport { CometChatMessageReactions } from \"../Extensions\";\nimport { CometChatAvatar } from \"../../Shared\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport { checkMessageForExtensionsData } from \"../../../util/common\";\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { messageContainerStyle, messageWrapperStyle, messageThumbnailStyle, messageDetailStyle, nameWrapperStyle, nameStyle, messageImgContainerStyle, messageImgWrapperStyle, messageInfoWrapperStyle, messageReactionsWrapperStyle } from \"./style\";\nimport srcIcon from \"./resources/1px.png\";\n\nclass CometChatReceiverImageMessageBubble extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.messageFrom = \"receiver\";\n\n    this.chooseImage = thumbnailGenerationObject => {\n      const smallUrl = thumbnailGenerationObject[\"url_small\"];\n      const mediumUrl = thumbnailGenerationObject[\"url_medium\"];\n      const mq = window.matchMedia(this.props.theme.breakPoints[0]);\n      let imageToDownload = mediumUrl;\n\n      if (mq.matches) {\n        imageToDownload = smallUrl;\n      }\n\n      return imageToDownload;\n    };\n\n    this.setImage = () => {\n      const thumbnailGenerationData = checkMessageForExtensionsData(this.state.message, \"thumbnail-generation\");\n\n      if (thumbnailGenerationData) {\n        const mq = window.matchMedia(this.props.theme.breakPoints[0]);\n        mq.addListener(() => {\n          const imageToDownload = this.chooseImage(thumbnailGenerationData);\n          let img = new Image();\n          img.src = imageToDownload;\n\n          img.onload = () => this.setState({\n            imageUrl: img.src\n          });\n        });\n        const imageToDownload = this.chooseImage(thumbnailGenerationData);\n        this.downloadImage(imageToDownload).then(response => {\n          let img = new Image();\n          img.src = imageToDownload;\n\n          img.onload = () => {\n            this.setState({\n              imageUrl: img.src\n            });\n          };\n        }).catch(error => console.error(error));\n      } else {\n        this.setMessageImageUrl();\n      }\n    };\n\n    this.setMessageImageUrl = () => {\n      let img = new Image();\n      img.src = this.state.message.data.url;\n\n      img.onload = () => {\n        if (this._isMounted) {\n          this.setState({\n            imageUrl: img.src\n          });\n        }\n      };\n    };\n\n    this.open = () => {\n      this.props.actionGenerated(enums.ACTIONS[\"VIEW_ORIGINAL_IMAGE\"], this.state.message);\n    };\n\n    this.handleMouseHover = () => {\n      this.setState(this.toggleHoverState);\n    };\n\n    this.toggleHoverState = state => {\n      return {\n        isHovering: !state.isHovering\n      };\n    };\n\n    this._isMounted = false;\n    this.imgRef = /*#__PURE__*/React.createRef();\n    const message = Object.assign({}, props.message, {\n      messageFrom: this.messageFrom\n    });\n    this.state = {\n      message: message,\n      imageUrl: srcIcon,\n      isHovering: false\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.setImage();\n  }\n\n  componentDidUpdate(prevProps) {\n    const previousMessageStr = JSON.stringify(prevProps.message);\n    const currentMessageStr = JSON.stringify(this.props.message);\n\n    if (previousMessageStr !== currentMessageStr) {\n      const message = Object.assign({}, this.props.message, {\n        messageFrom: this.messageFrom\n      });\n      this.setState({\n        message: message\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  downloadImage(imgUrl) {\n    const promise = new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", imgUrl, true);\n      xhr.responseType = \"blob\";\n\n      xhr.onload = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            this.timer = null;\n            resolve(xhr.response);\n          } else if (xhr.status === 403) {\n            this.timer = setTimeout(() => {\n              this.downloadImage(imgUrl).then(response => resolve(response)).catch(error => reject(error));\n            }, 800);\n          }\n        } else {\n          reject(xhr.statusText);\n        }\n      };\n\n      xhr.onerror = event => reject(new Error(\"There was a network error.\", event));\n\n      xhr.ontimeout = event => reject(new Error(\"There was a timeout error.\", event));\n\n      xhr.send();\n    });\n    return promise;\n  }\n\n  render() {\n    let avatar = null,\n        name = null;\n\n    if (this.props.message.receiverType === CometChat.RECEIVER_TYPE.GROUP) {\n      avatar = jsx(\"div\", {\n        css: messageThumbnailStyle(),\n        className: \"message__thumbnail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 5\n        }\n      }, jsx(CometChatAvatar, {\n        user: this.state.message.sender,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 6\n        }\n      }));\n      name = jsx(\"div\", {\n        css: nameWrapperStyle(avatar),\n        className: \"message__name__wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 5\n        }\n      }, jsx(\"span\", {\n        css: nameStyle(this.context),\n        className: \"message__name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 6\n        }\n      }, this.state.message.sender.name));\n    }\n\n    let messageReactions = null;\n    const reactionsData = checkMessageForExtensionsData(this.state.message, \"reactions\");\n\n    if (reactionsData) {\n      if (Object.keys(reactionsData).length) {\n        messageReactions = jsx(\"div\", {\n          css: messageReactionsWrapperStyle(),\n          className: \"message__reaction__wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 6\n          }\n        }, jsx(CometChatMessageReactions, _extends({}, this.props, {\n          message: this.state.message,\n          reaction: reactionsData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 7\n          }\n        })));\n      }\n    }\n\n    let toolTipView = null;\n\n    if (this.state.isHovering) {\n      toolTipView = jsx(CometChatMessageActions, _extends({}, this.props, {\n        message: this.state.message,\n        name: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 18\n        }\n      }));\n    }\n\n    return jsx(\"div\", {\n      css: messageContainerStyle(),\n      className: \"receiver__message__container message__image\",\n      onMouseEnter: this.handleMouseHover,\n      onMouseLeave: this.handleMouseHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 4\n      }\n    }, jsx(\"div\", {\n      css: messageWrapperStyle(),\n      className: \"message__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 5\n      }\n    }, avatar, jsx(\"div\", {\n      css: messageDetailStyle(name),\n      className: \"message__details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 6\n      }\n    }, name, toolTipView, jsx(\"div\", {\n      css: messageImgContainerStyle(),\n      className: \"message__image__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 7\n      }\n    }, jsx(\"div\", {\n      css: messageImgWrapperStyle(this.context),\n      onClick: this.open,\n      className: \"message__image__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 8\n      }\n    }, jsx(\"img\", {\n      src: this.state.imageUrl,\n      alt: this.state.imageUrl,\n      ref: el => {\n        this.imgRef = el;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }\n    }))), messageReactions, jsx(\"div\", {\n      css: messageInfoWrapperStyle(),\n      className: \"message__info__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 7\n      }\n    }, jsx(CometChatReadReceipt, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 8\n      }\n    })), jsx(CometChatThreadedMessageReplyCount, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 8\n      }\n    }))))));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatReceiverImageMessageBubble.contextType = CometChatContext;\nCometChatReceiverImageMessageBubble.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme\n};\nCometChatReceiverImageMessageBubble.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object\n};\nexport { CometChatReceiverImageMessageBubble };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Messages/CometChatReceiverImageMessageBubble/index.js"],"names":["React","jsx","PropTypes","CometChat","CometChatMessageActions","CometChatThreadedMessageReplyCount","CometChatReadReceipt","CometChatMessageReactions","CometChatAvatar","CometChatContext","enums","checkMessageForExtensionsData","theme","Translator","messageContainerStyle","messageWrapperStyle","messageThumbnailStyle","messageDetailStyle","nameWrapperStyle","nameStyle","messageImgContainerStyle","messageImgWrapperStyle","messageInfoWrapperStyle","messageReactionsWrapperStyle","srcIcon","CometChatReceiverImageMessageBubble","PureComponent","constructor","props","messageFrom","chooseImage","thumbnailGenerationObject","smallUrl","mediumUrl","mq","window","matchMedia","breakPoints","imageToDownload","matches","setImage","thumbnailGenerationData","state","message","addListener","img","Image","src","onload","setState","imageUrl","downloadImage","then","response","catch","error","console","setMessageImageUrl","data","url","_isMounted","open","actionGenerated","ACTIONS","handleMouseHover","toggleHoverState","isHovering","imgRef","createRef","Object","assign","componentDidMount","componentDidUpdate","prevProps","previousMessageStr","JSON","stringify","currentMessageStr","componentWillUnmount","imgUrl","promise","Promise","resolve","reject","xhr","XMLHttpRequest","responseType","readyState","status","timer","setTimeout","statusText","onerror","event","Error","ontimeout","send","render","avatar","name","receiverType","RECEIVER_TYPE","GROUP","sender","context","messageReactions","reactionsData","keys","length","toolTipView","el","contextType","defaultProps","lang","getDefaultLanguage","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { CometChatMessageActions, CometChatThreadedMessageReplyCount, CometChatReadReceipt } from \"../\";\nimport { CometChatMessageReactions } from \"../Extensions\";\nimport { CometChatAvatar } from \"../../Shared\";\n\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport { checkMessageForExtensionsData } from \"../../../util/common\";\n\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\n\nimport {\n\tmessageContainerStyle,\n\tmessageWrapperStyle,\n\tmessageThumbnailStyle,\n\tmessageDetailStyle,\n\tnameWrapperStyle,\n\tnameStyle,\n\tmessageImgContainerStyle,\n\tmessageImgWrapperStyle,\n\tmessageInfoWrapperStyle,\n\tmessageReactionsWrapperStyle\n} from \"./style\";\n\nimport srcIcon from \"./resources/1px.png\";\n\nclass CometChatReceiverImageMessageBubble extends React.PureComponent {\n\n\tstatic contextType = CometChatContext;\n\tmessageFrom = \"receiver\";\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis._isMounted = false;\n\t\tthis.imgRef = React.createRef();\n\n\t\tconst message = Object.assign({}, props.message, {messageFrom: this.messageFrom});\n\n\t\tthis.state = {\n\t\t\tmessage: message,\n\t\t\timageUrl: srcIcon,\n\t\t\tisHovering: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis._isMounted = true;\n\t\tthis.setImage();\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tconst previousMessageStr = JSON.stringify(prevProps.message);\n\t\tconst currentMessageStr = JSON.stringify(this.props.message);\n\n\t\tif (previousMessageStr !== currentMessageStr) {\n\t\t\tconst message = Object.assign({}, this.props.message, {messageFrom: this.messageFrom});\n\t\t\tthis.setState({message: message});\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis._isMounted = false;\n\t}\n\n\tchooseImage = thumbnailGenerationObject => {\n\t\tconst smallUrl = thumbnailGenerationObject[\"url_small\"];\n\t\tconst mediumUrl = thumbnailGenerationObject[\"url_medium\"];\n\n\t\tconst mq = window.matchMedia(this.props.theme.breakPoints[0]);\n\n\t\tlet imageToDownload = mediumUrl;\n\t\tif (mq.matches) {\n\t\t\timageToDownload = smallUrl;\n\t\t}\n\n\t\treturn imageToDownload;\n\t};\n\n\tsetImage = () => {\n\t\tconst thumbnailGenerationData = checkMessageForExtensionsData(this.state.message, \"thumbnail-generation\");\n\t\tif (thumbnailGenerationData) {\n\t\t\tconst mq = window.matchMedia(this.props.theme.breakPoints[0]);\n\t\t\tmq.addListener(() => {\n\t\t\t\tconst imageToDownload = this.chooseImage(thumbnailGenerationData);\n\t\t\t\tlet img = new Image();\n\t\t\t\timg.src = imageToDownload;\n\t\t\t\timg.onload = () => this.setState({imageUrl: img.src});\n\t\t\t});\n\n\t\t\tconst imageToDownload = this.chooseImage(thumbnailGenerationData);\n\t\t\tthis.downloadImage(imageToDownload)\n\t\t\t\t.then(response => {\n\t\t\t\t\tlet img = new Image();\n\t\t\t\t\timg.src = imageToDownload;\n\t\t\t\t\timg.onload = () => {\n\t\t\t\t\t\tthis.setState({imageUrl: img.src});\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t\t.catch(error => console.error(error));\n\t\t} else {\n\t\t\tthis.setMessageImageUrl();\n\t\t}\n\t};\n\n\tsetMessageImageUrl = () => {\n\t\tlet img = new Image();\n\t\timg.src = this.state.message.data.url;\n\t\timg.onload = () => {\n\n\t\t\tif (this._isMounted) {\n\t\t\t\tthis.setState({imageUrl: img.src});\n\t\t\t} \n\t\t};\n\t};\n\n\tdownloadImage(imgUrl) {\n\t\tconst promise = new Promise((resolve, reject) => {\n\t\t\tconst xhr = new XMLHttpRequest();\n\t\t\txhr.open(\"GET\", imgUrl, true);\n\t\t\txhr.responseType = \"blob\";\n\n\t\t\txhr.onload = () => {\n\t\t\t\tif (xhr.readyState === 4) {\n\t\t\t\t\tif (xhr.status === 200) {\n\t\t\t\t\t\tthis.timer = null;\n\t\t\t\t\t\tresolve(xhr.response);\n\t\t\t\t\t} else if (xhr.status === 403) {\n\t\t\t\t\t\tthis.timer = setTimeout(() => {\n\t\t\t\t\t\t\tthis.downloadImage(imgUrl)\n\t\t\t\t\t\t\t\t.then(response => resolve(response))\n\t\t\t\t\t\t\t\t.catch(error => reject(error));\n\t\t\t\t\t\t}, 800);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treject(xhr.statusText);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\txhr.onerror = event => reject(new Error(\"There was a network error.\", event));\n\t\t\txhr.ontimeout = event => reject(new Error(\"There was a timeout error.\", event));\n\t\t\txhr.send();\n\t\t});\n\n\t\treturn promise;\n\t}\n\n\topen = () => {\n\t\tthis.props.actionGenerated(enums.ACTIONS[\"VIEW_ORIGINAL_IMAGE\"], this.state.message);\n\t};\n\n\thandleMouseHover = () => {\n\t\tthis.setState(this.toggleHoverState);\n\t};\n\n\ttoggleHoverState = state => {\n\t\treturn {\n\t\t\tisHovering: !state.isHovering,\n\t\t};\n\t};\n\n\trender() {\n\t\tlet avatar = null,\n\t\t\tname = null;\n\t\tif (this.props.message.receiverType === CometChat.RECEIVER_TYPE.GROUP) {\n\t\t\tavatar = (\n\t\t\t\t<div css={messageThumbnailStyle()} className=\"message__thumbnail\">\n\t\t\t\t\t<CometChatAvatar user={this.state.message.sender} />\n\t\t\t\t</div>\n\t\t\t);\n\n\t\t\tname = (\n\t\t\t\t<div css={nameWrapperStyle(avatar)} className=\"message__name__wrapper\">\n\t\t\t\t\t<span css={nameStyle(this.context)} className=\"message__name\">\n\t\t\t\t\t\t{this.state.message.sender.name}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tlet messageReactions = null;\n\t\tconst reactionsData = checkMessageForExtensionsData(this.state.message, \"reactions\");\n\t\tif (reactionsData) {\n\t\t\tif (Object.keys(reactionsData).length) {\n\t\t\t\tmessageReactions = (\n\t\t\t\t\t<div css={messageReactionsWrapperStyle()} className=\"message__reaction__wrapper\">\n\t\t\t\t\t\t<CometChatMessageReactions {...this.props} message={this.state.message} reaction={reactionsData} />\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tlet toolTipView = null;\n\t\tif (this.state.isHovering) {\n\t\t\ttoolTipView = <CometChatMessageActions {...this.props} message={this.state.message} name={name} />;\n\t\t}\n\n\t\treturn (\n\t\t\t<div css={messageContainerStyle()} className=\"receiver__message__container message__image\" onMouseEnter={this.handleMouseHover} onMouseLeave={this.handleMouseHover}>\n\t\t\t\t<div css={messageWrapperStyle()} className=\"message__wrapper\">\n\t\t\t\t\t{avatar}\n\t\t\t\t\t<div css={messageDetailStyle(name)} className=\"message__details\">\n\t\t\t\t\t\t{name}\n\t\t\t\t\t\t{toolTipView}\n\t\t\t\t\t\t<div css={messageImgContainerStyle()} className=\"message__image__container\">\n\t\t\t\t\t\t\t<div css={messageImgWrapperStyle(this.context)} onClick={this.open} className=\"message__image__wrapper\">\n\t\t\t\t\t\t\t\t<img src={this.state.imageUrl} alt={this.state.imageUrl} ref={el => { this.imgRef = el; }} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{messageReactions}\n\n\t\t\t\t\t\t<div css={messageInfoWrapperStyle()} className=\"message__info__wrapper\">\n\t\t\t\t\t\t\t<CometChatReadReceipt {...this.props} message={this.state.message} />\n\t\t\t\t\t\t\t<CometChatThreadedMessageReplyCount {...this.props} message={this.state.message} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// Specifies the default values for props:\nCometChatReceiverImageMessageBubble.defaultProps = {\n\tlang: Translator.getDefaultLanguage(),\n\ttheme: theme\n};\n\nCometChatReceiverImageMessageBubble.propTypes = {\n\tlang: PropTypes.string,\n\ttheme: PropTypes.object\n}\n\nexport { CometChatReceiverImageMessageBubble };"]},"metadata":{},"sourceType":"module"}