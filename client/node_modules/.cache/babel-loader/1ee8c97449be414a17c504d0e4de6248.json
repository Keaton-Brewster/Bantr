{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/utils/ViewportProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect, createContext, useContext, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst viewportContext = /*#__PURE__*/createContext();\nexport function useViewport() {\n  _s();\n\n  return useContext(viewportContext);\n}\n\n_s(useViewport, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default function ViewportProvider({\n  children\n}) {\n  _s2();\n\n  const [width, setWidth] = useState(window.innerWidth);\n  const [height, setHeight] = useState(window.innerHeight);\n  const [isMobile, setIsMobile] = useState(width < 680 || height < 680);\n  console.log(isMobile);\n  const [mobileDisplay, setMobileDisplay] = useState(() => {\n    if (isMobile) return {\n      menu: true,\n      mainContent: false\n    };\n    return {\n      menu: true,\n      mainContent: true\n    };\n  });\n  const bottomOfMessages = useRef(); // Setting up this function in the vieport provider\n  // So that we can call it from other events\n\n  function scrollToBottomMessages() {\n    var _bottomOfMessages$cur;\n\n    (_bottomOfMessages$cur = bottomOfMessages.current) === null || _bottomOfMessages$cur === void 0 ? void 0 : _bottomOfMessages$cur.scrollIntoView();\n  } // This is just the hook that sets width on window resize\n\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      setWidth(window.innerWidth);\n      setHeight(window.innerHeight);\n      setIsMobile(window.innerWidth < 680 || window.innerHeight < 680);\n    };\n\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []); // This handles the changes between mobile layout and desktop layout\n\n  useEffect(() => {\n    const {\n      menu,\n      mainContent\n    } = mobileDisplay;\n\n    if (!isMobile && (!menu || !mainContent)) {\n      return setMobileDisplay({\n        menu: true,\n        mainContent: true\n      });\n    }\n\n    if (isMobile && menu && mainContent) {\n      return setMobileDisplay({\n        menu: true,\n        mainContent: false\n      });\n    }\n\n    return () => {\n      setMobileDisplay({\n        menu: false,\n        mainContent: false\n      });\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [width, height]);\n  const value = {\n    width,\n    isMobile,\n    mobileDisplay,\n    setMobileDisplay,\n    bottomOfMessages,\n    scrollToBottomMessages\n  };\n  return /*#__PURE__*/_jsxDEV(viewportContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ViewportProvider, \"IfgQg2tVZvqQ3vEqxdpoup9UAHc=\");\n\n_c = ViewportProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewportProvider\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/utils/ViewportProvider.js"],"names":["useState","useEffect","createContext","useContext","useRef","viewportContext","useViewport","ViewportProvider","children","width","setWidth","window","innerWidth","height","setHeight","innerHeight","isMobile","setIsMobile","console","log","mobileDisplay","setMobileDisplay","menu","mainContent","bottomOfMessages","scrollToBottomMessages","current","scrollIntoView","handleWindowResize","addEventListener","removeEventListener","value"],"mappings":"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","sourcesContent":["import { useState, useEffect, createContext, useContext, useRef } from \"react\";\n\nconst viewportContext = createContext();\n\nexport function useViewport() {\n  return useContext(viewportContext);\n}\n\nexport default function ViewportProvider({ children }) {\n  const [width, setWidth] = useState(window.innerWidth);\n  const [height, setHeight] = useState(window.innerHeight);\n  const [isMobile, setIsMobile] = useState(width < 680 || height < 680);\n  console.log(isMobile);\n  const [mobileDisplay, setMobileDisplay] = useState(() => {\n    if (isMobile) return { menu: true, mainContent: false };\n    return { menu: true, mainContent: true };\n  });\n  const bottomOfMessages = useRef();\n\n  // Setting up this function in the vieport provider\n  // So that we can call it from other events\n  function scrollToBottomMessages() {\n    bottomOfMessages.current?.scrollIntoView();\n  }\n\n  // This is just the hook that sets width on window resize\n  useEffect(() => {\n    const handleWindowResize = () => {\n      setWidth(window.innerWidth);\n      setHeight(window.innerHeight);\n      setIsMobile(window.innerWidth < 680 || window.innerHeight < 680);\n    };\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []);\n\n  // This handles the changes between mobile layout and desktop layout\n  useEffect(() => {\n    const { menu, mainContent } = mobileDisplay;\n\n    if (!isMobile && (!menu || !mainContent)) {\n      return setMobileDisplay({\n        menu: true,\n        mainContent: true,\n      });\n    }\n    if (isMobile && menu && mainContent) {\n      return setMobileDisplay({\n        menu: true,\n        mainContent: false,\n      });\n    }\n\n    return () => {\n      setMobileDisplay({\n        menu: false,\n        mainContent: false,\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [width, height]);\n\n  const value = {\n    width,\n    isMobile,\n    mobileDisplay,\n    setMobileDisplay,\n    bottomOfMessages,\n    scrollToBottomMessages,\n  };\n\n  return (\n    <viewportContext.Provider value={value}>\n      {children}\n    </viewportContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}