{"ast":null,"code":"import _extends from \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatMessageComposer/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx, keyframes } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { CometChatSmartReplyPreview, CometChatCreatePoll, CometChatStickerKeyboard } from \"../Extensions\";\nimport { CometChatEmojiKeyboard } from \"../\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport { checkMessageForExtensionsData, ID, getUnixTimestamp } from \"../../../util/common\";\nimport * as enums from \"../../../util/enums.js\";\nimport { SoundManager } from \"../../../util/SoundManager\";\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { chatComposerStyle, editPreviewContainerStyle, previewHeadingStyle, previewCloseStyle, previewTextStyle, composerInputStyle, inputInnerStyle, messageInputStyle, inputStickyStyle, stickyAttachmentStyle, filePickerStyle, fileListStyle, fileItemStyle, stickyAttachButtonStyle, stickyButtonStyle, emojiButtonStyle, sendButtonStyle, reactionBtnStyle, stickerBtnStyle } from \"./style\";\nimport roundedPlus from \"./resources/add-circle-filled.svg\";\nimport videoIcon from \"./resources/video.svg\";\nimport audioIcon from \"./resources/audio-file.svg\";\nimport docIcon from \"./resources/file-upload.svg\";\nimport imageIcon from \"./resources/image.svg\";\nimport insertEmoticon from \"./resources/emoji.svg\";\nimport sendBlue from \"./resources/send-message.svg\";\nimport pollIcon from \"./resources/polls.svg\";\nimport stickerIcon from \"./resources/stickers.svg\";\nimport closeIcon from \"./resources/close.svg\";\nimport documentIcon from \"./resources/collaborative-document.svg\";\nimport whiteboardIcon from \"./resources/collaborative-whiteboard.svg\";\nimport heartIcon from \"./resources/heart.png\";\n\nclass CometChatMessageComposer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.enableLiveReaction = () => {\n      this.context.FeatureRestriction.isLiveReactionsEnabled().then(response => {\n        if (response !== this.state.enableLiveReaction) {\n          this.setState({\n            enableLiveReaction: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableLiveReaction !== false) {\n          this.setState({\n            enableLiveReaction: false\n          });\n        }\n      });\n    };\n\n    this.enablePolls = () => {\n      this.context.FeatureRestriction.isPollsEnabled().then(response => {\n        if (response !== this.state.enablePolls) {\n          this.setState({\n            enablePolls: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enablePolls !== false) {\n          this.setState({\n            enablePolls: false\n          });\n        }\n      });\n    };\n\n    this.enableTypingIndicator = () => {\n      this.context.FeatureRestriction.isTypingIndicatorsEnabled().then(response => {\n        if (response !== this.state.enableTypingIndicator) {\n          this.setState({\n            enableTypingIndicator: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableTypingIndicator !== false) {\n          this.setState({\n            enableTypingIndicator: false\n          });\n        }\n      });\n    };\n\n    this.enableStickers = () => {\n      this.context.FeatureRestriction.isStickersEnabled().then(response => {\n        if (response !== this.state.enableStickers) {\n          this.setState({\n            enableStickers: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableStickers !== false) {\n          this.setState({\n            enableStickers: false\n          });\n        }\n      });\n    };\n\n    this.enablePhotosVideos = () => {\n      this.context.FeatureRestriction.isPhotosVideosEnabled().then(response => {\n        if (response !== this.state.enablePhotosVideos) {\n          this.setState({\n            enablePhotosVideos: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enablePhotosVideos !== false) {\n          this.setState({\n            enablePhotosVideos: false\n          });\n        }\n      });\n    };\n\n    this.enableFiles = () => {\n      this.context.FeatureRestriction.isFilesEnabled().then(response => {\n        if (response !== this.state.enableFiles) {\n          this.setState({\n            enableFiles: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableFiles !== false) {\n          this.setState({\n            enableFiles: false\n          });\n        }\n      });\n    };\n\n    this.enableEmojis = () => {\n      this.context.FeatureRestriction.isEmojisEnabled().then(response => {\n        if (response !== this.state.enableEmojis) {\n          this.setState({\n            enableEmojis: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableEmojis !== false) {\n          this.setState({\n            enableEmojis: false\n          });\n        }\n      });\n    };\n\n    this.enableCollaborativeDocument = () => {\n      this.context.FeatureRestriction.isCollaborativeDocumentEnabled().then(response => {\n        if (response !== this.state.enableCollaborativeDocument) {\n          this.setState({\n            enableCollaborativeDocument: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableCollaborativeDocument !== false) {\n          this.setState({\n            enableCollaborativeDocument: false\n          });\n        }\n      });\n    };\n\n    this.enableCollaborativeWhiteboard = () => {\n      this.context.FeatureRestriction.isCollaborativeWhiteBoardEnabled().then(response => {\n        if (response !== this.state.enableCollaborativeWhiteboard) {\n          this.setState({\n            enableCollaborativeWhiteboard: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableCollaborativeWhiteboard !== false) {\n          this.setState({\n            enableCollaborativeWhiteboard: false\n          });\n        }\n      });\n    };\n\n    this.focusOnMessageComposer = () => {\n      if (this.messageInputRef && this.messageInputRef.current) {\n        this.messageInputRef.current.focus();\n      }\n    };\n\n    this.emojiClicked = (emoji, event) => {\n      if (this.state.messageToReact) {\n        this.reactToMessages(emoji);\n        return;\n      }\n\n      const element = this.messageInputRef.current;\n      element.focus();\n      this.pasteHtmlAtCaret(emoji.native, false);\n      this.setState({\n        messageInput: element.innerText,\n        messageType: \"text\"\n      });\n    };\n\n    this.changeHandler = event => {\n      this.startTyping();\n      const elem = event.currentTarget;\n      let messageInput = elem.textContent.trim();\n\n      if (!messageInput.length) {\n        event.currentTarget.textContent = messageInput; //return false;\n      }\n\n      this.setState({\n        messageInput: elem.innerText,\n        messageType: \"text\"\n      });\n    };\n\n    this.toggleFilePicker = () => {\n      const currentState = !this.state.showFilePicker;\n      this.setState({\n        showFilePicker: currentState\n      });\n    };\n\n    this.openFileDialogue = fileType => {\n      switch (fileType) {\n        case \"image\":\n          this.imageUploaderRef.current.click();\n          break;\n\n        case \"file\":\n          this.fileUploaderRef.current.click();\n          break;\n\n        case \"audio\":\n          this.audioUploaderRef.current.click();\n          break;\n\n        case \"video\":\n          this.videoUploaderRef.current.click();\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.onImageChange = e => {\n      if (!this.imageUploaderRef.current.files[\"0\"]) {\n        return false;\n      }\n\n      const uploadedFile = this.imageUploaderRef.current.files[\"0\"];\n      var reader = new FileReader(); // Creating reader instance from FileReader() API\n\n      reader.addEventListener(\"load\", event => {\n        // Setting up base64 URL on image\n        const newFile = new File([reader.result], uploadedFile.name, uploadedFile);\n        this.sendMediaMessage(newFile, CometChat.MESSAGE_TYPE.IMAGE);\n      }, false);\n      reader.readAsArrayBuffer(uploadedFile);\n    };\n\n    this.onFileChange = e => {\n      if (!this.fileUploaderRef.current.files[\"0\"]) {\n        return false;\n      }\n\n      const uploadedFile = this.fileUploaderRef.current.files[\"0\"];\n      var reader = new FileReader(); // Creating reader instance from FileReader() API\n\n      reader.addEventListener(\"load\", event => {\n        // Setting up base64 URL on image\n        const newFile = new File([reader.result], uploadedFile.name, uploadedFile);\n        this.sendMediaMessage(newFile, CometChat.MESSAGE_TYPE.FILE);\n      }, false);\n      reader.readAsArrayBuffer(uploadedFile);\n    };\n\n    this.onAudioChange = e => {\n      if (!this.audioUploaderRef.current.files[\"0\"]) {\n        return false;\n      }\n\n      const uploadedFile = this.audioUploaderRef.current.files[\"0\"];\n      var reader = new FileReader(); // Creating reader instance from FileReader() API\n\n      reader.addEventListener(\"load\", () => {\n        // Setting up base64 URL on image\n        const newFile = new File([reader.result], uploadedFile.name, uploadedFile);\n        this.sendMediaMessage(newFile, CometChat.MESSAGE_TYPE.AUDIO);\n      }, false);\n      reader.readAsArrayBuffer(uploadedFile);\n    };\n\n    this.onVideoChange = e => {\n      if (!this.videoUploaderRef.current.files[\"0\"]) {\n        return false;\n      }\n\n      const uploadedFile = this.videoUploaderRef.current.files[\"0\"];\n      var reader = new FileReader(); // Creating reader instance from FileReader() API\n\n      reader.addEventListener(\"load\", () => {\n        // Setting up base64 URL on image\n        const newFile = new File([reader.result], uploadedFile.name, uploadedFile);\n        this.sendMediaMessage(newFile, CometChat.MESSAGE_TYPE.VIDEO);\n      }, false);\n      reader.readAsArrayBuffer(uploadedFile);\n    };\n\n    this.getReceiverDetails = () => {\n      let receiverId;\n      let receiverType;\n\n      if (this.context.type === CometChat.ACTION_TYPE.TYPE_USER) {\n        receiverId = this.context.item.uid;\n        receiverType = CometChat.RECEIVER_TYPE.USER;\n      } else if (this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP) {\n        receiverId = this.context.item.guid;\n        receiverType = CometChat.RECEIVER_TYPE.GROUP;\n      }\n\n      return {\n        receiverId: receiverId,\n        receiverType: receiverType\n      };\n    };\n\n    this.sendMediaMessage = (messageInput, messageType) => {\n      this.toggleFilePicker();\n      this.endTyping(null, null);\n      const {\n        receiverId,\n        receiverType\n      } = this.getReceiverDetails();\n      let mediaMessage = new CometChat.MediaMessage(receiverId, messageInput, messageType, receiverType);\n\n      if (this.props.parentMessageId) {\n        mediaMessage.setParentMessageId(this.props.parentMessageId);\n      }\n\n      mediaMessage.setSender(this.loggedInUser);\n      mediaMessage.setReceiver(this.context.type);\n      mediaMessage.setType(messageType);\n      mediaMessage.setData({\n        type: messageType,\n        category: CometChat.CATEGORY_MESSAGE,\n        name: messageInput[\"name\"],\n        file: messageInput\n      });\n      mediaMessage._composedAt = getUnixTimestamp();\n      mediaMessage._id = ID();\n      SoundManager.play(enums.CONSTANTS.AUDIO[\"OUTGOING_MESSAGE\"], this.context);\n      this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_COMPOSED\"], [mediaMessage]);\n      CometChat.sendMessage(mediaMessage).then(message => {\n        const newMessageObj = { ...message,\n          _id: mediaMessage._id\n        };\n        this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_SENT\"], [newMessageObj]);\n      }).catch(error => {\n        const newMessageObj = { ...mediaMessage,\n          error: error\n        };\n        this.props.actionGenerated(enums.ACTIONS[\"ERROR_IN_SENDING_MESSAGE\"], [newMessageObj]);\n      });\n    };\n\n    this.sendMessageOnEnter = event => {\n      if (event.keyCode === 13 && !event.shiftKey) {\n        event.preventDefault();\n        this.sendTextMessage();\n        return true;\n      }\n    };\n\n    this.sendTextMessage = () => {\n      if (this.state.emojiViewer) {\n        this.setState({\n          emojiViewer: false\n        });\n      }\n\n      if (!this.state.messageInput.trim().length) {\n        return false;\n      }\n\n      if (this.state.messageToBeEdited) {\n        this.editMessage();\n        return false;\n      }\n\n      this.endTyping(null, null);\n      let {\n        receiverId,\n        receiverType\n      } = this.getReceiverDetails();\n      let messageInput = this.state.messageInput.trim();\n      let textMessage = new CometChat.TextMessage(receiverId, messageInput, receiverType);\n\n      if (this.props.parentMessageId) {\n        textMessage.setParentMessageId(this.props.parentMessageId);\n      }\n\n      textMessage.setSender(this.loggedInUser);\n      textMessage.setReceiver(this.context.type);\n      textMessage.setText(messageInput);\n      textMessage._composedAt = getUnixTimestamp();\n      textMessage._id = ID();\n      this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_COMPOSED\"], [textMessage]);\n      this.setState({\n        messageInput: \"\",\n        replyPreview: false\n      });\n      this.messageInputRef.current.textContent = \"\";\n      SoundManager.play(enums.CONSTANTS.AUDIO[\"OUTGOING_MESSAGE\"], this.context);\n      CometChat.sendMessage(textMessage).then(message => {\n        const newMessageObj = { ...message,\n          _id: textMessage._id\n        };\n        this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_SENT\"], [newMessageObj]);\n      }).catch(error => {\n        const newMessageObj = { ...textMessage,\n          error: error\n        };\n        this.props.actionGenerated(enums.ACTIONS[\"ERROR_IN_SENDING_MESSAGE\"], [newMessageObj]);\n\n        if (error && error.hasOwnProperty(\"code\") && error.code === \"ERR_GUID_NOT_FOUND\") {//this.context.setDeletedGroupId(this.context.item.guid);\n        }\n      });\n    };\n\n    this.editMessage = () => {\n      this.endTyping(null, null);\n      const messageToBeEdited = this.props.messageToBeEdited;\n      let {\n        receiverId,\n        receiverType\n      } = this.getReceiverDetails();\n      let messageText = this.state.messageInput.trim();\n      let textMessage = new CometChat.TextMessage(receiverId, messageText, receiverType);\n      textMessage.setId(messageToBeEdited.id);\n      const newMessage = Object.assign({}, textMessage, {\n        messageFrom: messageToBeEdited.messageFrom\n      });\n      this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_EDITED\"], newMessage);\n      this.setState({\n        messageInput: \"\"\n      });\n      this.messageInputRef.current.textContent = \"\";\n      SoundManager.play(enums.CONSTANTS.AUDIO[\"OUTGOING_MESSAGE\"], this.context);\n      this.closeEditPreview();\n      CometChat.editMessage(textMessage).then(message => {\n        this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_EDITED\"], { ...message\n        });\n      }).catch(error => this.props.actionGenerated(enums.ACTIONS[\"ERROR\"], [], \"SOMETHING_WRONG\"));\n    };\n\n    this.closeEditPreview = () => {\n      this.props.actionGenerated(enums.ACTIONS[\"CLEAR_EDIT_PREVIEW\"]);\n    };\n\n    this.startTyping = (timer, metadata) => {\n      let typingInterval = timer || 5000; //if typing indicator feature is disabled\n\n      if (this.state.enableTypingIndicator === false) {\n        return false;\n      }\n\n      if (this.isTyping) {\n        return false;\n      }\n\n      let {\n        receiverId,\n        receiverType\n      } = this.getReceiverDetails();\n      let typingMetadata = metadata || undefined;\n      let typingNotification = new CometChat.TypingIndicator(receiverId, receiverType, typingMetadata);\n      CometChat.startTyping(typingNotification);\n      this.isTyping = setTimeout(() => {\n        this.endTyping(null, typingMetadata);\n      }, typingInterval);\n    };\n\n    this.endTyping = (event, metadata) => {\n      //fixing synthetic issue\n      if (event) {\n        event.persist();\n      } //if typing indicator is disabled for chat wigdet in dashboard\n\n\n      if (this.state.enableTypingIndicator === false) {\n        return false;\n      }\n\n      let {\n        receiverId,\n        receiverType\n      } = this.getReceiverDetails();\n      let typingMetadata = metadata || undefined;\n      let typingNotification = new CometChat.TypingIndicator(receiverId, receiverType, typingMetadata);\n      CometChat.endTyping(typingNotification);\n      clearTimeout(this.isTyping);\n      this.isTyping = null;\n    };\n\n    this.toggleStickerPicker = () => {\n      const stickerViewer = this.state.stickerViewer;\n      this.setState({\n        stickerViewer: !stickerViewer,\n        emojiViewer: false\n      });\n    };\n\n    this.toggleEmojiPicker = () => {\n      const emojiViewer = this.state.emojiViewer;\n      this.setState({\n        emojiViewer: !emojiViewer,\n        stickerViewer: false\n      });\n    };\n\n    this.toggleCreatePoll = () => {\n      const createPoll = this.state.createPoll;\n      this.setState({\n        createPoll: !createPoll\n      });\n    };\n\n    this.toggleCollaborativeDocument = () => {\n      const {\n        receiverId,\n        receiverType\n      } = this.getReceiverDetails();\n      CometChat.callExtension(\"document\", \"POST\", \"v1/create\", {\n        receiver: receiverId,\n        receiverType: receiverType\n      }).then(response => {\n        // Response with document url\n        if (response && response.hasOwnProperty(\"document_url\")) {\n          this.context.setToastMessage(\"success\", \"DOCUMENT_SUCCESS\");\n        } else {\n          this.context.setToastMessage(\"error\", \"DOCUMENT_FAIL\");\n        }\n      }).catch(error => this.props.actionGenerated(enums.ACTIONS[\"ERROR\"], [], \"SOMETHING_WRONG\"));\n    };\n\n    this.toggleCollaborativeBoard = () => {\n      const {\n        receiverId,\n        receiverType\n      } = this.getReceiverDetails();\n      CometChat.callExtension(\"whiteboard\", \"POST\", \"v1/create\", {\n        receiver: receiverId,\n        receiverType: receiverType\n      }).then(response => {\n        // Response with board_url\n        if (response && response.hasOwnProperty(\"board_url\")) {\n          this.context.setToastMessage(\"success\", \"WHITEBOARD_SUCCESS\");\n        } else {\n          this.context.setToastMessage(\"error\", \"WHITEBOARD_FAIL\");\n        }\n      }).catch(error => this.props.actionGenerated(enums.ACTIONS[\"ERROR\"], [], \"SOMETHING_WRONG\"));\n    };\n\n    this.closeCreatePoll = () => {\n      this.toggleCreatePoll();\n      this.toggleFilePicker();\n    };\n\n    this.actionHandler = (action, message) => {\n      switch (action) {\n        case enums.ACTIONS[\"POLL_CREATED\"]:\n          this.toggleCreatePoll();\n          this.toggleFilePicker();\n          break;\n\n        case enums.ACTIONS[\"SEND_STICKER\"]:\n          this.sendSticker(message);\n          break;\n\n        case enums.ACTIONS[\"CLOSE_STICKER_KEYBOARD\"]:\n          this.toggleStickerPicker();\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.sendSticker = stickerMessage => {\n      const {\n        receiverId,\n        receiverType\n      } = this.getReceiverDetails();\n      const customData = {\n        sticker_url: stickerMessage.stickerUrl,\n        sticker_name: stickerMessage.stickerName\n      };\n      const customType = enums.CUSTOM_TYPE_STICKER;\n      const customMessage = new CometChat.CustomMessage(receiverId, receiverType, customType, customData);\n\n      if (this.props.parentMessageId) {\n        customMessage.setParentMessageId(this.props.parentMessageId);\n      }\n\n      customMessage.setSender(this.loggedInUser);\n      customMessage.setReceiver(this.context.type);\n      customMessage.setMetadata({\n        incrementUnreadCount: true\n      });\n      customMessage._composedAt = getUnixTimestamp();\n      customMessage._id = ID();\n      this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_COMPOSED\"], [customMessage]);\n      SoundManager.play(enums.CONSTANTS.AUDIO[\"OUTGOING_MESSAGE\"], this.context);\n      CometChat.sendCustomMessage(customMessage).then(message => {\n        const newMessageObj = { ...message,\n          _id: customMessage._id\n        };\n        this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_SENT\"], [newMessageObj]);\n      }).catch(error => {\n        const newMessageObj = { ...customMessage,\n          error: error\n        };\n        this.props.actionGenerated(enums.ACTIONS[\"ERROR_IN_SENDING_MESSAGE\"], [newMessageObj]);\n      });\n    };\n\n    this.sendReplyMessage = messageInput => {\n      let {\n        receiverId,\n        receiverType\n      } = this.getReceiverDetails();\n      let textMessage = new CometChat.TextMessage(receiverId, messageInput, receiverType);\n\n      if (this.props.parentMessageId) {\n        textMessage.setParentMessageId(this.props.parentMessageId);\n      }\n\n      textMessage.setSender(this.loggedInUser);\n      textMessage.setReceiver(this.context.type);\n      textMessage._composedAt = getUnixTimestamp();\n      textMessage._id = ID();\n      this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_COMPOSED\"], [textMessage]);\n      SoundManager.play(enums.CONSTANTS.AUDIO[\"OUTGOING_MESSAGE\"], this.context);\n      this.setState({\n        replyPreview: null\n      });\n      CometChat.sendMessage(textMessage).then(message => {\n        const newMessageObj = { ...message,\n          _id: textMessage._id\n        };\n        this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_SENT\"], [newMessageObj]);\n      }).catch(error => {\n        const newMessageObj = { ...textMessage,\n          error: error\n        };\n        this.props.actionGenerated(enums.ACTIONS[\"ERROR_IN_SENDING_MESSAGE\"], [newMessageObj]);\n      });\n    };\n\n    this.clearReplyPreview = () => {\n      this.setState({\n        replyPreview: null\n      });\n    };\n\n    this.sendReaction = event => {\n      const typingInterval = 1000;\n      const typingMetadata = {\n        type: enums.CONSTANTS[\"METADATA_TYPE_LIVEREACTION\"],\n        reaction: this.props.reaction\n      };\n      this.startTyping(typingInterval, typingMetadata);\n      this.props.actionGenerated(enums.ACTIONS[\"SEND_LIVE_REACTION\"]);\n      event.persist();\n      setTimeout(() => {\n        //this.endTyping(null, typingMetadata);\n        this.props.actionGenerated(enums.ACTIONS[\"STOP_LIVE_REACTION\"]);\n      }, typingInterval);\n    };\n\n    this.reactToMessages = emoji => {\n      CometChat.callExtension(\"reactions\", \"POST\", \"v1/react\", {\n        msgId: this.state.messageToReact.id,\n        emoji: emoji.colons\n      }).then(response => {\n        if (response.hasOwnProperty(\"success\") && response[\"success\"] === true) {\n          this.toggleEmojiPicker();\n        } else {\n          this.props.actionGenerated(enums.ACTIONS[\"ERROR\"], [], \"SOMETHING_WRONG\");\n        }\n      }).catch(error => this.props.actionGenerated(enums.ACTIONS[\"ERROR\"], [], \"SOMETHING_WRONG\"));\n    };\n\n    this.imageUploaderRef = /*#__PURE__*/React.createRef();\n    this.fileUploaderRef = /*#__PURE__*/React.createRef();\n    this.audioUploaderRef = /*#__PURE__*/React.createRef();\n    this.videoUploaderRef = /*#__PURE__*/React.createRef();\n    this.messageInputRef = /*#__PURE__*/React.createRef();\n    this.isTyping = false;\n    this.state = {\n      showFilePicker: false,\n      messageInput: \"\",\n      messageType: \"\",\n      emojiViewer: false,\n      createPoll: false,\n      messageToBeEdited: \"\",\n      replyPreview: null,\n      stickerViewer: false,\n      messageToReact: \"\",\n      shareDocument: false,\n      shareWhiteboard: false,\n      enableLiveReaction: false,\n      enablePolls: false,\n      enableTypingIndicator: false,\n      enableStickers: false,\n      enablePhotosVideos: false,\n      enableFiles: false,\n      enableEmojis: false,\n      enableCollaborativeDocument: false,\n      enableCollaborativeWhiteboard: false\n    };\n  }\n\n  componentDidMount() {\n    CometChat.getLoggedinUser().then(user => this.loggedInUser = user).catch(error => this.props.actionGenerated(enums.ACTIONS[\"ERROR\"], [], \"SOMETHING_WRONG\"));\n    this.item = this.context.type === CometChat.ACTION_TYPE.TYPE_USER || this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP ? this.context.item : null;\n    this.enableLiveReaction();\n    this.enablePolls();\n    this.enableTypingIndicator();\n    this.enableStickers();\n    this.enablePhotosVideos();\n    this.enableFiles();\n    this.enableEmojis();\n    this.enableCollaborativeDocument();\n    this.enableCollaborativeWhiteboard();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.messageToBeEdited !== this.props.messageToBeEdited) {\n      const messageToBeEdited = this.props.messageToBeEdited;\n      this.setState({\n        messageInput: messageToBeEdited,\n        messageToBeEdited: messageToBeEdited\n      });\n      const element = this.messageInputRef.current;\n\n      if (messageToBeEdited) {\n        let messageText = messageToBeEdited.text; //xss extensions data\n\n        const xssData = checkMessageForExtensionsData(messageToBeEdited, \"xss-filter\");\n\n        if (xssData && xssData.hasOwnProperty(\"sanitized_text\") && xssData.hasOwnProperty(\"hasXSS\") && xssData.hasXSS === \"yes\") {\n          messageText = xssData.sanitized_text;\n        }\n\n        element.focus();\n        element.textContent = \"\";\n        this.pasteHtmlAtCaret(messageText, false);\n      } else {\n        element.textContent = \"\";\n      }\n    }\n\n    if (prevProps.replyPreview !== this.props.replyPreview) {\n      this.setState({\n        replyPreview: this.props.replyPreview\n      });\n    }\n\n    const previousMessageStr = JSON.stringify(prevProps.messageToReact);\n    const currentMessageStr = JSON.stringify(this.props.messageToReact);\n\n    if (previousMessageStr !== currentMessageStr) {\n      this.setState({\n        messageToReact: this.props.messageToReact\n      });\n    }\n\n    if (this.context.item !== this.item) {\n      this.messageInputRef.current.textContent = \"\";\n      this.setState({\n        stickerViewer: false,\n        emojiViewer: false,\n        replyPreview: null,\n        messageToBeEdited: \"\",\n        messageInput: \"\"\n      });\n      this.focusOnMessageComposer();\n    }\n\n    if (prevState.messageInput !== this.state.messageInput) {\n      this.focusOnMessageComposer();\n    }\n\n    this.item = this.context.type === CometChat.ACTION_TYPE.TYPE_USER || this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP ? this.context.item : null;\n    this.enableLiveReaction();\n    this.enablePolls();\n    this.enableTypingIndicator();\n    this.enableStickers();\n    this.enablePhotosVideos();\n    this.enableFiles();\n    this.enableEmojis();\n    this.enableCollaborativeDocument();\n    this.enableCollaborativeWhiteboard();\n  }\n  /**\n   * if live reactions feature is disabled\n   */\n\n\n  pasteHtmlAtCaret(html, selectPastedContent) {\n    var sel, range;\n    const chatWindow = this.context.UIKitSettings.chatWindow;\n\n    if (chatWindow.getSelection) {\n      // IE9 and non-IE\n      sel = chatWindow.getSelection();\n\n      if (sel.getRangeAt && sel.rangeCount) {\n        range = sel.getRangeAt(0);\n        range.deleteContents(); // Range.createContextualFragment() would be useful here but is\n        // only relatively recently standardized and is not supported in\n        // some browsers (IE9, for one)\n\n        var el = document.createElement(\"div\");\n        el.innerText = html;\n        var frag = document.createDocumentFragment(),\n            node,\n            lastNode;\n\n        while (node = el.firstChild) {\n          lastNode = frag.appendChild(node);\n        }\n\n        var firstNode = frag.firstChild;\n        range.insertNode(frag); // Preserve the selection\n\n        if (lastNode) {\n          range = range.cloneRange();\n          range.setStartAfter(lastNode);\n\n          if (selectPastedContent) {\n            range.setStartBefore(firstNode);\n          } else {\n            range.collapse(true);\n          }\n\n          sel.removeAllRanges();\n          sel.addRange(range);\n        }\n      }\n    } else if ((sel = document.selection) && sel.type !== \"Control\") {\n      // IE < 9\n      var originalRange = sel.createRange();\n      originalRange.collapse(true);\n      sel.createRange().pasteHTML(html);\n\n      if (selectPastedContent) {\n        range = sel.createRange();\n        range.setEndPoint(\"StartToStart\", originalRange);\n        range.select();\n      }\n    }\n  }\n\n  render() {\n    let liveReactionBtn = null;\n    const liveReactionText = Translator.translate(\"LIVE_REACTION\", this.props.lang);\n\n    if (enums.CONSTANTS[\"LIVE_REACTIONS\"].hasOwnProperty(this.props.reaction)) {\n      const reactionName = this.props.reaction;\n      liveReactionBtn = jsx(\"div\", {\n        title: liveReactionText,\n        css: reactionBtnStyle(),\n        className: \"button__reactions\",\n        onClick: this.sendReaction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1029,\n          columnNumber: 9\n        }\n      }, jsx(\"img\", {\n        src: heartIcon,\n        alt: reactionName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1035,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    let disabledState = false;\n\n    if (this.context.item.blockedByMe) {\n      disabledState = true;\n    }\n\n    const docText = Translator.translate(\"ATTACH_FILE\", this.props.lang);\n    let docs = jsx(\"div\", {\n      title: docText,\n      css: fileItemStyle(docIcon, this.context),\n      className: \"filelist__item item__file\",\n      onClick: () => {\n        this.openFileDialogue(\"file\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1047,\n        columnNumber: 7\n      }\n    }, jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1055,\n        columnNumber: 9\n      }\n    }), jsx(\"input\", {\n      onChange: this.onFileChange,\n      type: \"file\",\n      id: \"file\",\n      ref: this.fileUploaderRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1056,\n        columnNumber: 9\n      }\n    }));\n    const videoText = Translator.translate(\"ATTACH_VIDEO\", this.props.lang);\n    const audioText = Translator.translate(\"ATTACH_AUDIO\", this.props.lang);\n    const imageText = Translator.translate(\"ATTACH_IMAGE\", this.props.lang);\n    let avp = jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 7\n      }\n    }, jsx(\"div\", {\n      title: videoText,\n      css: fileItemStyle(videoIcon, this.context),\n      className: \"filelist__item item__video\",\n      onClick: () => {\n        this.openFileDialogue(\"video\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1070,\n        columnNumber: 9\n      }\n    }, jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1078,\n        columnNumber: 11\n      }\n    }), jsx(\"input\", {\n      onChange: this.onVideoChange,\n      accept: \"video/*\",\n      type: \"file\",\n      ref: this.videoUploaderRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1079,\n        columnNumber: 11\n      }\n    })), jsx(\"div\", {\n      title: audioText,\n      css: fileItemStyle(audioIcon, this.context),\n      className: \"filelist__item item__audio\",\n      onClick: () => {\n        this.openFileDialogue(\"audio\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1086,\n        columnNumber: 9\n      }\n    }, jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1094,\n        columnNumber: 11\n      }\n    }), jsx(\"input\", {\n      onChange: this.onAudioChange,\n      accept: \"audio/*\",\n      type: \"file\",\n      ref: this.audioUploaderRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1095,\n        columnNumber: 11\n      }\n    })), jsx(\"div\", {\n      title: imageText,\n      css: fileItemStyle(imageIcon, this.context),\n      className: \"filelist__item item__image\",\n      onClick: () => {\n        this.openFileDialogue(\"image\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1102,\n        columnNumber: 9\n      }\n    }, jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1110,\n        columnNumber: 11\n      }\n    }), jsx(\"input\", {\n      onChange: this.onImageChange,\n      accept: \"image/*\",\n      type: \"file\",\n      ref: this.imageUploaderRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1111,\n        columnNumber: 11\n      }\n    })));\n    const pollText = Translator.translate(\"CREATE_POLL\", this.props.lang);\n    let createPollBtn = jsx(\"div\", {\n      title: pollText,\n      css: fileItemStyle(pollIcon, this.context),\n      className: \"filelist__item item__poll\",\n      onClick: this.toggleCreatePoll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1123,\n        columnNumber: 7\n      }\n    }, jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1129,\n        columnNumber: 9\n      }\n    }));\n    const collaborativeDocText = Translator.translate(\"COLLABORATE_USING_DOCUMENT\", this.props.lang);\n    let collaborativeDocBtn = jsx(\"div\", {\n      title: collaborativeDocText,\n      css: fileItemStyle(documentIcon, this.context),\n      className: \"filelist__item item__document\",\n      onClick: this.toggleCollaborativeDocument,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1138,\n        columnNumber: 7\n      }\n    }, jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1144,\n        columnNumber: 9\n      }\n    }));\n    const collaborativeBoardText = Translator.translate(\"COLLABORATE_USING_WHITEBOARD\", this.props.lang);\n    let collaborativeBoardBtn = jsx(\"div\", {\n      title: collaborativeBoardText,\n      css: fileItemStyle(whiteboardIcon, this.context),\n      className: \"filelist__item item__whiteboard\",\n      onClick: this.toggleCollaborativeBoard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1153,\n        columnNumber: 7\n      }\n    }, jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1159,\n        columnNumber: 9\n      }\n    }));\n    const emojiText = Translator.translate(\"EMOJI\", this.props.lang);\n    let emojiBtn = jsx(\"div\", {\n      title: emojiText,\n      css: emojiButtonStyle(insertEmoticon, this.context),\n      className: \"button__emoji\",\n      onClick: () => {\n        this.toggleEmojiPicker();\n        this.setState({\n          messageToReact: \"\"\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1165,\n        columnNumber: 7\n      }\n    }, jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1174,\n        columnNumber: 9\n      }\n    }));\n    const StickerText = Translator.translate(\"STICKER\", this.props.lang);\n    let stickerBtn = jsx(\"div\", {\n      title: StickerText,\n      css: stickerBtnStyle(stickerIcon, this.context),\n      className: \"button__sticker\",\n      onClick: this.toggleStickerPicker,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1180,\n        columnNumber: 7\n      }\n    }, jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1186,\n        columnNumber: 9\n      }\n    }));\n    const sendMessageText = Translator.translate(\"SEND_MESSAGE\", this.props.lang);\n    let sendBtn = jsx(\"div\", {\n      title: sendMessageText,\n      css: sendButtonStyle(sendBlue, this.context),\n      className: \"button__send\",\n      onClick: this.sendTextMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1195,\n        columnNumber: 7\n      }\n    }, jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1201,\n        columnNumber: 9\n      }\n    })); //if uploading photos, videos feature is disabled\n\n    if (this.state.enablePhotosVideos === false) {\n      avp = null;\n    } //if files upload are disabled for chat widget in dashboard\n\n\n    if (this.state.enableFiles === false) {\n      docs = null;\n    } //if polls feature is disabled\n\n\n    if (this.state.enablePolls === false || this.props.parentMessageId) {\n      createPollBtn = null;\n    } //if collaborative_document are disabled for chat widget in dashboard\n\n\n    if (this.state.enableCollaborativeDocument === false || this.props.parentMessageId) {\n      collaborativeDocBtn = null;\n    } //if collaborative_document are disabled for chat widget in dashboard\n\n\n    if (this.state.enableCollaborativeWhiteboard === false || this.props.parentMessageId) {\n      collaborativeBoardBtn = null;\n    } //if emojis are disabled for chat widget in dashboard\n\n\n    if (this.state.enableEmojis === false) {\n      emojiBtn = null;\n    } //if live reactions is disabled for chat widget in dashboard\n\n\n    if (this.state.enableLiveReaction === false || this.state.messageInput.length) {\n      liveReactionBtn = null;\n    } //if stickers is disabled for chat widget in dashboard\n\n\n    if (this.state.enableStickers === false) {\n      stickerBtn = null;\n    }\n\n    if (!this.state.messageInput.length) {\n      sendBtn = null;\n    }\n\n    const attachText = Translator.translate(\"ATTACH\", this.props.lang);\n    let attach = jsx(\"div\", {\n      css: stickyAttachmentStyle(),\n      className: \"input__sticky__attachment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1260,\n        columnNumber: 7\n      }\n    }, jsx(\"div\", {\n      css: stickyAttachButtonStyle(roundedPlus, this.context),\n      className: \"attachment__icon\",\n      onClick: this.toggleFilePicker,\n      title: attachText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1261,\n        columnNumber: 9\n      }\n    }, jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1267,\n        columnNumber: 11\n      }\n    })), jsx(\"div\", {\n      css: filePickerStyle(this.state),\n      className: \"attachment__filepicker\",\n      dir: Translator.getDirection(this.props.lang),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1269,\n        columnNumber: 9\n      }\n    }, jsx(\"div\", {\n      css: fileListStyle(),\n      className: \"filepicker__filelist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1274,\n        columnNumber: 11\n      }\n    }, avp, docs, createPollBtn, collaborativeDocBtn, collaborativeBoardBtn)));\n\n    if (avp === null && docs === null && createPollBtn === null && collaborativeDocBtn === null && collaborativeBoardBtn === null) {\n      attach = null;\n    }\n\n    let createPoll = null;\n\n    if (this.state.createPoll) {\n      createPoll = jsx(CometChatCreatePoll, {\n        theme: this.props.theme,\n        open: this.state.createPoll,\n        close: this.closeCreatePoll,\n        lang: this.props.lang,\n        widgetsettings: this.props.widgetsettings,\n        actionGenerated: this.actionHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1298,\n          columnNumber: 9\n        }\n      });\n    }\n\n    let editPreview = null;\n\n    if (this.state.messageToBeEdited) {\n      let messageText = this.state.messageToBeEdited.text; //xss extensions data\n\n      const xssData = checkMessageForExtensionsData(this.state.messageToBeEdited, \"xss-filter\");\n\n      if (xssData && xssData.hasOwnProperty(\"sanitized_text\") && xssData.hasOwnProperty(\"hasXSS\") && xssData.hasXSS === \"yes\") {\n        messageText = xssData.sanitized_text;\n      } //datamasking extensions data\n\n\n      const maskedData = checkMessageForExtensionsData(this.state.messageToBeEdited, \"data-masking\");\n\n      if (maskedData && maskedData.hasOwnProperty(\"data\") && maskedData.data.hasOwnProperty(\"sensitive_data\") && maskedData.data.hasOwnProperty(\"message_masked\") && maskedData.data.sensitive_data === \"yes\") {\n        messageText = maskedData.data.message_masked;\n      } //profanity extensions data\n\n\n      const profaneData = checkMessageForExtensionsData(this.state.messageToBeEdited, \"profanity-filter\");\n\n      if (profaneData && profaneData.hasOwnProperty(\"profanity\") && profaneData.hasOwnProperty(\"message_clean\") && profaneData.profanity === \"yes\") {\n        messageText = profaneData.message_clean;\n      }\n\n      editPreview = jsx(\"div\", {\n        css: editPreviewContainerStyle(this.context, keyframes),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1357,\n          columnNumber: 9\n        }\n      }, jsx(\"div\", {\n        css: previewHeadingStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1358,\n          columnNumber: 11\n        }\n      }, jsx(\"div\", {\n        css: previewTextStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1359,\n          columnNumber: 13\n        }\n      }, Translator.translate(\"EDIT_MESSAGE\", this.props.lang)), jsx(\"span\", {\n        css: previewCloseStyle(closeIcon, this.context),\n        onClick: this.closeEditPreview,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1362,\n          columnNumber: 13\n        }\n      })), jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1367,\n          columnNumber: 11\n        }\n      }, messageText));\n    }\n\n    let smartReplyPreview = null;\n\n    if (this.state.replyPreview) {\n      const message = this.state.replyPreview;\n      const smartReplyData = checkMessageForExtensionsData(message, \"smart-reply\");\n\n      if (smartReplyData && smartReplyData.hasOwnProperty(\"error\") === false) {\n        const options = [smartReplyData[\"reply_positive\"], smartReplyData[\"reply_neutral\"], smartReplyData[\"reply_negative\"]];\n        smartReplyPreview = jsx(CometChatSmartReplyPreview, _extends({}, this.props, {\n          options: options,\n          clicked: this.sendReplyMessage,\n          close: this.clearReplyPreview,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1387,\n            columnNumber: 11\n          }\n        }));\n      }\n    }\n\n    let stickerViewer = null;\n\n    if (this.state.stickerViewer) {\n      stickerViewer = jsx(CometChatStickerKeyboard, {\n        theme: this.props.theme,\n        lang: this.props.lang,\n        widgetsettings: this.props.widgetsettings,\n        actionGenerated: this.actionHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1400,\n          columnNumber: 9\n        }\n      });\n    }\n\n    let emojiViewer = null;\n\n    if (this.state.emojiViewer) {\n      emojiViewer = jsx(CometChatEmojiKeyboard, {\n        lang: this.props.lang,\n        emojiClicked: this.emojiClicked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1412,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return jsx(\"div\", {\n      css: chatComposerStyle(this.context),\n      className: \"chat__composer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1420,\n        columnNumber: 7\n      }\n    }, editPreview, smartReplyPreview, stickerViewer, emojiViewer, jsx(\"div\", {\n      css: composerInputStyle(),\n      className: \"composer__input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1425,\n        columnNumber: 9\n      }\n    }, jsx(\"div\", {\n      tabIndex: \"-1\",\n      css: inputInnerStyle(this.props, this.state, this.context),\n      className: \"input__inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1426,\n        columnNumber: 11\n      }\n    }, jsx(\"div\", {\n      css: messageInputStyle(disabledState),\n      className: \"input__message-input\",\n      contentEditable: \"true\",\n      placeholder: Translator.translate(\"ENTER_YOUR_MESSAGE_HERE\", this.props.lang),\n      dir: Translator.getDirection(this.props.lang),\n      onInput: this.changeHandler,\n      onBlur: event => this.endTyping(event),\n      onKeyDown: this.sendMessageOnEnter,\n      ref: this.messageInputRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1431,\n        columnNumber: 13\n      }\n    }), jsx(\"div\", {\n      css: inputStickyStyle(disabledState, attach, this.context),\n      className: \"input__sticky\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1445,\n        columnNumber: 13\n      }\n    }, attach, jsx(\"div\", {\n      css: stickyButtonStyle(this.state),\n      className: \"input__sticky__buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1450,\n        columnNumber: 15\n      }\n    }, stickerBtn, emojiBtn, sendBtn, liveReactionBtn)))), createPoll);\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatMessageComposer.contextType = CometChatContext;\nCometChatMessageComposer.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  reaction: \"heart\"\n};\nCometChatMessageComposer.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  reaction: PropTypes.string\n};\nexport { CometChatMessageComposer };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatMessageComposer/index.js"],"names":["React","jsx","keyframes","PropTypes","CometChat","CometChatSmartReplyPreview","CometChatCreatePoll","CometChatStickerKeyboard","CometChatEmojiKeyboard","CometChatContext","checkMessageForExtensionsData","ID","getUnixTimestamp","enums","SoundManager","theme","Translator","chatComposerStyle","editPreviewContainerStyle","previewHeadingStyle","previewCloseStyle","previewTextStyle","composerInputStyle","inputInnerStyle","messageInputStyle","inputStickyStyle","stickyAttachmentStyle","filePickerStyle","fileListStyle","fileItemStyle","stickyAttachButtonStyle","stickyButtonStyle","emojiButtonStyle","sendButtonStyle","reactionBtnStyle","stickerBtnStyle","heartIcon","CometChatMessageComposer","PureComponent","constructor","props","enableLiveReaction","context","FeatureRestriction","isLiveReactionsEnabled","then","response","state","setState","catch","error","enablePolls","isPollsEnabled","enableTypingIndicator","isTypingIndicatorsEnabled","enableStickers","isStickersEnabled","enablePhotosVideos","isPhotosVideosEnabled","enableFiles","isFilesEnabled","enableEmojis","isEmojisEnabled","enableCollaborativeDocument","isCollaborativeDocumentEnabled","enableCollaborativeWhiteboard","isCollaborativeWhiteBoardEnabled","focusOnMessageComposer","messageInputRef","current","focus","emojiClicked","emoji","event","messageToReact","reactToMessages","element","pasteHtmlAtCaret","native","messageInput","innerText","messageType","changeHandler","startTyping","elem","currentTarget","textContent","trim","length","toggleFilePicker","currentState","showFilePicker","openFileDialogue","fileType","imageUploaderRef","click","fileUploaderRef","audioUploaderRef","videoUploaderRef","onImageChange","e","files","uploadedFile","reader","FileReader","addEventListener","newFile","File","result","name","sendMediaMessage","MESSAGE_TYPE","IMAGE","readAsArrayBuffer","onFileChange","FILE","onAudioChange","AUDIO","onVideoChange","VIDEO","getReceiverDetails","receiverId","receiverType","type","ACTION_TYPE","TYPE_USER","item","uid","RECEIVER_TYPE","USER","TYPE_GROUP","guid","GROUP","endTyping","mediaMessage","MediaMessage","parentMessageId","setParentMessageId","setSender","loggedInUser","setReceiver","setType","setData","category","CATEGORY_MESSAGE","file","_composedAt","_id","play","CONSTANTS","actionGenerated","ACTIONS","sendMessage","message","newMessageObj","sendMessageOnEnter","keyCode","shiftKey","preventDefault","sendTextMessage","emojiViewer","messageToBeEdited","editMessage","textMessage","TextMessage","setText","replyPreview","hasOwnProperty","code","messageText","setId","id","newMessage","Object","assign","messageFrom","closeEditPreview","timer","metadata","typingInterval","isTyping","typingMetadata","undefined","typingNotification","TypingIndicator","setTimeout","persist","clearTimeout","toggleStickerPicker","stickerViewer","toggleEmojiPicker","toggleCreatePoll","createPoll","toggleCollaborativeDocument","callExtension","receiver","setToastMessage","toggleCollaborativeBoard","closeCreatePoll","actionHandler","action","sendSticker","stickerMessage","customData","sticker_url","stickerUrl","sticker_name","stickerName","customType","CUSTOM_TYPE_STICKER","customMessage","CustomMessage","setMetadata","incrementUnreadCount","sendCustomMessage","sendReplyMessage","clearReplyPreview","sendReaction","reaction","msgId","colons","createRef","shareDocument","shareWhiteboard","componentDidMount","getLoggedinUser","user","componentDidUpdate","prevProps","prevState","text","xssData","hasXSS","sanitized_text","previousMessageStr","JSON","stringify","currentMessageStr","html","selectPastedContent","sel","range","chatWindow","UIKitSettings","getSelection","getRangeAt","rangeCount","deleteContents","el","document","createElement","frag","createDocumentFragment","node","lastNode","firstChild","appendChild","firstNode","insertNode","cloneRange","setStartAfter","setStartBefore","collapse","removeAllRanges","addRange","selection","originalRange","createRange","pasteHTML","setEndPoint","select","render","liveReactionBtn","liveReactionText","translate","lang","reactionName","disabledState","blockedByMe","docText","docs","docIcon","videoText","audioText","imageText","avp","videoIcon","audioIcon","imageIcon","pollText","createPollBtn","pollIcon","collaborativeDocText","collaborativeDocBtn","documentIcon","collaborativeBoardText","collaborativeBoardBtn","whiteboardIcon","emojiText","emojiBtn","insertEmoticon","StickerText","stickerBtn","stickerIcon","sendMessageText","sendBtn","sendBlue","attachText","attach","roundedPlus","getDirection","widgetsettings","editPreview","maskedData","data","sensitive_data","message_masked","profaneData","profanity","message_clean","closeIcon","smartReplyPreview","smartReplyData","options","contextType","defaultProps","getDefaultLanguage","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx, keyframes } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport \"emoji-mart/css/emoji-mart.css\";\n\nimport {\n  CometChatSmartReplyPreview,\n  CometChatCreatePoll,\n  CometChatStickerKeyboard,\n} from \"../Extensions\";\nimport { CometChatEmojiKeyboard } from \"../\";\n\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport {\n  checkMessageForExtensionsData,\n  ID,\n  getUnixTimestamp,\n} from \"../../../util/common\";\nimport * as enums from \"../../../util/enums.js\";\nimport { SoundManager } from \"../../../util/SoundManager\";\n\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\n\nimport {\n  chatComposerStyle,\n  editPreviewContainerStyle,\n  previewHeadingStyle,\n  previewCloseStyle,\n  previewTextStyle,\n  composerInputStyle,\n  inputInnerStyle,\n  messageInputStyle,\n  inputStickyStyle,\n  stickyAttachmentStyle,\n  filePickerStyle,\n  fileListStyle,\n  fileItemStyle,\n  stickyAttachButtonStyle,\n  stickyButtonStyle,\n  emojiButtonStyle,\n  sendButtonStyle,\n  reactionBtnStyle,\n  stickerBtnStyle,\n} from \"./style\";\n\nimport roundedPlus from \"./resources/add-circle-filled.svg\";\nimport videoIcon from \"./resources/video.svg\";\nimport audioIcon from \"./resources/audio-file.svg\";\nimport docIcon from \"./resources/file-upload.svg\";\nimport imageIcon from \"./resources/image.svg\";\nimport insertEmoticon from \"./resources/emoji.svg\";\nimport sendBlue from \"./resources/send-message.svg\";\nimport pollIcon from \"./resources/polls.svg\";\nimport stickerIcon from \"./resources/stickers.svg\";\nimport closeIcon from \"./resources/close.svg\";\nimport documentIcon from \"./resources/collaborative-document.svg\";\nimport whiteboardIcon from \"./resources/collaborative-whiteboard.svg\";\nimport heartIcon from \"./resources/heart.png\";\n\nclass CometChatMessageComposer extends React.PureComponent {\n  static contextType = CometChatContext;\n\n  constructor(props) {\n    super(props);\n\n    this.imageUploaderRef = React.createRef();\n    this.fileUploaderRef = React.createRef();\n    this.audioUploaderRef = React.createRef();\n    this.videoUploaderRef = React.createRef();\n    this.messageInputRef = React.createRef();\n\n    this.isTyping = false;\n\n    this.state = {\n      showFilePicker: false,\n      messageInput: \"\",\n      messageType: \"\",\n      emojiViewer: false,\n      createPoll: false,\n      messageToBeEdited: \"\",\n      replyPreview: null,\n      stickerViewer: false,\n      messageToReact: \"\",\n      shareDocument: false,\n      shareWhiteboard: false,\n      enableLiveReaction: false,\n      enablePolls: false,\n      enableTypingIndicator: false,\n      enableStickers: false,\n      enablePhotosVideos: false,\n      enableFiles: false,\n      enableEmojis: false,\n      enableCollaborativeDocument: false,\n      enableCollaborativeWhiteboard: false,\n    };\n  }\n\n  componentDidMount() {\n    CometChat.getLoggedinUser()\n      .then((user) => (this.loggedInUser = user))\n      .catch((error) =>\n        this.props.actionGenerated(\n          enums.ACTIONS[\"ERROR\"],\n          [],\n          \"SOMETHING_WRONG\"\n        )\n      );\n\n    this.item =\n      this.context.type === CometChat.ACTION_TYPE.TYPE_USER ||\n      this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP\n        ? this.context.item\n        : null;\n    this.enableLiveReaction();\n    this.enablePolls();\n    this.enableTypingIndicator();\n    this.enableStickers();\n    this.enablePhotosVideos();\n    this.enableFiles();\n    this.enableEmojis();\n    this.enableCollaborativeDocument();\n    this.enableCollaborativeWhiteboard();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.messageToBeEdited !== this.props.messageToBeEdited) {\n      const messageToBeEdited = this.props.messageToBeEdited;\n\n      this.setState({\n        messageInput: messageToBeEdited,\n        messageToBeEdited: messageToBeEdited,\n      });\n\n      const element = this.messageInputRef.current;\n      if (messageToBeEdited) {\n        let messageText = messageToBeEdited.text;\n\n        //xss extensions data\n        const xssData = checkMessageForExtensionsData(\n          messageToBeEdited,\n          \"xss-filter\"\n        );\n        if (\n          xssData &&\n          xssData.hasOwnProperty(\"sanitized_text\") &&\n          xssData.hasOwnProperty(\"hasXSS\") &&\n          xssData.hasXSS === \"yes\"\n        ) {\n          messageText = xssData.sanitized_text;\n        }\n\n        element.focus();\n        element.textContent = \"\";\n        this.pasteHtmlAtCaret(messageText, false);\n      } else {\n        element.textContent = \"\";\n      }\n    }\n\n    if (prevProps.replyPreview !== this.props.replyPreview) {\n      this.setState({ replyPreview: this.props.replyPreview });\n    }\n\n    const previousMessageStr = JSON.stringify(prevProps.messageToReact);\n    const currentMessageStr = JSON.stringify(this.props.messageToReact);\n\n    if (previousMessageStr !== currentMessageStr) {\n      this.setState({ messageToReact: this.props.messageToReact });\n    }\n\n    if (this.context.item !== this.item) {\n      this.messageInputRef.current.textContent = \"\";\n      this.setState({\n        stickerViewer: false,\n        emojiViewer: false,\n        replyPreview: null,\n        messageToBeEdited: \"\",\n        messageInput: \"\",\n      });\n\n      this.focusOnMessageComposer();\n    }\n\n    if (prevState.messageInput !== this.state.messageInput) {\n      this.focusOnMessageComposer();\n    }\n\n    this.item =\n      this.context.type === CometChat.ACTION_TYPE.TYPE_USER ||\n      this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP\n        ? this.context.item\n        : null;\n    this.enableLiveReaction();\n    this.enablePolls();\n    this.enableTypingIndicator();\n    this.enableStickers();\n    this.enablePhotosVideos();\n    this.enableFiles();\n    this.enableEmojis();\n    this.enableCollaborativeDocument();\n    this.enableCollaborativeWhiteboard();\n  }\n\n  /**\n   * if live reactions feature is disabled\n   */\n  enableLiveReaction = () => {\n    this.context.FeatureRestriction.isLiveReactionsEnabled()\n      .then((response) => {\n        if (response !== this.state.enableLiveReaction) {\n          this.setState({ enableLiveReaction: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableLiveReaction !== false) {\n          this.setState({ enableLiveReaction: false });\n        }\n      });\n  };\n\n  /**\n   * if polls feature is disabled\n   */\n  enablePolls = () => {\n    this.context.FeatureRestriction.isPollsEnabled()\n      .then((response) => {\n        if (response !== this.state.enablePolls) {\n          this.setState({ enablePolls: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enablePolls !== false) {\n          this.setState({ enablePolls: false });\n        }\n      });\n  };\n\n  /**\n   * if typing indicator feature is disabled\n   */\n  enableTypingIndicator = () => {\n    this.context.FeatureRestriction.isTypingIndicatorsEnabled()\n      .then((response) => {\n        if (response !== this.state.enableTypingIndicator) {\n          this.setState({ enableTypingIndicator: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableTypingIndicator !== false) {\n          this.setState({ enableTypingIndicator: false });\n        }\n      });\n  };\n\n  /**\n   * if stickers feature is disabled\n   */\n  enableStickers = () => {\n    this.context.FeatureRestriction.isStickersEnabled()\n      .then((response) => {\n        if (response !== this.state.enableStickers) {\n          this.setState({ enableStickers: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableStickers !== false) {\n          this.setState({ enableStickers: false });\n        }\n      });\n  };\n\n  /**\n   * if uploding photos, videos feature is disabled\n   */\n  enablePhotosVideos = () => {\n    this.context.FeatureRestriction.isPhotosVideosEnabled()\n      .then((response) => {\n        if (response !== this.state.enablePhotosVideos) {\n          this.setState({ enablePhotosVideos: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enablePhotosVideos !== false) {\n          this.setState({ enablePhotosVideos: false });\n        }\n      });\n  };\n\n  /**\n   * if uploding files feature is disabled\n   */\n  enableFiles = () => {\n    this.context.FeatureRestriction.isFilesEnabled()\n      .then((response) => {\n        if (response !== this.state.enableFiles) {\n          this.setState({ enableFiles: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableFiles !== false) {\n          this.setState({ enableFiles: false });\n        }\n      });\n  };\n\n  /**\n   * if sending emojis feature is disabled\n   */\n  enableEmojis = () => {\n    this.context.FeatureRestriction.isEmojisEnabled()\n      .then((response) => {\n        if (response !== this.state.enableEmojis) {\n          this.setState({ enableEmojis: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableEmojis !== false) {\n          this.setState({ enableEmojis: false });\n        }\n      });\n  };\n\n  /**\n   * if sharing collborative document feature is disabled\n   */\n  enableCollaborativeDocument = () => {\n    this.context.FeatureRestriction.isCollaborativeDocumentEnabled()\n      .then((response) => {\n        if (response !== this.state.enableCollaborativeDocument) {\n          this.setState({ enableCollaborativeDocument: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableCollaborativeDocument !== false) {\n          this.setState({ enableCollaborativeDocument: false });\n        }\n      });\n  };\n\n  /**\n   * if sharing collborative whiteboard feature is disabled\n   */\n  enableCollaborativeWhiteboard = () => {\n    this.context.FeatureRestriction.isCollaborativeWhiteBoardEnabled()\n      .then((response) => {\n        if (response !== this.state.enableCollaborativeWhiteboard) {\n          this.setState({ enableCollaborativeWhiteboard: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableCollaborativeWhiteboard !== false) {\n          this.setState({ enableCollaborativeWhiteboard: false });\n        }\n      });\n  };\n\n  focusOnMessageComposer = () => {\n    if (this.messageInputRef && this.messageInputRef.current) {\n      this.messageInputRef.current.focus();\n    }\n  };\n\n  pasteHtmlAtCaret(html, selectPastedContent) {\n    var sel, range;\n    const chatWindow = this.context.UIKitSettings.chatWindow;\n    if (chatWindow.getSelection) {\n      // IE9 and non-IE\n      sel = chatWindow.getSelection();\n      if (sel.getRangeAt && sel.rangeCount) {\n        range = sel.getRangeAt(0);\n        range.deleteContents();\n\n        // Range.createContextualFragment() would be useful here but is\n        // only relatively recently standardized and is not supported in\n        // some browsers (IE9, for one)\n        var el = document.createElement(\"div\");\n        el.innerText = html;\n        var frag = document.createDocumentFragment(),\n          node,\n          lastNode;\n        while ((node = el.firstChild)) {\n          lastNode = frag.appendChild(node);\n        }\n        var firstNode = frag.firstChild;\n        range.insertNode(frag);\n\n        // Preserve the selection\n        if (lastNode) {\n          range = range.cloneRange();\n          range.setStartAfter(lastNode);\n          if (selectPastedContent) {\n            range.setStartBefore(firstNode);\n          } else {\n            range.collapse(true);\n          }\n          sel.removeAllRanges();\n          sel.addRange(range);\n        }\n      }\n    } else if ((sel = document.selection) && sel.type !== \"Control\") {\n      // IE < 9\n      var originalRange = sel.createRange();\n      originalRange.collapse(true);\n      sel.createRange().pasteHTML(html);\n      if (selectPastedContent) {\n        range = sel.createRange();\n        range.setEndPoint(\"StartToStart\", originalRange);\n        range.select();\n      }\n    }\n  }\n\n  emojiClicked = (emoji, event) => {\n    if (this.state.messageToReact) {\n      this.reactToMessages(emoji);\n      return;\n    }\n\n    const element = this.messageInputRef.current;\n    element.focus();\n    this.pasteHtmlAtCaret(emoji.native, false);\n    this.setState({ messageInput: element.innerText, messageType: \"text\" });\n  };\n\n  changeHandler = (event) => {\n    this.startTyping();\n\n    const elem = event.currentTarget;\n    let messageInput = elem.textContent.trim();\n\n    if (!messageInput.length) {\n      event.currentTarget.textContent = messageInput;\n      //return false;\n    }\n\n    this.setState({ messageInput: elem.innerText, messageType: \"text\" });\n  };\n\n  toggleFilePicker = () => {\n    const currentState = !this.state.showFilePicker;\n    this.setState({ showFilePicker: currentState });\n  };\n\n  openFileDialogue = (fileType) => {\n    switch (fileType) {\n      case \"image\":\n        this.imageUploaderRef.current.click();\n        break;\n      case \"file\":\n        this.fileUploaderRef.current.click();\n        break;\n      case \"audio\":\n        this.audioUploaderRef.current.click();\n        break;\n      case \"video\":\n        this.videoUploaderRef.current.click();\n        break;\n      default:\n        break;\n    }\n  };\n\n  onImageChange = (e) => {\n    if (!this.imageUploaderRef.current.files[\"0\"]) {\n      return false;\n    }\n\n    const uploadedFile = this.imageUploaderRef.current.files[\"0\"];\n\n    var reader = new FileReader(); // Creating reader instance from FileReader() API\n    reader.addEventListener(\n      \"load\",\n      (event) => {\n        // Setting up base64 URL on image\n\n        const newFile = new File(\n          [reader.result],\n          uploadedFile.name,\n          uploadedFile\n        );\n        this.sendMediaMessage(newFile, CometChat.MESSAGE_TYPE.IMAGE);\n      },\n      false\n    );\n\n    reader.readAsArrayBuffer(uploadedFile);\n  };\n\n  onFileChange = (e) => {\n    if (!this.fileUploaderRef.current.files[\"0\"]) {\n      return false;\n    }\n\n    const uploadedFile = this.fileUploaderRef.current.files[\"0\"];\n\n    var reader = new FileReader(); // Creating reader instance from FileReader() API\n    reader.addEventListener(\n      \"load\",\n      (event) => {\n        // Setting up base64 URL on image\n\n        const newFile = new File(\n          [reader.result],\n          uploadedFile.name,\n          uploadedFile\n        );\n        this.sendMediaMessage(newFile, CometChat.MESSAGE_TYPE.FILE);\n      },\n      false\n    );\n\n    reader.readAsArrayBuffer(uploadedFile);\n  };\n\n  onAudioChange = (e) => {\n    if (!this.audioUploaderRef.current.files[\"0\"]) {\n      return false;\n    }\n\n    const uploadedFile = this.audioUploaderRef.current.files[\"0\"];\n\n    var reader = new FileReader(); // Creating reader instance from FileReader() API\n    reader.addEventListener(\n      \"load\",\n      () => {\n        // Setting up base64 URL on image\n\n        const newFile = new File(\n          [reader.result],\n          uploadedFile.name,\n          uploadedFile\n        );\n        this.sendMediaMessage(newFile, CometChat.MESSAGE_TYPE.AUDIO);\n      },\n      false\n    );\n\n    reader.readAsArrayBuffer(uploadedFile);\n  };\n\n  onVideoChange = (e) => {\n    if (!this.videoUploaderRef.current.files[\"0\"]) {\n      return false;\n    }\n\n    const uploadedFile = this.videoUploaderRef.current.files[\"0\"];\n\n    var reader = new FileReader(); // Creating reader instance from FileReader() API\n    reader.addEventListener(\n      \"load\",\n      () => {\n        // Setting up base64 URL on image\n\n        const newFile = new File(\n          [reader.result],\n          uploadedFile.name,\n          uploadedFile\n        );\n        this.sendMediaMessage(newFile, CometChat.MESSAGE_TYPE.VIDEO);\n      },\n      false\n    );\n\n    reader.readAsArrayBuffer(uploadedFile);\n  };\n\n  getReceiverDetails = () => {\n    let receiverId;\n    let receiverType;\n\n    if (this.context.type === CometChat.ACTION_TYPE.TYPE_USER) {\n      receiverId = this.context.item.uid;\n      receiverType = CometChat.RECEIVER_TYPE.USER;\n    } else if (this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP) {\n      receiverId = this.context.item.guid;\n      receiverType = CometChat.RECEIVER_TYPE.GROUP;\n    }\n\n    return { receiverId: receiverId, receiverType: receiverType };\n  };\n\n  sendMediaMessage = (messageInput, messageType) => {\n    this.toggleFilePicker();\n    this.endTyping(null, null);\n\n    const { receiverId, receiverType } = this.getReceiverDetails();\n\n    let mediaMessage = new CometChat.MediaMessage(\n      receiverId,\n      messageInput,\n      messageType,\n      receiverType\n    );\n    if (this.props.parentMessageId) {\n      mediaMessage.setParentMessageId(this.props.parentMessageId);\n    }\n\n    mediaMessage.setSender(this.loggedInUser);\n    mediaMessage.setReceiver(this.context.type);\n    mediaMessage.setType(messageType);\n    mediaMessage.setData({\n      type: messageType,\n      category: CometChat.CATEGORY_MESSAGE,\n      name: messageInput[\"name\"],\n      file: messageInput,\n    });\n    mediaMessage._composedAt = getUnixTimestamp();\n    mediaMessage._id = ID();\n\n    SoundManager.play(enums.CONSTANTS.AUDIO[\"OUTGOING_MESSAGE\"], this.context);\n    this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_COMPOSED\"], [\n      mediaMessage,\n    ]);\n\n    CometChat.sendMessage(mediaMessage)\n      .then((message) => {\n        const newMessageObj = { ...message, _id: mediaMessage._id };\n        this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_SENT\"], [\n          newMessageObj,\n        ]);\n      })\n      .catch((error) => {\n        const newMessageObj = { ...mediaMessage, error: error };\n        this.props.actionGenerated(enums.ACTIONS[\"ERROR_IN_SENDING_MESSAGE\"], [\n          newMessageObj,\n        ]);\n      });\n  };\n\n  sendMessageOnEnter = (event) => {\n    if (event.keyCode === 13 && !event.shiftKey) {\n      event.preventDefault();\n      this.sendTextMessage();\n      return true;\n    }\n  };\n\n  sendTextMessage = () => {\n    if (this.state.emojiViewer) {\n      this.setState({ emojiViewer: false });\n    }\n\n    if (!this.state.messageInput.trim().length) {\n      return false;\n    }\n\n    if (this.state.messageToBeEdited) {\n      this.editMessage();\n      return false;\n    }\n\n    this.endTyping(null, null);\n\n    let { receiverId, receiverType } = this.getReceiverDetails();\n    let messageInput = this.state.messageInput.trim();\n\n    let textMessage = new CometChat.TextMessage(\n      receiverId,\n      messageInput,\n      receiverType\n    );\n    if (this.props.parentMessageId) {\n      textMessage.setParentMessageId(this.props.parentMessageId);\n    }\n    textMessage.setSender(this.loggedInUser);\n    textMessage.setReceiver(this.context.type);\n    textMessage.setText(messageInput);\n    textMessage._composedAt = getUnixTimestamp();\n    textMessage._id = ID();\n\n    this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_COMPOSED\"], [\n      textMessage,\n    ]);\n    this.setState({ messageInput: \"\", replyPreview: false });\n\n    this.messageInputRef.current.textContent = \"\";\n    SoundManager.play(enums.CONSTANTS.AUDIO[\"OUTGOING_MESSAGE\"], this.context);\n\n    CometChat.sendMessage(textMessage)\n      .then((message) => {\n        const newMessageObj = { ...message, _id: textMessage._id };\n        this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_SENT\"], [\n          newMessageObj,\n        ]);\n      })\n      .catch((error) => {\n        const newMessageObj = { ...textMessage, error: error };\n        this.props.actionGenerated(enums.ACTIONS[\"ERROR_IN_SENDING_MESSAGE\"], [\n          newMessageObj,\n        ]);\n\n        if (\n          error &&\n          error.hasOwnProperty(\"code\") &&\n          error.code === \"ERR_GUID_NOT_FOUND\"\n        ) {\n          //this.context.setDeletedGroupId(this.context.item.guid);\n        }\n      });\n  };\n\n  editMessage = () => {\n    this.endTyping(null, null);\n\n    const messageToBeEdited = this.props.messageToBeEdited;\n\n    let { receiverId, receiverType } = this.getReceiverDetails();\n    let messageText = this.state.messageInput.trim();\n    let textMessage = new CometChat.TextMessage(\n      receiverId,\n      messageText,\n      receiverType\n    );\n    textMessage.setId(messageToBeEdited.id);\n\n    const newMessage = Object.assign({}, textMessage, {\n      messageFrom: messageToBeEdited.messageFrom,\n    });\n    this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_EDITED\"], newMessage);\n\n    this.setState({ messageInput: \"\" });\n    this.messageInputRef.current.textContent = \"\";\n    SoundManager.play(enums.CONSTANTS.AUDIO[\"OUTGOING_MESSAGE\"], this.context);\n\n    this.closeEditPreview();\n\n    CometChat.editMessage(textMessage)\n      .then((message) => {\n        this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_EDITED\"], {\n          ...message,\n        });\n      })\n      .catch((error) =>\n        this.props.actionGenerated(\n          enums.ACTIONS[\"ERROR\"],\n          [],\n          \"SOMETHING_WRONG\"\n        )\n      );\n  };\n\n  closeEditPreview = () => {\n    this.props.actionGenerated(enums.ACTIONS[\"CLEAR_EDIT_PREVIEW\"]);\n  };\n\n  startTyping = (timer, metadata) => {\n    let typingInterval = timer || 5000;\n\n    //if typing indicator feature is disabled\n    if (this.state.enableTypingIndicator === false) {\n      return false;\n    }\n\n    if (this.isTyping) {\n      return false;\n    }\n\n    let { receiverId, receiverType } = this.getReceiverDetails();\n    let typingMetadata = metadata || undefined;\n\n    let typingNotification = new CometChat.TypingIndicator(\n      receiverId,\n      receiverType,\n      typingMetadata\n    );\n    CometChat.startTyping(typingNotification);\n\n    this.isTyping = setTimeout(() => {\n      this.endTyping(null, typingMetadata);\n    }, typingInterval);\n  };\n\n  endTyping = (event, metadata) => {\n    //fixing synthetic issue\n    if (event) {\n      event.persist();\n    }\n\n    //if typing indicator is disabled for chat wigdet in dashboard\n    if (this.state.enableTypingIndicator === false) {\n      return false;\n    }\n\n    let { receiverId, receiverType } = this.getReceiverDetails();\n\n    let typingMetadata = metadata || undefined;\n\n    let typingNotification = new CometChat.TypingIndicator(\n      receiverId,\n      receiverType,\n      typingMetadata\n    );\n    CometChat.endTyping(typingNotification);\n\n    clearTimeout(this.isTyping);\n    this.isTyping = null;\n  };\n\n  toggleStickerPicker = () => {\n    const stickerViewer = this.state.stickerViewer;\n    this.setState({ stickerViewer: !stickerViewer, emojiViewer: false });\n  };\n\n  toggleEmojiPicker = () => {\n    const emojiViewer = this.state.emojiViewer;\n    this.setState({ emojiViewer: !emojiViewer, stickerViewer: false });\n  };\n\n  toggleCreatePoll = () => {\n    const createPoll = this.state.createPoll;\n    this.setState({ createPoll: !createPoll });\n  };\n\n  toggleCollaborativeDocument = () => {\n    const { receiverId, receiverType } = this.getReceiverDetails();\n    CometChat.callExtension(\"document\", \"POST\", \"v1/create\", {\n      receiver: receiverId,\n      receiverType: receiverType,\n    })\n      .then((response) => {\n        // Response with document url\n        if (response && response.hasOwnProperty(\"document_url\")) {\n          this.context.setToastMessage(\"success\", \"DOCUMENT_SUCCESS\");\n        } else {\n          this.context.setToastMessage(\"error\", \"DOCUMENT_FAIL\");\n        }\n      })\n      .catch((error) =>\n        this.props.actionGenerated(\n          enums.ACTIONS[\"ERROR\"],\n          [],\n          \"SOMETHING_WRONG\"\n        )\n      );\n  };\n\n  toggleCollaborativeBoard = () => {\n    const { receiverId, receiverType } = this.getReceiverDetails();\n    CometChat.callExtension(\"whiteboard\", \"POST\", \"v1/create\", {\n      receiver: receiverId,\n      receiverType: receiverType,\n    })\n      .then((response) => {\n        // Response with board_url\n        if (response && response.hasOwnProperty(\"board_url\")) {\n          this.context.setToastMessage(\"success\", \"WHITEBOARD_SUCCESS\");\n        } else {\n          this.context.setToastMessage(\"error\", \"WHITEBOARD_FAIL\");\n        }\n      })\n      .catch((error) =>\n        this.props.actionGenerated(\n          enums.ACTIONS[\"ERROR\"],\n          [],\n          \"SOMETHING_WRONG\"\n        )\n      );\n  };\n\n  closeCreatePoll = () => {\n    this.toggleCreatePoll();\n    this.toggleFilePicker();\n  };\n\n  actionHandler = (action, message) => {\n    switch (action) {\n      case enums.ACTIONS[\"POLL_CREATED\"]:\n        this.toggleCreatePoll();\n        this.toggleFilePicker();\n        break;\n      case enums.ACTIONS[\"SEND_STICKER\"]:\n        this.sendSticker(message);\n        break;\n      case enums.ACTIONS[\"CLOSE_STICKER_KEYBOARD\"]:\n        this.toggleStickerPicker();\n        break;\n      default:\n        break;\n    }\n  };\n\n  sendSticker = (stickerMessage) => {\n    const { receiverId, receiverType } = this.getReceiverDetails();\n\n    const customData = {\n      sticker_url: stickerMessage.stickerUrl,\n      sticker_name: stickerMessage.stickerName,\n    };\n    const customType = enums.CUSTOM_TYPE_STICKER;\n\n    const customMessage = new CometChat.CustomMessage(\n      receiverId,\n      receiverType,\n      customType,\n      customData\n    );\n    if (this.props.parentMessageId) {\n      customMessage.setParentMessageId(this.props.parentMessageId);\n    }\n    customMessage.setSender(this.loggedInUser);\n    customMessage.setReceiver(this.context.type);\n    customMessage.setMetadata({ incrementUnreadCount: true });\n    customMessage._composedAt = getUnixTimestamp();\n    customMessage._id = ID();\n\n    this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_COMPOSED\"], [\n      customMessage,\n    ]);\n    SoundManager.play(enums.CONSTANTS.AUDIO[\"OUTGOING_MESSAGE\"], this.context);\n\n    CometChat.sendCustomMessage(customMessage)\n      .then((message) => {\n        const newMessageObj = { ...message, _id: customMessage._id };\n        this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_SENT\"], [\n          newMessageObj,\n        ]);\n      })\n      .catch((error) => {\n        const newMessageObj = { ...customMessage, error: error };\n        this.props.actionGenerated(enums.ACTIONS[\"ERROR_IN_SENDING_MESSAGE\"], [\n          newMessageObj,\n        ]);\n      });\n  };\n\n  sendReplyMessage = (messageInput) => {\n    let { receiverId, receiverType } = this.getReceiverDetails();\n\n    let textMessage = new CometChat.TextMessage(\n      receiverId,\n      messageInput,\n      receiverType\n    );\n    if (this.props.parentMessageId) {\n      textMessage.setParentMessageId(this.props.parentMessageId);\n    }\n    textMessage.setSender(this.loggedInUser);\n    textMessage.setReceiver(this.context.type);\n    textMessage._composedAt = getUnixTimestamp();\n    textMessage._id = ID();\n\n    this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_COMPOSED\"], [\n      textMessage,\n    ]);\n\n    SoundManager.play(enums.CONSTANTS.AUDIO[\"OUTGOING_MESSAGE\"], this.context);\n    this.setState({ replyPreview: null });\n\n    CometChat.sendMessage(textMessage)\n      .then((message) => {\n        const newMessageObj = { ...message, _id: textMessage._id };\n        this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_SENT\"], [\n          newMessageObj,\n        ]);\n      })\n      .catch((error) => {\n        const newMessageObj = { ...textMessage, error: error };\n        this.props.actionGenerated(enums.ACTIONS[\"ERROR_IN_SENDING_MESSAGE\"], [\n          newMessageObj,\n        ]);\n      });\n  };\n\n  clearReplyPreview = () => {\n    this.setState({ replyPreview: null });\n  };\n\n  sendReaction = (event) => {\n    const typingInterval = 1000;\n\n    const typingMetadata = {\n      type: enums.CONSTANTS[\"METADATA_TYPE_LIVEREACTION\"],\n      reaction: this.props.reaction,\n    };\n\n    this.startTyping(typingInterval, typingMetadata);\n    this.props.actionGenerated(enums.ACTIONS[\"SEND_LIVE_REACTION\"]);\n\n    event.persist();\n\n    setTimeout(() => {\n      //this.endTyping(null, typingMetadata);\n      this.props.actionGenerated(enums.ACTIONS[\"STOP_LIVE_REACTION\"]);\n    }, typingInterval);\n  };\n\n  reactToMessages = (emoji) => {\n    CometChat.callExtension(\"reactions\", \"POST\", \"v1/react\", {\n      msgId: this.state.messageToReact.id,\n      emoji: emoji.colons,\n    })\n      .then((response) => {\n        if (\n          response.hasOwnProperty(\"success\") &&\n          response[\"success\"] === true\n        ) {\n          this.toggleEmojiPicker();\n        } else {\n          this.props.actionGenerated(\n            enums.ACTIONS[\"ERROR\"],\n            [],\n            \"SOMETHING_WRONG\"\n          );\n        }\n      })\n      .catch((error) =>\n        this.props.actionGenerated(\n          enums.ACTIONS[\"ERROR\"],\n          [],\n          \"SOMETHING_WRONG\"\n        )\n      );\n  };\n\n  render() {\n    let liveReactionBtn = null;\n    const liveReactionText = Translator.translate(\n      \"LIVE_REACTION\",\n      this.props.lang\n    );\n    if (enums.CONSTANTS[\"LIVE_REACTIONS\"].hasOwnProperty(this.props.reaction)) {\n      const reactionName = this.props.reaction;\n      liveReactionBtn = (\n        <div\n          title={liveReactionText}\n          css={reactionBtnStyle()}\n          className=\"button__reactions\"\n          onClick={this.sendReaction}\n        >\n          <img src={heartIcon} alt={reactionName} />\n        </div>\n      );\n    }\n\n    let disabledState = false;\n    if (this.context.item.blockedByMe) {\n      disabledState = true;\n    }\n\n    const docText = Translator.translate(\"ATTACH_FILE\", this.props.lang);\n    let docs = (\n      <div\n        title={docText}\n        css={fileItemStyle(docIcon, this.context)}\n        className=\"filelist__item item__file\"\n        onClick={() => {\n          this.openFileDialogue(\"file\");\n        }}\n      >\n        <i></i>\n        <input\n          onChange={this.onFileChange}\n          type=\"file\"\n          id=\"file\"\n          ref={this.fileUploaderRef}\n        />\n      </div>\n    );\n\n    const videoText = Translator.translate(\"ATTACH_VIDEO\", this.props.lang);\n    const audioText = Translator.translate(\"ATTACH_AUDIO\", this.props.lang);\n    const imageText = Translator.translate(\"ATTACH_IMAGE\", this.props.lang);\n    let avp = (\n      <React.Fragment>\n        <div\n          title={videoText}\n          css={fileItemStyle(videoIcon, this.context)}\n          className=\"filelist__item item__video\"\n          onClick={() => {\n            this.openFileDialogue(\"video\");\n          }}\n        >\n          <i></i>\n          <input\n            onChange={this.onVideoChange}\n            accept=\"video/*\"\n            type=\"file\"\n            ref={this.videoUploaderRef}\n          />\n        </div>\n        <div\n          title={audioText}\n          css={fileItemStyle(audioIcon, this.context)}\n          className=\"filelist__item item__audio\"\n          onClick={() => {\n            this.openFileDialogue(\"audio\");\n          }}\n        >\n          <i></i>\n          <input\n            onChange={this.onAudioChange}\n            accept=\"audio/*\"\n            type=\"file\"\n            ref={this.audioUploaderRef}\n          />\n        </div>\n        <div\n          title={imageText}\n          css={fileItemStyle(imageIcon, this.context)}\n          className=\"filelist__item item__image\"\n          onClick={() => {\n            this.openFileDialogue(\"image\");\n          }}\n        >\n          <i></i>\n          <input\n            onChange={this.onImageChange}\n            accept=\"image/*\"\n            type=\"file\"\n            ref={this.imageUploaderRef}\n          />\n        </div>\n      </React.Fragment>\n    );\n\n    const pollText = Translator.translate(\"CREATE_POLL\", this.props.lang);\n    let createPollBtn = (\n      <div\n        title={pollText}\n        css={fileItemStyle(pollIcon, this.context)}\n        className=\"filelist__item item__poll\"\n        onClick={this.toggleCreatePoll}\n      >\n        <i></i>\n      </div>\n    );\n\n    const collaborativeDocText = Translator.translate(\n      \"COLLABORATE_USING_DOCUMENT\",\n      this.props.lang\n    );\n    let collaborativeDocBtn = (\n      <div\n        title={collaborativeDocText}\n        css={fileItemStyle(documentIcon, this.context)}\n        className=\"filelist__item item__document\"\n        onClick={this.toggleCollaborativeDocument}\n      >\n        <i></i>\n      </div>\n    );\n\n    const collaborativeBoardText = Translator.translate(\n      \"COLLABORATE_USING_WHITEBOARD\",\n      this.props.lang\n    );\n    let collaborativeBoardBtn = (\n      <div\n        title={collaborativeBoardText}\n        css={fileItemStyle(whiteboardIcon, this.context)}\n        className=\"filelist__item item__whiteboard\"\n        onClick={this.toggleCollaborativeBoard}\n      >\n        <i></i>\n      </div>\n    );\n\n    const emojiText = Translator.translate(\"EMOJI\", this.props.lang);\n    let emojiBtn = (\n      <div\n        title={emojiText}\n        css={emojiButtonStyle(insertEmoticon, this.context)}\n        className=\"button__emoji\"\n        onClick={() => {\n          this.toggleEmojiPicker();\n          this.setState({ messageToReact: \"\" });\n        }}\n      >\n        <i></i>\n      </div>\n    );\n\n    const StickerText = Translator.translate(\"STICKER\", this.props.lang);\n    let stickerBtn = (\n      <div\n        title={StickerText}\n        css={stickerBtnStyle(stickerIcon, this.context)}\n        className=\"button__sticker\"\n        onClick={this.toggleStickerPicker}\n      >\n        <i></i>\n      </div>\n    );\n\n    const sendMessageText = Translator.translate(\n      \"SEND_MESSAGE\",\n      this.props.lang\n    );\n    let sendBtn = (\n      <div\n        title={sendMessageText}\n        css={sendButtonStyle(sendBlue, this.context)}\n        className=\"button__send\"\n        onClick={this.sendTextMessage}\n      >\n        <i></i>\n      </div>\n    );\n\n    //if uploading photos, videos feature is disabled\n    if (this.state.enablePhotosVideos === false) {\n      avp = null;\n    }\n\n    //if files upload are disabled for chat widget in dashboard\n    if (this.state.enableFiles === false) {\n      docs = null;\n    }\n\n    //if polls feature is disabled\n    if (this.state.enablePolls === false || this.props.parentMessageId) {\n      createPollBtn = null;\n    }\n\n    //if collaborative_document are disabled for chat widget in dashboard\n    if (\n      this.state.enableCollaborativeDocument === false ||\n      this.props.parentMessageId\n    ) {\n      collaborativeDocBtn = null;\n    }\n\n    //if collaborative_document are disabled for chat widget in dashboard\n    if (\n      this.state.enableCollaborativeWhiteboard === false ||\n      this.props.parentMessageId\n    ) {\n      collaborativeBoardBtn = null;\n    }\n\n    //if emojis are disabled for chat widget in dashboard\n    if (this.state.enableEmojis === false) {\n      emojiBtn = null;\n    }\n\n    //if live reactions is disabled for chat widget in dashboard\n    if (\n      this.state.enableLiveReaction === false ||\n      this.state.messageInput.length\n    ) {\n      liveReactionBtn = null;\n    }\n\n    //if stickers is disabled for chat widget in dashboard\n    if (this.state.enableStickers === false) {\n      stickerBtn = null;\n    }\n\n    if (!this.state.messageInput.length) {\n      sendBtn = null;\n    }\n\n    const attachText = Translator.translate(\"ATTACH\", this.props.lang);\n    let attach = (\n      <div css={stickyAttachmentStyle()} className=\"input__sticky__attachment\">\n        <div\n          css={stickyAttachButtonStyle(roundedPlus, this.context)}\n          className=\"attachment__icon\"\n          onClick={this.toggleFilePicker}\n          title={attachText}\n        >\n          <i></i>\n        </div>\n        <div\n          css={filePickerStyle(this.state)}\n          className=\"attachment__filepicker\"\n          dir={Translator.getDirection(this.props.lang)}\n        >\n          <div css={fileListStyle()} className=\"filepicker__filelist\">\n            {avp}\n            {docs}\n            {createPollBtn}\n            {collaborativeDocBtn}\n            {collaborativeBoardBtn}\n          </div>\n        </div>\n      </div>\n    );\n\n    if (\n      avp === null &&\n      docs === null &&\n      createPollBtn === null &&\n      collaborativeDocBtn === null &&\n      collaborativeBoardBtn === null\n    ) {\n      attach = null;\n    }\n\n    let createPoll = null;\n    if (this.state.createPoll) {\n      createPoll = (\n        <CometChatCreatePoll\n          theme={this.props.theme}\n          open={this.state.createPoll}\n          close={this.closeCreatePoll}\n          lang={this.props.lang}\n          widgetsettings={this.props.widgetsettings}\n          actionGenerated={this.actionHandler}\n        />\n      );\n    }\n\n    let editPreview = null;\n    if (this.state.messageToBeEdited) {\n      let messageText = this.state.messageToBeEdited.text;\n\n      //xss extensions data\n      const xssData = checkMessageForExtensionsData(\n        this.state.messageToBeEdited,\n        \"xss-filter\"\n      );\n      if (\n        xssData &&\n        xssData.hasOwnProperty(\"sanitized_text\") &&\n        xssData.hasOwnProperty(\"hasXSS\") &&\n        xssData.hasXSS === \"yes\"\n      ) {\n        messageText = xssData.sanitized_text;\n      }\n\n      //datamasking extensions data\n      const maskedData = checkMessageForExtensionsData(\n        this.state.messageToBeEdited,\n        \"data-masking\"\n      );\n      if (\n        maskedData &&\n        maskedData.hasOwnProperty(\"data\") &&\n        maskedData.data.hasOwnProperty(\"sensitive_data\") &&\n        maskedData.data.hasOwnProperty(\"message_masked\") &&\n        maskedData.data.sensitive_data === \"yes\"\n      ) {\n        messageText = maskedData.data.message_masked;\n      }\n\n      //profanity extensions data\n      const profaneData = checkMessageForExtensionsData(\n        this.state.messageToBeEdited,\n        \"profanity-filter\"\n      );\n      if (\n        profaneData &&\n        profaneData.hasOwnProperty(\"profanity\") &&\n        profaneData.hasOwnProperty(\"message_clean\") &&\n        profaneData.profanity === \"yes\"\n      ) {\n        messageText = profaneData.message_clean;\n      }\n\n      editPreview = (\n        <div css={editPreviewContainerStyle(this.context, keyframes)}>\n          <div css={previewHeadingStyle()}>\n            <div css={previewTextStyle()}>\n              {Translator.translate(\"EDIT_MESSAGE\", this.props.lang)}\n            </div>\n            <span\n              css={previewCloseStyle(closeIcon, this.context)}\n              onClick={this.closeEditPreview}\n            ></span>\n          </div>\n          <div>{messageText}</div>\n        </div>\n      );\n    }\n\n    let smartReplyPreview = null;\n    if (this.state.replyPreview) {\n      const message = this.state.replyPreview;\n\n      const smartReplyData = checkMessageForExtensionsData(\n        message,\n        \"smart-reply\"\n      );\n      if (smartReplyData && smartReplyData.hasOwnProperty(\"error\") === false) {\n        const options = [\n          smartReplyData[\"reply_positive\"],\n          smartReplyData[\"reply_neutral\"],\n          smartReplyData[\"reply_negative\"],\n        ];\n        smartReplyPreview = (\n          <CometChatSmartReplyPreview\n            {...this.props}\n            options={options}\n            clicked={this.sendReplyMessage}\n            close={this.clearReplyPreview}\n          />\n        );\n      }\n    }\n\n    let stickerViewer = null;\n    if (this.state.stickerViewer) {\n      stickerViewer = (\n        <CometChatStickerKeyboard\n          theme={this.props.theme}\n          lang={this.props.lang}\n          widgetsettings={this.props.widgetsettings}\n          actionGenerated={this.actionHandler}\n        />\n      );\n    }\n\n    let emojiViewer = null;\n    if (this.state.emojiViewer) {\n      emojiViewer = (\n        <CometChatEmojiKeyboard\n          lang={this.props.lang}\n          emojiClicked={this.emojiClicked}\n        />\n      );\n    }\n\n    return (\n      <div css={chatComposerStyle(this.context)} className=\"chat__composer\">\n        {editPreview}\n        {smartReplyPreview}\n        {stickerViewer}\n        {emojiViewer}\n        <div css={composerInputStyle()} className=\"composer__input\">\n          <div\n            tabIndex=\"-1\"\n            css={inputInnerStyle(this.props, this.state, this.context)}\n            className=\"input__inner\"\n          >\n            <div\n              css={messageInputStyle(disabledState)}\n              className=\"input__message-input\"\n              contentEditable=\"true\"\n              placeholder={Translator.translate(\n                \"ENTER_YOUR_MESSAGE_HERE\",\n                this.props.lang\n              )}\n              dir={Translator.getDirection(this.props.lang)}\n              onInput={this.changeHandler}\n              onBlur={(event) => this.endTyping(event)}\n              onKeyDown={this.sendMessageOnEnter}\n              ref={this.messageInputRef}\n            ></div>\n            <div\n              css={inputStickyStyle(disabledState, attach, this.context)}\n              className=\"input__sticky\"\n            >\n              {attach}\n              <div\n                css={stickyButtonStyle(this.state)}\n                className=\"input__sticky__buttons\"\n              >\n                {stickerBtn}\n                {emojiBtn}\n                {sendBtn}\n                {liveReactionBtn}\n              </div>\n            </div>\n          </div>\n        </div>\n        {createPoll}\n      </div>\n    );\n  }\n}\n\n// Specifies the default values for props:\nCometChatMessageComposer.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  reaction: \"heart\",\n};\n\nCometChatMessageComposer.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  reaction: PropTypes.string,\n};\n\nexport { CometChatMessageComposer };\n"]},"metadata":{},"sourceType":"module"}