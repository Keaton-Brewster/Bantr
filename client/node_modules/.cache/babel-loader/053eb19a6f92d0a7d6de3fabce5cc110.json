{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/Message.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useConversations } from \"../utils/ConvorsationProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Message() {\n  _s();\n\n  const {\n    messageState,\n    userState\n  } = useConversations();\n  const [messages, setMessages] = messageState;\n  const [user, setUser] = userState; //! Take this and turn it into an independant messages component.\n  //! now that you have the context set up you don't need to pass messages as props\n\n  console.log(messages);\n  return messages.length === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `my-1 d-flex flex-column ${messages[0].sender_id === user._id ? \"align-self-end align-items-end\" : \"align-items-start\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `rounded px-2 py-1 ${messages[0].sender_id === user._id ? \"bg-success text-white\" : \"border\"}`,\n        children: messages[0].content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `text-muted small ${messages[0].sender_id === user._id ? \"text-right\" : \"\"}`,\n        children: messages[0].sender_id === user._id && messages[i - 1].sender_id === user._id ? \"You\" : messages[0].senderName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this) : messages.map((message, i) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `my-1 d-flex flex-column ${message.sender_id === user._id ? \"align-self-end align-items-end\" : \"align-items-start\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `rounded px-2 py-1 ${message.sender_id === user._id ? \"bg-success text-white\" : \"border\"}`,\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `text-muted small ${message.sender_id === user._id ? \"text-right\" : \"\"}`,\n          children: message.sender_id === user._id && messages[i - 1].sender_id === user._id ? \"You\" : message.senderName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  });\n}\n\n_s(Message, \"i/rnkwubfy8N7f8kRp9uibLCyZ0=\", false, function () {\n  return [useConversations];\n});\n\n_c = Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/Message.jsx"],"names":["React","useConversations","Message","messageState","userState","messages","setMessages","user","setUser","console","log","length","sender_id","_id","content","i","senderName","map","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA8BH,gBAAgB,EAApD;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BH,YAAhC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBJ,SAAxB,CAHgC,CAKhC;AACA;;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,SAAOA,QAAQ,CAACM,MAAT,KAAoB,CAApB,gBACL;AAAA,2BACE;AACE,MAAA,SAAS,EAAG,2BACVN,QAAQ,CAAC,CAAD,CAAR,CAAYO,SAAZ,KAA0BL,IAAI,CAACM,GAA/B,GACI,gCADJ,GAEI,mBACL,EALH;AAAA,8BAOE;AACE,QAAA,SAAS,EAAG,qBACVR,QAAQ,CAAC,CAAD,CAAR,CAAYO,SAAZ,KAA0BL,IAAI,CAACM,GAA/B,GACI,uBADJ,GAEI,QACL,EALH;AAAA,kBAOGR,QAAQ,CAAC,CAAD,CAAR,CAAYS;AAPf;AAAA;AAAA;AAAA;AAAA,cAPF,eAgBE;AACE,QAAA,SAAS,EAAG,oBACVT,QAAQ,CAAC,CAAD,CAAR,CAAYO,SAAZ,KAA0BL,IAAI,CAACM,GAA/B,GAAqC,YAArC,GAAoD,EACrD,EAHH;AAAA,kBAKGR,QAAQ,CAAC,CAAD,CAAR,CAAYO,SAAZ,KAA0BL,IAAI,CAACM,GAA/B,IACDR,QAAQ,CAACU,CAAC,GAAG,CAAL,CAAR,CAAgBH,SAAhB,KAA8BL,IAAI,CAACM,GADlC,GAEG,KAFH,GAGGR,QAAQ,CAAC,CAAD,CAAR,CAAYW;AARlB;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADK,GA+BLX,QAAQ,CAACY,GAAT,CAAa,CAACC,OAAD,EAAUH,CAAV,KAAgB;AAC3B,wBACE;AAAA,6BACE;AACE,QAAA,SAAS,EAAG,2BACVG,OAAO,CAACN,SAAR,KAAsBL,IAAI,CAACM,GAA3B,GACI,gCADJ,GAEI,mBACL,EALH;AAAA,gCAOE;AACE,UAAA,SAAS,EAAG,qBACVK,OAAO,CAACN,SAAR,KAAsBL,IAAI,CAACM,GAA3B,GACI,uBADJ,GAEI,QACL,EALH;AAAA,oBAOGK,OAAO,CAACJ;AAPX;AAAA;AAAA;AAAA;AAAA,gBAPF,eAgBE;AACE,UAAA,SAAS,EAAG,oBACVI,OAAO,CAACN,SAAR,KAAsBL,IAAI,CAACM,GAA3B,GAAiC,YAAjC,GAAgD,EACjD,EAHH;AAAA,oBAKGK,OAAO,CAACN,SAAR,KAAsBL,IAAI,CAACM,GAA3B,IACDR,QAAQ,CAACU,CAAC,GAAG,CAAL,CAAR,CAAgBH,SAAhB,KAA8BL,IAAI,CAACM,GADlC,GAEG,KAFH,GAGGK,OAAO,CAACF;AARd;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA+BD,GAhCD,CA/BF;AAiED;;GA1EuBd,O;UACcD,gB;;;KADdC,O","sourcesContent":["import React from \"react\";\nimport { useConversations } from \"../utils/ConvorsationProvider\";\n\nexport default function Message() {\n  const { messageState, userState } = useConversations();\n  const [messages, setMessages] = messageState;\n  const [user, setUser] = userState;\n\n  //! Take this and turn it into an independant messages component.\n  //! now that you have the context set up you don't need to pass messages as props\n  console.log(messages);\n\n  return messages.length === 1 ? (\n    <div>\n      <div\n        className={`my-1 d-flex flex-column ${\n          messages[0].sender_id === user._id\n            ? \"align-self-end align-items-end\"\n            : \"align-items-start\"\n        }`}\n      >\n        <div\n          className={`rounded px-2 py-1 ${\n            messages[0].sender_id === user._id\n              ? \"bg-success text-white\"\n              : \"border\"\n          }`}\n        >\n          {messages[0].content}\n        </div>\n        <div\n          className={`text-muted small ${\n            messages[0].sender_id === user._id ? \"text-right\" : \"\"\n          }`}\n        >\n          {messages[0].sender_id === user._id &&\n          messages[i - 1].sender_id === user._id\n            ? \"You\"\n            : messages[0].senderName}\n        </div>\n      </div>\n    </div>\n  ) : (\n    messages.map((message, i) => {\n      return (\n        <div>\n          <div\n            className={`my-1 d-flex flex-column ${\n              message.sender_id === user._id\n                ? \"align-self-end align-items-end\"\n                : \"align-items-start\"\n            }`}\n          >\n            <div\n              className={`rounded px-2 py-1 ${\n                message.sender_id === user._id\n                  ? \"bg-success text-white\"\n                  : \"border\"\n              }`}\n            >\n              {message.content}\n            </div>\n            <div\n              className={`text-muted small ${\n                message.sender_id === user._id ? \"text-right\" : \"\"\n              }`}\n            >\n              {message.sender_id === user._id &&\n              messages[i - 1].sender_id === user._id\n                ? \"You\"\n                : message.senderName}\n            </div>\n          </div>\n        </div>\n      );\n    })\n  );\n}\n"]},"metadata":{},"sourceType":"module"}