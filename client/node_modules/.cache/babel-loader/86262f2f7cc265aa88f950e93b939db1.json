{"ast":null,"code":"import { CometChat } from \"@cometchat-pro/chat\";\nexport const chatHeaderStyle = context => {\n  return {\n    padding: \"16px\",\n    width: \"100%\",\n    backgroundColor: `${context.theme.backgroundColor.white}`,\n    zIndex: \"1\",\n    borderBottom: `1px solid ${context.theme.borderColor.primary}`,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  };\n};\nexport const chatDetailStyle = () => {\n  return {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: \"calc(100% - 116px)\"\n  };\n};\nexport const chatSideBarBtnStyle = (img, props, context) => {\n  const displayValue = props.hasOwnProperty(\"sidebar\") && props.sidebar === 0 ? {\n    display: \"none!important\"\n  } : {};\n  const mq = [...context.theme.breakPoints];\n  return {\n    cursor: \"pointer\",\n    display: \"none\",\n    mask: `url(${img}) center center no-repeat`,\n    backgroundColor: `${context.theme.primaryColor}`,\n    width: \"24px\",\n    height: \"24px\",\n    float: \"left\",\n    [`@media ${mq[1]}, ${mq[2]}`]: {\n      display: \"block\"\n    },\n    ...displayValue\n  };\n};\nexport const chatThumbnailStyle = () => {\n  return {\n    display: \"inline-block\",\n    width: \"36px\",\n    height: \"36px\",\n    flexShrink: \"0\",\n    margin: \"0 16px\"\n  };\n};\nexport const chatUserStyle = context => {\n  const mq = [...context.theme.breakPoints];\n  return {\n    width: \"calc(100% - 50px)\",\n    padding: \"0\",\n    flexGrow: \"1\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    [`@media ${mq[1]}, ${mq[2]}`]: {\n      width: \"calc(100% - 80px)!important\"\n    }\n  };\n};\nexport const chatNameStyle = () => {\n  return {\n    margin: \"0\",\n    fontSize: \"15px\",\n    fontWeight: \"600\",\n    width: \"100%\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\"\n  };\n};\nexport const chatStatusStyle = (state, context) => {\n  let status = {};\n\n  if (context.type === CometChat.ACTION_TYPE.TYPE_USER) {\n    status = {\n      color: `${context.theme.color.blue}`,\n      textTransform: \"capitalize\"\n    };\n\n    if (state.presence === \"offline\") {\n      status = {\n        color: `${context.theme.color.helpText}`,\n        textTransform: \"capitalize\"\n      };\n    }\n\n    if (state.typing) {\n      status = {\n        color: `${context.theme.color.helpText}`,\n        textTransform: \"none\",\n        fontStyle: \"italic\"\n      };\n    }\n  } else if (context.type === CometChat.ACTION_TYPE.TYPE_GROUP) {\n    status = {\n      color: `${context.theme.color.helpText}`\n    };\n\n    if (state.typing) {\n      status = {\n        color: `${context.theme.color.helpText}`,\n        fontStyle: \"italic\"\n      };\n    }\n  }\n\n  return {\n    fontSize: \"13px\",\n    width: \"100%\",\n    ...status\n  };\n};\nexport const chatOptionWrapStyle = () => {\n  return {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"auto\"\n  };\n};\nexport const chatOptionStyle = (img, context, ongoingCall) => {\n  const bgColor = ongoingCall ? {\n    backgroundColor: `${context.theme.secondaryTextColor}`\n  } : {\n    backgroundColor: `${context.theme.primaryColor}`\n  };\n  return {\n    width: \"24px\",\n    height: \"24px\",\n    cursor: \"pointer\",\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"0 0 0 16px\",\n    \"i\": {\n      width: \"24px\",\n      height: \"24px\",\n      display: \"inline-block\",\n      mask: `url(${img}) center center no-repeat`,\n      ...bgColor\n    }\n  };\n};","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatMessageHeader/style.js"],"names":["CometChat","chatHeaderStyle","context","padding","width","backgroundColor","theme","white","zIndex","borderBottom","borderColor","primary","display","flexDirection","justifyContent","chatDetailStyle","alignItems","chatSideBarBtnStyle","img","props","displayValue","hasOwnProperty","sidebar","mq","breakPoints","cursor","mask","primaryColor","height","float","chatThumbnailStyle","flexShrink","margin","chatUserStyle","flexGrow","chatNameStyle","fontSize","fontWeight","overflow","textOverflow","whiteSpace","chatStatusStyle","state","status","type","ACTION_TYPE","TYPE_USER","color","blue","textTransform","presence","helpText","typing","fontStyle","TYPE_GROUP","chatOptionWrapStyle","chatOptionStyle","ongoingCall","bgColor","secondaryTextColor"],"mappings":"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","sourcesContent":["import { CometChat } from \"@cometchat-pro/chat\";\n\nexport const chatHeaderStyle = context => {\n\n\treturn {\n\t\tpadding: \"16px\",\n\t\twidth: \"100%\",\n\t\tbackgroundColor: `${context.theme.backgroundColor.white}`,\n\t\tzIndex: \"1\",\n\t\tborderBottom: `1px solid ${context.theme.borderColor.primary}`,\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"row\",\n\t\tjustifyContent: \"space-between\",\n\t};\n};\n\nexport const chatDetailStyle = () => {\n\n    return {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        width: \"calc(100% - 116px)\",\n    }\n}\n\nexport const chatSideBarBtnStyle = (img, props, context) => {\n\n    const displayValue = (props.hasOwnProperty(\"sidebar\") && props.sidebar === 0) ? { display: \"none!important\"} : {};\n\n    const mq = [...context.theme.breakPoints];\n\n    return {\n        cursor: \"pointer\",\n        display: \"none\",\n        mask: `url(${img}) center center no-repeat`,\n        backgroundColor: `${context.theme.primaryColor}`,\n        width: \"24px\",\n        height: \"24px\",\n        float: \"left\",\n        [`@media ${mq[1]}, ${mq[2]}`]: {\n\t\t\tdisplay: \"block\"\n\t\t},\n        ...displayValue\n    }\n}\n\nexport const chatThumbnailStyle = () => {\n\n    return {\n        display: \"inline-block\",\n        width: \"36px\",\n        height: \"36px\",\n        flexShrink: \"0\",\n        margin: \"0 16px\",\n    }\n}\n\nexport const chatUserStyle = context => {\n\n    const mq = [...context.theme.breakPoints];\n\n\treturn {\n\t\twidth: \"calc(100% - 50px)\",\n\t\tpadding: \"0\",\n\t\tflexGrow: \"1\",\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\t[`@media ${mq[1]}, ${mq[2]}`]: {\n\t\t\twidth: \"calc(100% - 80px)!important\",\n\t\t},\n\t};\n};\n\nexport const chatNameStyle = () => {\n\n    return {\n        margin: \"0\",\n        fontSize: \"15px\",\n        fontWeight: \"600\",\n        width: \"100%\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n    }\n}\n\nexport const chatStatusStyle = (state, context) => {\n\n    let status = {};\n    if (context.type === CometChat.ACTION_TYPE.TYPE_USER) {\n\n        status = {\n            color: `${context.theme.color.blue}`,\n            textTransform: \"capitalize\",\n        };\n\n        if (state.presence === \"offline\") {\n            status = {\n                color: `${context.theme.color.helpText}`,\n                textTransform: \"capitalize\",\n            }\n        } \n\n        if (state.typing) {\n            status = {\n                color: `${context.theme.color.helpText}`,\n                textTransform: \"none\",\n                fontStyle: \"italic\",\n            };\n        }\n        \n    } else if (context.type === CometChat.ACTION_TYPE.TYPE_GROUP) {\n\n        status = {\n            color: `${context.theme.color.helpText}`,\n        }\n\n        if (state.typing) {\n            status = {\n                color: `${context.theme.color.helpText}`,\n                fontStyle: \"italic\",\n            };\n        }\n    }\n\n    return {\n        fontSize: \"13px\",\n        width: \"100%\",\n        ...status\n    }\n}\n\nexport const chatOptionWrapStyle = () => {\n\n    return {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        width: \"auto\",\n    }\n}\n\nexport const chatOptionStyle = (img, context, ongoingCall) => {\n\n    const bgColor = (ongoingCall) ? {\n        backgroundColor: `${context.theme.secondaryTextColor}`\n    } : {\n        backgroundColor: `${context.theme.primaryColor}`\n    };\n    \n    return {\n        width: \"24px\",\n        height: \"24px\",\n        cursor: \"pointer\",\n        display: \"flex\",\n        alignItems: \"center\",\n        margin: \"0 0 0 16px\",\n        \"i\": {\n            width: \"24px\",\n            height: \"24px\",\n            display: \"inline-block\",\n            mask: `url(${img}) center center no-repeat`,\n            ...bgColor\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}