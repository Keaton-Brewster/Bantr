{"ast":null,"code":"import _extends from \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/Extensions/CometChatReceiverWhiteboardBubble/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatMessageActions, CometChatThreadedMessageReplyCount, CometChatReadReceipt } from \"../../\";\nimport { CometChatMessageReactions } from \"../\";\nimport { CometChatAvatar } from \"../../../Shared\";\nimport { CometChatContext } from \"../../../../util/CometChatContext\";\nimport { checkMessageForExtensionsData } from \"../../../../util/common\";\nimport { theme } from \"../../../../resources/theme\";\nimport Translator from \"../../../../resources/localization/translator\";\nimport { messageContainerStyle, messageWrapperStyle, messageThumbnailStyle, messageDetailStyle, nameWrapperStyle, nameStyle, messageTxtContainerStyle, messageTxtWrapperStyle, messageTxtTitleStyle, messageTxtStyle, messageBtnStyle, messageInfoWrapperStyle, messageReactionsWrapperStyle, iconStyle } from \"./style\";\nimport whiteboardIcon from \"./resources/collaborative-whiteboard.svg\";\n\nclass CometChatReceiverWhiteboardBubble extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.messageFrom = \"receiver\";\n\n    this.launchCollaborativeWhiteboard = () => {\n      let whiteboardUrl = null;\n      let whiteboardData = checkMessageForExtensionsData(this.state.message, \"whiteboard\");\n\n      if (whiteboardData && whiteboardData.hasOwnProperty(\"board_url\") && whiteboardData.board_url.length) {\n        let username = this.props.loggedInUser.name.split(\" \").join(\"_\"); // Appending the username to the board_url\n\n        whiteboardUrl = whiteboardData.board_url + \"&username=\" + username;\n        window.open(whiteboardUrl, \"\", \"fullscreen=yes, scrollbars=auto\");\n      }\n    };\n\n    this.handleMouseHover = () => {\n      this.setState(this.toggleHoverState);\n    };\n\n    this.toggleHoverState = state => {\n      return {\n        isHovering: !state.isHovering\n      };\n    };\n\n    const message = Object.assign({}, props.message, {\n      messageFrom: this.messageFrom\n    });\n    this.state = {\n      message: message,\n      isHovering: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const previousMessageStr = JSON.stringify(prevProps.message);\n    const currentMessageStr = JSON.stringify(this.props.message);\n\n    if (previousMessageStr !== currentMessageStr) {\n      const message = Object.assign({}, this.props.message, {\n        messageFrom: this.messageFrom\n      });\n      this.setState({\n        message: message\n      });\n    }\n  }\n\n  render() {\n    let avatar = null,\n        name = null;\n\n    if (this.state.message.receiverType === CometChat.RECEIVER_TYPE.GROUP) {\n      avatar = jsx(\"div\", {\n        css: messageThumbnailStyle,\n        className: \"message__thumbnail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      }, jsx(CometChatAvatar, {\n        user: this.state.message.sender,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }));\n      name = jsx(\"div\", {\n        css: nameWrapperStyle(avatar),\n        className: \"message__name__wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, jsx(\"span\", {\n        css: nameStyle(this.context),\n        className: \"message__name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }, this.props.message.sender.name));\n    }\n\n    let messageReactions = null;\n    const reactionsData = checkMessageForExtensionsData(this.state.message, \"reactions\");\n\n    if (reactionsData) {\n      if (Object.keys(reactionsData).length) {\n        messageReactions = jsx(\"div\", {\n          css: messageReactionsWrapperStyle(),\n          className: \"message__reaction__wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }\n        }, jsx(CometChatMessageReactions, _extends({}, this.props, {\n          message: this.state.message,\n          reaction: reactionsData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }\n        })));\n      }\n    }\n\n    let toolTipView = null;\n\n    if (this.state.isHovering) {\n      toolTipView = jsx(CometChatMessageActions, _extends({}, this.props, {\n        message: this.state.message,\n        name: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    const documentTitle = `${this.state.message.sender.name} ${Translator.translate(\"SHARED_COLLABORATIVE_WHITEBOARD\", this.props.lang)}`;\n    return jsx(\"div\", {\n      css: messageContainerStyle(),\n      className: \"receiver__message__container message__whiteboard\",\n      onMouseEnter: this.handleMouseHover,\n      onMouseLeave: this.handleMouseHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, jsx(\"div\", {\n      css: messageWrapperStyle(),\n      className: \"message__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, avatar, jsx(\"div\", {\n      css: messageDetailStyle(),\n      className: \"message__details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, name, toolTipView, jsx(\"div\", {\n      css: messageTxtContainerStyle(),\n      className: \"message__whiteboard__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, jsx(\"div\", {\n      css: messageTxtWrapperStyle(this.context),\n      className: \"message__whiteboard__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, jsx(\"div\", {\n      css: messageTxtTitleStyle(this.context),\n      className: \"message__whiteboard__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }, jsx(\"i\", {\n      css: iconStyle(whiteboardIcon, this.context),\n      title: Translator.translate(\"COLLABORATIVE_WHITEBOARD\", this.props.lang),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }), jsx(\"p\", {\n      css: messageTxtStyle(),\n      className: \"whiteboard__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }\n    }, documentTitle)), jsx(\"ul\", {\n      css: messageBtnStyle(this.context),\n      className: \"whiteboard__button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }, jsx(\"li\", {\n      onClick: this.launchCollaborativeWhiteboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    }, jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }, Translator.translate(\"JOIN\", this.props.lang)))))), messageReactions, jsx(\"div\", {\n      css: messageInfoWrapperStyle(),\n      className: \"message__info__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, jsx(CometChatReadReceipt, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }\n    })), jsx(CometChatThreadedMessageReplyCount, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }\n    }))))));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatReceiverWhiteboardBubble.contextType = CometChatContext;\nCometChatReceiverWhiteboardBubble.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme\n};\nCometChatReceiverWhiteboardBubble.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object\n};\nexport { CometChatReceiverWhiteboardBubble };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/Extensions/CometChatReceiverWhiteboardBubble/index.js"],"names":["React","jsx","PropTypes","CometChat","CometChatMessageActions","CometChatThreadedMessageReplyCount","CometChatReadReceipt","CometChatMessageReactions","CometChatAvatar","CometChatContext","checkMessageForExtensionsData","theme","Translator","messageContainerStyle","messageWrapperStyle","messageThumbnailStyle","messageDetailStyle","nameWrapperStyle","nameStyle","messageTxtContainerStyle","messageTxtWrapperStyle","messageTxtTitleStyle","messageTxtStyle","messageBtnStyle","messageInfoWrapperStyle","messageReactionsWrapperStyle","iconStyle","CometChatReceiverWhiteboardBubble","PureComponent","constructor","props","messageFrom","launchCollaborativeWhiteboard","whiteboardUrl","whiteboardData","state","message","hasOwnProperty","board_url","length","username","loggedInUser","name","split","join","window","open","handleMouseHover","setState","toggleHoverState","isHovering","Object","assign","componentDidUpdate","prevProps","previousMessageStr","JSON","stringify","currentMessageStr","render","avatar","receiverType","RECEIVER_TYPE","GROUP","sender","context","messageReactions","reactionsData","keys","toolTipView","documentTitle","translate","lang","whiteboardIcon","contextType","defaultProps","getDefaultLanguage","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport {\n  CometChatMessageActions,\n  CometChatThreadedMessageReplyCount,\n  CometChatReadReceipt,\n} from \"../../\";\nimport { CometChatMessageReactions } from \"../\";\nimport { CometChatAvatar } from \"../../../Shared\";\n\nimport { CometChatContext } from \"../../../../util/CometChatContext\";\nimport { checkMessageForExtensionsData } from \"../../../../util/common\";\n\nimport { theme } from \"../../../../resources/theme\";\nimport Translator from \"../../../../resources/localization/translator\";\n\nimport {\n  messageContainerStyle,\n  messageWrapperStyle,\n  messageThumbnailStyle,\n  messageDetailStyle,\n  nameWrapperStyle,\n  nameStyle,\n  messageTxtContainerStyle,\n  messageTxtWrapperStyle,\n  messageTxtTitleStyle,\n  messageTxtStyle,\n  messageBtnStyle,\n  messageInfoWrapperStyle,\n  messageReactionsWrapperStyle,\n  iconStyle,\n} from \"./style\";\n\nimport whiteboardIcon from \"./resources/collaborative-whiteboard.svg\";\n\nclass CometChatReceiverWhiteboardBubble extends React.PureComponent {\n  static contextType = CometChatContext;\n  messageFrom = \"receiver\";\n\n  constructor(props) {\n    super(props);\n\n    const message = Object.assign({}, props.message, {\n      messageFrom: this.messageFrom,\n    });\n    this.state = {\n      message: message,\n      isHovering: false,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const previousMessageStr = JSON.stringify(prevProps.message);\n    const currentMessageStr = JSON.stringify(this.props.message);\n\n    if (previousMessageStr !== currentMessageStr) {\n      const message = Object.assign({}, this.props.message, {\n        messageFrom: this.messageFrom,\n      });\n      this.setState({ message: message });\n    }\n  }\n\n  launchCollaborativeWhiteboard = () => {\n    let whiteboardUrl = null;\n    let whiteboardData = checkMessageForExtensionsData(\n      this.state.message,\n      \"whiteboard\"\n    );\n    if (\n      whiteboardData &&\n      whiteboardData.hasOwnProperty(\"board_url\") &&\n      whiteboardData.board_url.length\n    ) {\n      let username = this.props.loggedInUser.name.split(\" \").join(\"_\");\n      // Appending the username to the board_url\n      whiteboardUrl = whiteboardData.board_url + \"&username=\" + username;\n      window.open(whiteboardUrl, \"\", \"fullscreen=yes, scrollbars=auto\");\n    }\n  };\n\n  handleMouseHover = () => {\n    this.setState(this.toggleHoverState);\n  };\n\n  toggleHoverState = (state) => {\n    return {\n      isHovering: !state.isHovering,\n    };\n  };\n\n  render() {\n    let avatar = null,\n      name = null;\n    if (this.state.message.receiverType === CometChat.RECEIVER_TYPE.GROUP) {\n      avatar = (\n        <div css={messageThumbnailStyle} className=\"message__thumbnail\">\n          <CometChatAvatar user={this.state.message.sender} />\n        </div>\n      );\n\n      name = (\n        <div css={nameWrapperStyle(avatar)} className=\"message__name__wrapper\">\n          <span css={nameStyle(this.context)} className=\"message__name\">\n            {this.props.message.sender.name}\n          </span>\n        </div>\n      );\n    }\n\n    let messageReactions = null;\n    const reactionsData = checkMessageForExtensionsData(\n      this.state.message,\n      \"reactions\"\n    );\n    if (reactionsData) {\n      if (Object.keys(reactionsData).length) {\n        messageReactions = (\n          <div\n            css={messageReactionsWrapperStyle()}\n            className=\"message__reaction__wrapper\"\n          >\n            <CometChatMessageReactions\n              {...this.props}\n              message={this.state.message}\n              reaction={reactionsData}\n            />\n          </div>\n        );\n      }\n    }\n\n    let toolTipView = null;\n    if (this.state.isHovering) {\n      toolTipView = (\n        <CometChatMessageActions\n          {...this.props}\n          message={this.state.message}\n          name={name}\n        />\n      );\n    }\n\n    const documentTitle = `${\n      this.state.message.sender.name\n    } ${Translator.translate(\n      \"SHARED_COLLABORATIVE_WHITEBOARD\",\n      this.props.lang\n    )}`;\n\n    return (\n      <div\n        css={messageContainerStyle()}\n        className=\"receiver__message__container message__whiteboard\"\n        onMouseEnter={this.handleMouseHover}\n        onMouseLeave={this.handleMouseHover}\n      >\n        <div css={messageWrapperStyle()} className=\"message__wrapper\">\n          {avatar}\n          <div css={messageDetailStyle()} className=\"message__details\">\n            {name}\n            {toolTipView}\n            <div\n              css={messageTxtContainerStyle()}\n              className=\"message__whiteboard__container\"\n            >\n              <div\n                css={messageTxtWrapperStyle(this.context)}\n                className=\"message__whiteboard__wrapper\"\n              >\n                <div\n                  css={messageTxtTitleStyle(this.context)}\n                  className=\"message__whiteboard__title\"\n                >\n                  <i\n                    css={iconStyle(whiteboardIcon, this.context)}\n                    title={Translator.translate(\n                      \"COLLABORATIVE_WHITEBOARD\",\n                      this.props.lang\n                    )}\n                  ></i>\n                  <p css={messageTxtStyle()} className=\"whiteboard__title\">\n                    {documentTitle}\n                  </p>\n                </div>\n\n                <ul\n                  css={messageBtnStyle(this.context)}\n                  className=\"whiteboard__button\"\n                >\n                  <li onClick={this.launchCollaborativeWhiteboard}>\n                    <p>{Translator.translate(\"JOIN\", this.props.lang)}</p>\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n            {messageReactions}\n\n            <div\n              css={messageInfoWrapperStyle()}\n              className=\"message__info__wrapper\"\n            >\n              <CometChatReadReceipt\n                {...this.props}\n                message={this.state.message}\n              />\n              <CometChatThreadedMessageReplyCount\n                {...this.props}\n                message={this.state.message}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Specifies the default values for props:\nCometChatReceiverWhiteboardBubble.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n};\n\nCometChatReceiverWhiteboardBubble.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n};\n\nexport { CometChatReceiverWhiteboardBubble };\n"]},"metadata":{},"sourceType":"module"}