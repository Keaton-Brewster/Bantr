{"ast":null,"code":"import _extends from \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatReceiverImageMessageBubble/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatMessageActions, CometChatThreadedMessageReplyCount, CometChatReadReceipt } from \"../\";\nimport { CometChatMessageReactions } from \"../Extensions\";\nimport { CometChatAvatar } from \"../../Shared\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport { checkMessageForExtensionsData } from \"../../../util/common\";\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { messageContainerStyle, messageWrapperStyle, messageThumbnailStyle, messageDetailStyle, nameWrapperStyle, nameStyle, messageImgContainerStyle, messageImgWrapperStyle, messageInfoWrapperStyle, messageReactionsWrapperStyle } from \"./style\";\nimport srcIcon from \"./resources/1px.png\";\n\nclass CometChatReceiverImageMessageBubble extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.messageFrom = \"receiver\";\n\n    this.chooseImage = thumbnailGenerationObject => {\n      const smallUrl = thumbnailGenerationObject[\"url_small\"];\n      const mediumUrl = thumbnailGenerationObject[\"url_medium\"];\n      const mq = window.matchMedia(this.props.theme.breakPoints[0]);\n      let imageToDownload = mediumUrl;\n\n      if (mq.matches) {\n        imageToDownload = smallUrl;\n      }\n\n      return imageToDownload;\n    };\n\n    this.setImage = () => {\n      const thumbnailGenerationData = checkMessageForExtensionsData(this.state.message, \"thumbnail-generation\");\n\n      if (thumbnailGenerationData) {\n        const mq = window.matchMedia(this.props.theme.breakPoints[0]);\n        mq.addListener(() => {\n          const imageToDownload = this.chooseImage(thumbnailGenerationData);\n          let img = new Image();\n          img.src = imageToDownload;\n\n          img.onload = () => this.setState({\n            imageUrl: img.src\n          });\n        });\n        const imageToDownload = this.chooseImage(thumbnailGenerationData);\n        this.downloadImage(imageToDownload).then(response => {\n          let img = new Image();\n          img.src = imageToDownload;\n\n          img.onload = () => {\n            this.setState({\n              imageUrl: img.src\n            });\n          };\n        }).catch(error => console.error(error));\n      } else {\n        this.setMessageImageUrl();\n      }\n    };\n\n    this.setMessageImageUrl = () => {\n      let img = new Image();\n      img.src = this.state.message.data.url;\n\n      img.onload = () => {\n        if (this._isMounted) {\n          this.setState({\n            imageUrl: img.src\n          });\n        }\n      };\n    };\n\n    this.open = () => {\n      this.props.actionGenerated(enums.ACTIONS[\"VIEW_ORIGINAL_IMAGE\"], this.state.message);\n    };\n\n    this.handleMouseHover = () => {\n      this.setState(this.toggleHoverState);\n    };\n\n    this.toggleHoverState = state => {\n      return {\n        isHovering: !state.isHovering\n      };\n    };\n\n    this._isMounted = false;\n    this.imgRef = /*#__PURE__*/React.createRef();\n    const message = Object.assign({}, props.message, {\n      messageFrom: this.messageFrom\n    });\n    this.state = {\n      message: message,\n      imageUrl: srcIcon,\n      isHovering: false\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.setImage();\n  }\n\n  componentDidUpdate(prevProps) {\n    const previousMessageStr = JSON.stringify(prevProps.message);\n    const currentMessageStr = JSON.stringify(this.props.message);\n\n    if (previousMessageStr !== currentMessageStr) {\n      const message = Object.assign({}, this.props.message, {\n        messageFrom: this.messageFrom\n      });\n      this.setState({\n        message: message\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  downloadImage(imgUrl) {\n    const promise = new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", imgUrl, true);\n      xhr.responseType = \"blob\";\n\n      xhr.onload = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            this.timer = null;\n            resolve(xhr.response);\n          } else if (xhr.status === 403) {\n            this.timer = setTimeout(() => {\n              this.downloadImage(imgUrl).then(response => resolve(response)).catch(error => reject(error));\n            }, 800);\n          }\n        } else {\n          reject(xhr.statusText);\n        }\n      };\n\n      xhr.onerror = event => reject(new Error(\"There was a network error.\", event));\n\n      xhr.ontimeout = event => reject(new Error(\"There was a timeout error.\", event));\n\n      xhr.send();\n    });\n    return promise;\n  }\n\n  render() {\n    let avatar = null,\n        name = null;\n\n    if (this.props.message.receiverType === CometChat.RECEIVER_TYPE.GROUP) {\n      avatar = jsx(\"div\", {\n        css: messageThumbnailStyle(),\n        className: \"message__thumbnail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }\n      }, jsx(CometChatAvatar, {\n        user: this.state.message.sender,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }\n      }));\n      name = jsx(\"div\", {\n        css: nameWrapperStyle(avatar),\n        className: \"message__name__wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }\n      }, jsx(\"span\", {\n        css: nameStyle(this.context),\n        className: \"message__name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }\n      }, this.state.message.sender.name));\n    }\n\n    let messageReactions = null;\n    const reactionsData = checkMessageForExtensionsData(this.state.message, \"reactions\");\n\n    if (reactionsData) {\n      if (Object.keys(reactionsData).length) {\n        messageReactions = jsx(\"div\", {\n          css: messageReactionsWrapperStyle(),\n          className: \"message__reaction__wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }\n        }, jsx(CometChatMessageReactions, _extends({}, this.props, {\n          message: this.state.message,\n          reaction: reactionsData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }\n        })));\n      }\n    }\n\n    let toolTipView = null;\n\n    if (this.state.isHovering) {\n      toolTipView = jsx(CometChatMessageActions, _extends({}, this.props, {\n        message: this.state.message,\n        name: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    return jsx(\"div\", {\n      css: messageContainerStyle(),\n      className: \"receiver__message__container message__image\",\n      onMouseEnter: this.handleMouseHover,\n      onMouseLeave: this.handleMouseHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }\n    }, jsx(\"div\", {\n      css: messageWrapperStyle(),\n      className: \"message__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }\n    }, avatar, jsx(\"div\", {\n      css: messageDetailStyle(name),\n      className: \"message__details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }\n    }, name, toolTipView, jsx(\"div\", {\n      css: messageImgContainerStyle(),\n      className: \"message__image__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }, jsx(\"div\", {\n      css: messageImgWrapperStyle(this.context),\n      onClick: this.open,\n      className: \"message__image__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 15\n      }\n    }, jsx(\"img\", {\n      src: this.state.imageUrl,\n      alt: this.state.imageUrl,\n      ref: el => {\n        this.imgRef = el;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }))), messageReactions, jsx(\"div\", {\n      css: messageInfoWrapperStyle(),\n      className: \"message__info__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }\n    }, jsx(CometChatReadReceipt, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 15\n      }\n    })), jsx(CometChatThreadedMessageReplyCount, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 15\n      }\n    }))))));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatReceiverImageMessageBubble.contextType = CometChatContext;\nCometChatReceiverImageMessageBubble.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme\n};\nCometChatReceiverImageMessageBubble.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object\n};\nexport { CometChatReceiverImageMessageBubble };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatReceiverImageMessageBubble/index.js"],"names":["React","jsx","PropTypes","CometChat","CometChatMessageActions","CometChatThreadedMessageReplyCount","CometChatReadReceipt","CometChatMessageReactions","CometChatAvatar","CometChatContext","enums","checkMessageForExtensionsData","theme","Translator","messageContainerStyle","messageWrapperStyle","messageThumbnailStyle","messageDetailStyle","nameWrapperStyle","nameStyle","messageImgContainerStyle","messageImgWrapperStyle","messageInfoWrapperStyle","messageReactionsWrapperStyle","srcIcon","CometChatReceiverImageMessageBubble","PureComponent","constructor","props","messageFrom","chooseImage","thumbnailGenerationObject","smallUrl","mediumUrl","mq","window","matchMedia","breakPoints","imageToDownload","matches","setImage","thumbnailGenerationData","state","message","addListener","img","Image","src","onload","setState","imageUrl","downloadImage","then","response","catch","error","console","setMessageImageUrl","data","url","_isMounted","open","actionGenerated","ACTIONS","handleMouseHover","toggleHoverState","isHovering","imgRef","createRef","Object","assign","componentDidMount","componentDidUpdate","prevProps","previousMessageStr","JSON","stringify","currentMessageStr","componentWillUnmount","imgUrl","promise","Promise","resolve","reject","xhr","XMLHttpRequest","responseType","readyState","status","timer","setTimeout","statusText","onerror","event","Error","ontimeout","send","render","avatar","name","receiverType","RECEIVER_TYPE","GROUP","sender","context","messageReactions","reactionsData","keys","length","toolTipView","el","contextType","defaultProps","lang","getDefaultLanguage","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport {\n  CometChatMessageActions,\n  CometChatThreadedMessageReplyCount,\n  CometChatReadReceipt,\n} from \"../\";\nimport { CometChatMessageReactions } from \"../Extensions\";\nimport { CometChatAvatar } from \"../../Shared\";\n\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport { checkMessageForExtensionsData } from \"../../../util/common\";\n\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\n\nimport {\n  messageContainerStyle,\n  messageWrapperStyle,\n  messageThumbnailStyle,\n  messageDetailStyle,\n  nameWrapperStyle,\n  nameStyle,\n  messageImgContainerStyle,\n  messageImgWrapperStyle,\n  messageInfoWrapperStyle,\n  messageReactionsWrapperStyle,\n} from \"./style\";\n\nimport srcIcon from \"./resources/1px.png\";\n\nclass CometChatReceiverImageMessageBubble extends React.PureComponent {\n  static contextType = CometChatContext;\n  messageFrom = \"receiver\";\n\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this.imgRef = React.createRef();\n\n    const message = Object.assign({}, props.message, {\n      messageFrom: this.messageFrom,\n    });\n\n    this.state = {\n      message: message,\n      imageUrl: srcIcon,\n      isHovering: false,\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.setImage();\n  }\n\n  componentDidUpdate(prevProps) {\n    const previousMessageStr = JSON.stringify(prevProps.message);\n    const currentMessageStr = JSON.stringify(this.props.message);\n\n    if (previousMessageStr !== currentMessageStr) {\n      const message = Object.assign({}, this.props.message, {\n        messageFrom: this.messageFrom,\n      });\n      this.setState({ message: message });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  chooseImage = (thumbnailGenerationObject) => {\n    const smallUrl = thumbnailGenerationObject[\"url_small\"];\n    const mediumUrl = thumbnailGenerationObject[\"url_medium\"];\n\n    const mq = window.matchMedia(this.props.theme.breakPoints[0]);\n\n    let imageToDownload = mediumUrl;\n    if (mq.matches) {\n      imageToDownload = smallUrl;\n    }\n\n    return imageToDownload;\n  };\n\n  setImage = () => {\n    const thumbnailGenerationData = checkMessageForExtensionsData(\n      this.state.message,\n      \"thumbnail-generation\"\n    );\n    if (thumbnailGenerationData) {\n      const mq = window.matchMedia(this.props.theme.breakPoints[0]);\n      mq.addListener(() => {\n        const imageToDownload = this.chooseImage(thumbnailGenerationData);\n        let img = new Image();\n        img.src = imageToDownload;\n        img.onload = () => this.setState({ imageUrl: img.src });\n      });\n\n      const imageToDownload = this.chooseImage(thumbnailGenerationData);\n      this.downloadImage(imageToDownload)\n        .then((response) => {\n          let img = new Image();\n          img.src = imageToDownload;\n          img.onload = () => {\n            this.setState({ imageUrl: img.src });\n          };\n        })\n        .catch((error) => console.error(error));\n    } else {\n      this.setMessageImageUrl();\n    }\n  };\n\n  setMessageImageUrl = () => {\n    let img = new Image();\n    img.src = this.state.message.data.url;\n    img.onload = () => {\n      if (this._isMounted) {\n        this.setState({ imageUrl: img.src });\n      }\n    };\n  };\n\n  downloadImage(imgUrl) {\n    const promise = new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", imgUrl, true);\n      xhr.responseType = \"blob\";\n\n      xhr.onload = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            this.timer = null;\n            resolve(xhr.response);\n          } else if (xhr.status === 403) {\n            this.timer = setTimeout(() => {\n              this.downloadImage(imgUrl)\n                .then((response) => resolve(response))\n                .catch((error) => reject(error));\n            }, 800);\n          }\n        } else {\n          reject(xhr.statusText);\n        }\n      };\n\n      xhr.onerror = (event) =>\n        reject(new Error(\"There was a network error.\", event));\n      xhr.ontimeout = (event) =>\n        reject(new Error(\"There was a timeout error.\", event));\n      xhr.send();\n    });\n\n    return promise;\n  }\n\n  open = () => {\n    this.props.actionGenerated(\n      enums.ACTIONS[\"VIEW_ORIGINAL_IMAGE\"],\n      this.state.message\n    );\n  };\n\n  handleMouseHover = () => {\n    this.setState(this.toggleHoverState);\n  };\n\n  toggleHoverState = (state) => {\n    return {\n      isHovering: !state.isHovering,\n    };\n  };\n\n  render() {\n    let avatar = null,\n      name = null;\n    if (this.props.message.receiverType === CometChat.RECEIVER_TYPE.GROUP) {\n      avatar = (\n        <div css={messageThumbnailStyle()} className=\"message__thumbnail\">\n          <CometChatAvatar user={this.state.message.sender} />\n        </div>\n      );\n\n      name = (\n        <div css={nameWrapperStyle(avatar)} className=\"message__name__wrapper\">\n          <span css={nameStyle(this.context)} className=\"message__name\">\n            {this.state.message.sender.name}\n          </span>\n        </div>\n      );\n    }\n\n    let messageReactions = null;\n    const reactionsData = checkMessageForExtensionsData(\n      this.state.message,\n      \"reactions\"\n    );\n    if (reactionsData) {\n      if (Object.keys(reactionsData).length) {\n        messageReactions = (\n          <div\n            css={messageReactionsWrapperStyle()}\n            className=\"message__reaction__wrapper\"\n          >\n            <CometChatMessageReactions\n              {...this.props}\n              message={this.state.message}\n              reaction={reactionsData}\n            />\n          </div>\n        );\n      }\n    }\n\n    let toolTipView = null;\n    if (this.state.isHovering) {\n      toolTipView = (\n        <CometChatMessageActions\n          {...this.props}\n          message={this.state.message}\n          name={name}\n        />\n      );\n    }\n\n    return (\n      <div\n        css={messageContainerStyle()}\n        className=\"receiver__message__container message__image\"\n        onMouseEnter={this.handleMouseHover}\n        onMouseLeave={this.handleMouseHover}\n      >\n        <div css={messageWrapperStyle()} className=\"message__wrapper\">\n          {avatar}\n          <div css={messageDetailStyle(name)} className=\"message__details\">\n            {name}\n            {toolTipView}\n            <div\n              css={messageImgContainerStyle()}\n              className=\"message__image__container\"\n            >\n              <div\n                css={messageImgWrapperStyle(this.context)}\n                onClick={this.open}\n                className=\"message__image__wrapper\"\n              >\n                <img\n                  src={this.state.imageUrl}\n                  alt={this.state.imageUrl}\n                  ref={(el) => {\n                    this.imgRef = el;\n                  }}\n                />\n              </div>\n            </div>\n\n            {messageReactions}\n\n            <div\n              css={messageInfoWrapperStyle()}\n              className=\"message__info__wrapper\"\n            >\n              <CometChatReadReceipt\n                {...this.props}\n                message={this.state.message}\n              />\n              <CometChatThreadedMessageReplyCount\n                {...this.props}\n                message={this.state.message}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Specifies the default values for props:\nCometChatReceiverImageMessageBubble.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n};\n\nCometChatReceiverImageMessageBubble.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n};\n\nexport { CometChatReceiverImageMessageBubble };\n"]},"metadata":{},"sourceType":"module"}