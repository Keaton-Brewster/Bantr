{"ast":null,"code":"import _extends from \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatSenderDirectCallBubble/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChatMessageActions, CometChatThreadedMessageReplyCount, CometChatReadReceipt } from \"../\";\nimport { CometChatMessageReactions } from \"../Extensions\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport { checkMessageForExtensionsData } from \"../../../util/common\";\nimport * as enums from \"../../../util/enums.js\";\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { messageContainerStyle, messageWrapperStyle, messageTxtWrapperStyle, messageTxtContainerStyle, messageTxtStyle, messageBtnStyle, messageInfoWrapperStyle, messageReactionsWrapperStyle, iconStyle } from \"./style\";\nimport callIcon from \"./resources/video-call.svg\";\n\nclass CometChatSenderDirectCallBubble extends React.Component {\n  constructor(props) {\n    super(props);\n    this.messageFrom = \"sender\";\n\n    this.handleMouseHover = () => {\n      this.setState(this.toggleHoverState);\n    };\n\n    this.toggleHoverState = state => {\n      return {\n        isHovering: !state.isHovering\n      };\n    };\n\n    const message = Object.assign({}, props.message, {\n      messageFrom: this.messageFrom\n    });\n    this.state = {\n      message: message,\n      isHovering: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const previousMessageStr = JSON.stringify(prevProps.message);\n    const currentMessageStr = JSON.stringify(this.props.message);\n\n    if (previousMessageStr !== currentMessageStr) {\n      const message = Object.assign({}, this.props.message, {\n        messageFrom: this.messageFrom\n      });\n      this.setState({\n        message: message\n      });\n    }\n  }\n\n  render() {\n    let messageReactions = null;\n    const reactionsData = checkMessageForExtensionsData(this.state.message, \"reactions\");\n\n    if (reactionsData) {\n      if (Object.keys(reactionsData).length) {\n        messageReactions = jsx(\"div\", {\n          css: messageReactionsWrapperStyle(),\n          className: \"message__reaction__wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }\n        }, jsx(CometChatMessageReactions, _extends({}, this.props, {\n          message: this.state.message,\n          reaction: reactionsData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }\n        })));\n      }\n    }\n\n    let toolTipView = null;\n\n    if (this.state.isHovering) {\n      toolTipView = jsx(CometChatMessageActions, _extends({}, this.props, {\n        message: this.state.message,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 28\n        }\n      }));\n    }\n\n    let callMessage = null;\n    const joinCallMessage = Translator.translate(\"YOU_ALREADY_ONGOING_CALL\", this.props.lang);\n\n    if (this.context.checkIfDirectCallIsOngoing() === enums.CONSTANTS.CALLS[\"ONGOING_CALL_SAME_GROUP\"]) {\n      //ongoing call in same group\n      callMessage = jsx(\"li\", {\n        title: joinCallMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 45\n        }\n      }, Translator.translate(\"JOIN\", this.props.lang)));\n    } else if (this.context.checkIfDirectCallIsOngoing() === enums.CONSTANTS.CALLS[\"ONGOING_CALL_DIFF_GROUP\"]) {\n      //ongoing call in different group\n      callMessage = jsx(\"li\", {\n        title: joinCallMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 45\n        }\n      }, Translator.translate(\"JOIN\", this.props.lang)));\n    } else if (this.context.checkIfCallIsOngoing()) {\n      //ongoing call\n      callMessage = jsx(\"li\", {\n        title: joinCallMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 45\n        }\n      }, Translator.translate(\"JOIN\", this.props.lang)));\n    } else {\n      callMessage = jsx(\"li\", {\n        onClick: () => this.props.actionGenerated(enums.ACTIONS[\"JOIN_DIRECT_CALL\"], this.state.message),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }, Translator.translate(\"JOIN\", this.props.lang)));\n    }\n\n    const messageTitle = Translator.translate(\"YOU_INITIATED_GROUP_CALL\", this.props.lang);\n    return jsx(\"div\", {\n      css: messageContainerStyle(),\n      className: \"sender__message__container message__directcall\",\n      onMouseEnter: this.handleMouseHover,\n      onMouseLeave: this.handleMouseHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, toolTipView, jsx(\"div\", {\n      css: messageWrapperStyle(),\n      className: \"message__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, jsx(\"div\", {\n      css: messageTxtWrapperStyle(this.context),\n      className: \"message__directcall__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, jsx(\"div\", {\n      css: messageTxtContainerStyle(),\n      className: \"message__directcall__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, jsx(\"i\", {\n      css: iconStyle(callIcon, this.context),\n      alt: Translator.translate(\"VIDEO_CALL\", this.props.lang),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }), jsx(\"p\", {\n      css: messageTxtStyle(),\n      className: \"directcall__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, messageTitle)), jsx(\"ul\", {\n      css: messageBtnStyle(this.context),\n      className: \"directcall__button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, callMessage))), messageReactions, jsx(\"div\", {\n      css: messageInfoWrapperStyle(),\n      className: \"message__info__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, jsx(CometChatThreadedMessageReplyCount, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    })), jsx(CometChatReadReceipt, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatSenderDirectCallBubble.contextType = CometChatContext;\nCometChatSenderDirectCallBubble.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  message: {},\n  loggedInUser: {}\n};\nCometChatSenderDirectCallBubble.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  message: PropTypes.object,\n  loggedInUser: PropTypes.object\n};\nexport { CometChatSenderDirectCallBubble };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatSenderDirectCallBubble/index.js"],"names":["React","jsx","PropTypes","CometChatMessageActions","CometChatThreadedMessageReplyCount","CometChatReadReceipt","CometChatMessageReactions","CometChatContext","checkMessageForExtensionsData","enums","theme","Translator","messageContainerStyle","messageWrapperStyle","messageTxtWrapperStyle","messageTxtContainerStyle","messageTxtStyle","messageBtnStyle","messageInfoWrapperStyle","messageReactionsWrapperStyle","iconStyle","CometChatSenderDirectCallBubble","Component","constructor","props","messageFrom","handleMouseHover","setState","toggleHoverState","state","isHovering","message","Object","assign","componentDidUpdate","prevProps","previousMessageStr","JSON","stringify","currentMessageStr","render","messageReactions","reactionsData","keys","length","toolTipView","callMessage","joinCallMessage","translate","lang","context","checkIfDirectCallIsOngoing","CONSTANTS","CALLS","checkIfCallIsOngoing","actionGenerated","ACTIONS","messageTitle","callIcon","contextType","defaultProps","getDefaultLanguage","loggedInUser","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\n\nimport { CometChatMessageActions, CometChatThreadedMessageReplyCount, CometChatReadReceipt } from \"../\";\nimport { CometChatMessageReactions } from \"../Extensions\";\n\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport { checkMessageForExtensionsData } from \"../../../util/common\";\nimport * as enums from \"../../../util/enums.js\";\n\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\n\nimport {\n    messageContainerStyle,\n    messageWrapperStyle,\n    messageTxtWrapperStyle,\n    messageTxtContainerStyle,\n    messageTxtStyle,\n    messageBtnStyle,\n    messageInfoWrapperStyle,\n    messageReactionsWrapperStyle,\n    iconStyle\n} from \"./style\";\n\nimport callIcon from \"./resources/video-call.svg\";\n\nclass CometChatSenderDirectCallBubble extends React.Component {\n\n    messageFrom = \"sender\";\n    static contextType = CometChatContext;\n\n    constructor(props) {\n\n        super(props);\n        const message = Object.assign({}, props.message, { messageFrom: this.messageFrom });\n\n        this.state = {\n            message: message, \n            isHovering: false,\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n\n        const previousMessageStr = JSON.stringify(prevProps.message);\n        const currentMessageStr = JSON.stringify(this.props.message);\n\n        if (previousMessageStr !== currentMessageStr) {\n\n            const message = Object.assign({}, this.props.message, { messageFrom: this.messageFrom });\n            this.setState({ message: message })\n        }\n    }\n\n    handleMouseHover = () => {\n        this.setState(this.toggleHoverState);\n    }\n\n    toggleHoverState = (state) => {\n\n        return {\n            isHovering: !state.isHovering,\n        };\n    }\n\n    render() {\n\n        let messageReactions = null;\n        const reactionsData = checkMessageForExtensionsData(this.state.message, \"reactions\");\n        if (reactionsData) {\n\n            if (Object.keys(reactionsData).length) {\n                messageReactions = (\n                    <div css={messageReactionsWrapperStyle()} className=\"message__reaction__wrapper\">\n                        <CometChatMessageReactions {...this.props} message={this.state.message} reaction={reactionsData} />\n                    </div>\n                );\n            }\n        }\n\n        let toolTipView = null;\n        if (this.state.isHovering) {\n            toolTipView = (<CometChatMessageActions {...this.props} message={this.state.message} />);\n        }\n\n        let callMessage = null;\n        const joinCallMessage = Translator.translate(\"YOU_ALREADY_ONGOING_CALL\", this.props.lang);\n\n        if (this.context.checkIfDirectCallIsOngoing() === enums.CONSTANTS.CALLS[\"ONGOING_CALL_SAME_GROUP\"]) {//ongoing call in same group\n            callMessage = (\n                <li title={joinCallMessage}><p>{Translator.translate(\"JOIN\", this.props.lang)}</p></li>\n            );\n        } else if (this.context.checkIfDirectCallIsOngoing() === enums.CONSTANTS.CALLS[\"ONGOING_CALL_DIFF_GROUP\"]) {//ongoing call in different group\n\n            callMessage = (\n                <li title={joinCallMessage}><p>{Translator.translate(\"JOIN\", this.props.lang)}</p></li>\n            );\n        } else if (this.context.checkIfCallIsOngoing()) {//ongoing call\n\n            callMessage = (\n                <li title={joinCallMessage}><p>{Translator.translate(\"JOIN\", this.props.lang)}</p></li>\n            );\n\n        } else {\n            callMessage = (\n                <li onClick={() => this.props.actionGenerated(enums.ACTIONS[\"JOIN_DIRECT_CALL\"], this.state.message)}>\n                    <p>{Translator.translate(\"JOIN\", this.props.lang)}</p>\n                </li>\n            );\n        }\n\n        const messageTitle = Translator.translate(\"YOU_INITIATED_GROUP_CALL\", this.props.lang);\n        return (\n            <div css={messageContainerStyle()} \n            className=\"sender__message__container message__directcall\"\n            onMouseEnter={this.handleMouseHover}\n            onMouseLeave={this.handleMouseHover}>\n\n                {toolTipView}\n\n                <div css={messageWrapperStyle()} className=\"message__wrapper\">\n                    <div css={messageTxtWrapperStyle(this.context)} className=\"message__directcall__wrapper\">\n                        <div css={messageTxtContainerStyle()} className=\"message__directcall__container\">\n                            <i css={iconStyle(callIcon, this.context)} alt={Translator.translate(\"VIDEO_CALL\", this.props.lang)}></i>\n                            <p css={messageTxtStyle()} className=\"directcall__title\">{messageTitle}</p>\n                        </div>\n                        <ul css={messageBtnStyle(this.context)} className=\"directcall__button\">\n                            {callMessage}\n                        </ul>\n                    </div>\n                </div>\n\n                {messageReactions}\n\n                <div css={messageInfoWrapperStyle()} className=\"message__info__wrapper\">\n                    <CometChatThreadedMessageReplyCount {...this.props} message={this.state.message} />\n                    <CometChatReadReceipt {...this.props} message={this.state.message} />\n                </div>\n\n            </div>\n        )\n    }\n}\n\n// Specifies the default values for props:\nCometChatSenderDirectCallBubble.defaultProps = {\n    lang: Translator.getDefaultLanguage(),\n    theme: theme,\n    message: {},\n    loggedInUser: {}\n};\n\nCometChatSenderDirectCallBubble.propTypes = {\n    lang: PropTypes.string,\n    theme: PropTypes.object,\n    message: PropTypes.object,\n    loggedInUser: PropTypes.object\n}\n\nexport { CometChatSenderDirectCallBubble };"]},"metadata":{},"sourceType":"module"}