{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Chats/CometChatConversationListWithMessages/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatConversationList } from \"../\";\nimport { CometChatMessages } from \"../../Messages\";\nimport { CometChatIncomingCall, CometChatIncomingDirectCall } from \"../../Calls\";\nimport { CometChatContextProvider } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { theme } from \"../../../resources/theme\";\nimport { chatScreenStyle, chatScreenSidebarStyle, chatScreenMainStyle } from \"./style\";\n\nclass CometChatConversationListWithMessages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loggedInUser = null;\n\n    this.itemClicked = (item, type) => {\n      this.contextProviderRef.setTypeAndItem(type, item);\n      this.toggleSideBar();\n    };\n\n    this.actionHandler = (action, item, count, ...otherProps) => {\n      switch (action) {\n        case enums.ACTIONS[\"TOGGLE_SIDEBAR\"]:\n          this.toggleSideBar();\n          break;\n\n        case enums.GROUP_MEMBER_SCOPE_CHANGED:\n        case enums.GROUP_MEMBER_KICKED:\n        case enums.GROUP_MEMBER_BANNED:\n          this.groupUpdated(action, item, count, ...otherProps);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.toggleSideBar = () => {\n      const sidebarview = this.state.sidebarview;\n      this.setState({\n        sidebarview: !sidebarview\n      });\n    };\n\n    this.groupUpdated = (key, message, group, options) => {\n      switch (key) {\n        case enums.GROUP_MEMBER_BANNED:\n        case enums.GROUP_MEMBER_KICKED:\n          {\n            if (this.contextProviderRef.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.contextProviderRef.item.guid === group.guid && options.user.uid === this.loggedInUser.uid) {\n              this.contextProviderRef.setItem({});\n              this.contextProviderRef.setType(\"\");\n            }\n\n            break;\n          }\n\n        case enums.GROUP_MEMBER_SCOPE_CHANGED:\n          {\n            if (this.contextProviderRef.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.contextProviderRef.item.guid === group.guid && options.user.uid === this.loggedInUser.uid) {\n              const newObject = Object.assign({}, this.contextProviderRef.item, {\n                scope: options[\"scope\"]\n              });\n              this.contextProviderRef.setItem(newObject);\n              this.contextProviderRef.setType(CometChat.ACTION_TYPE.TYPE_GROUP);\n            }\n\n            break;\n          }\n\n        default:\n          break;\n      }\n    };\n\n    this.state = {\n      tab: \"conversations\",\n      sidebarview: false,\n      lang: props.lang\n    };\n    this.contextProviderRef = /*#__PURE__*/React.createRef();\n    this.chatListRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.chatWithUser.length === 0 && this.props.chatWithGroup.length === 0) {\n      this.toggleSideBar();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.lang !== this.props.lang) {\n      this.setState({\n        lang: this.props.lang\n      });\n    }\n  }\n\n  render() {\n    let messageScreen = jsx(CometChatMessages, {\n      theme: this.props.theme,\n      lang: this.state.lang,\n      _parent: \"conversations\",\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }\n    });\n    return jsx(CometChatContextProvider, {\n      ref: el => this.contextProviderRef = el,\n      user: this.props.chatWithUser,\n      group: this.props.chatWithGroup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, jsx(\"div\", {\n      css: chatScreenStyle(this.props),\n      className: \"cometchat cometchat--chats\",\n      dir: Translator.getDirection(this.state.lang),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, jsx(\"div\", {\n      css: chatScreenSidebarStyle(this.state, this.props),\n      className: \"chats__sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, jsx(CometChatConversationList, {\n      ref: el => this.chatListRef = el,\n      _parent: \"clwm\",\n      theme: this.props.theme,\n      lang: this.state.lang,\n      onItemClick: this.itemClicked,\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    })), jsx(\"div\", {\n      css: chatScreenMainStyle(this.state, this.props),\n      className: \"chats__main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, messageScreen), jsx(CometChatIncomingCall, {\n      theme: this.props.theme,\n      lang: this.state.lang,\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }), jsx(CometChatIncomingDirectCall, {\n      theme: this.props.theme,\n      lang: this.state.lang,\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatConversationListWithMessages.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  chatWithUser: \"\",\n  chatWithGroup: \"\"\n};\nCometChatConversationListWithMessages.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  chatWithUser: PropTypes.string,\n  chatWithGroup: PropTypes.string\n};\nexport { CometChatConversationListWithMessages };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Chats/CometChatConversationListWithMessages/index.js"],"names":["React","jsx","PropTypes","CometChat","CometChatConversationList","CometChatMessages","CometChatIncomingCall","CometChatIncomingDirectCall","CometChatContextProvider","enums","Translator","theme","chatScreenStyle","chatScreenSidebarStyle","chatScreenMainStyle","CometChatConversationListWithMessages","Component","constructor","props","loggedInUser","itemClicked","item","type","contextProviderRef","setTypeAndItem","toggleSideBar","actionHandler","action","count","otherProps","ACTIONS","GROUP_MEMBER_SCOPE_CHANGED","GROUP_MEMBER_KICKED","GROUP_MEMBER_BANNED","groupUpdated","sidebarview","state","setState","key","message","group","options","ACTION_TYPE","TYPE_GROUP","guid","user","uid","setItem","setType","newObject","Object","assign","scope","tab","lang","createRef","chatListRef","componentDidMount","chatWithUser","length","chatWithGroup","componentDidUpdate","prevProps","render","messageScreen","el","getDirection","defaultProps","getDefaultLanguage","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { CometChatConversationList } from \"../\";\nimport { CometChatMessages } from \"../../Messages\";\nimport {\n  CometChatIncomingCall,\n  CometChatIncomingDirectCall,\n} from \"../../Calls\";\n\nimport { CometChatContextProvider } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\n\nimport Translator from \"../../../resources/localization/translator\";\nimport { theme } from \"../../../resources/theme\";\n\nimport {\n  chatScreenStyle,\n  chatScreenSidebarStyle,\n  chatScreenMainStyle,\n} from \"./style\";\n\nclass CometChatConversationListWithMessages extends React.Component {\n  loggedInUser = null;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tab: \"conversations\",\n      sidebarview: false,\n      lang: props.lang,\n    };\n\n    this.contextProviderRef = React.createRef();\n    this.chatListRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (\n      this.props.chatWithUser.length === 0 &&\n      this.props.chatWithGroup.length === 0\n    ) {\n      this.toggleSideBar();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.lang !== this.props.lang) {\n      this.setState({ lang: this.props.lang });\n    }\n  }\n\n  itemClicked = (item, type) => {\n    this.contextProviderRef.setTypeAndItem(type, item);\n    this.toggleSideBar();\n  };\n\n  actionHandler = (action, item, count, ...otherProps) => {\n    switch (action) {\n      case enums.ACTIONS[\"TOGGLE_SIDEBAR\"]:\n        this.toggleSideBar();\n        break;\n      case enums.GROUP_MEMBER_SCOPE_CHANGED:\n      case enums.GROUP_MEMBER_KICKED:\n      case enums.GROUP_MEMBER_BANNED:\n        this.groupUpdated(action, item, count, ...otherProps);\n        break;\n      default:\n        break;\n    }\n  };\n\n  toggleSideBar = () => {\n    const sidebarview = this.state.sidebarview;\n    this.setState({ sidebarview: !sidebarview });\n  };\n\n  /**\n If the logged in user is banned, kicked or scope changed, update the chat window accordingly\n */\n  groupUpdated = (key, message, group, options) => {\n    switch (key) {\n      case enums.GROUP_MEMBER_BANNED:\n      case enums.GROUP_MEMBER_KICKED: {\n        if (\n          this.contextProviderRef.type === CometChat.ACTION_TYPE.TYPE_GROUP &&\n          this.contextProviderRef.item.guid === group.guid &&\n          options.user.uid === this.loggedInUser.uid\n        ) {\n          this.contextProviderRef.setItem({});\n          this.contextProviderRef.setType(\"\");\n        }\n        break;\n      }\n      case enums.GROUP_MEMBER_SCOPE_CHANGED: {\n        if (\n          this.contextProviderRef.type === CometChat.ACTION_TYPE.TYPE_GROUP &&\n          this.contextProviderRef.item.guid === group.guid &&\n          options.user.uid === this.loggedInUser.uid\n        ) {\n          const newObject = Object.assign({}, this.contextProviderRef.item, {\n            scope: options[\"scope\"],\n          });\n          this.contextProviderRef.setItem(newObject);\n          this.contextProviderRef.setType(CometChat.ACTION_TYPE.TYPE_GROUP);\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  render() {\n    let messageScreen = (\n      <CometChatMessages\n        theme={this.props.theme}\n        lang={this.state.lang}\n        _parent=\"conversations\"\n        actionGenerated={this.actionHandler}\n      />\n    );\n\n    return (\n      <CometChatContextProvider\n        ref={(el) => (this.contextProviderRef = el)}\n        user={this.props.chatWithUser}\n        group={this.props.chatWithGroup}\n      >\n        <div\n          css={chatScreenStyle(this.props)}\n          className=\"cometchat cometchat--chats\"\n          dir={Translator.getDirection(this.state.lang)}\n        >\n          <div\n            css={chatScreenSidebarStyle(this.state, this.props)}\n            className=\"chats__sidebar\"\n          >\n            <CometChatConversationList\n              ref={(el) => (this.chatListRef = el)}\n              _parent=\"clwm\"\n              theme={this.props.theme}\n              lang={this.state.lang}\n              onItemClick={this.itemClicked}\n              actionGenerated={this.actionHandler}\n            />\n          </div>\n          <div\n            css={chatScreenMainStyle(this.state, this.props)}\n            className=\"chats__main\"\n          >\n            {messageScreen}\n          </div>\n          <CometChatIncomingCall\n            theme={this.props.theme}\n            lang={this.state.lang}\n            actionGenerated={this.actionHandler}\n          />\n          <CometChatIncomingDirectCall\n            theme={this.props.theme}\n            lang={this.state.lang}\n            actionGenerated={this.actionHandler}\n          />\n        </div>\n      </CometChatContextProvider>\n    );\n  }\n}\n\n// Specifies the default values for props:\nCometChatConversationListWithMessages.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  chatWithUser: \"\",\n  chatWithGroup: \"\",\n};\n\nCometChatConversationListWithMessages.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  chatWithUser: PropTypes.string,\n  chatWithGroup: PropTypes.string,\n};\n\nexport { CometChatConversationListWithMessages };\n"]},"metadata":{},"sourceType":"module"}