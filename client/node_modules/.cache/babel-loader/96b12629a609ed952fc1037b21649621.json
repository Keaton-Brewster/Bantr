{"ast":null,"code":"export const notificationContainerStyle = (props, keyframes) => {\n  // const toastInRight = keyframes`\n  // from {transform: translateX(100%);}\n  // to {transform: translateX(0);}`;\n  // const toastInLeft = keyframes`\n  //     from {transform: translateX(-100%); }\n  //     to {transform: translateX(0);}`;\n  // let positionProp = {}\n  // if (props.position === \"top-right\") {\n  //     positionProp = {\n  //         top: \"12px\",\n  //         right: \"12px\",\n  //         transition: \"transform .6s ease-in\",\n  //         animation: `${toastInRight} .5s`\n  //     };\n  // } else if (props.position === \"bottom-right\") {\n  //     positionProp = {\n  //         bottom: \"12px\",\n  //         right: \"12px\",\n  //         transition: \"transform .6s ease-in\",\n  //         animation: `${toastInRight} .5s`\n  //     };\n  // } else if (props.position === \"top-left\") {\n  //     positionProp = {\n  //         top: \"12px\",\n  //         left: \"12px\",\n  //         transition: \"transform .6s ease-in\",\n  //         animation: `${toastInLeft} .5s`\n  //     };\n  // } else if (props.position === \"bottom-left\") {\n  //     positionProp = {\n  //         bottom: \"12px\",\n  //         left: \"12px\",\n  //         transition: \"transform .6s ease-in\",\n  //         animation: `${toastInLeft} .5s`\n  //     };\n  // }\n  return {\n    fontSize: \"14px\",\n    boxSizing: \"border-box\",\n    position: \"absolute\",\n    zIndex: \"5\",\n    width: \"80%\",\n    maxWidth: \"320px\",\n    top: \"70px\",\n    left: \"50%\",\n    transform: \"translate(-50%, 0)\"\n  };\n};\nexport const notificationStyle = (props, state, keyframes, CometChatToastNotification) => {\n  let backgroundColorProp = {\n    backgroundColor: \"#000\"\n  };\n\n  if (state.type === \"ERROR\") {\n    backgroundColorProp = {\n      backgroundColor: \"#d9534f\"\n    };\n  } else if (state.type === \"SUCCESS\") {\n    backgroundColorProp = {\n      backgroundColor: \"#5cb85c\"\n    };\n  } else if (state.type === \"INFO\") {\n    backgroundColorProp = {\n      backgroundColor: \"#5bc0de\"\n    };\n  } else if (state.type === \"WARNING\") {\n    backgroundColorProp = {\n      backgroundColor: \"#f0ad4e\"\n    };\n  }\n\n  return {\n    transition: \".3s ease\",\n    position: \"relative\",\n    pointerEvents: \"auto\",\n    overflow: \"hidden\",\n    padding: \"8px\",\n    marginBottom: \"16px\",\n    fontSize: \"13px\",\n    width: \"100%\",\n    minHeight: \"50px\",\n    boxShadow: \"0 0 10px #999\",\n    color: \"#fff\",\n    ...backgroundColorProp,\n    backgroundPosition: \"15px\",\n    backgroundRepeat: \"no-repeat\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    boxSizing: \"border-box\"\n  };\n};\nexport const notificationIconStyle = () => {\n  return {\n    marginRight: \"16px\",\n    width: \"25px\",\n    height: \"25px\",\n    flexShrink: \"0\",\n    \"img\": {\n      maxWidth: \"100%\"\n    }\n  };\n};\nexport const notificationMessageContainerStyle = () => {\n  return {\n    width: \"calc(100% - 60px)\"\n  };\n};\nexport const notificationMessageStyle = () => {\n  return {\n    margin: \"0\",\n    textAlign: \"left\",\n    marginLeft: \"-1px\"\n  };\n};\nexport const notificationCloseButtonStyle = () => {\n  return {\n    width: \"25px\",\n    height: \"25px\",\n    padding: \"0\",\n    border: \"none\",\n    outline: \"none\",\n    backgroundColor: \"transparent\",\n    cursor: \" pointer\",\n    \"img\": {\n      flexShrink: \"0\",\n      maxWidth: \"100%\"\n    }\n  };\n};\nexport const iconStyle = (img, theme) => {\n  return {\n    width: \"24px\",\n    height: \"24px\",\n    display: \"inline-block\",\n    mask: `url(${img}) center center no-repeat`,\n    backgroundColor: `${theme.color.white}`\n  };\n};","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Shared/CometChatToastNotification/style.js"],"names":["notificationContainerStyle","props","keyframes","fontSize","boxSizing","position","zIndex","width","maxWidth","top","left","transform","notificationStyle","state","CometChatToastNotification","backgroundColorProp","backgroundColor","type","transition","pointerEvents","overflow","padding","marginBottom","minHeight","boxShadow","color","backgroundPosition","backgroundRepeat","display","flexDirection","justifyContent","alignItems","notificationIconStyle","marginRight","height","flexShrink","notificationMessageContainerStyle","notificationMessageStyle","margin","textAlign","marginLeft","notificationCloseButtonStyle","border","outline","cursor","iconStyle","img","theme","mask","white"],"mappings":"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","sourcesContent":["export const notificationContainerStyle = (props, keyframes) => {\n\n    // const toastInRight = keyframes`\n    // from {transform: translateX(100%);}\n    // to {transform: translateX(0);}`;\n\n    // const toastInLeft = keyframes`\n    //     from {transform: translateX(-100%); }\n    //     to {transform: translateX(0);}`;\n\n    // let positionProp = {}\n    // if (props.position === \"top-right\") {\n\n    //     positionProp = {\n    //         top: \"12px\",\n    //         right: \"12px\",\n    //         transition: \"transform .6s ease-in\",\n    //         animation: `${toastInRight} .5s`\n    //     };\n\n    // } else if (props.position === \"bottom-right\") {\n\n    //     positionProp = {\n    //         bottom: \"12px\",\n    //         right: \"12px\",\n    //         transition: \"transform .6s ease-in\",\n    //         animation: `${toastInRight} .5s`\n    //     };\n\n    // } else if (props.position === \"top-left\") {\n\n    //     positionProp = {\n    //         top: \"12px\",\n    //         left: \"12px\",\n    //         transition: \"transform .6s ease-in\",\n    //         animation: `${toastInLeft} .5s`\n    //     };\n\n    // } else if (props.position === \"bottom-left\") {\n\n    //     positionProp = {\n    //         bottom: \"12px\",\n    //         left: \"12px\",\n    //         transition: \"transform .6s ease-in\",\n    //         animation: `${toastInLeft} .5s`\n    //     };\n    // }\n\n    return {\n        fontSize: \"14px\",\n        boxSizing: \"border-box\",\n        position: \"absolute\",\n        zIndex: \"5\",\n        width: \"80%\",\n        maxWidth: \"320px\",\n        top: \"70px\",\n        left: \"50%\",\n        transform: \"translate(-50%, 0)\",\n    }\n}\n\nexport const notificationStyle = (props, state, keyframes, CometChatToastNotification) => {\n\n    let backgroundColorProp = {\n        backgroundColor: \"#000\",\n    };\n    if (state.type === \"ERROR\") {\n\n        backgroundColorProp = {\n            backgroundColor: \"#d9534f\",\n        };\n\n    } else if (state.type === \"SUCCESS\") {\n       \n        backgroundColorProp = {\n            backgroundColor: \"#5cb85c\",\n        };\n\n    } else if (state.type === \"INFO\") {\n\n        backgroundColorProp = {\n            backgroundColor: \"#5bc0de\",\n        };\n\n    } else if (state.type === \"WARNING\") {\n\n        backgroundColorProp = {\n            backgroundColor: \"#f0ad4e\",\n        };\n    }\n\n    return {\n        transition: \".3s ease\",\n        position: \"relative\",\n        pointerEvents: \"auto\",\n        overflow: \"hidden\",\n        padding: \"8px\",\n        marginBottom: \"16px\",\n        fontSize: \"13px\",\n        width: \"100%\",\n        minHeight: \"50px\",\n        boxShadow: \"0 0 10px #999\",\n        color: \"#fff\",\n        ...backgroundColorProp,\n        backgroundPosition: \"15px\",\n        backgroundRepeat: \"no-repeat\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        boxSizing: \"border-box\"\n    }\n}\n\nexport const notificationIconStyle = () => {\n\n    return {\n        marginRight: \"16px\",\n        width: \"25px\",\n        height: \"25px\",\n        flexShrink: \"0\",\n        \"img\": {\n            maxWidth: \"100%\",\n        }\n    }\n}\n\nexport const notificationMessageContainerStyle = () => {\n\n    return {\n        width: \"calc(100% - 60px)\"\n    }\n}\n\nexport const notificationMessageStyle = () => {\n\n    return {\n        margin: \"0\",\n        textAlign: \"left\",\n        marginLeft: \"-1px\",\n    }\n}\n\nexport const notificationCloseButtonStyle = () => {\n\n    return {\n        width: \"25px\",\n        height: \"25px\",\n        padding: \"0\",\n        border: \"none\",\n        outline: \"none\",\n        backgroundColor: \"transparent\",\n        cursor:\" pointer\",\n        \"img\": {\n            flexShrink: \"0\",\n            maxWidth: \"100%\"\n        }\n    }\n}\n\nexport const iconStyle = (img, theme) => {\n\n    return {\n        width: \"24px\",\n        height: \"24px\",\n        display: \"inline-block\",\n        mask: `url(${img}) center center no-repeat`,\n        backgroundColor: `${theme.color.white}`,\n    };\n}"]},"metadata":{},"sourceType":"module"}