{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Shared/CometChatToastNotification/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx, keyframes } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { theme } from \"../../../resources/theme\";\nimport { notificationContainerStyle, notificationStyle, notificationIconStyle, notificationMessageContainerStyle, notificationMessageStyle, notificationCloseButtonStyle, iconStyle } from \"./style\";\nimport closeIcon from \"./resources/close-circle-filled.svg\";\nimport successIcon from \"./resources/checkmark-filled.svg\";\nimport errorIcon from \"./resources/warning-filled.svg\";\nimport infoIcon from \"./resources/info-filled.svg\";\nimport warningIcon from \"./resources/warning-filled.svg\";\nexport class CometChatToastNotification extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentWillUnmount = () => {\n      this._isMounted = false;\n      this.clearAutoDismiss();\n    };\n\n    this.setInfo = message => {\n      if (this._isMounted) {\n        this.setState({\n          type: \"INFO\",\n          message: message,\n          icon: infoIcon\n        });\n        this.setAutoDismiss();\n      }\n    };\n\n    this.setError = message => {\n      if (this._isMounted) {\n        this.setState({\n          type: \"ERROR\",\n          message: message,\n          icon: errorIcon\n        }); //this.setAutoDismiss();\n      }\n    };\n\n    this.setSuccess = message => {\n      if (this._isMounted) {\n        this.setState({\n          type: \"SUCCESS\",\n          message: message,\n          icon: successIcon\n        });\n        this.setAutoDismiss();\n      }\n    };\n\n    this.setWarning = message => {\n      if (this._isMounted) {\n        this.setState({\n          type: \"WARNING\",\n          message: message,\n          icon: warningIcon\n        });\n        this.setAutoDismiss();\n      }\n    };\n\n    this.setAutoDismiss = () => {\n      this.clearAutoDismiss();\n\n      if (this.props.autoDelete) {\n        this.interval = setTimeout(() => this.deleteToast(), this.props.dismissTime);\n      }\n    };\n\n    this.clearAutoDismiss = () => {\n      clearTimeout(this.interval);\n    };\n\n    this.deleteToast = () => {\n      this.setState({\n        type: \"\",\n        message: \"\",\n        icon: \"\"\n      });\n    };\n\n    this._isMounted = false;\n    this.state = {\n      type: \"\",\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  render() {\n    if (!this.state.type.trim().length || !this.state.message.trim().length) {\n      return null;\n    }\n\n    const messageClassName = `toast__message message-${CometChatToastNotification.types[this.state.type]}`;\n    const iconClassName = `toast__icon icon-${CometChatToastNotification.types[this.state.type]}`;\n    let toastIcon = this.state.icon.trim().length ? jsx(\"div\", {\n      css: notificationIconStyle(),\n      className: iconClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, jsx(\"i\", {\n      css: iconStyle(this.state.icon, this.props.theme),\n      title: Translator.translate(\"CLOSE\", this.props.lang),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    })) : null;\n    return jsx(\"div\", {\n      css: notificationContainerStyle(this.props, keyframes),\n      className: \"toast__notification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, jsx(\"div\", {\n      css: notificationStyle(this.props, this.state, keyframes, CometChatToastNotification),\n      className: \"toast__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, toastIcon, jsx(\"div\", {\n      css: notificationMessageContainerStyle(),\n      className: messageClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, jsx(\"p\", {\n      css: notificationMessageStyle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, Translator.translate(this.state.message, this.props.lang))), jsx(\"button\", {\n      css: notificationCloseButtonStyle(),\n      type: \"button\",\n      onClick: this.deleteToast,\n      className: \"toast__close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, jsx(\"i\", {\n      css: iconStyle(closeIcon, this.props.theme),\n      title: Translator.translate(\"CLOSE\", this.props.lang),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\nCometChatToastNotification.types = {\n  INFO: \"info\",\n  WARNING: \"warning\",\n  SUCCESS: \"success\",\n  ERROR: \"error\"\n};\nCometChatToastNotification.defaultProps = {\n  type: \"\",\n  message: \"\",\n  icon: \"\",\n  position: \"center\",\n  autoDelete: true,\n  dismissTime: 3000,\n  lang: Translator.getDefaultLanguage(),\n  theme: theme\n};\nCometChatToastNotification.propTypes = {\n  type: PropTypes.oneOf(Object.values(CometChatToastNotification.types).concat(\"\")),\n  message: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  position: PropTypes.oneOf([\"top-right\", \"bottom-right\", \"top-left\", \"bottom-left\", \"center\"]),\n  autoDelete: PropTypes.bool,\n  dismissTime: PropTypes.number,\n  lang: PropTypes.string,\n  theme: PropTypes.object\n};","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Shared/CometChatToastNotification/index.js"],"names":["React","jsx","keyframes","PropTypes","Translator","theme","notificationContainerStyle","notificationStyle","notificationIconStyle","notificationMessageContainerStyle","notificationMessageStyle","notificationCloseButtonStyle","iconStyle","CometChatToastNotification","Component","constructor","props","componentWillUnmount","_isMounted","clearAutoDismiss","setInfo","message","setState","type","icon","infoIcon","setAutoDismiss","setError","errorIcon","setSuccess","successIcon","setWarning","warningIcon","autoDelete","interval","setTimeout","deleteToast","dismissTime","clearTimeout","state","componentDidMount","render","trim","length","messageClassName","types","iconClassName","toastIcon","translate","lang","closeIcon","INFO","WARNING","SUCCESS","ERROR","defaultProps","position","getDefaultLanguage","propTypes","oneOf","Object","values","concat","string","isRequired","bool","number","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx, keyframes } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\n\nimport Translator from \"../../../resources/localization/translator\";\nimport { theme } from \"../../../resources/theme\";\n\nimport {\n  notificationContainerStyle,\n  notificationStyle,\n  notificationIconStyle,\n  notificationMessageContainerStyle,\n  notificationMessageStyle,\n  notificationCloseButtonStyle,\n  iconStyle,\n} from \"./style\";\n\nimport closeIcon from \"./resources/close-circle-filled.svg\";\nimport successIcon from \"./resources/checkmark-filled.svg\";\nimport errorIcon from \"./resources/warning-filled.svg\";\nimport infoIcon from \"./resources/info-filled.svg\";\nimport warningIcon from \"./resources/warning-filled.svg\";\n\nexport class CometChatToastNotification extends React.Component {\n  interval;\n  static types = {\n    INFO: \"info\",\n    WARNING: \"warning\",\n    SUCCESS: \"success\",\n    ERROR: \"error\",\n  };\n\n  constructor(props) {\n    super(props);\n\n    this._isMounted = false;\n    this.state = {\n      type: \"\",\n      message: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  componentWillUnmount = () => {\n    this._isMounted = false;\n    this.clearAutoDismiss();\n  };\n\n  setInfo = (message) => {\n    if (this._isMounted) {\n      this.setState({ type: \"INFO\", message: message, icon: infoIcon });\n      this.setAutoDismiss();\n    }\n  };\n\n  setError = (message) => {\n    if (this._isMounted) {\n      this.setState({ type: \"ERROR\", message: message, icon: errorIcon });\n      //this.setAutoDismiss();\n    }\n  };\n\n  setSuccess = (message) => {\n    if (this._isMounted) {\n      this.setState({ type: \"SUCCESS\", message: message, icon: successIcon });\n      this.setAutoDismiss();\n    }\n  };\n\n  setWarning = (message) => {\n    if (this._isMounted) {\n      this.setState({ type: \"WARNING\", message: message, icon: warningIcon });\n      this.setAutoDismiss();\n    }\n  };\n\n  setAutoDismiss = () => {\n    this.clearAutoDismiss();\n\n    if (this.props.autoDelete) {\n      this.interval = setTimeout(\n        () => this.deleteToast(),\n        this.props.dismissTime\n      );\n    }\n  };\n\n  clearAutoDismiss = () => {\n    clearTimeout(this.interval);\n  };\n\n  deleteToast = () => {\n    this.setState({ type: \"\", message: \"\", icon: \"\" });\n  };\n\n  render() {\n    if (!this.state.type.trim().length || !this.state.message.trim().length) {\n      return null;\n    }\n\n    const messageClassName = `toast__message message-${\n      CometChatToastNotification.types[this.state.type]\n    }`;\n    const iconClassName = `toast__icon icon-${\n      CometChatToastNotification.types[this.state.type]\n    }`;\n    let toastIcon = this.state.icon.trim().length ? (\n      <div css={notificationIconStyle()} className={iconClassName}>\n        <i\n          css={iconStyle(this.state.icon, this.props.theme)}\n          title={Translator.translate(\"CLOSE\", this.props.lang)}\n        ></i>\n      </div>\n    ) : null;\n\n    return (\n      <div\n        css={notificationContainerStyle(this.props, keyframes)}\n        className=\"toast__notification\"\n      >\n        <div\n          css={notificationStyle(\n            this.props,\n            this.state,\n            keyframes,\n            CometChatToastNotification\n          )}\n          className=\"toast__container\"\n        >\n          {toastIcon}\n          <div\n            css={notificationMessageContainerStyle()}\n            className={messageClassName}\n          >\n            <p css={notificationMessageStyle()}>\n              {Translator.translate(this.state.message, this.props.lang)}\n            </p>\n          </div>\n          <button\n            css={notificationCloseButtonStyle()}\n            type=\"button\"\n            onClick={this.deleteToast}\n            className=\"toast__close\"\n          >\n            <i\n              css={iconStyle(closeIcon, this.props.theme)}\n              title={Translator.translate(\"CLOSE\", this.props.lang)}\n            ></i>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nCometChatToastNotification.defaultProps = {\n  type: \"\",\n  message: \"\",\n  icon: \"\",\n  position: \"center\",\n  autoDelete: true,\n  dismissTime: 3000,\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n};\n\nCometChatToastNotification.propTypes = {\n  type: PropTypes.oneOf(\n    Object.values(CometChatToastNotification.types).concat(\"\")\n  ),\n  message: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  position: PropTypes.oneOf([\n    \"top-right\",\n    \"bottom-right\",\n    \"top-left\",\n    \"bottom-left\",\n    \"center\",\n  ]),\n  autoDelete: PropTypes.bool,\n  dismissTime: PropTypes.number,\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n};\n"]},"metadata":{},"sourceType":"module"}