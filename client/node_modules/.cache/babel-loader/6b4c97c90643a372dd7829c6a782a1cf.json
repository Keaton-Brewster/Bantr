{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/MainContent/Messaging/MessagesTopMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport { useConversations } from \"../../../utils/ConversationProvider\";\nimport { useViewport } from \"../../../utils/ViewportProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MessagesTopMenu({\n  conversationName,\n  containerRef\n}) {\n  _s();\n\n  const {\n    width,\n    mobileScreen,\n    setShow\n  } = useViewport();\n  const [menuBarWidth, setMenuBarWidth] = useState(\"100%\");\n\n  function openConversationInfo(e) {\n    e.preventDefault();\n  }\n\n  useEffect(() => {\n    if (width >= 680) setMenuBarWidth(`${containerRef.current.offsetWidth}px`);else setMenuBarWidth(\"100%\"); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [width]);\n  return /*#__PURE__*/_jsxDEV(Nav, {\n    id: \"messagesTopMenu\",\n    className: \"flex-row justify-content-end\",\n    style: {\n      width: menuBarWidth\n    },\n    children: [mobileScreen ? /*#__PURE__*/_jsxDEV(Nav.Item, {\n      onClick: () => {\n        setShow({\n          convos: true,\n          messages: false\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(FaArrowLeft, {\n        className: \"backButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Nav.Item, {\n      id: \"conversationName\",\n      children: conversationName ? conversationName : \"Untitled Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n      onClick: openConversationInfo,\n      children: /*#__PURE__*/_jsxDEV(AiOutlineInfoCircle, {\n        id: \"messageInfoButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MessagesTopMenu, \"+5XY5qp4KjRDHlNwI6XJXFfH4kg=\", false, function () {\n  return [useViewport];\n});\n\n_c = MessagesTopMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagesTopMenu\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/MainContent/Messaging/MessagesTopMenu.jsx"],"names":["useState","useEffect","Nav","AiOutlineInfoCircle","FaArrowLeft","useConversations","useViewport","MessagesTopMenu","conversationName","containerRef","width","mobileScreen","setShow","menuBarWidth","setMenuBarWidth","openConversationInfo","e","preventDefault","current","offsetWidth","convos","messages"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,mBAAT,QAAoC,gBAApC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,gBAAT,QAAiC,qCAAjC;AACA,SAASC,WAAT,QAA4B,iCAA5B;;AAEA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,CAAzB,EAA6D;AAAA;;AAC1E,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,YAAT;AAAuBC,IAAAA;AAAvB,MAAmCN,WAAW,EAApD;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,MAAD,CAAhD;;AAEA,WAASe,oBAAT,CAA8BC,CAA9B,EAAiC;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACD;;AAEDhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,KAAK,IAAI,GAAb,EAAkBI,eAAe,CAAE,GAAEL,YAAY,CAACS,OAAb,CAAqBC,WAAY,IAArC,CAAf,CAAlB,KACKL,eAAe,CAAC,MAAD,CAAf,CAFS,CAGd;AACD,GAJQ,EAIN,CAACJ,KAAD,CAJM,CAAT;AAMA,sBACE,QAAC,GAAD;AACE,IAAA,EAAE,EAAC,iBADL;AAEE,IAAA,SAAS,EAAC,8BAFZ;AAGE,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAEG;AAAT,KAHT;AAAA,eAKGF,YAAY,gBACX,QAAC,GAAD,CAAK,IAAL;AACE,MAAA,OAAO,EAAE,MAAM;AACbC,QAAAA,OAAO,CAAC;AACNQ,UAAAA,MAAM,EAAE,IADF;AAENC,UAAAA,QAAQ,EAAE;AAFJ,SAAD,CAAP;AAID,OANH;AAAA,6BAQE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,YADW,GAWT,IAhBN,eAiBE,QAAC,GAAD,CAAK,IAAL;AAAU,MAAA,EAAE,EAAC,kBAAb;AAAA,gBACGb,gBAAgB,GAAGA,gBAAH,GAAsB;AADzC;AAAA;AAAA;AAAA;AAAA,YAjBF,eAoBE,QAAC,GAAD,CAAK,IAAL;AAAU,MAAA,OAAO,EAAEO,oBAAnB;AAAA,6BACE,QAAC,mBAAD;AAAqB,QAAA,EAAE,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAxCuBR,e;UACmBD,W;;;KADnBC,e","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport { useConversations } from \"../../../utils/ConversationProvider\";\nimport { useViewport } from \"../../../utils/ViewportProvider\";\n\nexport default function MessagesTopMenu({ conversationName, containerRef }) {\n  const { width, mobileScreen, setShow } = useViewport();\n  const [menuBarWidth, setMenuBarWidth] = useState(\"100%\");\n\n  function openConversationInfo(e) {\n    e.preventDefault();\n  }\n\n  useEffect(() => {\n    if (width >= 680) setMenuBarWidth(`${containerRef.current.offsetWidth}px`);\n    else setMenuBarWidth(\"100%\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [width]);\n\n  return (\n    <Nav\n      id=\"messagesTopMenu\"\n      className=\"flex-row justify-content-end\"\n      style={{ width: menuBarWidth }}\n    >\n      {mobileScreen ? (\n        <Nav.Item\n          onClick={() => {\n            setShow({\n              convos: true,\n              messages: false,\n            });\n          }}\n        >\n          <FaArrowLeft className=\"backButton\" />\n        </Nav.Item>\n      ) : null}\n      <Nav.Item id=\"conversationName\">\n        {conversationName ? conversationName : \"Untitled Conversation\"}\n      </Nav.Item>\n      <Nav.Item onClick={openConversationInfo}>\n        <AiOutlineInfoCircle id=\"messageInfoButton\" />\n      </Nav.Item>\n    </Nav>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}