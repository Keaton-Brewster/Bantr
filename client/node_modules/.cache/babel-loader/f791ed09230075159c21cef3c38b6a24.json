{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/MainContent/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport { useViewport } from \"../../utils/ViewportProvider\";\nimport Messaging from \"./Messaging\";\nimport ConversationInfoScreen from \"./Messaging/ConversationInfoScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainContent() {\n  _s();\n\n  const [activeContent, setActiveContent] = useState(\"conversation\"); // Container ref is used to give refernce of width to the\n  // Chat input so that is always is 100% width of its parent\n\n  const containerRef = useRef();\n  const {\n    show\n  } = useViewport();\n\n  function renderSwitch(activeContent) {\n    switch (activeContent) {\n      case \"conversation info\":\n        return /*#__PURE__*/_jsxDEV(ConversationInfoScreen, {\n          containerRef: containerRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 16\n        }, this);\n\n      case \"messaging\":\n        return /*#__PURE__*/_jsxDEV(Messaging, {\n          containerRef: containerRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 16\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(Messaging, {\n          containerRef: containerRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 16\n        }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: show.mainContent ? \"show\" : \"hide\",\n    ref: containerRef,\n    children: renderSwitch()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainContent, \"GzF28YiA8Pmbz6y8FfVnibO1zog=\", false, function () {\n  return [useViewport];\n});\n\n_c = MainContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/MainContent/index.jsx"],"names":["useState","useRef","useViewport","Messaging","ConversationInfoScreen","MainContent","activeContent","setActiveContent","containerRef","show","renderSwitch","mainContent"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,sBAAP,MAAmC,oCAAnC;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,cAAD,CAAlD,CADoC,CAEpC;AACA;;AACA,QAAMQ,YAAY,GAAGP,MAAM,EAA3B;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAWP,WAAW,EAA5B;;AAEA,WAASQ,YAAT,CAAsBJ,aAAtB,EAAqC;AACnC,YAAQA,aAAR;AACE,WAAK,mBAAL;AACE,4BAAO,QAAC,sBAAD;AAAwB,UAAA,YAAY,EAAEE;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF,WAAK,WAAL;AACE,4BAAO,QAAC,SAAD;AAAW,UAAA,YAAY,EAAEA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF;AACE,4BAAO,QAAC,SAAD;AAAW,UAAA,YAAY,EAAEA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAAP;AANJ;AAQD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEC,IAAI,CAACE,WAAL,GAAmB,MAAnB,GAA4B,MAA5C;AAAoD,IAAA,GAAG,EAAEH,YAAzD;AAAA,cACGE,YAAY;AADf;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAxBuBL,W;UAMLH,W;;;KANKG,W","sourcesContent":["import { useState, useRef } from \"react\";\nimport { useViewport } from \"../../utils/ViewportProvider\";\nimport Messaging from \"./Messaging\";\nimport ConversationInfoScreen from \"./Messaging/ConversationInfoScreen\";\n\nexport default function MainContent() {\n  const [activeContent, setActiveContent] = useState(\"conversation\");\n  // Container ref is used to give refernce of width to the\n  // Chat input so that is always is 100% width of its parent\n  const containerRef = useRef();\n\n  const { show } = useViewport();\n\n  function renderSwitch(activeContent) {\n    switch (activeContent) {\n      case \"conversation info\":\n        return <ConversationInfoScreen containerRef={containerRef} />;\n      case \"messaging\":\n        return <Messaging containerRef={containerRef} />;\n      default:\n        return <Messaging containerRef={containerRef} />;\n    }\n  }\n\n  return (\n    <div className={show.mainContent ? \"show\" : \"hide\"} ref={containerRef}>\n      {renderSwitch()}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}