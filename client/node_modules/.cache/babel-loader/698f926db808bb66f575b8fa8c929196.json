{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/Conversations.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport { Row, Button } from \"react-bootstrap\";\nimport { BsChatSquareDots as Chat } from \"react-icons/bs\";\nimport { useConversations } from \"../utils/ConversationProvider\";\nimport useMobileLayout from \"../utils/useMobileLayout\";\nimport useViewport from \"../utils/useViewport\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Conversations() {\n  _s();\n\n  const {\n    conversations,\n    selectConversationIndex\n  } = useConversations();\n  const searchRef = useRef();\n  const width = useViewport();\n  const [show, setShow] = useMobileLayout();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: show.convos ? \"show\" : \"hide\",\n    children: [conversations.map((convo, index) => {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        className: \"convoBox\" // className={selectedConversation._id === convo._id ? \"selected\" : \"notSelected\"}\n        // Just another place where I am having to use a different \"id\"\n        // onClick={(e) => selectConversation(e, convo._id)}\n        ,\n        onClick: e => {\n          e.preventDefault();\n          if (width < 575) setShow({\n            convos: false,\n            messages: true\n          });\n          selectConversationIndex(index);\n        },\n        children: convo.name || \"New Conversation\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bottomOfConvos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      id: \"newConversationButton\",\n      children: /*#__PURE__*/_jsxDEV(Chat, {\n        id: \"newChat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Conversations, \"thyBo/oIWHXr2VS2qqNdz14rU3M=\", false, function () {\n  return [useConversations, useViewport, useMobileLayout];\n});\n\n_c = Conversations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversations\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/Conversations.jsx"],"names":["useRef","Row","Button","BsChatSquareDots","Chat","useConversations","useMobileLayout","useViewport","Conversations","conversations","selectConversationIndex","searchRef","width","show","setShow","convos","map","convo","index","e","preventDefault","messages","name"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,iBAA5B;AACA,SAASC,gBAAgB,IAAIC,IAA7B,QAAyC,gBAAzC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAA6CL,gBAAgB,EAAnE;AAEA,QAAMM,SAAS,GAAGX,MAAM,EAAxB;AAEA,QAAMY,KAAK,GAAGL,WAAW,EAAzB;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBR,eAAe,EAAvC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEO,IAAI,CAACE,MAAL,GAAc,MAAd,GAAuB,MAAvC;AAAA,eAQGN,aAAa,CAACO,GAAd,CAAkB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACnC,0BACE,QAAC,GAAD;AAEE,QAAA,SAAS,EAAC,UAFZ,CAGE;AACA;AACA;AALF;AAME,QAAA,OAAO,EAAGC,CAAD,IAAO;AACdA,UAAAA,CAAC,CAACC,cAAF;AACA,cAAIR,KAAK,GAAG,GAAZ,EACEE,OAAO,CAAC;AACNC,YAAAA,MAAM,EAAE,KADF;AAENM,YAAAA,QAAQ,EAAE;AAFJ,WAAD,CAAP;AAIFX,UAAAA,uBAAuB,CAACQ,KAAD,CAAvB;AACD,SAdH;AAAA,kBAgBGD,KAAK,CAACK,IAAN,IAAc;AAhBjB,SACOJ,KADP;AAAA;AAAA;AAAA;AAAA,cADF;AAoBD,KArBA,CARH,eA8BE;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YA9BF,eA+BE,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,uBAAX;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GA7CuBV,a;UAC6BH,gB,EAIrCE,W,EACUD,e;;;KANFE,a","sourcesContent":["import { useRef } from \"react\";\nimport { Row, Button } from \"react-bootstrap\";\nimport { BsChatSquareDots as Chat } from \"react-icons/bs\";\nimport { useConversations } from \"../utils/ConversationProvider\";\nimport useMobileLayout from \"../utils/useMobileLayout\";\nimport useViewport from \"../utils/useViewport\";\n\nexport default function Conversations() {\n  const { conversations, selectConversationIndex } = useConversations();\n\n  const searchRef = useRef();\n\n  const width = useViewport();\n  const [show, setShow] = useMobileLayout();\n\n  return (\n    <div className={show.convos ? \"show\" : \"hide\"}>\n      {/* <input\n        id=\"searchConversationsInput\"\n        type=\"text\"\n        ref={searchRef}\n        placeholder=\"search\"\n      /> */}\n\n      {conversations.map((convo, index) => {\n        return (\n          <Row\n            key={index}\n            className=\"convoBox\"\n            // className={selectedConversation._id === convo._id ? \"selected\" : \"notSelected\"}\n            // Just another place where I am having to use a different \"id\"\n            // onClick={(e) => selectConversation(e, convo._id)}\n            onClick={(e) => {\n              e.preventDefault();\n              if (width < 575)\n                setShow({\n                  convos: false,\n                  messages: true,\n                });\n              selectConversationIndex(index);\n            }}\n          >\n            {convo.name || \"New Conversation\"}\n          </Row>\n        );\n      })}\n      <div id=\"bottomOfConvos\" />\n      <Button id=\"newConversationButton\">\n        <Chat id=\"newChat\" />\n      </Button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}