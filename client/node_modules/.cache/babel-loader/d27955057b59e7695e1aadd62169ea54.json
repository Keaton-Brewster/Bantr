{"ast":null,"code":"import _extends from \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Chats/CometChatConversationListItem/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatAvatar, CometChatBadgeCount, CometChatUserPresence } from \"../../Shared\";\nimport { CometChatConversationListActions } from \"../CometChatConversationListActions\";\nimport * as enums from \"../../../util/enums.js\";\nimport { checkMessageForExtensionsData, getTimeStampForLastMessage } from \"../../../util/common\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { listItem, itemThumbnailStyle, itemDetailStyle, itemRowStyle, itemNameStyle, itemLastMsgStyle, itemLastMsgTimeStyle } from \"./style\";\n\nclass CometChatConversationListItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getLastMessage = () => {\n      if (this.props.hasOwnProperty(\"conversation\") === false) {\n        return false;\n      }\n\n      if (this.props.conversation.hasOwnProperty(\"lastMessage\") === false) {\n        return false;\n      }\n\n      let message = null;\n      const lastMessage = this.props.conversation.lastMessage;\n\n      if (lastMessage.hasOwnProperty(\"deletedAt\")) {\n        if (this.state.enableHideDeletedMessages) {\n          message = \"\";\n        } else {\n          message = this.props.loggedInUser.uid === lastMessage.sender.uid ? `${Translator.translate(\"YOU_DELETED_THIS_MESSAGE\", this.props.lang)}` : `${Translator.translate(\"THIS_MESSAGE_DELETED\", this.props.lang)}`;\n        }\n      } else {\n        switch (lastMessage.category) {\n          case CometChat.CATEGORY_MESSAGE:\n            message = this.getMessage(lastMessage);\n            break;\n\n          case CometChat.CATEGORY_CALL:\n            message = this.getCallMessage(lastMessage);\n            break;\n\n          case CometChat.CATEGORY_ACTION:\n            message = this.getActionMessage(lastMessage);\n            break;\n\n          case CometChat.CATEGORY_CUSTOM:\n            message = this.getCustomMessage(lastMessage);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return message;\n    };\n\n    this.getLastMessageTimestamp = () => {\n      if (this.props.hasOwnProperty(\"conversation\") === false) {\n        return false;\n      }\n\n      if (this.props.conversation.hasOwnProperty(\"lastMessage\") === false) {\n        return false;\n      }\n\n      if (this.props.conversation.lastMessage.hasOwnProperty(\"sentAt\") === false && this.props.conversation.lastMessage.hasOwnProperty(\"_composedAt\") === false) {\n        return false;\n      }\n\n      let timestamp = this.props.conversation.lastMessage._composedAt || this.props.conversation.lastMessage.sentAt;\n      timestamp = getTimeStampForLastMessage(timestamp, this.props.lang);\n      return timestamp;\n    };\n\n    this.getCustomMessage = lastMessage => {\n      let message = null;\n      const sender = this.props.loggedInUser.uid !== lastMessage.sender.uid ? `${lastMessage.sender.name}: ` : ``;\n\n      switch (lastMessage.type) {\n        case enums.CUSTOM_TYPE_POLL:\n          {\n            const pollMessage = Translator.translate(\"CUSTOM_MESSAGE_POLL\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${pollMessage}` : `${pollMessage}`;\n          }\n          break;\n\n        case enums.CUSTOM_TYPE_STICKER:\n          {\n            const stickerMessage = Translator.translate(\"CUSTOM_MESSAGE_STICKER\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${stickerMessage}` : `${stickerMessage}`;\n          }\n          break;\n\n        case enums.CUSTOM_TYPE_DOCUMENT:\n          {\n            const docMessage = Translator.translate(\"CUSTOM_MESSAGE_DOCUMENT\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${docMessage}` : `${docMessage}`;\n          }\n          break;\n\n        case enums.CUSTOM_TYPE_WHITEBOARD:\n          {\n            const whiteboardMessage = Translator.translate(\"CUSTOM_MESSAGE_WHITEBOARD\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${whiteboardMessage}` : `${whiteboardMessage}`;\n          }\n          break;\n\n        case enums.CUSTOM_TYPE_MEETING:\n          {\n            const meetingMessage = Translator.translate(\"VIDEO_CALL\", this.props.lang);\n            message = `${sender} ${meetingMessage}`;\n          }\n          break;\n\n        default:\n          break;\n      }\n\n      return message;\n    };\n\n    this.getTextMessage = message => {\n      let messageText = message.text; //xss extensions data\n\n      const xssData = checkMessageForExtensionsData(message, \"xss-filter\");\n\n      if (xssData && xssData.hasOwnProperty(\"sanitized_text\")) {\n        messageText = xssData.sanitized_text;\n      } //datamasking extensions data\n\n\n      const maskedData = checkMessageForExtensionsData(message, \"data-masking\");\n\n      if (maskedData && maskedData.hasOwnProperty(\"data\") && maskedData.data.hasOwnProperty(\"sensitive_data\") && maskedData.data.hasOwnProperty(\"message_masked\") && maskedData.data.sensitive_data === \"yes\") {\n        messageText = maskedData.data.message_masked;\n      } //profanity extensions data\n\n\n      const profaneData = checkMessageForExtensionsData(message, \"profanity-filter\");\n\n      if (profaneData && profaneData.hasOwnProperty(\"profanity\") && profaneData.hasOwnProperty(\"message_clean\") && profaneData.profanity === \"yes\") {\n        messageText = profaneData.message_clean;\n      }\n\n      return messageText;\n    };\n\n    this.getMessage = lastMessage => {\n      var _this$props, _this$props$loggedInU, _lastMessage$sender, _lastMessage$sender2;\n\n      let message = null;\n      const sender = ((_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$loggedInU = _this$props.loggedInUser) === null || _this$props$loggedInU === void 0 ? void 0 : _this$props$loggedInU.uid) !== (lastMessage === null || lastMessage === void 0 ? void 0 : (_lastMessage$sender = lastMessage.sender) === null || _lastMessage$sender === void 0 ? void 0 : _lastMessage$sender.uid) ? `${lastMessage === null || lastMessage === void 0 ? void 0 : (_lastMessage$sender2 = lastMessage.sender) === null || _lastMessage$sender2 === void 0 ? void 0 : _lastMessage$sender2.name}: ` : ``;\n\n      switch (lastMessage.type) {\n        case CometChat.MESSAGE_TYPE.TEXT:\n          {\n            const textMessage = this.getTextMessage(lastMessage);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${textMessage}` : `${textMessage}`;\n          }\n          break;\n\n        case CometChat.MESSAGE_TYPE.MEDIA:\n          {\n            const mediaMessage = Translator.translate(\"MEDIA_MESSAGE\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${mediaMessage}` : `${mediaMessage}`;\n          }\n          break;\n\n        case CometChat.MESSAGE_TYPE.IMAGE:\n          {\n            const imageMessage = Translator.translate(\"MESSAGE_IMAGE\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${imageMessage}` : `${imageMessage}`;\n          }\n          break;\n\n        case CometChat.MESSAGE_TYPE.FILE:\n          {\n            const fileMessage = Translator.translate(\"MESSAGE_FILE\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${fileMessage}` : `${fileMessage}`;\n          }\n          break;\n\n        case CometChat.MESSAGE_TYPE.VIDEO:\n          {\n            const videoMessage = Translator.translate(\"MESSAGE_VIDEO\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${videoMessage}` : `${videoMessage}`;\n          }\n          break;\n\n        case CometChat.MESSAGE_TYPE.AUDIO:\n          {\n            const audioMessage = Translator.translate(\"MESSAGE_AUDIO\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${audioMessage}` : `${audioMessage}`;\n          }\n          break;\n\n        case CometChat.MESSAGE_TYPE.CUSTOM:\n          {\n            const customMessage = Translator.translate(\"CUSTOM_MESSAGE\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${customMessage}` : `${customMessage}`;\n          }\n          break;\n\n        default:\n          break;\n      }\n\n      return message;\n    };\n\n    this.getCallMessage = lastMessage => {\n      let message = null;\n      const sender = this.props.loggedInUser.uid !== lastMessage.sender.uid ? `${lastMessage.sender.name}: ` : ``;\n\n      switch (lastMessage.type) {\n        case CometChat.MESSAGE_TYPE.VIDEO:\n          {\n            const videoMessage = Translator.translate(\"VIDEO_CALL\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${videoMessage}` : `${videoMessage}`;\n          }\n          break;\n\n        case CometChat.MESSAGE_TYPE.AUDIO:\n          {\n            const audioMessage = Translator.translate(\"AUDIO_CALL\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${audioMessage}` : `${audioMessage}`;\n          }\n          break;\n\n        default:\n          break;\n      }\n\n      return message;\n    };\n\n    this.getActionMessage = message => {\n      let actionMessage = null;\n\n      if (message.hasOwnProperty(\"actionBy\") === false || message.hasOwnProperty(\"actionOn\") === false) {\n        return actionMessage;\n      }\n\n      if (message.action !== CometChat.ACTION_TYPE.MEMBER_JOINED && message.action !== CometChat.ACTION_TYPE.MEMBER_LEFT && (message.actionBy.hasOwnProperty(\"name\") === false || message.actionOn.hasOwnProperty(\"name\") === false)) {\n        return actionMessage;\n      }\n\n      if (message.action === CometChat.ACTION_TYPE.MEMBER_SCOPE_CHANGED) {\n        if (message.hasOwnProperty(\"data\") && message.data.hasOwnProperty(\"extras\")) {\n          if (message.data.extras.hasOwnProperty(\"scope\")) {\n            if (message.data.extras.scope.hasOwnProperty(\"new\") === false) {\n              return actionMessage;\n            }\n          } else {\n            return actionMessage;\n          }\n        } else {\n          return actionMessage;\n        }\n      }\n\n      if (message.action === CometChat.ACTION_TYPE.MEMBER_SCOPE_CHANGED && message.data.extras.hasOwnProperty(\"scope\") === false) {\n        return actionMessage;\n      }\n\n      if (message.action === CometChat.ACTION_TYPE.MEMBER_SCOPE_CHANGED && message.data.extras.scope.hasOwnProperty(\"new\") === false) {\n        return actionMessage;\n      }\n\n      const byEntity = message.actionBy;\n      const onEntity = message.actionOn;\n      const byString = byEntity.name;\n      const forString = message.action !== CometChat.ACTION_TYPE.MEMBER_JOINED && message.action !== CometChat.ACTION_TYPE.MEMBER_LEFT ? onEntity.name : \"\";\n\n      switch (message.action) {\n        case CometChat.ACTION_TYPE.MEMBER_ADDED:\n          actionMessage = `${byString} ${Translator.translate(\"ADDED\", this.props.lang)} ${forString}`;\n          break;\n\n        case CometChat.ACTION_TYPE.MEMBER_JOINED:\n          actionMessage = `${byString} ${Translator.translate(\"JOINED\", this.props.lang)}`;\n          break;\n\n        case CometChat.ACTION_TYPE.MEMBER_LEFT:\n          actionMessage = `${byString} ${Translator.translate(\"LEFT\", this.props.lang)}`;\n          break;\n\n        case CometChat.ACTION_TYPE.MEMBER_KICKED:\n          actionMessage = `${byString} ${Translator.translate(\"KICKED\", this.props.lang)} ${forString}`;\n          break;\n\n        case CometChat.ACTION_TYPE.MEMBER_BANNED:\n          actionMessage = `${byString} ${Translator.translate(\"BANNED\", this.props.lang)} ${forString}`;\n          break;\n\n        case CometChat.ACTION_TYPE.MEMBER_UNBANNED:\n          actionMessage = `${byString} ${Translator.translate(\"UNBANNED\", this.props.lang)} ${forString}`;\n          break;\n\n        case CometChat.ACTION_TYPE.MEMBER_SCOPE_CHANGED:\n          {\n            const newScope = message[\"data\"][\"extras\"][\"scope\"][\"new\"];\n            actionMessage = `${byString} ${Translator.translate(\"MADE\", this.props.lang)} ${forString} ${Translator.translate(newScope, this.props.lang)}`;\n            break;\n          }\n\n        default:\n          break;\n      }\n\n      return actionMessage;\n    };\n\n    this.toggleTooltip = (event, flag) => {\n      const elem = event.target;\n      const scrollWidth = elem.scrollWidth;\n      const clientWidth = elem.clientWidth;\n\n      if (scrollWidth <= clientWidth) {\n        return false;\n      }\n\n      if (flag) {\n        elem.setAttribute(\"title\", elem.textContent);\n      } else {\n        elem.removeAttribute(\"title\");\n      }\n    };\n\n    this.enableUnreadCount = () => {\n      this.context.FeatureRestriction.isUnreadCountEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableUnreadCount) {\n          this.setState({\n            enableUnreadCount: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableUnreadCount !== false) {\n          this.setState({\n            enableUnreadCount: false\n          });\n        }\n      });\n    };\n\n    this.enableHideDeletedMessages = () => {\n      this.context.FeatureRestriction.isHideDeletedMessagesEnabled().then(response => {\n        if (response !== this.state.enableHideDeletedMessages) {\n          this.setState({\n            enableHideDeletedMessages: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableHideDeletedMessages !== false) {\n          this.setState({\n            enableHideDeletedMessages: false\n          });\n        }\n      });\n    };\n\n    this.handleMouseHover = toggleFlag => {\n      if (toggleFlag && !this.state.isHovering) {\n        this.setState({\n          isHovering: true\n        });\n      } else if (!toggleFlag && this.state.isHovering) {\n        this.setState({\n          isHovering: false\n        });\n      }\n    };\n\n    this.state = {\n      lastMessage: \"\",\n      lastMessageTimestamp: \"\",\n      enableUnreadCount: false,\n      isHovering: false,\n      enableHideDeletedMessages: false\n    };\n  }\n\n  componentDidMount() {\n    const message = this.getLastMessage();\n    const timestamp = this.getLastMessageTimestamp();\n    this.enableUnreadCount();\n    this.enableHideDeletedMessages();\n    this.setState({\n      lastMessage: message,\n      lastMessageTimestamp: timestamp\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const previousItem = JSON.stringify(prevProps.conversation);\n    const currentItem = JSON.stringify(this.props.conversation);\n\n    if (previousItem !== currentItem || prevProps.lang !== this.props.lang) {\n      const message = this.getLastMessage();\n      const timestamp = this.getLastMessageTimestamp();\n      this.setState({\n        lastMessage: message,\n        lastMessageTimestamp: timestamp\n      });\n    }\n\n    this.enableUnreadCount();\n    this.enableHideDeletedMessages();\n  }\n\n  render() {\n    let lastMessageTimeStamp = null;\n\n    if (this.state.lastMessage) {\n      lastMessageTimeStamp = jsx(\"span\", {\n        css: itemLastMsgTimeStyle(this.props),\n        className: \"item__details__timestamp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 9\n        }\n      }, this.state.lastMessageTimestamp);\n    }\n\n    let presence;\n\n    if (this.props.conversation.conversationType === CometChat.RECEIVER_TYPE.USER) {\n      const status = this.props.conversation.conversationWith.status;\n      presence = jsx(CometChatUserPresence, {\n        status: status,\n        borderColor: this.props.theme.borderColor.primary,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 9\n        }\n      });\n    }\n\n    let avatar = null;\n\n    if (this.props.conversation.conversationType === CometChat.RECEIVER_TYPE.USER) {\n      avatar = jsx(CometChatAvatar, {\n        user: this.props.conversation.conversationWith,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 9\n        }\n      });\n    } else if (this.props.conversation.conversationType === CometChat.RECEIVER_TYPE.GROUP) {\n      avatar = jsx(CometChatAvatar, {\n        group: this.props.conversation.conversationWith,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 9\n        }\n      });\n    }\n\n    let unreadCount = null;\n\n    if (this.state.enableUnreadCount) {\n      unreadCount = jsx(CometChatBadgeCount, {\n        theme: this.props.theme,\n        count: this.props.conversation.unreadMessageCount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 9\n        }\n      });\n    }\n\n    let toolTipView = null;\n\n    if (this.state.isHovering) {\n      toolTipView = jsx(CometChatConversationListActions, _extends({}, this.props, {\n        conversation: this.props.conversation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    return jsx(\"div\", {\n      css: listItem(this.props),\n      className: \"list__item\",\n      onMouseEnter: () => this.handleMouseHover(true),\n      onMouseLeave: () => this.handleMouseHover(false),\n      onClick: () => this.props.handleClick(this.props.conversation),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 7\n      }\n    }, jsx(\"div\", {\n      css: itemThumbnailStyle(),\n      className: \"list__item__thumbnail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 9\n      }\n    }, avatar, presence), jsx(\"div\", {\n      css: itemDetailStyle(),\n      className: \"list__item__details\",\n      dir: Translator.getDirection(this.props.lang),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 9\n      }\n    }, jsx(\"div\", {\n      css: itemRowStyle(),\n      className: \"item__details_block_one\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 11\n      }\n    }, jsx(\"div\", {\n      css: itemNameStyle(),\n      className: \"item__details__name\",\n      onMouseEnter: event => this.toggleTooltip(event, true),\n      onMouseLeave: event => this.toggleTooltip(event, false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 13\n      }\n    }, this.props.conversation.conversationWith.name), lastMessageTimeStamp), jsx(\"div\", {\n      css: itemRowStyle(),\n      className: \"item__details_block_two\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 11\n      }\n    }, jsx(\"div\", {\n      css: itemLastMsgStyle(this.props),\n      className: \"item__details__last-message\",\n      onMouseEnter: event => this.toggleTooltip(event, true),\n      onMouseLeave: event => this.toggleTooltip(event, false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 13\n      }\n    }, this.state.lastMessage), unreadCount)), toolTipView);\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatConversationListItem.contextType = CometChatContext;\nCometChatConversationListItem.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  loggedInUser: null,\n  conversation: {\n    conversationWith: {}\n  }\n};\nCometChatConversationListItem.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  loggedInUser: PropTypes.shape(CometChat.User),\n  conversation: PropTypes.shape(CometChat.Conversation)\n};\nexport { CometChatConversationListItem };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Chats/CometChatConversationListItem/index.js"],"names":["React","jsx","PropTypes","CometChat","CometChatAvatar","CometChatBadgeCount","CometChatUserPresence","CometChatConversationListActions","enums","checkMessageForExtensionsData","getTimeStampForLastMessage","CometChatContext","theme","Translator","listItem","itemThumbnailStyle","itemDetailStyle","itemRowStyle","itemNameStyle","itemLastMsgStyle","itemLastMsgTimeStyle","CometChatConversationListItem","Component","constructor","props","getLastMessage","hasOwnProperty","conversation","message","lastMessage","state","enableHideDeletedMessages","loggedInUser","uid","sender","translate","lang","category","CATEGORY_MESSAGE","getMessage","CATEGORY_CALL","getCallMessage","CATEGORY_ACTION","getActionMessage","CATEGORY_CUSTOM","getCustomMessage","getLastMessageTimestamp","timestamp","_composedAt","sentAt","name","type","CUSTOM_TYPE_POLL","pollMessage","receiverType","RECEIVER_TYPE","GROUP","CUSTOM_TYPE_STICKER","stickerMessage","CUSTOM_TYPE_DOCUMENT","docMessage","CUSTOM_TYPE_WHITEBOARD","whiteboardMessage","CUSTOM_TYPE_MEETING","meetingMessage","getTextMessage","messageText","text","xssData","sanitized_text","maskedData","data","sensitive_data","message_masked","profaneData","profanity","message_clean","MESSAGE_TYPE","TEXT","textMessage","MEDIA","mediaMessage","IMAGE","imageMessage","FILE","fileMessage","VIDEO","videoMessage","AUDIO","audioMessage","CUSTOM","customMessage","actionMessage","action","ACTION_TYPE","MEMBER_JOINED","MEMBER_LEFT","actionBy","actionOn","MEMBER_SCOPE_CHANGED","extras","scope","byEntity","onEntity","byString","forString","MEMBER_ADDED","MEMBER_KICKED","MEMBER_BANNED","MEMBER_UNBANNED","newScope","toggleTooltip","event","flag","elem","target","scrollWidth","clientWidth","setAttribute","textContent","removeAttribute","enableUnreadCount","context","FeatureRestriction","isUnreadCountEnabled","then","response","setState","catch","error","isHideDeletedMessagesEnabled","handleMouseHover","toggleFlag","isHovering","lastMessageTimestamp","componentDidMount","componentDidUpdate","prevProps","previousItem","JSON","stringify","currentItem","render","lastMessageTimeStamp","presence","conversationType","USER","status","conversationWith","borderColor","primary","avatar","unreadCount","unreadMessageCount","toolTipView","handleClick","getDirection","contextType","defaultProps","getDefaultLanguage","propTypes","string","object","shape","User","Conversation"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport {\n  CometChatAvatar,\n  CometChatBadgeCount,\n  CometChatUserPresence,\n} from \"../../Shared\";\nimport { CometChatConversationListActions } from \"../CometChatConversationListActions\";\n\nimport * as enums from \"../../../util/enums.js\";\nimport {\n  checkMessageForExtensionsData,\n  getTimeStampForLastMessage,\n} from \"../../../util/common\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\n\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\n\nimport {\n  listItem,\n  itemThumbnailStyle,\n  itemDetailStyle,\n  itemRowStyle,\n  itemNameStyle,\n  itemLastMsgStyle,\n  itemLastMsgTimeStyle,\n} from \"./style\";\n\nclass CometChatConversationListItem extends React.Component {\n  static contextType = CometChatContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      lastMessage: \"\",\n      lastMessageTimestamp: \"\",\n      enableUnreadCount: false,\n      isHovering: false,\n      enableHideDeletedMessages: false,\n    };\n  }\n\n  componentDidMount() {\n    const message = this.getLastMessage();\n    const timestamp = this.getLastMessageTimestamp();\n    this.enableUnreadCount();\n    this.enableHideDeletedMessages();\n\n    this.setState({ lastMessage: message, lastMessageTimestamp: timestamp });\n  }\n\n  componentDidUpdate(prevProps) {\n    const previousItem = JSON.stringify(prevProps.conversation);\n    const currentItem = JSON.stringify(this.props.conversation);\n\n    if (previousItem !== currentItem || prevProps.lang !== this.props.lang) {\n      const message = this.getLastMessage();\n      const timestamp = this.getLastMessageTimestamp();\n\n      this.setState({ lastMessage: message, lastMessageTimestamp: timestamp });\n    }\n\n    this.enableUnreadCount();\n    this.enableHideDeletedMessages();\n  }\n\n  getLastMessage = () => {\n    if (this.props.hasOwnProperty(\"conversation\") === false) {\n      return false;\n    }\n\n    if (this.props.conversation.hasOwnProperty(\"lastMessage\") === false) {\n      return false;\n    }\n\n    let message = null;\n    const lastMessage = this.props.conversation.lastMessage;\n\n    if (lastMessage.hasOwnProperty(\"deletedAt\")) {\n      if (this.state.enableHideDeletedMessages) {\n        message = \"\";\n      } else {\n        message =\n          this.props.loggedInUser.uid === lastMessage.sender.uid\n            ? `${Translator.translate(\n                \"YOU_DELETED_THIS_MESSAGE\",\n                this.props.lang\n              )}`\n            : `${Translator.translate(\n                \"THIS_MESSAGE_DELETED\",\n                this.props.lang\n              )}`;\n      }\n    } else {\n      switch (lastMessage.category) {\n        case CometChat.CATEGORY_MESSAGE:\n          message = this.getMessage(lastMessage);\n          break;\n        case CometChat.CATEGORY_CALL:\n          message = this.getCallMessage(lastMessage);\n          break;\n        case CometChat.CATEGORY_ACTION:\n          message = this.getActionMessage(lastMessage);\n          break;\n        case CometChat.CATEGORY_CUSTOM:\n          message = this.getCustomMessage(lastMessage);\n          break;\n        default:\n          break;\n      }\n    }\n    return message;\n  };\n\n  getLastMessageTimestamp = () => {\n    if (this.props.hasOwnProperty(\"conversation\") === false) {\n      return false;\n    }\n\n    if (this.props.conversation.hasOwnProperty(\"lastMessage\") === false) {\n      return false;\n    }\n\n    if (\n      this.props.conversation.lastMessage.hasOwnProperty(\"sentAt\") === false &&\n      this.props.conversation.lastMessage.hasOwnProperty(\"_composedAt\") ===\n        false\n    ) {\n      return false;\n    }\n\n    let timestamp =\n      this.props.conversation.lastMessage._composedAt ||\n      this.props.conversation.lastMessage.sentAt;\n    timestamp = getTimeStampForLastMessage(timestamp, this.props.lang);\n\n    return timestamp;\n  };\n\n  getCustomMessage = (lastMessage) => {\n    let message = null;\n    const sender =\n      this.props.loggedInUser.uid !== lastMessage.sender.uid\n        ? `${lastMessage.sender.name}: `\n        : ``;\n\n    switch (lastMessage.type) {\n      case enums.CUSTOM_TYPE_POLL:\n        {\n          const pollMessage = Translator.translate(\n            \"CUSTOM_MESSAGE_POLL\",\n            this.props.lang\n          );\n          message =\n            lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP\n              ? `${sender} ${pollMessage}`\n              : `${pollMessage}`;\n        }\n        break;\n      case enums.CUSTOM_TYPE_STICKER:\n        {\n          const stickerMessage = Translator.translate(\n            \"CUSTOM_MESSAGE_STICKER\",\n            this.props.lang\n          );\n          message =\n            lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP\n              ? `${sender} ${stickerMessage}`\n              : `${stickerMessage}`;\n        }\n        break;\n      case enums.CUSTOM_TYPE_DOCUMENT:\n        {\n          const docMessage = Translator.translate(\n            \"CUSTOM_MESSAGE_DOCUMENT\",\n            this.props.lang\n          );\n          message =\n            lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP\n              ? `${sender} ${docMessage}`\n              : `${docMessage}`;\n        }\n        break;\n      case enums.CUSTOM_TYPE_WHITEBOARD:\n        {\n          const whiteboardMessage = Translator.translate(\n            \"CUSTOM_MESSAGE_WHITEBOARD\",\n            this.props.lang\n          );\n          message =\n            lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP\n              ? `${sender} ${whiteboardMessage}`\n              : `${whiteboardMessage}`;\n        }\n        break;\n      case enums.CUSTOM_TYPE_MEETING:\n        {\n          const meetingMessage = Translator.translate(\n            \"VIDEO_CALL\",\n            this.props.lang\n          );\n          message = `${sender} ${meetingMessage}`;\n        }\n        break;\n      default:\n        break;\n    }\n    return message;\n  };\n\n  getTextMessage = (message) => {\n    let messageText = message.text;\n\n    //xss extensions data\n    const xssData = checkMessageForExtensionsData(message, \"xss-filter\");\n    if (xssData && xssData.hasOwnProperty(\"sanitized_text\")) {\n      messageText = xssData.sanitized_text;\n    }\n\n    //datamasking extensions data\n    const maskedData = checkMessageForExtensionsData(message, \"data-masking\");\n    if (\n      maskedData &&\n      maskedData.hasOwnProperty(\"data\") &&\n      maskedData.data.hasOwnProperty(\"sensitive_data\") &&\n      maskedData.data.hasOwnProperty(\"message_masked\") &&\n      maskedData.data.sensitive_data === \"yes\"\n    ) {\n      messageText = maskedData.data.message_masked;\n    }\n\n    //profanity extensions data\n    const profaneData = checkMessageForExtensionsData(\n      message,\n      \"profanity-filter\"\n    );\n    if (\n      profaneData &&\n      profaneData.hasOwnProperty(\"profanity\") &&\n      profaneData.hasOwnProperty(\"message_clean\") &&\n      profaneData.profanity === \"yes\"\n    ) {\n      messageText = profaneData.message_clean;\n    }\n\n    return messageText;\n  };\n\n  getMessage = (lastMessage) => {\n    let message = null;\n    const sender =\n      this.props?.loggedInUser?.uid !== lastMessage?.sender?.uid\n        ? `${lastMessage?.sender?.name}: `\n        : ``;\n\n    switch (lastMessage.type) {\n      case CometChat.MESSAGE_TYPE.TEXT:\n        {\n          const textMessage = this.getTextMessage(lastMessage);\n          message =\n            lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP\n              ? `${sender} ${textMessage}`\n              : `${textMessage}`;\n        }\n        break;\n      case CometChat.MESSAGE_TYPE.MEDIA:\n        {\n          const mediaMessage = Translator.translate(\n            \"MEDIA_MESSAGE\",\n            this.props.lang\n          );\n          message =\n            lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP\n              ? `${sender} ${mediaMessage}`\n              : `${mediaMessage}`;\n        }\n        break;\n      case CometChat.MESSAGE_TYPE.IMAGE:\n        {\n          const imageMessage = Translator.translate(\n            \"MESSAGE_IMAGE\",\n            this.props.lang\n          );\n          message =\n            lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP\n              ? `${sender} ${imageMessage}`\n              : `${imageMessage}`;\n        }\n        break;\n      case CometChat.MESSAGE_TYPE.FILE:\n        {\n          const fileMessage = Translator.translate(\n            \"MESSAGE_FILE\",\n            this.props.lang\n          );\n          message =\n            lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP\n              ? `${sender} ${fileMessage}`\n              : `${fileMessage}`;\n        }\n        break;\n      case CometChat.MESSAGE_TYPE.VIDEO:\n        {\n          const videoMessage = Translator.translate(\n            \"MESSAGE_VIDEO\",\n            this.props.lang\n          );\n          message =\n            lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP\n              ? `${sender} ${videoMessage}`\n              : `${videoMessage}`;\n        }\n        break;\n      case CometChat.MESSAGE_TYPE.AUDIO:\n        {\n          const audioMessage = Translator.translate(\n            \"MESSAGE_AUDIO\",\n            this.props.lang\n          );\n          message =\n            lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP\n              ? `${sender} ${audioMessage}`\n              : `${audioMessage}`;\n        }\n        break;\n      case CometChat.MESSAGE_TYPE.CUSTOM:\n        {\n          const customMessage = Translator.translate(\n            \"CUSTOM_MESSAGE\",\n            this.props.lang\n          );\n          message =\n            lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP\n              ? `${sender} ${customMessage}`\n              : `${customMessage}`;\n        }\n        break;\n      default:\n        break;\n    }\n\n    return message;\n  };\n\n  getCallMessage = (lastMessage) => {\n    let message = null;\n    const sender =\n      this.props.loggedInUser.uid !== lastMessage.sender.uid\n        ? `${lastMessage.sender.name}: `\n        : ``;\n\n    switch (lastMessage.type) {\n      case CometChat.MESSAGE_TYPE.VIDEO:\n        {\n          const videoMessage = Translator.translate(\n            \"VIDEO_CALL\",\n            this.props.lang\n          );\n          message =\n            lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP\n              ? `${sender} ${videoMessage}`\n              : `${videoMessage}`;\n        }\n        break;\n      case CometChat.MESSAGE_TYPE.AUDIO:\n        {\n          const audioMessage = Translator.translate(\n            \"AUDIO_CALL\",\n            this.props.lang\n          );\n          message =\n            lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP\n              ? `${sender} ${audioMessage}`\n              : `${audioMessage}`;\n        }\n        break;\n      default:\n        break;\n    }\n\n    return message;\n  };\n\n  getActionMessage = (message) => {\n    let actionMessage = null;\n\n    if (\n      message.hasOwnProperty(\"actionBy\") === false ||\n      message.hasOwnProperty(\"actionOn\") === false\n    ) {\n      return actionMessage;\n    }\n\n    if (\n      message.action !== CometChat.ACTION_TYPE.MEMBER_JOINED &&\n      message.action !== CometChat.ACTION_TYPE.MEMBER_LEFT &&\n      (message.actionBy.hasOwnProperty(\"name\") === false ||\n        message.actionOn.hasOwnProperty(\"name\") === false)\n    ) {\n      return actionMessage;\n    }\n\n    if (message.action === CometChat.ACTION_TYPE.MEMBER_SCOPE_CHANGED) {\n      if (\n        message.hasOwnProperty(\"data\") &&\n        message.data.hasOwnProperty(\"extras\")\n      ) {\n        if (message.data.extras.hasOwnProperty(\"scope\")) {\n          if (message.data.extras.scope.hasOwnProperty(\"new\") === false) {\n            return actionMessage;\n          }\n        } else {\n          return actionMessage;\n        }\n      } else {\n        return actionMessage;\n      }\n    }\n\n    if (\n      message.action === CometChat.ACTION_TYPE.MEMBER_SCOPE_CHANGED &&\n      message.data.extras.hasOwnProperty(\"scope\") === false\n    ) {\n      return actionMessage;\n    }\n\n    if (\n      message.action === CometChat.ACTION_TYPE.MEMBER_SCOPE_CHANGED &&\n      message.data.extras.scope.hasOwnProperty(\"new\") === false\n    ) {\n      return actionMessage;\n    }\n\n    const byEntity = message.actionBy;\n    const onEntity = message.actionOn;\n\n    const byString = byEntity.name;\n    const forString =\n      message.action !== CometChat.ACTION_TYPE.MEMBER_JOINED &&\n      message.action !== CometChat.ACTION_TYPE.MEMBER_LEFT\n        ? onEntity.name\n        : \"\";\n\n    switch (message.action) {\n      case CometChat.ACTION_TYPE.MEMBER_ADDED:\n        actionMessage = `${byString} ${Translator.translate(\n          \"ADDED\",\n          this.props.lang\n        )} ${forString}`;\n        break;\n      case CometChat.ACTION_TYPE.MEMBER_JOINED:\n        actionMessage = `${byString} ${Translator.translate(\n          \"JOINED\",\n          this.props.lang\n        )}`;\n        break;\n      case CometChat.ACTION_TYPE.MEMBER_LEFT:\n        actionMessage = `${byString} ${Translator.translate(\n          \"LEFT\",\n          this.props.lang\n        )}`;\n        break;\n      case CometChat.ACTION_TYPE.MEMBER_KICKED:\n        actionMessage = `${byString} ${Translator.translate(\n          \"KICKED\",\n          this.props.lang\n        )} ${forString}`;\n        break;\n      case CometChat.ACTION_TYPE.MEMBER_BANNED:\n        actionMessage = `${byString} ${Translator.translate(\n          \"BANNED\",\n          this.props.lang\n        )} ${forString}`;\n        break;\n      case CometChat.ACTION_TYPE.MEMBER_UNBANNED:\n        actionMessage = `${byString} ${Translator.translate(\n          \"UNBANNED\",\n          this.props.lang\n        )} ${forString}`;\n        break;\n      case CometChat.ACTION_TYPE.MEMBER_SCOPE_CHANGED: {\n        const newScope = message[\"data\"][\"extras\"][\"scope\"][\"new\"];\n        actionMessage = `${byString} ${Translator.translate(\n          \"MADE\",\n          this.props.lang\n        )} ${forString} ${Translator.translate(newScope, this.props.lang)}`;\n        break;\n      }\n      default:\n        break;\n    }\n\n    return actionMessage;\n  };\n\n  toggleTooltip = (event, flag) => {\n    const elem = event.target;\n\n    const scrollWidth = elem.scrollWidth;\n    const clientWidth = elem.clientWidth;\n\n    if (scrollWidth <= clientWidth) {\n      return false;\n    }\n\n    if (flag) {\n      elem.setAttribute(\"title\", elem.textContent);\n    } else {\n      elem.removeAttribute(\"title\");\n    }\n  };\n\n  enableUnreadCount = () => {\n    this.context.FeatureRestriction.isUnreadCountEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableUnreadCount) {\n          this.setState({ enableUnreadCount: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableUnreadCount !== false) {\n          this.setState({ enableUnreadCount: false });\n        }\n      });\n  };\n\n  enableHideDeletedMessages = () => {\n    this.context.FeatureRestriction.isHideDeletedMessagesEnabled()\n      .then((response) => {\n        if (response !== this.state.enableHideDeletedMessages) {\n          this.setState({ enableHideDeletedMessages: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableHideDeletedMessages !== false) {\n          this.setState({ enableHideDeletedMessages: false });\n        }\n      });\n  };\n\n  handleMouseHover = (toggleFlag) => {\n    if (toggleFlag && !this.state.isHovering) {\n      this.setState({ isHovering: true });\n    } else if (!toggleFlag && this.state.isHovering) {\n      this.setState({ isHovering: false });\n    }\n  };\n\n  render() {\n    let lastMessageTimeStamp = null;\n    if (this.state.lastMessage) {\n      lastMessageTimeStamp = (\n        <span\n          css={itemLastMsgTimeStyle(this.props)}\n          className=\"item__details__timestamp\"\n        >\n          {this.state.lastMessageTimestamp}\n        </span>\n      );\n    }\n\n    let presence;\n    if (\n      this.props.conversation.conversationType === CometChat.RECEIVER_TYPE.USER\n    ) {\n      const status = this.props.conversation.conversationWith.status;\n      presence = (\n        <CometChatUserPresence\n          status={status}\n          borderColor={this.props.theme.borderColor.primary}\n        />\n      );\n    }\n\n    let avatar = null;\n    if (\n      this.props.conversation.conversationType === CometChat.RECEIVER_TYPE.USER\n    ) {\n      avatar = (\n        <CometChatAvatar user={this.props.conversation.conversationWith} />\n      );\n    } else if (\n      this.props.conversation.conversationType === CometChat.RECEIVER_TYPE.GROUP\n    ) {\n      avatar = (\n        <CometChatAvatar group={this.props.conversation.conversationWith} />\n      );\n    }\n\n    let unreadCount = null;\n    if (this.state.enableUnreadCount) {\n      unreadCount = (\n        <CometChatBadgeCount\n          theme={this.props.theme}\n          count={this.props.conversation.unreadMessageCount}\n        />\n      );\n    }\n\n    let toolTipView = null;\n    if (this.state.isHovering) {\n      toolTipView = (\n        <CometChatConversationListActions\n          {...this.props}\n          conversation={this.props.conversation}\n        />\n      );\n    }\n\n    return (\n      <div\n        css={listItem(this.props)}\n        className=\"list__item\"\n        onMouseEnter={() => this.handleMouseHover(true)}\n        onMouseLeave={() => this.handleMouseHover(false)}\n        onClick={() => this.props.handleClick(this.props.conversation)}\n      >\n        <div css={itemThumbnailStyle()} className=\"list__item__thumbnail\">\n          {avatar}\n          {presence}\n        </div>\n        <div\n          css={itemDetailStyle()}\n          className=\"list__item__details\"\n          dir={Translator.getDirection(this.props.lang)}\n        >\n          <div css={itemRowStyle()} className=\"item__details_block_one\">\n            <div\n              css={itemNameStyle()}\n              className=\"item__details__name\"\n              onMouseEnter={(event) => this.toggleTooltip(event, true)}\n              onMouseLeave={(event) => this.toggleTooltip(event, false)}\n            >\n              {this.props.conversation.conversationWith.name}\n            </div>\n            {lastMessageTimeStamp}\n          </div>\n          <div css={itemRowStyle()} className=\"item__details_block_two\">\n            <div\n              css={itemLastMsgStyle(this.props)}\n              className=\"item__details__last-message\"\n              onMouseEnter={(event) => this.toggleTooltip(event, true)}\n              onMouseLeave={(event) => this.toggleTooltip(event, false)}\n            >\n              {this.state.lastMessage}\n            </div>\n            {unreadCount}\n          </div>\n        </div>\n        {toolTipView}\n      </div>\n    );\n  }\n}\n\n// Specifies the default values for props:\nCometChatConversationListItem.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  loggedInUser: null,\n  conversation: {\n    conversationWith: {},\n  },\n};\n\nCometChatConversationListItem.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  loggedInUser: PropTypes.shape(CometChat.User),\n  conversation: PropTypes.shape(CometChat.Conversation),\n};\n\nexport { CometChatConversationListItem };\n"]},"metadata":{},"sourceType":"module"}