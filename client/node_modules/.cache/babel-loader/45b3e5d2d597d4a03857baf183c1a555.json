{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatThreadedMessageReplyCount/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { replyCountStyle } from \"./style\";\n\nconst CometChatThreadedMessageReplyCount = props => {\n  _s();\n\n  const context = React.useContext(CometChatContext);\n  const [reply, setReply] = React.useState(false);\n\n  const toggleReply = () => {\n    context.FeatureRestriction.isThreadedMessagesEnabled().then(response => {\n      if (response !== reply) {\n        setReply(response);\n      }\n    }).catch(error => {\n      if (reply !== false) {\n        setReply(false);\n      }\n    });\n  };\n\n  React.useEffect(toggleReply);\n  const replyCount = props.message.replyCount;\n  const replyText = replyCount === 1 ? `${replyCount} ${Translator.translate(\"REPLY\", props.lang)}` : `${replyCount} ${Translator.translate(\"REPLIES\", props.lang)}`;\n  let replies = jsx(\"span\", {\n    css: replyCountStyle(context),\n    className: \"replycount\",\n    onClick: () => props.actionGenerated(enums.ACTIONS[\"VIEW_THREADED_MESSAGE\"], props.message),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }\n  }, replyText);\n\n  if (props.message.hasOwnProperty(\"replyCount\") === false) {\n    replies = null;\n  } //if threadedchats feature is disabled\n\n\n  if (reply === false) {\n    replies = null;\n  }\n\n  return replies;\n}; // Specifies the default values for props:\n\n\n_s(CometChatThreadedMessageReplyCount, \"gNDMO4U4KYUq0Wb8TQwxzKlUBPU=\");\n\n_c = CometChatThreadedMessageReplyCount;\nCometChatThreadedMessageReplyCount.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  message: {}\n};\nCometChatThreadedMessageReplyCount.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  message: PropTypes.object\n};\nexport { CometChatThreadedMessageReplyCount };\n\nvar _c;\n\n$RefreshReg$(_c, \"CometChatThreadedMessageReplyCount\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatThreadedMessageReplyCount/index.js"],"names":["React","jsx","PropTypes","CometChatContext","enums","theme","Translator","replyCountStyle","CometChatThreadedMessageReplyCount","props","context","useContext","reply","setReply","useState","toggleReply","FeatureRestriction","isThreadedMessagesEnabled","then","response","catch","error","useEffect","replyCount","message","replyText","translate","lang","replies","actionGenerated","ACTIONS","hasOwnProperty","defaultProps","getDefaultLanguage","propTypes","string","object"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;;AACA;;AACA,SAAQC,GAAR,QAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAAQC,gBAAR,QAA+B,gCAA/B;AACA,OAAO,KAAKC,KAAZ,MAAuB,wBAAvB;AAEA,SAAQC,KAAR,QAAoB,0BAApB;AACA,OAAOC,UAAP,MAAuB,4CAAvB;AAEA,SAAQC,eAAR,QAA8B,SAA9B;;AAEA,MAAMC,kCAAkC,GAAGC,KAAK,IAAI;AAAA;;AAEnD,QAAMC,OAAO,GAAGV,KAAK,CAACW,UAAN,CAAiBR,gBAAjB,CAAhB;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBb,KAAK,CAACc,QAAN,CAAe,KAAf,CAA1B;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACzBL,IAAAA,OAAO,CAACM,kBAAR,CAA2BC,yBAA3B,GACEC,IADF,CACOC,QAAQ,IAAI;AACjB,UAAIA,QAAQ,KAAKP,KAAjB,EAAwB;AACvBC,QAAAA,QAAQ,CAACM,QAAD,CAAR;AACA;AACD,KALF,EAMEC,KANF,CAMQC,KAAK,IAAI;AACf,UAAIT,KAAK,KAAK,KAAd,EAAqB;AACpBC,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACA;AACD,KAVF;AAWA,GAZD;;AAcAb,EAAAA,KAAK,CAACsB,SAAN,CAAgBP,WAAhB;AAEA,QAAMQ,UAAU,GAAGd,KAAK,CAACe,OAAN,CAAcD,UAAjC;AACA,QAAME,SAAS,GAAGF,UAAU,KAAK,CAAf,GAAoB,GAAEA,UAAW,IAAGjB,UAAU,CAACoB,SAAX,CAAqB,OAArB,EAA8BjB,KAAK,CAACkB,IAApC,CAA0C,EAA9E,GAAmF,GAAEJ,UAAW,IAAGjB,UAAU,CAACoB,SAAX,CAAqB,SAArB,EAAgCjB,KAAK,CAACkB,IAAtC,CAA4C,EAAjK;AAEA,MAAIC,OAAO,GACV;AAAM,IAAA,GAAG,EAAErB,eAAe,CAACG,OAAD,CAA1B;AAAqC,IAAA,SAAS,EAAC,YAA/C;AAA4D,IAAA,OAAO,EAAE,MAAMD,KAAK,CAACoB,eAAN,CAAsBzB,KAAK,CAAC0B,OAAN,CAAc,uBAAd,CAAtB,EAA8DrB,KAAK,CAACe,OAApE,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,SADF,CADD;;AAMA,MAAIhB,KAAK,CAACe,OAAN,CAAcO,cAAd,CAA6B,YAA7B,MAA+C,KAAnD,EAA0D;AACzDH,IAAAA,OAAO,GAAG,IAAV;AACA,GAhCkD,CAkCnD;;;AACA,MAAIhB,KAAK,KAAK,KAAd,EAAqB;AACpBgB,IAAAA,OAAO,GAAG,IAAV;AACA;;AAED,SAAOA,OAAP;AACA,CAxCD,C,CA0CA;;;GA1CMpB,kC;;KAAAA,kC;AA2CNA,kCAAkC,CAACwB,YAAnC,GAAkD;AACjDL,EAAAA,IAAI,EAAErB,UAAU,CAAC2B,kBAAX,EAD2C;AAEjD5B,EAAAA,KAAK,EAAEA,KAF0C;AAGjDmB,EAAAA,OAAO,EAAE;AAHwC,CAAlD;AAMAhB,kCAAkC,CAAC0B,SAAnC,GAA+C;AAC9CP,EAAAA,IAAI,EAAEzB,SAAS,CAACiC,MAD8B;AAE9C9B,EAAAA,KAAK,EAAEH,SAAS,CAACkC,MAF6B;AAG9CZ,EAAAA,OAAO,EAAEtB,SAAS,CAACkC;AAH2B,CAA/C;AAMA,SAAQ5B,kCAAR","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport {jsx} from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\n\nimport {CometChatContext} from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\n\nimport {theme} from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\n\nimport {replyCountStyle} from \"./style\";\n\nconst CometChatThreadedMessageReplyCount = props => {\n\n\tconst context = React.useContext(CometChatContext);\n\tconst [reply, setReply] = React.useState(false);\n\n\tconst toggleReply = () => {\n\t\tcontext.FeatureRestriction.isThreadedMessagesEnabled()\n\t\t\t.then(response => {\n\t\t\t\tif (response !== reply) {\n\t\t\t\t\tsetReply(response);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tif (reply !== false) {\n\t\t\t\t\tsetReply(false);\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tReact.useEffect(toggleReply);\n\n\tconst replyCount = props.message.replyCount;\n\tconst replyText = replyCount === 1 ? `${replyCount} ${Translator.translate(\"REPLY\", props.lang)}` : `${replyCount} ${Translator.translate(\"REPLIES\", props.lang)}`;\n\n\tlet replies = (\n\t\t<span css={replyCountStyle(context)} className=\"replycount\" onClick={() => props.actionGenerated(enums.ACTIONS[\"VIEW_THREADED_MESSAGE\"], props.message)}>\n\t\t\t{replyText}\n\t\t</span>\n\t);\n\n\tif (props.message.hasOwnProperty(\"replyCount\") === false) {\n\t\treplies = null;\n\t}\n\n\t//if threadedchats feature is disabled\n\tif (reply === false) {\n\t\treplies = null;\n\t}\n\n\treturn replies;\n};\n\n// Specifies the default values for props:\nCometChatThreadedMessageReplyCount.defaultProps = {\n\tlang: Translator.getDefaultLanguage(),\n\ttheme: theme,\n\tmessage: {},\n};\n\nCometChatThreadedMessageReplyCount.propTypes = {\n\tlang: PropTypes.string,\n\ttheme: PropTypes.object,\n\tmessage: PropTypes.object,\n};\n\nexport {CometChatThreadedMessageReplyCount};\n"]},"metadata":{},"sourceType":"module"}