{"ast":null,"code":"import { CometChat } from \"@cometchat-pro/chat\";\nimport * as enums from \"../../../util/enums.js\";\nexport class MessageHeaderManager {\n  constructor() {\n    this.userListenerId = \"head_user_\" + new Date().getTime();\n    this.msgListenerId = \"head_message_\" + new Date().getTime();\n    this.groupListenerId = \"head_group_\" + new Date().getTime();\n  }\n\n  attachListeners(callback) {\n    CometChat.addUserListener(this.userListenerId, new CometChat.UserListener({\n      onUserOnline: onlineUser => {\n        /* when someuser/friend comes online, user will be received here */\n        callback(enums.USER_ONLINE, onlineUser);\n      },\n      onUserOffline: offlineUser => {\n        /* when someuser/friend went offline, user will be received here */\n        callback(enums.USER_OFFLINE, offlineUser);\n      }\n    }));\n    CometChat.addMessageListener(this.msgListenerId, new CometChat.MessageListener({\n      onTypingStarted: typingIndicator => {\n        callback(enums.TYPING_STARTED, typingIndicator);\n      },\n      onTypingEnded: typingIndicator => {\n        callback(enums.TYPING_ENDED, typingIndicator);\n      }\n    }));\n    CometChat.addGroupListener(this.groupListenerId, new CometChat.GroupListener({\n      onGroupMemberKicked: (message, kickedUser, kickedBy, kickedFrom) => {\n        callback(enums.GROUP_MEMBER_KICKED, kickedFrom, kickedUser);\n      },\n      onGroupMemberBanned: (message, bannedUser, bannedBy, bannedFrom) => {\n        callback(enums.GROUP_MEMBER_BANNED, bannedFrom, bannedUser);\n      },\n      onMemberAddedToGroup: (message, userAdded, userAddedBy, userAddedIn) => {\n        callback(enums.GROUP_MEMBER_ADDED, userAddedIn);\n      },\n      onGroupMemberLeft: (message, leavingUser, group) => {\n        callback(enums.GROUP_MEMBER_LEFT, group, leavingUser);\n      },\n      onGroupMemberJoined: (message, joinedUser, joinedGroup) => {\n        callback(enums.GROUP_MEMBER_JOINED, joinedGroup);\n      }\n    }));\n  }\n\n  removeListeners() {\n    CometChat.removeUserListener(this.userListenerId);\n    CometChat.removeMessageListener(this.msgListenerId);\n    CometChat.removeGroupListener(this.groupListenerId);\n  }\n\n}","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatMessageHeader/controller.js"],"names":["CometChat","enums","MessageHeaderManager","userListenerId","Date","getTime","msgListenerId","groupListenerId","attachListeners","callback","addUserListener","UserListener","onUserOnline","onlineUser","USER_ONLINE","onUserOffline","offlineUser","USER_OFFLINE","addMessageListener","MessageListener","onTypingStarted","typingIndicator","TYPING_STARTED","onTypingEnded","TYPING_ENDED","addGroupListener","GroupListener","onGroupMemberKicked","message","kickedUser","kickedBy","kickedFrom","GROUP_MEMBER_KICKED","onGroupMemberBanned","bannedUser","bannedBy","bannedFrom","GROUP_MEMBER_BANNED","onMemberAddedToGroup","userAdded","userAddedBy","userAddedIn","GROUP_MEMBER_ADDED","onGroupMemberLeft","leavingUser","group","GROUP_MEMBER_LEFT","onGroupMemberJoined","joinedUser","joinedGroup","GROUP_MEMBER_JOINED","removeListeners","removeUserListener","removeMessageListener","removeGroupListener"],"mappings":"AAAA,SAASA,SAAT,QAA0B,qBAA1B;AAEA,OAAO,KAAKC,KAAZ,MAAuB,wBAAvB;AAEA,OAAO,MAAMC,oBAAN,CAA2B;AAAA;AAAA,SAE9BC,cAF8B,GAEb,eAAe,IAAIC,IAAJ,GAAWC,OAAX,EAFF;AAAA,SAG9BC,aAH8B,GAGd,kBAAkB,IAAIF,IAAJ,GAAWC,OAAX,EAHJ;AAAA,SAI9BE,eAJ8B,GAIZ,gBAAgB,IAAIH,IAAJ,GAAWC,OAAX,EAJJ;AAAA;;AAM9BG,EAAAA,eAAe,CAACC,QAAD,EAAW;AAEtBT,IAAAA,SAAS,CAACU,eAAV,CACI,KAAKP,cADT,EAEI,IAAIH,SAAS,CAACW,YAAd,CAA2B;AACvBC,MAAAA,YAAY,EAAEC,UAAU,IAAI;AACxB;AACAJ,QAAAA,QAAQ,CAACR,KAAK,CAACa,WAAP,EAAoBD,UAApB,CAAR;AACH,OAJsB;AAKvBE,MAAAA,aAAa,EAAEC,WAAW,IAAI;AAC1B;AACAP,QAAAA,QAAQ,CAACR,KAAK,CAACgB,YAAP,EAAqBD,WAArB,CAAR;AACH;AARsB,KAA3B,CAFJ;AAcAhB,IAAAA,SAAS,CAACkB,kBAAV,CACI,KAAKZ,aADT,EAEI,IAAIN,SAAS,CAACmB,eAAd,CAA8B;AAC1BC,MAAAA,eAAe,EAAEC,eAAe,IAAI;AAChCZ,QAAAA,QAAQ,CAACR,KAAK,CAACqB,cAAP,EAAuBD,eAAvB,CAAR;AACH,OAHyB;AAI1BE,MAAAA,aAAa,EAAEF,eAAe,IAAI;AAC9BZ,QAAAA,QAAQ,CAACR,KAAK,CAACuB,YAAP,EAAqBH,eAArB,CAAR;AACH;AANyB,KAA9B,CAFJ;AAYArB,IAAAA,SAAS,CAACyB,gBAAV,CACI,KAAKlB,eADT,EAEI,IAAIP,SAAS,CAAC0B,aAAd,CAA4B;AACxBC,MAAAA,mBAAmB,EAAE,CAACC,OAAD,EAAUC,UAAV,EAAsBC,QAAtB,EAAgCC,UAAhC,KAA+C;AAChEtB,QAAAA,QAAQ,CAACR,KAAK,CAAC+B,mBAAP,EAA4BD,UAA5B,EAAwCF,UAAxC,CAAR;AACH,OAHuB;AAIxBI,MAAAA,mBAAmB,EAAE,CAACL,OAAD,EAAUM,UAAV,EAAsBC,QAAtB,EAAgCC,UAAhC,KAA+C;AAChE3B,QAAAA,QAAQ,CAACR,KAAK,CAACoC,mBAAP,EAA4BD,UAA5B,EAAwCF,UAAxC,CAAR;AACH,OANuB;AAOxBI,MAAAA,oBAAoB,EAAE,CAACV,OAAD,EAAUW,SAAV,EAAqBC,WAArB,EAAkCC,WAAlC,KAAkD;AACpEhC,QAAAA,QAAQ,CAACR,KAAK,CAACyC,kBAAP,EAA2BD,WAA3B,CAAR;AACH,OATuB;AAUxBE,MAAAA,iBAAiB,EAAE,CAACf,OAAD,EAAUgB,WAAV,EAAuBC,KAAvB,KAAiC;AAChDpC,QAAAA,QAAQ,CAACR,KAAK,CAAC6C,iBAAP,EAA0BD,KAA1B,EAAiCD,WAAjC,CAAR;AACH,OAZuB;AAaxBG,MAAAA,mBAAmB,EAAE,CAACnB,OAAD,EAAUoB,UAAV,EAAsBC,WAAtB,KAAsC;AACvDxC,QAAAA,QAAQ,CAACR,KAAK,CAACiD,mBAAP,EAA4BD,WAA5B,CAAR;AACH;AAfuB,KAA5B,CAFJ;AAqBH;;AAEDE,EAAAA,eAAe,GAAG;AAEdnD,IAAAA,SAAS,CAACoD,kBAAV,CAA6B,KAAKjD,cAAlC;AACAH,IAAAA,SAAS,CAACqD,qBAAV,CAAgC,KAAK/C,aAArC;AACAN,IAAAA,SAAS,CAACsD,mBAAV,CAA8B,KAAK/C,eAAnC;AACH;;AA9D6B","sourcesContent":["import { CometChat } from \"@cometchat-pro/chat\";\n\nimport * as enums from \"../../../util/enums.js\";\n\nexport class MessageHeaderManager {\n\n    userListenerId = \"head_user_\" + new Date().getTime();\n    msgListenerId = \"head_message_\" + new Date().getTime();\n    groupListenerId = \"head_group_\" + new Date().getTime();\n\n    attachListeners(callback) {\n        \n        CometChat.addUserListener(\n            this.userListenerId,\n            new CometChat.UserListener({\n                onUserOnline: onlineUser => {\n                    /* when someuser/friend comes online, user will be received here */\n                    callback(enums.USER_ONLINE, onlineUser);\n                },\n                onUserOffline: offlineUser => {\n                    /* when someuser/friend went offline, user will be received here */\n                    callback(enums.USER_OFFLINE, offlineUser);\n                }\n            })\n        );\n\n        CometChat.addMessageListener(\n            this.msgListenerId,\n            new CometChat.MessageListener({\n                onTypingStarted: typingIndicator => {\n                    callback(enums.TYPING_STARTED, typingIndicator);\n                },\n                onTypingEnded: typingIndicator => {\n                    callback(enums.TYPING_ENDED, typingIndicator);\n                }\n            })\n        );\n\n        CometChat.addGroupListener(\n            this.groupListenerId,\n            new CometChat.GroupListener({\n                onGroupMemberKicked: (message, kickedUser, kickedBy, kickedFrom) => {\n                    callback(enums.GROUP_MEMBER_KICKED, kickedFrom, kickedUser);\n                }, \n                onGroupMemberBanned: (message, bannedUser, bannedBy, bannedFrom) => {\n                    callback(enums.GROUP_MEMBER_BANNED, bannedFrom, bannedUser);\n                }, \n                onMemberAddedToGroup: (message, userAdded, userAddedBy, userAddedIn) => {\n                    callback(enums.GROUP_MEMBER_ADDED, userAddedIn);\n                }, \n                onGroupMemberLeft: (message, leavingUser, group) => {\n                    callback(enums.GROUP_MEMBER_LEFT, group, leavingUser);\n                }, \n                onGroupMemberJoined: (message, joinedUser, joinedGroup) => {\n                    callback(enums.GROUP_MEMBER_JOINED, joinedGroup);\n                }\n            })\n        );\n\n    }\n\n    removeListeners() {\n\n        CometChat.removeUserListener(this.userListenerId);\n        CometChat.removeMessageListener(this.msgListenerId);\n        CometChat.removeGroupListener(this.groupListenerId);\n    }\n}"]},"metadata":{},"sourceType":"module"}