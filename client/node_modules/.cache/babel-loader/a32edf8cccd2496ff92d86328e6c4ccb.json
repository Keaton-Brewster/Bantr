{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatMessageHeader/index.js\";\nimport React from \"react\";\nimport dateFormat from \"dateformat\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { MessageHeaderManager } from \"./controller\";\nimport { CometChatAvatar, CometChatUserPresence } from \"../../Shared\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { chatHeaderStyle, chatDetailStyle, chatSideBarBtnStyle, chatThumbnailStyle, chatUserStyle, chatNameStyle, chatStatusStyle, chatOptionWrapStyle, chatOptionStyle } from \"./style\";\nimport menuIcon from \"./resources/menu.svg\";\nimport audioCallIcon from \"./resources/audio-call.svg\";\nimport videoCallIcon from \"./resources/video-call.svg\";\nimport detailPaneIcon from \"./resources/info.svg\";\n\nclass CometChatMessageHeader extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setStatusForUser = () => {\n      let status = \"\";\n      const presence = this.context.item.status === CometChat.USER_STATUS.ONLINE ? CometChat.USER_STATUS.ONLINE : CometChat.USER_STATUS.OFFLINE;\n\n      if (this.context.item.status === CometChat.USER_STATUS.OFFLINE && this.context.item.lastActiveAt) {\n        const lastActive = this.context.item.lastActiveAt * 1000;\n        const messageDate = dateFormat(lastActive, \"dS mmm yyyy, h:MM TT\");\n        status = `${Translator.translate(\"LAST_ACTIVE_AT\", this.props.lang)}: ${messageDate}`;\n      } else if (this.context.item.status === CometChat.USER_STATUS.OFFLINE) {\n        status = Translator.translate(\"OFFLINE\", this.props.lang);\n      } else if (this.context.item.status === CometChat.USER_STATUS.ONLINE) {\n        status = Translator.translate(\"ONLINE\", this.props.lang);\n      }\n\n      this.setState({\n        status: status,\n        presence: presence\n      });\n    };\n\n    this.setStatusForGroup = () => {\n      let membersText = Translator.translate(\"MEMBERS\", this.props.lang);\n      const status = `${this.context.item.membersCount} ${membersText}`;\n      this.setState({\n        status: status\n      });\n    };\n\n    this.updateHeader = (key, item, groupUser) => {\n      switch (key) {\n        case enums.USER_ONLINE:\n        case enums.USER_OFFLINE:\n          {\n            if (this.context.type === CometChat.ACTION_TYPE.TYPE_USER && this.context.item.uid === item.uid) {\n              //if user presence feature is disabled\n              if (this.state.enableUserPresence === false) {\n                return false;\n              }\n\n              let status = \"\";\n\n              if (item.status === CometChat.USER_STATUS.OFFLINE) {\n                status = Translator.translate(\"OFFLINE\", this.props.lang);\n              } else if (item.status === CometChat.USER_STATUS.ONLINE) {\n                status = Translator.translate(\"ONLINE\", this.props.lang);\n              }\n\n              this.setState({\n                status: status,\n                presence: item.status\n              });\n            }\n\n            break;\n          }\n\n        case enums.GROUP_MEMBER_KICKED:\n        case enums.GROUP_MEMBER_BANNED:\n        case enums.GROUP_MEMBER_LEFT:\n          if (this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.context.item.guid === item.guid && this.loggedInUser.uid !== groupUser.uid) {\n            let membersCount = parseInt(item.membersCount);\n            const status = `${membersCount} ${Translator.translate(\"MEMBERS\", this.props.lang)}`;\n            this.setState({\n              status: status\n            });\n          }\n\n          break;\n\n        case enums.GROUP_MEMBER_JOINED:\n          if (this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.context.item.guid === item.guid) {\n            let membersCount = parseInt(item.membersCount);\n            const status = `${membersCount} ${Translator.translate(\"MEMBERS\", this.props.lang)}`;\n            this.setState({\n              status: status\n            });\n          }\n\n          break;\n\n        case enums.GROUP_MEMBER_ADDED:\n          if (this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.context.item.guid === item.guid) {\n            let membersCount = parseInt(item.membersCount);\n            const status = `${membersCount} ${Translator.translate(\"MEMBERS\", this.props.lang)}`;\n            this.setState({\n              status: status\n            });\n          }\n\n          break;\n\n        case enums.TYPING_STARTED:\n          this.onTypingStarted(item);\n          break;\n\n        case enums.TYPING_ENDED:\n          this.onTypingEnded(item);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.onTypingStarted = item => {\n      const showTyping = typingText => {\n        /**\n         * if metadata is available, show live reactions else show typing\n         */\n        if (item.hasOwnProperty(\"metadata\") && item.metadata && item.metadata.hasOwnProperty(\"type\") && item.metadata.type === enums.CONSTANTS[\"METADATA_TYPE_LIVEREACTION\"]) {\n          this.props.actionGenerated(enums.ACTIONS[\"SHOW_LIVE_REACTION\"], item);\n        } else {\n          if (this.state.enableTypingIndicator === true) {\n            this.setState({\n              typing: typingText\n            });\n          }\n        }\n      };\n\n      if (this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.context.type === item.receiverType && this.context.item.guid === item.receiverId) {\n        const typingText = `${item.sender.name} ${Translator.translate(\"IS_TYPING\", this.props.lang)}`;\n        showTyping(typingText);\n      } else if (this.context.type === CometChat.ACTION_TYPE.TYPE_USER && this.context.type === item.receiverType && this.context.item.uid === item.sender.uid) {\n        const typingText = `${Translator.translate(\"TYPING\", this.props.lang)}`;\n        showTyping(typingText);\n      }\n    };\n\n    this.onTypingEnded = item => {\n      const endTyping = () => {\n        /**\n         * if metadata is available, end live reactions else end typing\n         */\n        if (item.hasOwnProperty(\"metadata\") && item.metadata && item.metadata.hasOwnProperty(\"type\") && item.metadata.type === enums.CONSTANTS[\"METADATA_TYPE_LIVEREACTION\"]) {\n          this.props.actionGenerated(enums.ACTIONS[\"STOP_LIVE_REACTION\"], item);\n        } else {\n          if (this.state.enableTypingIndicator === true) {\n            this.setState({\n              typing: null\n            });\n          }\n        }\n      };\n\n      if (this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.context.type === item.receiverType && this.context.item.guid === item.receiverId) {\n        this.setStatusForGroup();\n        endTyping();\n      } else if (this.context.type === CometChat.ACTION_TYPE.TYPE_USER && this.context.type === item.receiverType && this.context.item.uid === item.sender.uid) {\n        if (this.state.presence === CometChat.USER_STATUS.ONLINE) {\n          this.setState({\n            status: Translator.translate(\"ONLINE\", this.props.lang),\n            presence: CometChat.USER_STATUS.ONLINE\n          });\n        } else {\n          this.setStatusForUser();\n        }\n\n        endTyping();\n      }\n    };\n\n    this.toggleTooltip = (event, flag) => {\n      const elem = event.target;\n      const scrollWidth = elem.scrollWidth;\n      const clientWidth = elem.clientWidth;\n\n      if (scrollWidth <= clientWidth) {\n        return false;\n      }\n\n      if (flag) {\n        elem.setAttribute(\"title\", elem.textContent);\n      } else {\n        elem.removeAttribute(\"title\");\n      }\n    };\n\n    this.resetChat = () => {\n      this.context.setItem({});\n      this.props.actionGenerated(enums.ACTIONS[\"TOGGLE_SIDEBAR\"]);\n    };\n\n    this.enableTypingIndicator = () => {\n      this.context.FeatureRestriction.isTypingIndicatorsEnabled().then(response => {\n        if (response !== this.state.enableTypingIndicator) {\n          this.setState({\n            enableTypingIndicator: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableTypingIndicator !== false) {\n          this.setState({\n            enableTypingIndicator: false\n          });\n        }\n      });\n    };\n\n    this.enableGroupVoiceCall = () => {};\n\n    this.enableGroupVideoCall = () => {\n      this.context.FeatureRestriction.isGroupVideoCallEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableGroupVideoCall) {\n          this.setState({\n            enableGroupVideoCall: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableGroupVideoCall !== false) {\n          this.setState({\n            enableGroupVideoCall: false\n          });\n        }\n      });\n    };\n\n    this.enableOneOnOneVoiceCall = () => {\n      this.context.FeatureRestriction.isOneOnOneAudioCallEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        const combinedResponse = response && !this.context.item.blockedByMe;\n\n        if (combinedResponse !== this.state.enableOneOnOneVoiceCall) {\n          this.setState({\n            enableOneOnOneVoiceCall: combinedResponse\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableOneOnOneVoiceCall !== false) {\n          this.setState({\n            enableOneOnOneVoiceCall: false\n          });\n        }\n      });\n    };\n\n    this.enableOneOnOneVideoCall = () => {\n      this.context.FeatureRestriction.isOneOnOneVideoCallEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        const combinedResponse = response && !this.context.item.blockedByMe;\n\n        if (combinedResponse !== this.state.enableOneOnOneVideoCall) {\n          this.setState({\n            enableOneOnOneVideoCall: combinedResponse\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableOneOnOneVideoCall !== false) {\n          this.setState({\n            enableOneOnOneVideoCall: false\n          });\n        }\n      });\n    };\n\n    this.enableUserPresence = () => {\n      this.context.FeatureRestriction.isUserPresenceEnabled().then(response => {\n        if (response !== this.state.enableUserPresence) {\n          this.setState({\n            enableUserPresence: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableUserPresence !== false) {\n          this.setState({\n            enableUserPresence: false\n          });\n        }\n      });\n    };\n\n    this.enableAddGroupMembers = () => {\n      this.context.FeatureRestriction.isAddingGroupMembersEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableAddGroupMembers) {\n          this.setState({\n            enableAddGroupMembers: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableAddGroupMembers !== false) {\n          this.setState({\n            enableAddGroupMembers: false\n          });\n        }\n      });\n    };\n\n    this.enableChangeScope = () => {\n      this.context.FeatureRestriction.isChangingGroupMemberScopeEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableChangeScope) {\n          this.setState({\n            enableChangeScope: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableChangeScope !== false) {\n          this.setState({\n            enableChangeScope: false\n          });\n        }\n      });\n    };\n\n    this.enableKickGroupMembers = () => {\n      this.context.FeatureRestriction.isKickingGroupMembersEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableKickGroupMembers) {\n          this.setState({\n            enableKickGroupMembers: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableKickGroupMembers !== false) {\n          this.setState({\n            enableKickGroupMembers: false\n          });\n        }\n      });\n    };\n\n    this.enableBanGroupMembers = () => {\n      this.context.FeatureRestriction.isBanningGroupMembersEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableBanGroupMembers) {\n          this.setState({\n            enableBanGroupMembers: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableBanGroupMembers !== false) {\n          this.setState({\n            enableBanGroupMembers: false\n          });\n        }\n      });\n    };\n\n    this.enableDeleteGroup = () => {\n      this.context.FeatureRestriction.isGroupDeletionEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableDeleteGroup) {\n          this.setState({\n            enableDeleteGroup: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableDeleteGroup !== false) {\n          this.setState({\n            enableDeleteGroup: false\n          });\n        }\n      });\n    };\n\n    this.enableViewGroupMembers = () => {\n      this.context.FeatureRestriction.isViewingGroupMembersEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableViewGroupMembers) {\n          this.setState({\n            enableViewGroupMembers: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableViewGroupMembers !== false) {\n          this.setState({\n            enableViewGroupMembers: false\n          });\n        }\n      });\n    };\n\n    this.enableLeaveGroup = () => {\n      this.context.FeatureRestriction.isJoinLeaveGroupsEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableLeaveGroup) {\n          this.setState({\n            enableLeaveGroup: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableLeaveGroup !== false) {\n          this.setState({\n            enableLeaveGroup: false\n          });\n        }\n      });\n    };\n\n    this.enableSharedMedia = () => {\n      this.context.FeatureRestriction.isSharedMediaEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableSharedMedia) {\n          this.setState({\n            enableSharedMedia: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableSharedMedia !== false) {\n          this.setState({\n            enableSharedMedia: false\n          });\n        }\n      });\n    };\n\n    this.enableBlockUser = () => {\n      this.context.FeatureRestriction.isBlockUserEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableBlockUser) {\n          this.setState({\n            enableBlockUser: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableBlockUser !== false) {\n          this.setState({\n            enableBlockUser: false\n          });\n        }\n      });\n    };\n\n    this.state = {\n      status: \"\",\n      presence: \"offline\",\n      typing: null,\n      enableGroupVoiceCall: false,\n      enableGroupVideoCall: false,\n      enableOneOnOneVoiceCall: false,\n      enableOneOnOneVideoCall: false,\n      enableUserPresence: false,\n      enableAddGroupMembers: false,\n      enableChangeScope: false,\n      enableKickGroupMembers: false,\n      enableBanGroupMembers: false,\n      enableDeleteGroup: false,\n      enableViewGroupMembers: false,\n      enableLeaveGroup: false,\n      enableSharedMedia: false,\n      enableBlockUser: false,\n      enableTypingIndicator: false\n    };\n  }\n\n  componentDidMount() {\n    CometChat.getLoggedinUser().then(user => this.loggedInUser = user).catch(error => this.props.actionGenerated(enums.ACTIONS[\"ERROR\"], [], \"SOMETHING_WRONG\"));\n    this.MessageHeaderManager = new MessageHeaderManager();\n    this.MessageHeaderManager.attachListeners(this.updateHeader);\n\n    if (this.context.type === CometChat.ACTION_TYPE.TYPE_USER) {\n      this.setStatusForUser();\n    } else if (this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP) {\n      this.setStatusForGroup();\n    }\n\n    this.item = this.context.item;\n    this.enableGroupVoiceCall();\n    this.enableGroupVideoCall();\n    this.enableOneOnOneVoiceCall();\n    this.enableOneOnOneVideoCall();\n    this.enableUserPresence();\n    this.enableAddGroupMembers();\n    this.enableChangeScope();\n    this.enableKickGroupMembers();\n    this.enableBanGroupMembers();\n    this.enableViewGroupMembers();\n    this.enableDeleteGroup();\n    this.enableLeaveGroup();\n    this.enableSharedMedia();\n    this.enableBlockUser();\n    this.enableTypingIndicator();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.MessageHeaderManager.removeListeners();\n    this.MessageHeaderManager = new MessageHeaderManager();\n    this.MessageHeaderManager.attachListeners(this.updateHeader);\n\n    if (this.context.type === CometChat.ACTION_TYPE.TYPE_USER && (this.item !== this.context.item || prevProps.lang !== this.props.lang)) {\n      this.setStatusForUser();\n    } else if (this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP && (this.item !== this.context.item || prevProps.lang !== this.props.lang)) {\n      this.setStatusForGroup();\n    }\n\n    this.item = this.context.item;\n    this.enableGroupVoiceCall();\n    this.enableGroupVideoCall();\n    this.enableOneOnOneVoiceCall();\n    this.enableOneOnOneVideoCall();\n    this.enableUserPresence();\n    this.enableAddGroupMembers();\n    this.enableChangeScope();\n    this.enableKickGroupMembers();\n    this.enableBanGroupMembers();\n    this.enableViewGroupMembers();\n    this.enableDeleteGroup();\n    this.enableLeaveGroup();\n    this.enableSharedMedia();\n    this.enableBlockUser();\n    this.enableTypingIndicator();\n  }\n\n  componentWillUnmount() {\n    this.MessageHeaderManager.removeListeners();\n    this.MessageHeaderManager = null;\n  }\n\n  render() {\n    let avatar, presence;\n    let videoCallClassName = \"option__videocall-user\";\n    let audioCallClassName = \"option__audiocall-user\";\n    let viewDetailClassName = \"option__viewdetail-user\";\n    let chatWithClassName = \"chat__user\";\n    let chatNameClassName = \"user__name\";\n    let chatStatusClassName = \"user__status\";\n\n    if (this.context.type === CometChat.ACTION_TYPE.TYPE_USER) {\n      avatar = jsx(CometChatAvatar, {\n        user: this.context.item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 16\n        }\n      });\n      presence = jsx(CometChatUserPresence, {\n        status: this.state.presence,\n        borderColor: this.props.theme.borderColor.primary,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 9\n        }\n      });\n    } else if (this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP) {\n      chatWithClassName = \"chat__group\";\n      chatNameClassName = \"group__name\";\n      chatStatusClassName = \"group__members\";\n      videoCallClassName = \"option__videocall-group\";\n      audioCallClassName = \"option__audiocall-group\";\n      viewDetailClassName = \"option__viewdetail-group\";\n      avatar = jsx(CometChatAvatar, {\n        group: this.context.item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 16\n        }\n      });\n    }\n\n    let typing = null;\n\n    if (this.state.typing) {\n      typing = jsx(\"span\", {\n        css: chatStatusStyle(this.state, this.context),\n        className: chatStatusClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 9\n        }\n      }, this.state.typing);\n    }\n\n    let status = jsx(\"span\", {\n      css: chatStatusStyle(this.state, this.context),\n      className: chatStatusClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 7\n      }\n    }, this.state.status);\n    const audioCallText = Translator.translate(\"AUDIO_CALL\", this.props.lang);\n    let audioCallBtn = jsx(\"div\", {\n      className: audioCallClassName,\n      css: chatOptionStyle(audioCallIcon, this.context, 0),\n      title: audioCallText,\n      onClick: () => this.props.actionGenerated(enums.ACTIONS[\"INITIATE_AUDIO_CALL\"]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 7\n      }\n    }, jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 9\n      }\n    }));\n\n    if (this.context.checkIfCallIsOngoing()) {\n      const audioCallText = Translator.translate(\"YOU_ALREADY_ONGOING_CALL\", this.props.lang);\n      audioCallBtn = jsx(\"div\", {\n        className: audioCallClassName,\n        css: chatOptionStyle(audioCallIcon, this.context, 1),\n        title: audioCallText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 9\n        }\n      }, jsx(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    const videoCallText = Translator.translate(\"VIDEO_CALL\", this.props.lang);\n    let videoCallBtn = jsx(\"div\", {\n      className: videoCallClassName,\n      css: chatOptionStyle(videoCallIcon, this.context, 0),\n      title: videoCallText,\n      onClick: () => this.props.actionGenerated(enums.ACTIONS[\"INITIATE_VIDEO_CALL\"]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 7\n      }\n    }, jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 9\n      }\n    }));\n\n    if (this.context.checkIfCallIsOngoing()) {\n      const videoCallText = Translator.translate(\"YOU_ALREADY_ONGOING_CALL\", this.props.lang);\n      videoCallBtn = jsx(\"div\", {\n        className: videoCallClassName,\n        css: chatOptionStyle(videoCallIcon, this.context, 1),\n        title: videoCallText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 9\n        }\n      }, jsx(\"i\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    const viewDetailText = Translator.translate(\"VIEW_DETAIL\", this.props.lang);\n    let viewDetailBtn = jsx(\"div\", {\n      className: viewDetailClassName,\n      css: chatOptionStyle(detailPaneIcon, this.context, 0),\n      title: viewDetailText,\n      onClick: () => this.props.actionGenerated(enums.ACTIONS[\"VIEW_DETAIL\"]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 7\n      }\n    }, jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 9\n      }\n    }));\n    /**\n     * If the chat window open is of users and block user and shared media feature is disabled, hide view detail button\n     */\n\n    if (this.context.type === CometChat.ACTION_TYPE.TYPE_USER) {\n      if (this.state.enableBlockUser === false && this.state.enableSharedMedia === false) {\n        viewDetailBtn = null;\n      }\n    } else if (this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP) {\n      var _this$context$item, _this$context$item2, _this$context$item3;\n\n      /**\n       * If the chat window open is of group\n       */\n      if (((_this$context$item = this.context.item) === null || _this$context$item === void 0 ? void 0 : _this$context$item.scope) === CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT) {\n        /**\n         * If the loggedin user scope is participant, leave group, view group members, and shared media feature is disabled, hide view detail button\n         */\n        if (this.state.enableLeaveGroup === false && this.state.enableSharedMedia === false && this.state.enableViewGroupMembers === false) {\n          viewDetailBtn = null;\n        }\n      } else if (((_this$context$item2 = this.context.item) === null || _this$context$item2 === void 0 ? void 0 : _this$context$item2.scope) === CometChat.GROUP_MEMBER_SCOPE.MODERATOR) {\n        /**\n         * If the loggedin user scope is moderator, leave group, view group members, kick & ban group members, changing scope of group members and shared media feature is disabled, hide view detail button\n         */\n        if (this.state.enableLeaveGroup === false && this.state.enableSharedMedia === false && this.state.enableViewGroupMembers === false && this.state.enableKickGroupMembers === false && this.state.enableBanGroupMembers === false && this.state.enableChangeScope === false) {\n          viewDetailBtn = null;\n        }\n      } else if (((_this$context$item3 = this.context.item) === null || _this$context$item3 === void 0 ? void 0 : _this$context$item3.scope) === CometChat.GROUP_MEMBER_SCOPE.ADMIN) {\n        /**\n         * If the loggedin user scope is admin, add group members, view group members, kick & ban group members, changing scope of group members, leave and delete group and shared media feature is disabled, hide view detail button\n         */\n        if (this.state.enableLeaveGroup === false && this.state.enableSharedMedia === false && this.state.enableViewGroupMembers === false && this.state.enableKickGroupMembers === false && this.state.enableBanGroupMembers === false && this.state.enableChangeScope === false && this.state.enableDeleteGroup === false && this.state.enableAddGroupMembers === false) {\n          viewDetailBtn = null;\n        }\n      }\n    } //if audiocall feature is disabled\n\n\n    if (this.context.type === CometChat.ACTION_TYPE.TYPE_USER && this.state.enableOneOnOneVoiceCall === false || this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.state.enableGroupVoiceCall === false) {\n      audioCallBtn = null;\n    } //if videocall feature is disabled\n\n\n    if (this.context.type === CometChat.ACTION_TYPE.TYPE_USER && this.state.enableOneOnOneVideoCall === false || this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.state.enableGroupVideoCall === false) {\n      videoCallBtn = null;\n    } //if user presence is disabled in chat widget\n\n\n    if (this.state.enableUserPresence === false && this.context.type === CometChat.ACTION_TYPE.TYPE_USER) {\n      status = null;\n    }\n\n    return jsx(\"div\", {\n      css: chatHeaderStyle(this.context),\n      className: \"chat__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 7\n      }\n    }, jsx(\"div\", {\n      css: chatDetailStyle(),\n      className: \"chat__details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 9\n      }\n    }, jsx(\"div\", {\n      css: chatSideBarBtnStyle(menuIcon, this.props, this.context),\n      className: \"chat__sidebar-menu\",\n      onClick: this.resetChat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 11\n      }\n    }), jsx(\"div\", {\n      css: chatThumbnailStyle(),\n      className: \"chat__thumbnail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 11\n      }\n    }, avatar, presence), jsx(\"div\", {\n      css: chatUserStyle(this.context),\n      className: chatWithClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 11\n      }\n    }, jsx(\"h6\", {\n      css: chatNameStyle(),\n      className: chatNameClassName,\n      onMouseEnter: event => this.toggleTooltip(event, true),\n      onMouseLeave: event => this.toggleTooltip(event, false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 13\n      }\n    }, this.context.item.name), typing ? typing : status)), jsx(\"div\", {\n      css: chatOptionWrapStyle(),\n      className: \"chat__options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 9\n      }\n    }, videoCallBtn, audioCallBtn, viewDetailBtn));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatMessageHeader.contextType = CometChatContext;\nCometChatMessageHeader.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  item: {},\n  type: \"\"\n};\nCometChatMessageHeader.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  item: PropTypes.object,\n  type: PropTypes.string\n};\nexport { CometChatMessageHeader };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatMessageHeader/index.js"],"names":["React","dateFormat","jsx","PropTypes","CometChat","MessageHeaderManager","CometChatAvatar","CometChatUserPresence","CometChatContext","enums","theme","Translator","chatHeaderStyle","chatDetailStyle","chatSideBarBtnStyle","chatThumbnailStyle","chatUserStyle","chatNameStyle","chatStatusStyle","chatOptionWrapStyle","chatOptionStyle","CometChatMessageHeader","Component","constructor","props","setStatusForUser","status","presence","context","item","USER_STATUS","ONLINE","OFFLINE","lastActiveAt","lastActive","messageDate","translate","lang","setState","setStatusForGroup","membersText","membersCount","updateHeader","key","groupUser","USER_ONLINE","USER_OFFLINE","type","ACTION_TYPE","TYPE_USER","uid","state","enableUserPresence","GROUP_MEMBER_KICKED","GROUP_MEMBER_BANNED","GROUP_MEMBER_LEFT","TYPE_GROUP","guid","loggedInUser","parseInt","GROUP_MEMBER_JOINED","GROUP_MEMBER_ADDED","TYPING_STARTED","onTypingStarted","TYPING_ENDED","onTypingEnded","showTyping","typingText","hasOwnProperty","metadata","CONSTANTS","actionGenerated","ACTIONS","enableTypingIndicator","typing","receiverType","receiverId","sender","name","endTyping","toggleTooltip","event","flag","elem","target","scrollWidth","clientWidth","setAttribute","textContent","removeAttribute","resetChat","setItem","FeatureRestriction","isTypingIndicatorsEnabled","then","response","catch","error","enableGroupVoiceCall","enableGroupVideoCall","isGroupVideoCallEnabled","enableOneOnOneVoiceCall","isOneOnOneAudioCallEnabled","combinedResponse","blockedByMe","enableOneOnOneVideoCall","isOneOnOneVideoCallEnabled","isUserPresenceEnabled","enableAddGroupMembers","isAddingGroupMembersEnabled","enableChangeScope","isChangingGroupMemberScopeEnabled","enableKickGroupMembers","isKickingGroupMembersEnabled","enableBanGroupMembers","isBanningGroupMembersEnabled","enableDeleteGroup","isGroupDeletionEnabled","enableViewGroupMembers","isViewingGroupMembersEnabled","enableLeaveGroup","isJoinLeaveGroupsEnabled","enableSharedMedia","isSharedMediaEnabled","enableBlockUser","isBlockUserEnabled","componentDidMount","getLoggedinUser","user","attachListeners","componentDidUpdate","prevProps","prevState","removeListeners","componentWillUnmount","render","avatar","videoCallClassName","audioCallClassName","viewDetailClassName","chatWithClassName","chatNameClassName","chatStatusClassName","borderColor","primary","audioCallText","audioCallBtn","audioCallIcon","checkIfCallIsOngoing","videoCallText","videoCallBtn","videoCallIcon","viewDetailText","viewDetailBtn","detailPaneIcon","scope","GROUP_MEMBER_SCOPE","PARTICIPANT","MODERATOR","ADMIN","menuIcon","contextType","defaultProps","getDefaultLanguage","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport dateFormat from \"dateformat\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { MessageHeaderManager } from \"./controller\";\n\nimport { CometChatAvatar, CometChatUserPresence } from \"../../Shared\";\n\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\n\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\n\nimport {\n  chatHeaderStyle,\n  chatDetailStyle,\n  chatSideBarBtnStyle,\n  chatThumbnailStyle,\n  chatUserStyle,\n  chatNameStyle,\n  chatStatusStyle,\n  chatOptionWrapStyle,\n  chatOptionStyle,\n} from \"./style\";\n\nimport menuIcon from \"./resources/menu.svg\";\nimport audioCallIcon from \"./resources/audio-call.svg\";\nimport videoCallIcon from \"./resources/video-call.svg\";\nimport detailPaneIcon from \"./resources/info.svg\";\n\nclass CometChatMessageHeader extends React.Component {\n  item;\n  static contextType = CometChatContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      status: \"\",\n      presence: \"offline\",\n      typing: null,\n      enableGroupVoiceCall: false,\n      enableGroupVideoCall: false,\n      enableOneOnOneVoiceCall: false,\n      enableOneOnOneVideoCall: false,\n      enableUserPresence: false,\n      enableAddGroupMembers: false,\n      enableChangeScope: false,\n      enableKickGroupMembers: false,\n      enableBanGroupMembers: false,\n      enableDeleteGroup: false,\n      enableViewGroupMembers: false,\n      enableLeaveGroup: false,\n      enableSharedMedia: false,\n      enableBlockUser: false,\n      enableTypingIndicator: false,\n    };\n  }\n\n  componentDidMount() {\n    CometChat.getLoggedinUser()\n      .then((user) => (this.loggedInUser = user))\n      .catch((error) =>\n        this.props.actionGenerated(\n          enums.ACTIONS[\"ERROR\"],\n          [],\n          \"SOMETHING_WRONG\"\n        )\n      );\n\n    this.MessageHeaderManager = new MessageHeaderManager();\n    this.MessageHeaderManager.attachListeners(this.updateHeader);\n\n    if (this.context.type === CometChat.ACTION_TYPE.TYPE_USER) {\n      this.setStatusForUser();\n    } else if (this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP) {\n      this.setStatusForGroup();\n    }\n\n    this.item = this.context.item;\n\n    this.enableGroupVoiceCall();\n    this.enableGroupVideoCall();\n    this.enableOneOnOneVoiceCall();\n    this.enableOneOnOneVideoCall();\n    this.enableUserPresence();\n    this.enableAddGroupMembers();\n    this.enableChangeScope();\n    this.enableKickGroupMembers();\n    this.enableBanGroupMembers();\n    this.enableViewGroupMembers();\n    this.enableDeleteGroup();\n    this.enableLeaveGroup();\n    this.enableSharedMedia();\n    this.enableBlockUser();\n    this.enableTypingIndicator();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.MessageHeaderManager.removeListeners();\n    this.MessageHeaderManager = new MessageHeaderManager();\n    this.MessageHeaderManager.attachListeners(this.updateHeader);\n\n    if (\n      this.context.type === CometChat.ACTION_TYPE.TYPE_USER &&\n      (this.item !== this.context.item || prevProps.lang !== this.props.lang)\n    ) {\n      this.setStatusForUser();\n    } else if (\n      this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP &&\n      (this.item !== this.context.item || prevProps.lang !== this.props.lang)\n    ) {\n      this.setStatusForGroup();\n    }\n\n    this.item = this.context.item;\n\n    this.enableGroupVoiceCall();\n    this.enableGroupVideoCall();\n    this.enableOneOnOneVoiceCall();\n    this.enableOneOnOneVideoCall();\n    this.enableUserPresence();\n    this.enableAddGroupMembers();\n    this.enableChangeScope();\n    this.enableKickGroupMembers();\n    this.enableBanGroupMembers();\n    this.enableViewGroupMembers();\n    this.enableDeleteGroup();\n    this.enableLeaveGroup();\n    this.enableSharedMedia();\n    this.enableBlockUser();\n    this.enableTypingIndicator();\n  }\n\n  setStatusForUser = () => {\n    let status = \"\";\n    const presence =\n      this.context.item.status === CometChat.USER_STATUS.ONLINE\n        ? CometChat.USER_STATUS.ONLINE\n        : CometChat.USER_STATUS.OFFLINE;\n\n    if (\n      this.context.item.status === CometChat.USER_STATUS.OFFLINE &&\n      this.context.item.lastActiveAt\n    ) {\n      const lastActive = this.context.item.lastActiveAt * 1000;\n      const messageDate = dateFormat(lastActive, \"dS mmm yyyy, h:MM TT\");\n\n      status = `${Translator.translate(\n        \"LAST_ACTIVE_AT\",\n        this.props.lang\n      )}: ${messageDate}`;\n    } else if (this.context.item.status === CometChat.USER_STATUS.OFFLINE) {\n      status = Translator.translate(\"OFFLINE\", this.props.lang);\n    } else if (this.context.item.status === CometChat.USER_STATUS.ONLINE) {\n      status = Translator.translate(\"ONLINE\", this.props.lang);\n    }\n\n    this.setState({ status: status, presence: presence });\n  };\n\n  setStatusForGroup = () => {\n    let membersText = Translator.translate(\"MEMBERS\", this.props.lang);\n    const status = `${this.context.item.membersCount} ${membersText}`;\n    this.setState({ status: status });\n  };\n\n  componentWillUnmount() {\n    this.MessageHeaderManager.removeListeners();\n    this.MessageHeaderManager = null;\n  }\n\n  updateHeader = (key, item, groupUser) => {\n    switch (key) {\n      case enums.USER_ONLINE:\n      case enums.USER_OFFLINE: {\n        if (\n          this.context.type === CometChat.ACTION_TYPE.TYPE_USER &&\n          this.context.item.uid === item.uid\n        ) {\n          //if user presence feature is disabled\n          if (this.state.enableUserPresence === false) {\n            return false;\n          }\n\n          let status = \"\";\n          if (item.status === CometChat.USER_STATUS.OFFLINE) {\n            status = Translator.translate(\"OFFLINE\", this.props.lang);\n          } else if (item.status === CometChat.USER_STATUS.ONLINE) {\n            status = Translator.translate(\"ONLINE\", this.props.lang);\n          }\n          this.setState({ status: status, presence: item.status });\n        }\n        break;\n      }\n      case enums.GROUP_MEMBER_KICKED:\n      case enums.GROUP_MEMBER_BANNED:\n      case enums.GROUP_MEMBER_LEFT:\n        if (\n          this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP &&\n          this.context.item.guid === item.guid &&\n          this.loggedInUser.uid !== groupUser.uid\n        ) {\n          let membersCount = parseInt(item.membersCount);\n          const status = `${membersCount} ${Translator.translate(\n            \"MEMBERS\",\n            this.props.lang\n          )}`;\n          this.setState({ status: status });\n        }\n        break;\n      case enums.GROUP_MEMBER_JOINED:\n        if (\n          this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP &&\n          this.context.item.guid === item.guid\n        ) {\n          let membersCount = parseInt(item.membersCount);\n          const status = `${membersCount} ${Translator.translate(\n            \"MEMBERS\",\n            this.props.lang\n          )}`;\n          this.setState({ status: status });\n        }\n        break;\n      case enums.GROUP_MEMBER_ADDED:\n        if (\n          this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP &&\n          this.context.item.guid === item.guid\n        ) {\n          let membersCount = parseInt(item.membersCount);\n          const status = `${membersCount} ${Translator.translate(\n            \"MEMBERS\",\n            this.props.lang\n          )}`;\n          this.setState({ status: status });\n        }\n        break;\n      case enums.TYPING_STARTED:\n        this.onTypingStarted(item);\n        break;\n      case enums.TYPING_ENDED:\n        this.onTypingEnded(item);\n        break;\n      default:\n        break;\n    }\n  };\n\n  onTypingStarted = (item) => {\n    const showTyping = (typingText) => {\n      /**\n       * if metadata is available, show live reactions else show typing\n       */\n      if (\n        item.hasOwnProperty(\"metadata\") &&\n        item.metadata &&\n        item.metadata.hasOwnProperty(\"type\") &&\n        item.metadata.type === enums.CONSTANTS[\"METADATA_TYPE_LIVEREACTION\"]\n      ) {\n        this.props.actionGenerated(enums.ACTIONS[\"SHOW_LIVE_REACTION\"], item);\n      } else {\n        if (this.state.enableTypingIndicator === true) {\n          this.setState({ typing: typingText });\n        }\n      }\n    };\n\n    if (\n      this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP &&\n      this.context.type === item.receiverType &&\n      this.context.item.guid === item.receiverId\n    ) {\n      const typingText = `${item.sender.name} ${Translator.translate(\n        \"IS_TYPING\",\n        this.props.lang\n      )}`;\n      showTyping(typingText);\n    } else if (\n      this.context.type === CometChat.ACTION_TYPE.TYPE_USER &&\n      this.context.type === item.receiverType &&\n      this.context.item.uid === item.sender.uid\n    ) {\n      const typingText = `${Translator.translate(\"TYPING\", this.props.lang)}`;\n      showTyping(typingText);\n    }\n  };\n\n  onTypingEnded = (item) => {\n    const endTyping = () => {\n      /**\n       * if metadata is available, end live reactions else end typing\n       */\n      if (\n        item.hasOwnProperty(\"metadata\") &&\n        item.metadata &&\n        item.metadata.hasOwnProperty(\"type\") &&\n        item.metadata.type === enums.CONSTANTS[\"METADATA_TYPE_LIVEREACTION\"]\n      ) {\n        this.props.actionGenerated(enums.ACTIONS[\"STOP_LIVE_REACTION\"], item);\n      } else {\n        if (this.state.enableTypingIndicator === true) {\n          this.setState({ typing: null });\n        }\n      }\n    };\n\n    if (\n      this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP &&\n      this.context.type === item.receiverType &&\n      this.context.item.guid === item.receiverId\n    ) {\n      this.setStatusForGroup();\n      endTyping();\n    } else if (\n      this.context.type === CometChat.ACTION_TYPE.TYPE_USER &&\n      this.context.type === item.receiverType &&\n      this.context.item.uid === item.sender.uid\n    ) {\n      if (this.state.presence === CometChat.USER_STATUS.ONLINE) {\n        this.setState({\n          status: Translator.translate(\"ONLINE\", this.props.lang),\n          presence: CometChat.USER_STATUS.ONLINE,\n        });\n      } else {\n        this.setStatusForUser();\n      }\n\n      endTyping();\n    }\n  };\n\n  toggleTooltip = (event, flag) => {\n    const elem = event.target;\n    const scrollWidth = elem.scrollWidth;\n    const clientWidth = elem.clientWidth;\n\n    if (scrollWidth <= clientWidth) {\n      return false;\n    }\n\n    if (flag) {\n      elem.setAttribute(\"title\", elem.textContent);\n    } else {\n      elem.removeAttribute(\"title\");\n    }\n  };\n\n  resetChat = () => {\n    this.context.setItem({});\n    this.props.actionGenerated(enums.ACTIONS[\"TOGGLE_SIDEBAR\"]);\n  };\n\n  /**\n   * if typing indicator feature is disabled\n   */\n  enableTypingIndicator = () => {\n    this.context.FeatureRestriction.isTypingIndicatorsEnabled()\n      .then((response) => {\n        if (response !== this.state.enableTypingIndicator) {\n          this.setState({ enableTypingIndicator: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableTypingIndicator !== false) {\n          this.setState({ enableTypingIndicator: false });\n        }\n      });\n  };\n\n  enableGroupVoiceCall = () => {};\n\n  enableGroupVideoCall = () => {\n    this.context.FeatureRestriction.isGroupVideoCallEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableGroupVideoCall) {\n          this.setState({ enableGroupVideoCall: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableGroupVideoCall !== false) {\n          this.setState({ enableGroupVideoCall: false });\n        }\n      });\n  };\n\n  enableOneOnOneVoiceCall = () => {\n    this.context.FeatureRestriction.isOneOnOneAudioCallEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        const combinedResponse = response && !this.context.item.blockedByMe;\n        if (combinedResponse !== this.state.enableOneOnOneVoiceCall) {\n          this.setState({ enableOneOnOneVoiceCall: combinedResponse });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableOneOnOneVoiceCall !== false) {\n          this.setState({ enableOneOnOneVoiceCall: false });\n        }\n      });\n  };\n\n  enableOneOnOneVideoCall = () => {\n    this.context.FeatureRestriction.isOneOnOneVideoCallEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        const combinedResponse = response && !this.context.item.blockedByMe;\n        if (combinedResponse !== this.state.enableOneOnOneVideoCall) {\n          this.setState({ enableOneOnOneVideoCall: combinedResponse });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableOneOnOneVideoCall !== false) {\n          this.setState({ enableOneOnOneVideoCall: false });\n        }\n      });\n  };\n\n  enableUserPresence = () => {\n    this.context.FeatureRestriction.isUserPresenceEnabled()\n      .then((response) => {\n        if (response !== this.state.enableUserPresence) {\n          this.setState({ enableUserPresence: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableUserPresence !== false) {\n          this.setState({ enableUserPresence: false });\n        }\n      });\n  };\n\n  enableAddGroupMembers = () => {\n    this.context.FeatureRestriction.isAddingGroupMembersEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableAddGroupMembers) {\n          this.setState({ enableAddGroupMembers: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableAddGroupMembers !== false) {\n          this.setState({ enableAddGroupMembers: false });\n        }\n      });\n  };\n\n  enableChangeScope = () => {\n    this.context.FeatureRestriction.isChangingGroupMemberScopeEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableChangeScope) {\n          this.setState({ enableChangeScope: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableChangeScope !== false) {\n          this.setState({ enableChangeScope: false });\n        }\n      });\n  };\n\n  enableKickGroupMembers = () => {\n    this.context.FeatureRestriction.isKickingGroupMembersEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableKickGroupMembers) {\n          this.setState({ enableKickGroupMembers: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableKickGroupMembers !== false) {\n          this.setState({ enableKickGroupMembers: false });\n        }\n      });\n  };\n\n  enableBanGroupMembers = () => {\n    this.context.FeatureRestriction.isBanningGroupMembersEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableBanGroupMembers) {\n          this.setState({ enableBanGroupMembers: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableBanGroupMembers !== false) {\n          this.setState({ enableBanGroupMembers: false });\n        }\n      });\n  };\n\n  enableDeleteGroup = () => {\n    this.context.FeatureRestriction.isGroupDeletionEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableDeleteGroup) {\n          this.setState({ enableDeleteGroup: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableDeleteGroup !== false) {\n          this.setState({ enableDeleteGroup: false });\n        }\n      });\n  };\n\n  enableViewGroupMembers = () => {\n    this.context.FeatureRestriction.isViewingGroupMembersEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableViewGroupMembers) {\n          this.setState({ enableViewGroupMembers: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableViewGroupMembers !== false) {\n          this.setState({ enableViewGroupMembers: false });\n        }\n      });\n  };\n\n  enableLeaveGroup = () => {\n    this.context.FeatureRestriction.isJoinLeaveGroupsEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableLeaveGroup) {\n          this.setState({ enableLeaveGroup: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableLeaveGroup !== false) {\n          this.setState({ enableLeaveGroup: false });\n        }\n      });\n  };\n\n  enableSharedMedia = () => {\n    this.context.FeatureRestriction.isSharedMediaEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableSharedMedia) {\n          this.setState({ enableSharedMedia: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableSharedMedia !== false) {\n          this.setState({ enableSharedMedia: false });\n        }\n      });\n  };\n\n  enableBlockUser = () => {\n    this.context.FeatureRestriction.isBlockUserEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableBlockUser) {\n          this.setState({ enableBlockUser: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableBlockUser !== false) {\n          this.setState({ enableBlockUser: false });\n        }\n      });\n  };\n\n  render() {\n    let avatar, presence;\n    let videoCallClassName = \"option__videocall-user\";\n    let audioCallClassName = \"option__audiocall-user\";\n    let viewDetailClassName = \"option__viewdetail-user\";\n    let chatWithClassName = \"chat__user\";\n    let chatNameClassName = \"user__name\";\n    let chatStatusClassName = \"user__status\";\n\n    if (this.context.type === CometChat.ACTION_TYPE.TYPE_USER) {\n      avatar = <CometChatAvatar user={this.context.item} />;\n      presence = (\n        <CometChatUserPresence\n          status={this.state.presence}\n          borderColor={this.props.theme.borderColor.primary}\n        />\n      );\n    } else if (this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP) {\n      chatWithClassName = \"chat__group\";\n      chatNameClassName = \"group__name\";\n      chatStatusClassName = \"group__members\";\n      videoCallClassName = \"option__videocall-group\";\n      audioCallClassName = \"option__audiocall-group\";\n      viewDetailClassName = \"option__viewdetail-group\";\n      avatar = <CometChatAvatar group={this.context.item} />;\n    }\n\n    let typing = null;\n    if (this.state.typing) {\n      typing = (\n        <span\n          css={chatStatusStyle(this.state, this.context)}\n          className={chatStatusClassName}\n        >\n          {this.state.typing}\n        </span>\n      );\n    }\n\n    let status = (\n      <span\n        css={chatStatusStyle(this.state, this.context)}\n        className={chatStatusClassName}\n      >\n        {this.state.status}\n      </span>\n    );\n\n    const audioCallText = Translator.translate(\"AUDIO_CALL\", this.props.lang);\n    let audioCallBtn = (\n      <div\n        className={audioCallClassName}\n        css={chatOptionStyle(audioCallIcon, this.context, 0)}\n        title={audioCallText}\n        onClick={() =>\n          this.props.actionGenerated(enums.ACTIONS[\"INITIATE_AUDIO_CALL\"])\n        }\n      >\n        <i></i>\n      </div>\n    );\n\n    if (this.context.checkIfCallIsOngoing()) {\n      const audioCallText = Translator.translate(\n        \"YOU_ALREADY_ONGOING_CALL\",\n        this.props.lang\n      );\n      audioCallBtn = (\n        <div\n          className={audioCallClassName}\n          css={chatOptionStyle(audioCallIcon, this.context, 1)}\n          title={audioCallText}\n        >\n          <i></i>\n        </div>\n      );\n    }\n\n    const videoCallText = Translator.translate(\"VIDEO_CALL\", this.props.lang);\n    let videoCallBtn = (\n      <div\n        className={videoCallClassName}\n        css={chatOptionStyle(videoCallIcon, this.context, 0)}\n        title={videoCallText}\n        onClick={() =>\n          this.props.actionGenerated(enums.ACTIONS[\"INITIATE_VIDEO_CALL\"])\n        }\n      >\n        <i></i>\n      </div>\n    );\n\n    if (this.context.checkIfCallIsOngoing()) {\n      const videoCallText = Translator.translate(\n        \"YOU_ALREADY_ONGOING_CALL\",\n        this.props.lang\n      );\n      videoCallBtn = (\n        <div\n          className={videoCallClassName}\n          css={chatOptionStyle(videoCallIcon, this.context, 1)}\n          title={videoCallText}\n        >\n          <i></i>\n        </div>\n      );\n    }\n\n    const viewDetailText = Translator.translate(\"VIEW_DETAIL\", this.props.lang);\n    let viewDetailBtn = (\n      <div\n        className={viewDetailClassName}\n        css={chatOptionStyle(detailPaneIcon, this.context, 0)}\n        title={viewDetailText}\n        onClick={() => this.props.actionGenerated(enums.ACTIONS[\"VIEW_DETAIL\"])}\n      >\n        <i></i>\n      </div>\n    );\n\n    /**\n     * If the chat window open is of users and block user and shared media feature is disabled, hide view detail button\n     */\n    if (this.context.type === CometChat.ACTION_TYPE.TYPE_USER) {\n      if (\n        this.state.enableBlockUser === false &&\n        this.state.enableSharedMedia === false\n      ) {\n        viewDetailBtn = null;\n      }\n    } else if (this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP) {\n      /**\n       * If the chat window open is of group\n       */\n      if (\n        this.context.item?.scope === CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT\n      ) {\n        /**\n         * If the loggedin user scope is participant, leave group, view group members, and shared media feature is disabled, hide view detail button\n         */\n        if (\n          this.state.enableLeaveGroup === false &&\n          this.state.enableSharedMedia === false &&\n          this.state.enableViewGroupMembers === false\n        ) {\n          viewDetailBtn = null;\n        }\n      } else if (\n        this.context.item?.scope === CometChat.GROUP_MEMBER_SCOPE.MODERATOR\n      ) {\n        /**\n         * If the loggedin user scope is moderator, leave group, view group members, kick & ban group members, changing scope of group members and shared media feature is disabled, hide view detail button\n         */\n        if (\n          this.state.enableLeaveGroup === false &&\n          this.state.enableSharedMedia === false &&\n          this.state.enableViewGroupMembers === false &&\n          this.state.enableKickGroupMembers === false &&\n          this.state.enableBanGroupMembers === false &&\n          this.state.enableChangeScope === false\n        ) {\n          viewDetailBtn = null;\n        }\n      } else if (\n        this.context.item?.scope === CometChat.GROUP_MEMBER_SCOPE.ADMIN\n      ) {\n        /**\n         * If the loggedin user scope is admin, add group members, view group members, kick & ban group members, changing scope of group members, leave and delete group and shared media feature is disabled, hide view detail button\n         */\n        if (\n          this.state.enableLeaveGroup === false &&\n          this.state.enableSharedMedia === false &&\n          this.state.enableViewGroupMembers === false &&\n          this.state.enableKickGroupMembers === false &&\n          this.state.enableBanGroupMembers === false &&\n          this.state.enableChangeScope === false &&\n          this.state.enableDeleteGroup === false &&\n          this.state.enableAddGroupMembers === false\n        ) {\n          viewDetailBtn = null;\n        }\n      }\n    }\n\n    //if audiocall feature is disabled\n    if (\n      (this.context.type === CometChat.ACTION_TYPE.TYPE_USER &&\n        this.state.enableOneOnOneVoiceCall === false) ||\n      (this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP &&\n        this.state.enableGroupVoiceCall === false)\n    ) {\n      audioCallBtn = null;\n    }\n\n    //if videocall feature is disabled\n    if (\n      (this.context.type === CometChat.ACTION_TYPE.TYPE_USER &&\n        this.state.enableOneOnOneVideoCall === false) ||\n      (this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP &&\n        this.state.enableGroupVideoCall === false)\n    ) {\n      videoCallBtn = null;\n    }\n\n    //if user presence is disabled in chat widget\n    if (\n      this.state.enableUserPresence === false &&\n      this.context.type === CometChat.ACTION_TYPE.TYPE_USER\n    ) {\n      status = null;\n    }\n\n    return (\n      <div css={chatHeaderStyle(this.context)} className=\"chat__header\">\n        <div css={chatDetailStyle()} className=\"chat__details\">\n          <div\n            css={chatSideBarBtnStyle(menuIcon, this.props, this.context)}\n            className=\"chat__sidebar-menu\"\n            onClick={this.resetChat}\n          ></div>\n          <div css={chatThumbnailStyle()} className=\"chat__thumbnail\">\n            {avatar}\n            {presence}\n          </div>\n          <div css={chatUserStyle(this.context)} className={chatWithClassName}>\n            <h6\n              css={chatNameStyle()}\n              className={chatNameClassName}\n              onMouseEnter={(event) => this.toggleTooltip(event, true)}\n              onMouseLeave={(event) => this.toggleTooltip(event, false)}\n            >\n              {this.context.item.name}\n            </h6>\n            {typing ? typing : status}\n          </div>\n        </div>\n        <div css={chatOptionWrapStyle()} className=\"chat__options\">\n          {videoCallBtn}\n          {audioCallBtn}\n          {viewDetailBtn}\n        </div>\n      </div>\n    );\n  }\n}\n\n// Specifies the default values for props:\nCometChatMessageHeader.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  item: {},\n  type: \"\",\n};\n\nCometChatMessageHeader.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  item: PropTypes.object,\n  type: PropTypes.string,\n};\n\nexport { CometChatMessageHeader };\n"]},"metadata":{},"sourceType":"module"}