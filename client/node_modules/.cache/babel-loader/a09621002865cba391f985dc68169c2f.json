{"ast":null,"code":"import { CometChat } from \"@cometchat-pro/chat\";\nimport * as enums from \"../../../util/enums.js\";\nexport class GroupDetailManager {\n  constructor(guid) {\n    this.guid = null;\n    this.groupMemberRequest = null;\n    this.bannedGroupMemberRequest = null;\n    this.userListenerId = \"group_detail_user_\" + new Date().getTime();\n    this.groupListenerId = \"group_detail_group_\" + new Date().getTime();\n    this.guid = guid;\n    this.groupMemberRequest = new CometChat.GroupMembersRequestBuilder(guid).setLimit(10).build();\n    this.bannedGroupMemberRequest = new CometChat.BannedMembersRequestBuilder(guid).setLimit(10).build();\n  }\n\n  fetchNextGroupMembers() {\n    return this.groupMemberRequest.fetchNext();\n  }\n\n  fetchNextBannedGroupMembers() {\n    return this.bannedGroupMemberRequest.fetchNext();\n  }\n\n  attachListeners(callback) {\n    CometChat.addGroupListener(this.groupListenerId, new CometChat.GroupListener({\n      onGroupMemberScopeChanged: (message, changedUser, newScope, oldScope, changedGroup) => {\n        callback(enums.GROUP_MEMBER_SCOPE_CHANGED, message, changedGroup, {\n          \"user\": changedUser,\n          \"scope\": newScope\n        });\n      },\n      onGroupMemberKicked: (message, kickedUser, kickedBy, kickedFrom) => {\n        callback(enums.GROUP_MEMBER_KICKED, message, kickedFrom, {\n          \"user\": kickedUser,\n          \"hasJoined\": false\n        });\n      },\n      onGroupMemberBanned: (message, bannedUser, bannedBy, bannedFrom) => {\n        callback(enums.GROUP_MEMBER_BANNED, message, bannedFrom, {\n          \"user\": bannedUser\n        });\n      },\n      onGroupMemberUnbanned: (message, unbannedUser, unbannedBy, unbannedFrom) => {\n        callback(enums.GROUP_MEMBER_UNBANNED, message, unbannedFrom, {\n          \"user\": unbannedUser,\n          \"hasJoined\": false\n        });\n      },\n      onMemberAddedToGroup: (message, userAdded, userAddedBy, userAddedIn) => {\n        callback(enums.GROUP_MEMBER_ADDED, message, userAddedIn, {\n          \"user\": userAdded,\n          \"hasJoined\": true\n        });\n      },\n      onGroupMemberLeft: (message, leavingUser, group) => {\n        callback(enums.GROUP_MEMBER_LEFT, message, group, {\n          \"user\": leavingUser\n        });\n      },\n      onGroupMemberJoined: (message, joinedUser, joinedGroup) => {\n        callback(enums.GROUP_MEMBER_JOINED, message, joinedGroup, {\n          \"user\": joinedUser\n        });\n      }\n    }));\n    CometChat.addUserListener(this.userListenerId, new CometChat.UserListener({\n      onUserOnline: onlineUser => {\n        /* when someuser/friend comes online, user will be received here */\n        callback(enums.USER_ONLINE, null, {\n          guid: this.guid\n        }, {\n          \"user\": onlineUser\n        });\n      },\n      onUserOffline: offlineUser => {\n        /* when someuser/friend went offline, user will be received here */\n        callback(enums.USER_OFFLINE, null, {\n          guid: this.guid\n        }, {\n          \"user\": offlineUser\n        });\n      }\n    }));\n  }\n\n  removeListeners() {\n    CometChat.removeUserListener(this.userListenerId);\n    CometChat.removeGroupListener(this.groupListenerId);\n  }\n\n}","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Groups/CometChatGroupDetails/controller.js"],"names":["CometChat","enums","GroupDetailManager","constructor","guid","groupMemberRequest","bannedGroupMemberRequest","userListenerId","Date","getTime","groupListenerId","GroupMembersRequestBuilder","setLimit","build","BannedMembersRequestBuilder","fetchNextGroupMembers","fetchNext","fetchNextBannedGroupMembers","attachListeners","callback","addGroupListener","GroupListener","onGroupMemberScopeChanged","message","changedUser","newScope","oldScope","changedGroup","GROUP_MEMBER_SCOPE_CHANGED","onGroupMemberKicked","kickedUser","kickedBy","kickedFrom","GROUP_MEMBER_KICKED","onGroupMemberBanned","bannedUser","bannedBy","bannedFrom","GROUP_MEMBER_BANNED","onGroupMemberUnbanned","unbannedUser","unbannedBy","unbannedFrom","GROUP_MEMBER_UNBANNED","onMemberAddedToGroup","userAdded","userAddedBy","userAddedIn","GROUP_MEMBER_ADDED","onGroupMemberLeft","leavingUser","group","GROUP_MEMBER_LEFT","onGroupMemberJoined","joinedUser","joinedGroup","GROUP_MEMBER_JOINED","addUserListener","UserListener","onUserOnline","onlineUser","USER_ONLINE","onUserOffline","offlineUser","USER_OFFLINE","removeListeners","removeUserListener","removeGroupListener"],"mappings":"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","sourcesContent":["import { CometChat } from \"@cometchat-pro/chat\";\n\nimport * as enums from \"../../../util/enums.js\";\n\nexport class GroupDetailManager {\n\n    guid = null;\n    groupMemberRequest = null;\n    bannedGroupMemberRequest = null;\n\n    userListenerId = \"group_detail_user_\" + new Date().getTime();\n    groupListenerId = \"group_detail_group_\" + new Date().getTime();\n\n    constructor(guid) {\n        this.guid = guid;\n        this.groupMemberRequest = new CometChat.GroupMembersRequestBuilder(guid).setLimit(10).build();\n        this.bannedGroupMemberRequest = new CometChat.BannedMembersRequestBuilder(guid).setLimit(10).build();\n    }\n\n    fetchNextGroupMembers() {\n        return this.groupMemberRequest.fetchNext();\n    }\n\n    fetchNextBannedGroupMembers() {\n        return this.bannedGroupMemberRequest.fetchNext();\n    }\n\n    attachListeners(callback) {\n\n        CometChat.addGroupListener(\n            this.groupListenerId,\n            new CometChat.GroupListener({\n                onGroupMemberScopeChanged: (message, changedUser, newScope, oldScope, changedGroup) => {\n                    callback(enums.GROUP_MEMBER_SCOPE_CHANGED, message, changedGroup, {\"user\": changedUser, \"scope\": newScope});\n                }, \n                onGroupMemberKicked: (message, kickedUser, kickedBy, kickedFrom) => {\n                    callback(enums.GROUP_MEMBER_KICKED, message, kickedFrom, {\"user\": kickedUser, \"hasJoined\": false});\n                }, \n                onGroupMemberBanned: (message, bannedUser, bannedBy, bannedFrom) => {\n                    callback(enums.GROUP_MEMBER_BANNED, message, bannedFrom, {\"user\": bannedUser});\n                }, \n                onGroupMemberUnbanned: (message, unbannedUser, unbannedBy, unbannedFrom) => {\n                    callback(enums.GROUP_MEMBER_UNBANNED, message, unbannedFrom, {\"user\": unbannedUser, \"hasJoined\": false});\n                }, \n                onMemberAddedToGroup: (message, userAdded, userAddedBy, userAddedIn) => {\n                    callback(enums.GROUP_MEMBER_ADDED, message, userAddedIn, {\"user\": userAdded, \"hasJoined\": true});\n                }, \n                onGroupMemberLeft: (message, leavingUser, group) => {\n                    callback(enums.GROUP_MEMBER_LEFT, message, group, {\"user\": leavingUser});\n                }, \n                onGroupMemberJoined: (message, joinedUser, joinedGroup) => {\n                    callback(enums.GROUP_MEMBER_JOINED, message, joinedGroup, {\"user\": joinedUser});\n                }\n            })\n        );\n\n        CometChat.addUserListener(\n            this.userListenerId,\n            new CometChat.UserListener({\n                onUserOnline: onlineUser => {\n                    /* when someuser/friend comes online, user will be received here */\n                    callback(enums.USER_ONLINE, null, {guid: this.guid}, {\"user\": onlineUser});\n                },\n                onUserOffline: offlineUser => {\n                    /* when someuser/friend went offline, user will be received here */\n                    callback(enums.USER_OFFLINE, null, {guid: this.guid}, {\"user\": offlineUser});\n                }\n            })\n        );\n    }\n\n    removeListeners() {\n\n        CometChat.removeUserListener(this.userListenerId);\n        CometChat.removeGroupListener(this.groupListenerId);\n    }\n}"]},"metadata":{},"sourceType":"module"}