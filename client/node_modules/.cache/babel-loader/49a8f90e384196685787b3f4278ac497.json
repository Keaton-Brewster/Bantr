{"ast":null,"code":"import _extends from \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatSenderTextMessageBubble/index.js\";\nimport React from \"react\";\nimport twemoji from \"twemoji\";\nimport ReactHtmlParser from \"react-html-parser\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatMessageActions, CometChatThreadedMessageReplyCount, CometChatReadReceipt, CometChatLinkPreview } from \"../\";\nimport { CometChatMessageReactions } from \"../Extensions\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport { linkify, checkMessageForExtensionsData } from \"../../../util/common\";\nimport * as enums from \"../../../util/enums.js\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { theme } from \"../../../resources/theme\";\nimport { messageContainerStyle, messageWrapperStyle, messageTxtWrapperStyle, messageTxtStyle, messageInfoWrapperStyle, messageReactionsWrapperStyle } from \"./style\";\n\nclass CometChatSenderTextMessageBubble extends React.Component {\n  constructor(props) {\n    super(props);\n    this.messageFrom = \"sender\";\n\n    this.getMessageText = () => {\n      let messageText = this.state.message.text; //xss extensions data\n\n      const xssData = checkMessageForExtensionsData(this.state.message, \"xss-filter\");\n\n      if (xssData && xssData.hasOwnProperty(\"sanitized_text\") && xssData.hasOwnProperty(\"hasXSS\") && xssData.hasXSS === \"yes\") {\n        messageText = xssData.sanitized_text;\n      } //datamasking extensions data\n\n\n      const maskedData = checkMessageForExtensionsData(this.state.message, \"data-masking\");\n\n      if (maskedData && maskedData.hasOwnProperty(\"data\") && maskedData.data.hasOwnProperty(\"sensitive_data\") && maskedData.data.hasOwnProperty(\"message_masked\") && maskedData.data.sensitive_data === \"yes\") {\n        messageText = maskedData.data.message_masked;\n      } //profanity extensions data\n\n\n      const profaneData = checkMessageForExtensionsData(this.state.message, \"profanity-filter\");\n\n      if (profaneData && profaneData.hasOwnProperty(\"profanity\") && profaneData.hasOwnProperty(\"message_clean\") && profaneData.profanity === \"yes\") {\n        messageText = profaneData.message_clean;\n      }\n\n      const formattedText = linkify(messageText);\n      const emojiParsedMessage = twemoji.parse(formattedText, {\n        folder: \"svg\",\n        ext: \".svg\"\n      });\n      const parsedMessage = ReactHtmlParser(emojiParsedMessage, {\n        decodeEntities: false\n      });\n      const emojiMessage = parsedMessage.filter(message => message instanceof Object && message.type === \"img\");\n      let showVariation = true; //if larger size emojis feature is disabled\n\n      if (this.state.enableLargerSizeEmojis === false) {\n        showVariation = false;\n      }\n\n      messageText = jsx(\"div\", {\n        css: messageTxtWrapperStyle(this.context),\n        className: \"message__txt__wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 4\n        }\n      }, jsx(\"p\", {\n        css: messageTxtStyle(this.props, parsedMessage, emojiMessage, showVariation),\n        className: \"message__txt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 5\n        }\n      }, parsedMessage, this.state.translatedMessage));\n      return messageText;\n    };\n\n    this.translateMessage = message => {\n      const messageId = message.id;\n      const messageText = message.text;\n      const browserLanguageCode = Translator.getBrowserLanguage().toLowerCase();\n      let translateToLanguage = browserLanguageCode;\n\n      if (browserLanguageCode.indexOf(\"-\") !== -1) {\n        const browserLanguageArray = browserLanguageCode.split(\"-\");\n        translateToLanguage = browserLanguageArray[0];\n      }\n\n      let translatedMessage = \"\";\n      CometChat.callExtension(\"message-translation\", \"POST\", \"v2/translate\", {\n        msgId: messageId,\n        text: messageText,\n        languages: [translateToLanguage]\n      }).then(result => {\n        if (result.hasOwnProperty(\"language_original\") && result[\"language_original\"] !== translateToLanguage) {\n          if (result.hasOwnProperty(\"translations\") && result.translations.length) {\n            const messageTranslation = result.translations[0];\n\n            if (messageTranslation.hasOwnProperty(\"message_translated\")) {\n              translatedMessage = `\\n(${messageTranslation[\"message_translated\"]})`;\n            }\n          } else {\n            this.props.actionGenerated(enums.ACTIONS[\"ERROR\"], [], \"SOMETHING_WRONG\");\n          }\n        } else {\n          this.props.actionGenerated(enums.ACTIONS[\"INFO\"], [], \"SAME_LANGUAGE_MESSAGE\");\n        }\n\n        this.setState({\n          translatedMessage: translatedMessage\n        });\n      }).catch(error => this.props.actionGenerated(enums.ACTIONS[\"ERROR\"], [], \"SOMETHING_WRONG\"));\n    };\n\n    this.enableLargerSizeEmojis = () => {\n      this.context.FeatureRestriction.isLargerSizeEmojisEnabled().then(response => {\n        if (response !== this.state.enableLargerSizeEmojis) {\n          this.setState({\n            enableLargerSizeEmojis: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableLargerSizeEmojis !== false) {\n          this.setState({\n            enableLargerSizeEmojis: false\n          });\n        }\n      });\n    };\n\n    this.handleMouseHover = () => {\n      this.setState(this.toggleHoverState);\n    };\n\n    this.toggleHoverState = state => {\n      return {\n        isHovering: !state.isHovering\n      };\n    };\n\n    this.messageTextRef = /*#__PURE__*/React.createRef();\n\n    const _message = Object.assign({}, props.message, {\n      messageFrom: this.messageFrom\n    });\n\n    this.state = {\n      message: _message,\n      translatedMessage: \"\",\n      isHovering: false,\n      enableLargerSizeEmojis: false\n    };\n  }\n\n  componentDidMount() {\n    this.enableLargerSizeEmojis();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.message !== this.props.message) {\n      const message = Object.assign({}, this.props.message, {\n        messageFrom: this.messageFrom\n      });\n      this.setState({\n        message: message,\n        translatedMessage: \"\"\n      });\n    }\n\n    this.enableLargerSizeEmojis();\n  }\n\n  render() {\n    let messageText = this.getMessageText(); //linkpreview extensions data\n\n    const linkPreviewData = checkMessageForExtensionsData(this.state.message, \"link-preview\");\n\n    if (linkPreviewData && linkPreviewData.hasOwnProperty(\"links\") && linkPreviewData[\"links\"].length) {\n      messageText = jsx(CometChatLinkPreview, _extends({}, this.props, {\n        message: this.state.message,\n        messageText: messageText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 5\n        }\n      }));\n    } //messagereactions extensions data\n\n\n    let messageReactions = null;\n    const reactionsData = checkMessageForExtensionsData(this.state.message, \"reactions\");\n\n    if (reactionsData) {\n      if (Object.keys(reactionsData).length) {\n        messageReactions = jsx(\"div\", {\n          css: messageReactionsWrapperStyle(),\n          className: \"message__reaction__wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 6\n          }\n        }, jsx(CometChatMessageReactions, _extends({}, this.props, {\n          message: this.state.message,\n          reaction: reactionsData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 7\n          }\n        })));\n      }\n    }\n\n    let toolTipView = null;\n\n    if (this.state.isHovering) {\n      toolTipView = jsx(CometChatMessageActions, _extends({}, this.props, {\n        message: this.state.message,\n        translateMessage: this.translateMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 19\n        }\n      }));\n    }\n\n    return jsx(\"div\", {\n      css: messageContainerStyle(),\n      className: \"sender__message__container message__text\",\n      onMouseEnter: this.handleMouseHover,\n      onMouseLeave: this.handleMouseHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 4\n      }\n    }, toolTipView, jsx(\"div\", {\n      css: messageWrapperStyle(),\n      className: \"message__wrapper\",\n      ref: this.messageTextRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 5\n      }\n    }, messageText), messageReactions, jsx(\"div\", {\n      css: messageInfoWrapperStyle(),\n      className: \"message__info__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 5\n      }\n    }, jsx(CometChatThreadedMessageReplyCount, _extends({}, this.props, {\n      message: { ...this.state.message\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 6\n      }\n    })), jsx(CometChatReadReceipt, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 6\n      }\n    }))));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatSenderTextMessageBubble.contextType = CometChatContext;\nCometChatSenderTextMessageBubble.defaultProps = {\n  theme: theme\n};\nCometChatSenderTextMessageBubble.propTypes = {\n  theme: PropTypes.object\n};\nexport { CometChatSenderTextMessageBubble };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatSenderTextMessageBubble/index.js"],"names":["React","twemoji","ReactHtmlParser","jsx","PropTypes","CometChat","CometChatMessageActions","CometChatThreadedMessageReplyCount","CometChatReadReceipt","CometChatLinkPreview","CometChatMessageReactions","CometChatContext","linkify","checkMessageForExtensionsData","enums","Translator","theme","messageContainerStyle","messageWrapperStyle","messageTxtWrapperStyle","messageTxtStyle","messageInfoWrapperStyle","messageReactionsWrapperStyle","CometChatSenderTextMessageBubble","Component","constructor","props","messageFrom","getMessageText","messageText","state","message","text","xssData","hasOwnProperty","hasXSS","sanitized_text","maskedData","data","sensitive_data","message_masked","profaneData","profanity","message_clean","formattedText","emojiParsedMessage","parse","folder","ext","parsedMessage","decodeEntities","emojiMessage","filter","Object","type","showVariation","enableLargerSizeEmojis","context","translatedMessage","translateMessage","messageId","id","browserLanguageCode","getBrowserLanguage","toLowerCase","translateToLanguage","indexOf","browserLanguageArray","split","callExtension","msgId","languages","then","result","translations","length","messageTranslation","actionGenerated","ACTIONS","setState","catch","error","FeatureRestriction","isLargerSizeEmojisEnabled","response","handleMouseHover","toggleHoverState","isHovering","messageTextRef","createRef","assign","componentDidMount","componentDidUpdate","prevProps","render","linkPreviewData","messageReactions","reactionsData","keys","toolTipView","contextType","defaultProps","propTypes","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport twemoji from \"twemoji\";\nimport ReactHtmlParser from \"react-html-parser\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\n\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { CometChatMessageActions, CometChatThreadedMessageReplyCount, CometChatReadReceipt, CometChatLinkPreview } from \"../\";\nimport { CometChatMessageReactions } from \"../Extensions\";\n\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport { linkify, checkMessageForExtensionsData } from \"../../../util/common\";\nimport * as enums from \"../../../util/enums.js\";\n\nimport Translator from \"../../../resources/localization/translator\";\nimport { theme } from \"../../../resources/theme\";\n\nimport {\n\tmessageContainerStyle,\n\tmessageWrapperStyle,\n\tmessageTxtWrapperStyle,\n\tmessageTxtStyle,\n\tmessageInfoWrapperStyle,\n\tmessageReactionsWrapperStyle,\n} from \"./style\";\n\nclass CometChatSenderTextMessageBubble extends React.Component {\n\n\tstatic contextType = CometChatContext;\n\tmessageFrom = \"sender\";\n\n\tconstructor(props) {\n\n\t\tsuper(props);\n\n\t\tthis.messageTextRef = React.createRef();\n\n\t\tconst message = Object.assign({}, props.message, { messageFrom: this.messageFrom });\n\n\t\tthis.state = {\n\t\t\tmessage: message,\n\t\t\ttranslatedMessage: \"\",\n\t\t\tisHovering: false,\n\t\t\tenableLargerSizeEmojis: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.enableLargerSizeEmojis();\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\n\t\tif (prevProps.message !== this.props.message) {\n\t\t\tconst message = Object.assign({}, this.props.message, { messageFrom: this.messageFrom });\n\t\t\tthis.setState({ message: message, translatedMessage: \"\" })\n\t\t}\n\n\t\tthis.enableLargerSizeEmojis();\n\t}\n\n\tgetMessageText = () => {\n\n\t\tlet messageText = this.state.message.text;\n\t\t\n\t\t//xss extensions data\n\t\tconst xssData = checkMessageForExtensionsData(this.state.message, \"xss-filter\");\n\t\tif (xssData \n\t\t&& xssData.hasOwnProperty(\"sanitized_text\") \n\t\t&& xssData.hasOwnProperty(\"hasXSS\")\n\t\t&& xssData.hasXSS === \"yes\") {\n\t\t\tmessageText = xssData.sanitized_text;\n\t\t}\n\t\t\n\t\t//datamasking extensions data\n\t\tconst maskedData = checkMessageForExtensionsData(this.state.message, \"data-masking\");\n\t\tif (maskedData \n\t\t&& maskedData.hasOwnProperty(\"data\") \n\t\t&& maskedData.data.hasOwnProperty(\"sensitive_data\") \n\t\t&& maskedData.data.hasOwnProperty(\"message_masked\") \n\t\t&& maskedData.data.sensitive_data === \"yes\") {\n\t\t\tmessageText = maskedData.data.message_masked;\n\t\t}\n\t \n\t\t//profanity extensions data\n\t\tconst profaneData = checkMessageForExtensionsData(this.state.message, \"profanity-filter\");\n\t\tif (profaneData \n\t\t\t&& profaneData.hasOwnProperty(\"profanity\") \n\t\t\t&& profaneData.hasOwnProperty(\"message_clean\")\n\t\t\t&& profaneData.profanity === \"yes\") {\n\t\t\tmessageText = profaneData.message_clean;\n\t\t}\n\t\t\n\t\tconst formattedText = linkify(messageText);\n\t\t\n\t\tconst emojiParsedMessage = twemoji.parse(formattedText, { folder: \"svg\", ext: \".svg\" });\n\t\tconst parsedMessage = ReactHtmlParser(emojiParsedMessage, { decodeEntities: false });\n\t\tconst emojiMessage = parsedMessage.filter(message => (message instanceof Object && message.type === \"img\"));\n\t\t\n\t\tlet showVariation = true;\n\t\t//if larger size emojis feature is disabled\n\t\tif (this.state.enableLargerSizeEmojis === false) {\n\t\t\tshowVariation = false;\n\t\t}\n\n\t\tmessageText = (\n\t\t\t<div css={messageTxtWrapperStyle(this.context)} className=\"message__txt__wrapper\">\n\t\t\t\t<p css={messageTxtStyle(this.props, parsedMessage, emojiMessage, showVariation)} className=\"message__txt\">{parsedMessage}{this.state.translatedMessage}</p>\n\t\t\t</div>\n\t\t);\n\n\t\treturn messageText;\n\t}\n\n\ttranslateMessage = (message) => {\n\n\t\tconst messageId = message.id;\n\t\tconst messageText = message.text;\n\n\t\tconst browserLanguageCode = Translator.getBrowserLanguage().toLowerCase();\n\t\tlet translateToLanguage = browserLanguageCode;\n\t\tif(browserLanguageCode.indexOf(\"-\") !== -1) {\n\t\t\tconst browserLanguageArray = browserLanguageCode.split(\"-\");\n\t\t\ttranslateToLanguage = browserLanguageArray[0];\n\t\t}\n\n\t\tlet translatedMessage = \"\";\n\t\tCometChat.callExtension(\"message-translation\", \"POST\", \"v2/translate\", {\n\t\t\tmsgId: messageId,\n\t\t\ttext: messageText,\n\t\t\tlanguages: [translateToLanguage],\n\t\t})\n\t\t\t.then(result => {\n\t\t\t\tif (result.hasOwnProperty(\"language_original\") && result[\"language_original\"] !== translateToLanguage) {\n\t\t\t\t\tif (result.hasOwnProperty(\"translations\") && result.translations.length) {\n\t\t\t\t\t\tconst messageTranslation = result.translations[0];\n\t\t\t\t\t\tif (messageTranslation.hasOwnProperty(\"message_translated\")) {\n\t\t\t\t\t\t\ttranslatedMessage = `\\n(${messageTranslation[\"message_translated\"]})`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"ERROR\"], [], \"SOMETHING_WRONG\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"INFO\"], [], \"SAME_LANGUAGE_MESSAGE\");\n\t\t\t\t}\n\n\t\t\t\tthis.setState({ translatedMessage: translatedMessage });\n\t\t\t})\n\t\t\t.catch(error => this.props.actionGenerated(enums.ACTIONS[\"ERROR\"], [], \"SOMETHING_WRONG\"));\n\t}\n\n\tenableLargerSizeEmojis = () => {\n\n\t\tthis.context.FeatureRestriction.isLargerSizeEmojisEnabled()\n\t\t\t.then(response => {\n\t\t\t\tif (response !== this.state.enableLargerSizeEmojis) {\n\t\t\t\t\tthis.setState({enableLargerSizeEmojis: response});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tif (this.state.enableLargerSizeEmojis !== false) {\n\t\t\t\t\tthis.setState({enableLargerSizeEmojis: false});\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\thandleMouseHover = () => {\n\t\tthis.setState(this.toggleHoverState);\n\t}\n\n\ttoggleHoverState = (state) => {\n\n\t\treturn {\n\t\t\tisHovering: !state.isHovering,\n\t\t};\n\t}\n\n\trender() {\n\n\t\tlet messageText = this.getMessageText();\n\t\t\n\t\t//linkpreview extensions data\n\t\tconst linkPreviewData = checkMessageForExtensionsData(this.state.message, \"link-preview\");\n\t\tif (linkPreviewData && linkPreviewData.hasOwnProperty(\"links\") && linkPreviewData[\"links\"].length) {\n\n\t\t\tmessageText = (\n\t\t\t\t<CometChatLinkPreview {...this.props} message={this.state.message} messageText={messageText} />\n\t\t\t);\n\t\t}\n\n\t\t//messagereactions extensions data\n\t\tlet messageReactions = null;\n\t\tconst reactionsData = checkMessageForExtensionsData(this.state.message, \"reactions\");\n\t\tif (reactionsData) {\n\n\t\t\tif (Object.keys(reactionsData).length) {\n\t\t\t\tmessageReactions = (\n\t\t\t\t\t<div css={messageReactionsWrapperStyle()} className=\"message__reaction__wrapper\">\n\t\t\t\t\t\t<CometChatMessageReactions  {...this.props} message={this.state.message} reaction={reactionsData} />\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tlet toolTipView = null;\n\t\tif (this.state.isHovering) {\n\t\t\ttoolTipView = (<CometChatMessageActions {...this.props} message={this.state.message} translateMessage={this.translateMessage} />);\n\t\t}\n\n\t\treturn (\n\t\t\t<div \n\t\t\tcss={messageContainerStyle()} \n\t\t\tclassName=\"sender__message__container message__text\"\n\t\t\tonMouseEnter={this.handleMouseHover}\n\t\t\tonMouseLeave={this.handleMouseHover}>\n\t\t\t\t\n\t\t\t\t{toolTipView}\n\t\t\t\t<div css={messageWrapperStyle()} className=\"message__wrapper\" ref={this.messageTextRef}>{messageText}</div>\n\t\t\t\t\n\t\t\t\t{messageReactions}\n\n\t\t\t\t<div css={messageInfoWrapperStyle()} className=\"message__info__wrapper\">\n\t\t\t\t\t<CometChatThreadedMessageReplyCount {...this.props} message={{...this.state.message}} />\n\t\t\t\t\t<CometChatReadReceipt {...this.props} message={this.state.message} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// Specifies the default values for props:\nCometChatSenderTextMessageBubble.defaultProps = {\n\ttheme: theme\n};\n\nCometChatSenderTextMessageBubble.propTypes = {\n\ttheme: PropTypes.object\n}\n\nexport { CometChatSenderTextMessageBubble };"]},"metadata":{},"sourceType":"module"}