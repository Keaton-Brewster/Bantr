{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nconst PREFIX = \"CHAT_v1.0.0-\";\nexport default function useLocalStorage(key, initialValue) {\n  _s();\n\n  const prefixedKey = PREFIX + key;\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey); // Within this if statement, we can also take the users information if they previously used the app, and sign them in\n    // Just don't save passwords to the local storage!\n\n    if (jsonValue !== null) return JSON.parse(jsonValue);\n\n    if (typeof initialValue === \"function\") {\n      return initialValue();\n    } else {\n      return initialValue;\n    }\n  });\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\n  }, [prefixedKey, value]);\n  return [value, setValue];\n}\n\n_s(useLocalStorage, \"hBC+yhDR3WTTF06l7r2RIxxFJQY=\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/utils/useLocalStorage.js"],"names":["useEffect","useState","PREFIX","useLocalStorage","key","initialValue","prefixedKey","value","setValue","jsonValue","localStorage","getItem","JSON","parse","setItem","stringify"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,MAAM,GAAG,cAAf;AAEA,eAAe,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,YAA9B,EAA4C;AAAA;;AACzD,QAAMC,WAAW,GAAGJ,MAAM,GAAGE,GAA7B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,MAAM;AACvC,UAAMQ,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqBL,WAArB,CAAlB,CADuC,CAEvC;AACA;;AACA,QAAIG,SAAS,KAAK,IAAlB,EAAwB,OAAOG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAP;;AACxB,QAAI,OAAOJ,YAAP,KAAwB,UAA5B,EAAwC;AACtC,aAAOA,YAAY,EAAnB;AACD,KAFD,MAEO;AACL,aAAOA,YAAP;AACD;AACF,GAViC,CAAlC;AAYAL,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,YAAY,CAACI,OAAb,CAAqBR,WAArB,EAAkCM,IAAI,CAACG,SAAL,CAAeR,KAAf,CAAlC;AACD,GAFQ,EAEN,CAACD,WAAD,EAAcC,KAAd,CAFM,CAAT;AAIA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACD;;GAnBuBL,e","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst PREFIX = \"CHAT_v1.0.0-\";\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key;\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey);\n    // Within this if statement, we can also take the users information if they previously used the app, and sign them in\n    // Just don't save passwords to the local storage!\n    if (jsonValue !== null) return JSON.parse(jsonValue);\n    if (typeof initialValue === \"function\") {\n      return initialValue();\n    } else {\n      return initialValue;\n    }\n  });\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\n  }, [prefixedKey, value]);\n\n  return [value, setValue];\n}\n"]},"metadata":{},"sourceType":"module"}