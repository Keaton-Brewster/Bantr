{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Groups/CometChatViewGroupMemberListItem/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatAvatar, CometChatUserPresence } from \"../../Shared\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { modalRowStyle, nameColumnStyle, avatarStyle, nameStyle, roleStyle, scopeColumnStyle, scopeIconStyle, actionColumnStyle, banIconStyle, kickIconStyle, scopeWrapperStyle, scopeSelectionStyle } from \"./style\";\nimport scopeIcon from \"./resources/edit.svg\";\nimport doneIcon from \"./resources/done.svg\";\nimport clearIcon from \"./resources/close.svg\";\nimport banIcon from \"./resources/ban-member.svg\";\nimport kickIcon from \"./resources/delete.svg\";\n\nclass CometChatViewGroupMemberListItem extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.toggleChangeScope = flag => {\n      this.setState({\n        showChangeScope: flag\n      });\n    };\n\n    this.scopeChangeHandler = event => {\n      this.setState({\n        scope: event.target.value\n      });\n    };\n\n    this.updateMemberScope = () => {\n      this.props.actionGenerated(enums.ACTIONS[\"CHANGE_SCOPE_GROUP_MEMBER\"], this.props.member, this.state.scope);\n      this.toggleChangeScope();\n    };\n\n    this.toggleTooltip = (event, flag) => {\n      const elem = event.currentTarget;\n\n      if (elem.classList.contains(\"name\")) {\n        const scrollWidth = elem.scrollWidth;\n        const clientWidth = elem.clientWidth;\n\n        if (scrollWidth <= clientWidth) {\n          return false;\n        }\n      }\n\n      if (flag) {\n        elem.setAttribute(\"title\", this.props.member.name);\n      } else {\n        elem.removeAttribute(\"title\");\n      }\n    };\n\n    this.changeScopeDropDown = jsx(\"select\", {\n      className: \"members-scope-select\",\n      onChange: this.scopeChangeHandler,\n      defaultValue: this.props.member.scope,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    });\n    this.state = {\n      showChangeScope: false,\n      scope: null\n    };\n    this.roles = context.roles;\n  }\n\n  render() {\n    let editClassName = \"\";\n    let name = this.props.member.name;\n    let scope = jsx(\"span\", {\n      css: roleStyle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, this.roles[this.props.member.scope]);\n    let changescope = null;\n    let ban = jsx(\"i\", {\n      css: banIconStyle(banIcon, this.context),\n      title: Translator.translate(\"BAN\", this.props.lang),\n      onClick: () => {\n        this.props.actionGenerated(enums.ACTIONS[\"BAN_GROUP_MEMBER\"], this.props.member);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    });\n    let kick = jsx(\"i\", {\n      css: kickIconStyle(kickIcon, this.context),\n      title: Translator.translate(\"KICK\", this.props.lang),\n      onClick: () => {\n        this.props.actionGenerated(enums.ACTIONS[\"KICK_GROUP_MEMBER\"], this.props.member);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    });\n\n    if (this.state.showChangeScope) {\n      let options = jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, jsx(\"option\", {\n        value: CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, this.roles[CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT]), jsx(\"option\", {\n        value: CometChat.GROUP_MEMBER_SCOPE.MODERATOR,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }, this.roles[CometChat.GROUP_MEMBER_SCOPE.MODERATOR]), jsx(\"option\", {\n        value: CometChat.GROUP_MEMBER_SCOPE.ADMIN,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }, this.roles[CometChat.GROUP_MEMBER_SCOPE.ADMIN]));\n\n      if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.MODERATOR && this.props.member.scope === CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT) {\n        options = jsx(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }\n        }, jsx(\"option\", {\n          value: CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }\n        }, this.roles[CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT]), jsx(\"option\", {\n          value: CometChat.GROUP_MEMBER_SCOPE.MODERATOR,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }\n        }, this.roles[CometChat.GROUP_MEMBER_SCOPE.MODERATOR]));\n      }\n\n      changescope = jsx(\"div\", {\n        css: scopeWrapperStyle(),\n        className: \"scope__wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }\n      }, jsx(\"select\", {\n        css: scopeSelectionStyle(),\n        className: \"scope__select\",\n        onChange: this.scopeChangeHandler,\n        defaultValue: this.props.member.scope,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }\n      }, options), jsx(\"i\", {\n        css: scopeIconStyle(doneIcon, this.context),\n        title: Translator.translate(\"CHANGE_SCOPE\", this.props.lang),\n        onClick: this.updateMemberScope,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }\n      }), jsx(\"i\", {\n        css: scopeIconStyle(clearIcon, this.context),\n        title: Translator.translate(\"CHANGE_SCOPE\", this.props.lang),\n        onClick: () => this.toggleChangeScope(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT) {\n        changescope = scope;\n      } else {\n        changescope = jsx(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 11\n          }\n        }, scope, jsx(\"i\", {\n          css: scopeIconStyle(scopeIcon, this.context),\n          title: Translator.translate(\"CHANGE_SCOPE\", this.props.lang),\n          onClick: () => this.toggleChangeScope(true),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }\n        }));\n      }\n    } //disable change scope, kick, ban of group owner\n\n\n    if (this.context.item.owner === this.props.member.uid) {\n      scope = jsx(\"span\", {\n        css: roleStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }\n      }, Translator.translate(\"OWNER\", this.props.lang));\n      changescope = scope;\n      ban = null;\n      kick = null;\n    } //disable change scope, kick, ban of self\n\n\n    if (this.props.loggedinuser.uid === this.props.member.uid) {\n      name = Translator.translate(\"YOU\", this.props.lang);\n      changescope = scope;\n      ban = null;\n      kick = null;\n    } //if the loggedin user is moderator, don't allow to change scope, ban, kick group moderators or administrators\n\n\n    if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.MODERATOR && (this.props.member.scope === CometChat.GROUP_MEMBER_SCOPE.ADMIN || this.props.member.scope === CometChat.GROUP_MEMBER_SCOPE.MODERATOR)) {\n      changescope = scope;\n      ban = null;\n      kick = null;\n    } //if the loggedin user is administrator but not group owner, don't allow to change scope, ban, kick group administrators\n\n\n    if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.ADMIN && this.context.item.owner !== this.props.loggedinuser.uid && this.props.member.scope === CometChat.GROUP_MEMBER_SCOPE.ADMIN) {\n      changescope = scope;\n      ban = null;\n      kick = null;\n    }\n\n    let editAccess = null; //if the loggedin user is participant, don't show the option to change scope, ban, or kick group members\n\n    if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT) {\n      editAccess = null;\n      editClassName = \"true\";\n    } else {\n      editAccess = jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 9\n        }\n      }, jsx(\"div\", {\n        css: actionColumnStyle(this.context),\n        className: \"ban\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }\n      }, ban), jsx(\"div\", {\n        css: actionColumnStyle(this.context),\n        className: \"kick\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }\n      }, kick));\n      /**\n       * if kick and ban feature is disabled\n       */\n\n      if (this.props.enableBanGroupMembers === false && this.props.enableKickGroupMembers === false) {\n        editAccess = null;\n      } else if (this.props.enableBanGroupMembers === false) {\n        //if ban feature is disabled\n        editAccess = jsx(\"div\", {\n          css: actionColumnStyle(this.context),\n          className: \"kick\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 11\n          }\n        }, kick);\n      } else if (this.props.enableKickGroupMembers === false) {\n        //if kick feature is disabled\n        editAccess = jsx(\"div\", {\n          css: actionColumnStyle(this.context),\n          className: \"ban\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 11\n          }\n        }, ban);\n      }\n      /**\n       * if promote_demote_members feature is disabled\n       */\n\n\n      if (this.props.enableChangeScope === false) {\n        changescope = scope;\n      }\n    }\n\n    let userPresence = jsx(CometChatUserPresence, {\n      status: this.props.member.status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 7\n      }\n    });\n    return jsx(\"div\", {\n      css: modalRowStyle(this.context),\n      className: \"content__row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 7\n      }\n    }, jsx(\"div\", {\n      css: nameColumnStyle(this.context, editClassName),\n      className: \"userinfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }\n    }, jsx(\"div\", {\n      css: avatarStyle(this.context, editClassName),\n      className: \"thumbnail\",\n      onMouseEnter: event => this.toggleTooltip(event, true),\n      onMouseLeave: event => this.toggleTooltip(event, false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }\n    }, jsx(CometChatAvatar, {\n      user: this.props.member,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }\n    }), userPresence), jsx(\"div\", {\n      css: nameStyle(this.context, editClassName),\n      className: \"name\",\n      onMouseEnter: event => this.toggleTooltip(event, true),\n      onMouseLeave: event => this.toggleTooltip(event, false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }\n    }, name)), jsx(\"div\", {\n      css: scopeColumnStyle(this.context),\n      className: \"scope\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }\n    }, changescope), editAccess);\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatViewGroupMemberListItem.contextType = CometChatContext;\nCometChatViewGroupMemberListItem.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  loggedinuser: {},\n  enableChangeScope: false\n};\nCometChatViewGroupMemberListItem.propTypes = {\n  lang: PropTypes.string,\n  loggedinuser: PropTypes.shape(CometChat.User),\n  enableChangeScope: PropTypes.bool\n};\nexport { CometChatViewGroupMemberListItem };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Groups/CometChatViewGroupMemberListItem/index.js"],"names":["React","jsx","PropTypes","CometChat","CometChatAvatar","CometChatUserPresence","CometChatContext","enums","Translator","modalRowStyle","nameColumnStyle","avatarStyle","nameStyle","roleStyle","scopeColumnStyle","scopeIconStyle","actionColumnStyle","banIconStyle","kickIconStyle","scopeWrapperStyle","scopeSelectionStyle","CometChatViewGroupMemberListItem","Component","constructor","props","context","toggleChangeScope","flag","setState","showChangeScope","scopeChangeHandler","event","scope","target","value","updateMemberScope","actionGenerated","ACTIONS","member","state","toggleTooltip","elem","currentTarget","classList","contains","scrollWidth","clientWidth","setAttribute","name","removeAttribute","changeScopeDropDown","roles","render","editClassName","changescope","ban","banIcon","translate","lang","kick","kickIcon","options","GROUP_MEMBER_SCOPE","PARTICIPANT","MODERATOR","ADMIN","item","doneIcon","clearIcon","scopeIcon","owner","uid","loggedinuser","editAccess","enableBanGroupMembers","enableKickGroupMembers","enableChangeScope","userPresence","status","contextType","defaultProps","getDefaultLanguage","propTypes","string","shape","User","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { CometChatAvatar, CometChatUserPresence } from \"../../Shared\";\n\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\n\nimport Translator from \"../../../resources/localization/translator\";\n\nimport {\n  modalRowStyle,\n  nameColumnStyle,\n  avatarStyle,\n  nameStyle,\n  roleStyle,\n  scopeColumnStyle,\n  scopeIconStyle,\n  actionColumnStyle,\n  banIconStyle,\n  kickIconStyle,\n  scopeWrapperStyle,\n  scopeSelectionStyle,\n} from \"./style\";\n\nimport scopeIcon from \"./resources/edit.svg\";\nimport doneIcon from \"./resources/done.svg\";\nimport clearIcon from \"./resources/close.svg\";\nimport banIcon from \"./resources/ban-member.svg\";\nimport kickIcon from \"./resources/delete.svg\";\n\nclass CometChatViewGroupMemberListItem extends React.Component {\n  static contextType = CometChatContext;\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.changeScopeDropDown = (\n      <select\n        className=\"members-scope-select\"\n        onChange={this.scopeChangeHandler}\n        defaultValue={this.props.member.scope}\n      ></select>\n    );\n\n    this.state = {\n      showChangeScope: false,\n      scope: null,\n    };\n\n    this.roles = context.roles;\n  }\n\n  toggleChangeScope = (flag) => {\n    this.setState({ showChangeScope: flag });\n  };\n\n  scopeChangeHandler = (event) => {\n    this.setState({ scope: event.target.value });\n  };\n\n  updateMemberScope = () => {\n    this.props.actionGenerated(\n      enums.ACTIONS[\"CHANGE_SCOPE_GROUP_MEMBER\"],\n      this.props.member,\n      this.state.scope\n    );\n    this.toggleChangeScope();\n  };\n\n  toggleTooltip = (event, flag) => {\n    const elem = event.currentTarget;\n\n    if (elem.classList.contains(\"name\")) {\n      const scrollWidth = elem.scrollWidth;\n      const clientWidth = elem.clientWidth;\n\n      if (scrollWidth <= clientWidth) {\n        return false;\n      }\n    }\n\n    if (flag) {\n      elem.setAttribute(\"title\", this.props.member.name);\n    } else {\n      elem.removeAttribute(\"title\");\n    }\n  };\n\n  render() {\n    let editClassName = \"\";\n\n    let name = this.props.member.name;\n    let scope = (\n      <span css={roleStyle()}>{this.roles[this.props.member.scope]}</span>\n    );\n    let changescope = null;\n    let ban = (\n      <i\n        css={banIconStyle(banIcon, this.context)}\n        title={Translator.translate(\"BAN\", this.props.lang)}\n        onClick={() => {\n          this.props.actionGenerated(\n            enums.ACTIONS[\"BAN_GROUP_MEMBER\"],\n            this.props.member\n          );\n        }}\n      ></i>\n    );\n    let kick = (\n      <i\n        css={kickIconStyle(kickIcon, this.context)}\n        title={Translator.translate(\"KICK\", this.props.lang)}\n        onClick={() => {\n          this.props.actionGenerated(\n            enums.ACTIONS[\"KICK_GROUP_MEMBER\"],\n            this.props.member\n          );\n        }}\n      ></i>\n    );\n\n    if (this.state.showChangeScope) {\n      let options = (\n        <React.Fragment>\n          <option value={CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT}>\n            {this.roles[CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT]}\n          </option>\n          <option value={CometChat.GROUP_MEMBER_SCOPE.MODERATOR}>\n            {this.roles[CometChat.GROUP_MEMBER_SCOPE.MODERATOR]}\n          </option>\n          <option value={CometChat.GROUP_MEMBER_SCOPE.ADMIN}>\n            {this.roles[CometChat.GROUP_MEMBER_SCOPE.ADMIN]}\n          </option>\n        </React.Fragment>\n      );\n\n      if (\n        this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.MODERATOR &&\n        this.props.member.scope === CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT\n      ) {\n        options = (\n          <React.Fragment>\n            <option value={CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT}>\n              {this.roles[CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT]}\n            </option>\n            <option value={CometChat.GROUP_MEMBER_SCOPE.MODERATOR}>\n              {this.roles[CometChat.GROUP_MEMBER_SCOPE.MODERATOR]}\n            </option>\n          </React.Fragment>\n        );\n      }\n\n      changescope = (\n        <div css={scopeWrapperStyle()} className=\"scope__wrapper\">\n          <select\n            css={scopeSelectionStyle()}\n            className=\"scope__select\"\n            onChange={this.scopeChangeHandler}\n            defaultValue={this.props.member.scope}\n          >\n            {options}\n          </select>\n          <i\n            css={scopeIconStyle(doneIcon, this.context)}\n            title={Translator.translate(\"CHANGE_SCOPE\", this.props.lang)}\n            onClick={this.updateMemberScope}\n          ></i>\n          <i\n            css={scopeIconStyle(clearIcon, this.context)}\n            title={Translator.translate(\"CHANGE_SCOPE\", this.props.lang)}\n            onClick={() => this.toggleChangeScope(false)}\n          ></i>\n        </div>\n      );\n    } else {\n      if (\n        this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT\n      ) {\n        changescope = scope;\n      } else {\n        changescope = (\n          <React.Fragment>\n            {scope}\n            <i\n              css={scopeIconStyle(scopeIcon, this.context)}\n              title={Translator.translate(\"CHANGE_SCOPE\", this.props.lang)}\n              onClick={() => this.toggleChangeScope(true)}\n            ></i>\n          </React.Fragment>\n        );\n      }\n    }\n\n    //disable change scope, kick, ban of group owner\n    if (this.context.item.owner === this.props.member.uid) {\n      scope = (\n        <span css={roleStyle()}>\n          {Translator.translate(\"OWNER\", this.props.lang)}\n        </span>\n      );\n      changescope = scope;\n      ban = null;\n      kick = null;\n    }\n\n    //disable change scope, kick, ban of self\n    if (this.props.loggedinuser.uid === this.props.member.uid) {\n      name = Translator.translate(\"YOU\", this.props.lang);\n      changescope = scope;\n      ban = null;\n      kick = null;\n    }\n\n    //if the loggedin user is moderator, don't allow to change scope, ban, kick group moderators or administrators\n    if (\n      this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.MODERATOR &&\n      (this.props.member.scope === CometChat.GROUP_MEMBER_SCOPE.ADMIN ||\n        this.props.member.scope === CometChat.GROUP_MEMBER_SCOPE.MODERATOR)\n    ) {\n      changescope = scope;\n      ban = null;\n      kick = null;\n    }\n\n    //if the loggedin user is administrator but not group owner, don't allow to change scope, ban, kick group administrators\n    if (\n      this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.ADMIN &&\n      this.context.item.owner !== this.props.loggedinuser.uid &&\n      this.props.member.scope === CometChat.GROUP_MEMBER_SCOPE.ADMIN\n    ) {\n      changescope = scope;\n      ban = null;\n      kick = null;\n    }\n\n    let editAccess = null;\n    //if the loggedin user is participant, don't show the option to change scope, ban, or kick group members\n    if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT) {\n      editAccess = null;\n      editClassName = \"true\";\n    } else {\n      editAccess = (\n        <React.Fragment>\n          <div css={actionColumnStyle(this.context)} className=\"ban\">\n            {ban}\n          </div>\n          <div css={actionColumnStyle(this.context)} className=\"kick\">\n            {kick}\n          </div>\n        </React.Fragment>\n      );\n\n      /**\n       * if kick and ban feature is disabled\n       */\n      if (\n        this.props.enableBanGroupMembers === false &&\n        this.props.enableKickGroupMembers === false\n      ) {\n        editAccess = null;\n      } else if (this.props.enableBanGroupMembers === false) {\n        //if ban feature is disabled\n        editAccess = (\n          <div css={actionColumnStyle(this.context)} className=\"kick\">\n            {kick}\n          </div>\n        );\n      } else if (this.props.enableKickGroupMembers === false) {\n        //if kick feature is disabled\n        editAccess = (\n          <div css={actionColumnStyle(this.context)} className=\"ban\">\n            {ban}\n          </div>\n        );\n      }\n\n      /**\n       * if promote_demote_members feature is disabled\n       */\n      if (this.props.enableChangeScope === false) {\n        changescope = scope;\n      }\n    }\n\n    let userPresence = (\n      <CometChatUserPresence status={this.props.member.status} />\n    );\n\n    return (\n      <div css={modalRowStyle(this.context)} className=\"content__row\">\n        <div\n          css={nameColumnStyle(this.context, editClassName)}\n          className=\"userinfo\"\n        >\n          <div\n            css={avatarStyle(this.context, editClassName)}\n            className=\"thumbnail\"\n            onMouseEnter={(event) => this.toggleTooltip(event, true)}\n            onMouseLeave={(event) => this.toggleTooltip(event, false)}\n          >\n            <CometChatAvatar user={this.props.member} />\n            {userPresence}\n          </div>\n          <div\n            css={nameStyle(this.context, editClassName)}\n            className=\"name\"\n            onMouseEnter={(event) => this.toggleTooltip(event, true)}\n            onMouseLeave={(event) => this.toggleTooltip(event, false)}\n          >\n            {name}\n          </div>\n        </div>\n        <div css={scopeColumnStyle(this.context)} className=\"scope\">\n          {changescope}\n        </div>\n        {editAccess}\n      </div>\n    );\n  }\n}\n\n// Specifies the default values for props:\nCometChatViewGroupMemberListItem.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  loggedinuser: {},\n  enableChangeScope: false,\n};\n\nCometChatViewGroupMemberListItem.propTypes = {\n  lang: PropTypes.string,\n  loggedinuser: PropTypes.shape(CometChat.User),\n  enableChangeScope: PropTypes.bool,\n};\n\nexport { CometChatViewGroupMemberListItem };\n"]},"metadata":{},"sourceType":"module"}