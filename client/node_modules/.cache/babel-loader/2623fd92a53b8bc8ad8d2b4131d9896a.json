{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatMessages/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatMessageHeader, CometChatMessageList, CometChatMessageComposer, CometChatLiveReactions, CometChatMessageThread, CometChatImageViewer } from \"../\";\nimport { CometChatIncomingCall, CometChatOutgoingCall, CometChatOutgoingDirectCall, CometChatIncomingDirectCall } from \"../../Calls\";\nimport { CometChatUserDetails } from \"../../Users\";\nimport { CometChatGroupDetails } from \"../../Groups\";\nimport { CometChatToastNotification } from \"../../Shared\";\nimport { CometChatContextProvider, CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport { checkMessageForExtensionsData } from \"../../../util/common\";\nimport { SoundManager } from \"../../../util/SoundManager\";\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { chatWrapperStyle, chatSecondaryStyle, reactionsWrapperStyle, messagePaneTopStyle, messagePaneBannerStyle, messagePaneUnreadBannerStyle, messagePaneUnreadBannerMessageStyle, iconArrowDownStyle, chatContainerStyle } from \"./style\";\n\nclass CometChatMessages extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.enableGroupActionMessages = () => {\n      this.getContext().FeatureRestriction.isGroupActionMessagesEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableGroupActionMessages) {\n          this.setState({\n            enableGroupActionMessages: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableGroupActionMessages !== false) {\n          this.setState({\n            enableGroupActionMessages: false\n          });\n        }\n      });\n    };\n\n    this.enableCallActionMessages = () => {\n      this.getContext().FeatureRestriction.isCallActionMessagesEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableCallActionMessages) {\n          this.setState({\n            enableCallActionMessages: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableCallActionMessages !== false) {\n          this.setState({\n            enableCallActionMessages: false\n          });\n        }\n      });\n    };\n\n    this.enableSendingOneOnOneMessage = () => {\n      this.getContext().FeatureRestriction.isOneOnOneChatEnabled().then(response => {\n        if (response !== this.state.enableSendingOneOnOneMessage) {\n          this.setState({\n            enableSendingOneOnOneMessage: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableSendingOneOnOneMessage !== false) {\n          this.setState({\n            enableSendingOneOnOneMessage: false\n          });\n        }\n      });\n    };\n\n    this.enableSendingGroupMessage = () => {\n      this.getContext().FeatureRestriction.isGroupChatEnabled().then(response => {\n        if (response !== this.state.enableSendingGroupMessage) {\n          this.setState({\n            enableSendingGroupMessage: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableSendingGroupMessage !== false) {\n          this.setState({\n            enableSendingGroupMessage: false\n          });\n        }\n      });\n    };\n\n    this.enableHideDeletedMessages = () => {\n      this.getContext().FeatureRestriction.isHideDeletedMessagesEnabled().then(response => {\n        if (response !== this.state.enableHideDeletedMessages) {\n          this.setState({\n            enableHideDeletedMessages: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableHideDeletedMessages !== false) {\n          this.setState({\n            enableHideDeletedMessages: false\n          });\n        }\n      });\n    };\n\n    this.getContext = () => {\n      if (this.props._parent.length) {\n        return this.context;\n      } else {\n        return this.contextProviderRef.state;\n      }\n    };\n\n    this.actionHandler = (action, messages, key, group, options) => {\n      switch (action) {\n        case enums.ACTIONS[\"CUSTOM_MESSAGE_RECEIVED\"]:\n        case enums.ACTIONS[\"MESSAGE_RECEIVED\"]:\n          {\n            const message = messages[0];\n\n            if (message.parentMessageId) {\n              this.updateReplyCount(messages);\n            } else {\n              this.smartReplyPreview(messages);\n              this.appendMessage(messages);\n            }\n\n            SoundManager.play(enums.CONSTANTS.AUDIO[\"INCOMING_MESSAGE\"], this.getContext());\n          }\n          break;\n\n        case enums.ACTIONS[\"MESSAGE_READ\"]:\n          {\n            var _this$props;\n\n            if ((_this$props = this.props) === null || _this$props === void 0 ? void 0 : _this$props.actionGenerated) {\n              var _this$props2;\n\n              (_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : _this$props2.actionGenerated(action, messages);\n            }\n\n            break;\n          }\n\n        case enums.ACTIONS[\"MESSAGE_COMPOSED\"]:\n          {\n            this.appendMessage(messages);\n            break;\n          }\n\n        case enums.ACTIONS[\"MESSAGE_SENT\"]:\n          this.messageSent(messages);\n          this.getContext().setLastMessage(messages[0]);\n          break;\n\n        case enums.ACTIONS[\"ERROR_IN_SENDING_MESSAGE\"]:\n          this.messageSent(messages);\n          break;\n\n        case enums.ACTIONS[\"ON_MESSAGE_READ_DELIVERED\"]:\n          this.updateMessages(messages);\n          break;\n\n        case enums.ACTIONS[\"ON_MESSAGE_EDITED\"]:\n          {\n            this.updateMessages(messages); //update the parent message of thread message\n\n            this.updateParentThreadedMessage(key, \"edit\");\n            break;\n          }\n\n        case enums.ACTIONS[\"ON_MESSAGE_DELETED\"]:\n          {\n            this.removeMessages(messages); //remove the thread message\n\n            this.updateParentThreadedMessage(messages[0], \"delete\");\n            break;\n          }\n\n        case enums.ACTIONS[\"MESSAGES_FETCHED\"]:\n          this.prependMessages(messages);\n          break;\n\n        case enums.ACTIONS[\"REFRESHING_MESSAGES\"]:\n          this.refreshingMessages();\n          break;\n\n        case enums.ACTIONS[\"MESSAGES_REFRESHED\"]:\n          this.messageRefreshed(messages);\n          break;\n\n        case enums.ACTIONS[\"NEW_MESSAGES\"]:\n          this.newMessagesArrived(messages);\n          break;\n\n        case enums.ACTIONS[\"CLEAR_UNREAD_MESSAGES\"]:\n          this.jumpToMessages(true);\n          break;\n\n        case enums.ACTIONS[\"DELETE_MESSAGE\"]:\n          this.deleteMessage(messages);\n          break;\n\n        case enums.ACTIONS[\"EDIT_MESSAGE\"]:\n          this.editMessage(messages);\n          break;\n\n        case enums.ACTIONS[\"MESSAGE_EDITED\"]:\n          this.messageEdited(messages);\n          break;\n\n        case enums.ACTIONS[\"CLEAR_EDIT_PREVIEW\"]:\n          this.clearEditPreview();\n          break;\n\n        case enums.GROUP_MEMBER_SCOPE_CHANGED:\n        case enums.GROUP_MEMBER_KICKED:\n        case enums.GROUP_MEMBER_BANNED:\n        case enums.GROUP_MEMBER_UNBANNED:\n        case enums.GROUP_MEMBER_ADDED:\n        case enums.GROUP_MEMBER_LEFT:\n        case enums.GROUP_MEMBER_JOINED:\n          this.groupUpdated(action, messages, group, options);\n          break;\n\n        case enums.INCOMING_CALL_RECEIVED:\n        case enums.INCOMING_CALL_CANCELLED:\n        case enums.OUTGOING_CALL_ACCEPTED:\n        case enums.OUTGOING_CALL_REJECTED:\n          this.appendCallMessage(messages);\n          break;\n\n        case enums.ACTIONS[\"VIEW_ORIGINAL_IMAGE\"]:\n          this.toggleOriginalImageView(messages);\n          break;\n\n        case enums.ACTIONS[\"INITIATE_AUDIO_CALL\"]:\n          this.audioCall();\n          break;\n\n        case enums.ACTIONS[\"INITIATE_VIDEO_CALL\"]:\n          this.videoCall();\n          break;\n\n        case enums.ACTIONS[\"VIEW_DETAIL\"]:\n        case enums.ACTIONS[\"CLOSE_GROUP_DETAIL\"]:\n        case enums.ACTIONS[\"CLOSE_USER_DETAIL\"]:\n          this.toggleDetailView();\n          break;\n\n        case enums.ACTIONS[\"TOGGLE_SIDEBAR\"]:\n          this.toggleDetailView();\n          this.props.actionGenerated(action);\n          break;\n\n        case enums.ACTIONS[\"SEND_LIVE_REACTION\"]:\n          this.toggleReaction(true);\n          break;\n\n        case enums.ACTIONS[\"SHOW_LIVE_REACTION\"]:\n          this.showReaction(messages);\n          break;\n\n        case enums.ACTIONS[\"STOP_LIVE_REACTION\"]:\n          this.toggleReaction(false);\n          break;\n\n        case enums.ACTIONS[\"REACT_TO_MESSAGE\"]:\n          this.reactToMessage(messages);\n          break;\n\n        case enums.ACTIONS[\"OUTGOING_CALL_ACCEPTED\"]:\n        case enums.ACTIONS[\"USER_JOINED_CALL\"]:\n        case enums.ACTIONS[\"USER_LEFT_CALL\"]:\n        case enums.ACTIONS[\"OUTGOING_CALL_ENDED\"]:\n        case enums.ACTIONS[\"OUTGOING_CALL_REJECTED\"]:\n        case enums.ACTIONS[\"OUTGOING_CALL_CANCELLED\"]:\n        case enums.ACTIONS[\"INCOMING_CALL_ACCEPTED\"]:\n        case enums.ACTIONS[\"INCOMING_CALL_ENDED\"]:\n        case enums.ACTIONS[\"INCOMING_CALL_REJECTED\"]:\n        case enums.ACTIONS[\"DIRECT_CALL_ENDED\"]:\n        case enums.ACTIONS[\"DIRECT_CALL_ERROR\"]:\n          break;\n\n        case enums.ACTIONS[\"JOIN_DIRECT_CALL\"]:\n          {\n            //if used in a chat widget, trigger the event to the app component as directcall component is included outside of iframe\n            if (Object.keys(this.props.widgetsettings).length) {\n              this.props.actionGenerated(action, messages);\n            } else {\n              const sessionID = this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP ? this.getContext().item.guid : null;\n              this.outgoingDirectCallRef.joinCall(sessionID);\n            }\n\n            break;\n          }\n\n        case enums.ACTIONS[\"VIEW_THREADED_MESSAGE\"]:\n          this.viewThreadedMessage(messages);\n          break;\n\n        case enums.ACTIONS[\"THREAD_MESSAGE_COMPOSED\"]:\n          this.threadMessageComposed(messages);\n          break;\n\n        case enums.ACTIONS[\"CLOSE_THREADED_MESSAGE\"]:\n          this.closeThreadedMessage();\n          break;\n\n        case enums.ACTIONS[\"ADD_GROUP_MEMBER_SUCCESS\"]:\n          this.appendMemberAddedMessage(messages);\n          break;\n\n        case enums.ACTIONS[\"UNBAN_GROUP_MEMBER_SUCCESS\"]:\n          this.appendMemberUnbannedMessage(messages);\n          break;\n\n        case enums.ACTIONS[\"SCOPECHANGE_GROUPMEMBER_SUCCESS\"]:\n          this.appendMemberScopeChangedMessage(messages);\n          break;\n\n        case enums.ACTIONS[\"ERROR\"]:\n          this.errorHandler(key);\n          break;\n\n        case enums.ACTIONS[\"INFO\"]:\n          this.infoMessageHandler(key);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.errorHandler = errorCode => {\n      if (typeof this.toastRef.setError === \"function\") {\n        var _this$toastRef;\n\n        (_this$toastRef = this.toastRef) === null || _this$toastRef === void 0 ? void 0 : _this$toastRef.setError(errorCode);\n      }\n    };\n\n    this.infoMessageHandler = infoCode => {\n      if (typeof this.toastRef.setInfo === \"function\") {\n        var _this$toastRef2;\n\n        (_this$toastRef2 = this.toastRef) === null || _this$toastRef2 === void 0 ? void 0 : _this$toastRef2.setInfo(infoCode);\n      }\n    };\n\n    this.appendMemberAddedMessage = messages => {\n      //if group action messages are disabled\n      if (this.state.enableGroupActionMessages === false) {\n        return false;\n      }\n\n      const messageList = [];\n      messages.forEach(eachMember => {\n        const sentAt = new Date() / 1000 | 0;\n        const messageObj = {\n          receiver: { ...this.context.item\n          },\n          receiverId: this.context.item.guid,\n          receiverType: CometChat.RECEIVER_TYPE.GROUP,\n          sender: { ...this.loggedInUser\n          },\n          category: CometChat.CATEGORY_ACTION,\n          type: CometChat.ACTION_TYPE.TYPE_GROUP_MEMBER,\n          sentAt: sentAt,\n          action: CometChat.ACTION_TYPE.MEMBER_ADDED,\n          actionBy: { ...this.loggedInUser\n          },\n          actionOn: { ...eachMember\n          },\n          actionFor: { ...this.context.item\n          }\n        };\n        messageList.push(messageObj);\n      });\n      this.appendMessage(messageList);\n    };\n\n    this.appendMemberUnbannedMessage = messages => {\n      //if group action messages are disabled\n      if (this.state.enableGroupActionMessages === false) {\n        return false;\n      }\n\n      const messageList = [];\n      messages.forEach(eachMember => {\n        const sentAt = new Date() / 1000 | 0;\n        const messageObj = {\n          receiver: { ...this.context.item\n          },\n          receiverId: this.context.item.guid,\n          receiverType: CometChat.RECEIVER_TYPE.GROUP,\n          sender: { ...this.loggedInUser\n          },\n          category: CometChat.CATEGORY_ACTION,\n          type: CometChat.ACTION_TYPE.TYPE_GROUP_MEMBER,\n          sentAt: sentAt,\n          action: CometChat.ACTION_TYPE.MEMBER_UNBANNED,\n          actionBy: { ...this.loggedInUser\n          },\n          actionOn: { ...eachMember\n          }\n        };\n        messageList.push(messageObj);\n      });\n      this.appendMessage(messageList);\n    };\n\n    this.appendMemberScopeChangedMessage = messages => {\n      //if group action messages are disabled\n      if (this.state.enableGroupActionMessages === false) {\n        return false;\n      }\n\n      const messageList = [];\n      messages.forEach(eachMember => {\n        const newScope = Translator.translate(eachMember.scope, this.state.lang);\n        const sentAt = new Date() / 1000 | 0;\n        const messageObj = {\n          receiver: { ...this.context.item\n          },\n          receiverId: this.context.item.guid,\n          receiverType: CometChat.RECEIVER_TYPE.GROUP,\n          sender: { ...this.loggedInUser\n          },\n          category: CometChat.CATEGORY_ACTION,\n          type: CometChat.ACTION_TYPE.TYPE_GROUP_MEMBER,\n          sentAt: sentAt,\n          action: CometChat.ACTION_TYPE.MEMBER_SCOPE_CHANGED,\n          actionBy: { ...this.loggedInUser\n          },\n          actionOn: { ...eachMember\n          },\n          newScope: newScope\n        };\n        messageList.push(messageObj);\n      });\n      this.appendMessage(messageList);\n    };\n\n    this.toggleOriginalImageView = message => {\n      this.setState({\n        viewOriginalImage: message\n      });\n    };\n\n    this.toggleDetailView = () => {\n      let viewdetail = !this.state.viewdetailscreen;\n      this.setState({\n        viewdetailscreen: viewdetail,\n        threadmessageview: false\n      });\n    };\n\n    this.viewThreadedMessage = parentMessage => {\n      const message = { ...parentMessage\n      };\n      const threaditem = { ...this.getContext().item\n      };\n      this.setState({\n        threadmessageview: true,\n        threadmessageparent: message,\n        threadmessageitem: threaditem,\n        threadmessagetype: this.getContext().type,\n        viewdetailscreen: false\n      });\n    };\n\n    this.threadMessageComposed = messages => {\n      if (this.getContext().type !== this.state.threadmessagetype) {\n        return false;\n      }\n\n      if (this.state.threadmessagetype === CometChat.ACTION_TYPE.TYPE_GROUP && this.getContext().item.guid !== this.state.threadmessageitem.guid || this.state.threadmessagetype === CometChat.ACTION_TYPE.TYPE_USER && this.getContext().item.uid !== this.state.threadmessageitem.uid) {\n        return false;\n      }\n\n      this.updateReplyCount(messages);\n    };\n\n    this.closeThreadedMessage = () => {\n      this.setState({\n        threadmessageview: false,\n        viewdetailscreen: false\n      });\n    };\n\n    this.updateParentThreadedMessage = (message, action) => {\n      if (this.state.threadmessageview === false || message.id !== this.state.threadmessageparent.id) {\n        return false;\n      }\n\n      if (action === \"delete\") {\n        this.setState({\n          threadmessageparent: { ...message\n          },\n          threadmessageview: false\n        });\n      } else {\n        this.setState({\n          threadmessageparent: { ...message\n          }\n        });\n      }\n    };\n\n    this.getReceiverDetails = () => {\n      let receiverId;\n      let receiverType;\n\n      if (this.getContext().type === CometChat.ACTION_TYPE.TYPE_USER) {\n        receiverId = this.getContext().item.uid;\n        receiverType = CometChat.RECEIVER_TYPE.USER;\n      } else if (this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP) {\n        receiverId = this.getContext().item.guid;\n        receiverType = CometChat.RECEIVER_TYPE.GROUP;\n      }\n\n      return {\n        receiverId: receiverId,\n        receiverType: receiverType\n      };\n    };\n\n    this.audioCall = () => {\n      const {\n        receiverId,\n        receiverType\n      } = this.getReceiverDetails();\n      const call = new CometChat.Call(receiverId, CometChat.CALL_TYPE.AUDIO, receiverType);\n      CometChat.initiateCall(call).then(outgoingCall => {\n        //when this component is part of chat widget trigger an event.. (outgoingcall component is used separately in chat widget)\n        if (Object.keys(this.props.widgetsettings).length) {\n          this.props.actionGenerated(enums.ACTIONS[\"START_AUDIO_CALL\"], outgoingCall);\n        } else {\n          this.outgoingCallRef.startCall(outgoingCall);\n          this.appendCallMessage(outgoingCall);\n        }\n      }).catch(error => this.errorHandler(\"SOMETHING_WRONG\"));\n    };\n\n    this.videoCall = () => {\n      /*\n      Direct calling for groups\n      */\n      if (this.getContext().type === CometChat.RECEIVER_TYPE.GROUP) {\n        if (Object.keys(this.props.widgetsettings).length) {\n          this.props.actionGenerated(enums.ACTIONS[\"START_DIRECT_CALL\"]);\n        } else {\n          const sessionID = this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP ? this.getContext().item.guid : null;\n          this.outgoingDirectCallRef.startCall(sessionID);\n        }\n\n        return;\n      }\n      /*\n      Default calling for one-on-one\n      */\n\n\n      const {\n        receiverId,\n        receiverType\n      } = this.getReceiverDetails();\n      const call = new CometChat.Call(receiverId, CometChat.CALL_TYPE.VIDEO, receiverType);\n      CometChat.initiateCall(call).then(outgoingCall => {\n        //when this component is part of chat widget trigger an event.. (outgoingcall component is used separately in chat widget)\n        if (Object.keys(this.props.widgetsettings).length) {\n          this.props.actionGenerated(enums.ACTIONS[\"START_VIDEO_CALL\"], outgoingCall);\n        } else {\n          this.outgoingCallRef.startCall(outgoingCall);\n        }\n      }).catch(error => this.errorHandler(\"SOMETHING_WRONG\"));\n    };\n\n    this.toggleReaction = flag => {\n      this.setState({\n        liveReaction: flag\n      });\n    };\n\n    this.showReaction = reaction => {\n      if (reaction.metadata.type === enums.CONSTANTS[\"METADATA_TYPE_LIVEREACTION\"]) {\n        this.reactionName = reaction.metadata.reaction;\n        this.setState({\n          liveReaction: true\n        });\n      }\n    };\n\n    this.deleteMessage = message => {\n      const messageId = message.id;\n      CometChat.deleteMessage(messageId).then(deletedMessage => {\n        //remove edit preview when message is deleted\n        if (deletedMessage.id === this.state.messageToBeEdited.id) {\n          this.setState({\n            messageToBeEdited: \"\"\n          });\n        }\n\n        const messageList = [...this.state.messageList];\n        let messageKey = messageList.findIndex(m => m.id === message.id);\n\n        if (messageList.length - messageKey === 1 && !message.replyCount) {\n          this.getContext().setLastMessage(deletedMessage);\n        }\n\n        this.removeMessages([deletedMessage]);\n        this.updateParentThreadedMessage(deletedMessage, \"delete\");\n      }).catch(error => this.errorHandler(\"SOMETHING_WRONG\"));\n    };\n\n    this.editMessage = message => {\n      this.setState({\n        messageToBeEdited: message,\n        replyPreview: null\n      });\n    };\n\n    this.messageEdited = message => {\n      const messageList = [...this.state.messageList];\n      let messageKey = messageList.findIndex(m => m.id === message.id);\n\n      if (messageKey > -1) {\n        const messageObj = messageList[messageKey];\n        const newMessageObj = Object.assign({}, messageObj, message);\n        messageList.splice(messageKey, 1, newMessageObj);\n        this.updateMessages(messageList);\n        this.updateParentThreadedMessage(newMessageObj, \"edit\");\n\n        if (messageList.length - messageKey === 1 && !message.replyCount) {\n          this.getContext().setLastMessage(newMessageObj);\n        }\n      }\n    };\n\n    this.messageSent = messages => {\n      const message = messages[0];\n      const messageList = [...this.state.messageList];\n      let messageKey = messageList.findIndex(m => m._id === message._id);\n\n      if (messageKey > -1) {\n        const newMessageObj = { ...message\n        };\n        messageList.splice(messageKey, 1, newMessageObj);\n        messageList.sort((a, b) => a.id - b.id);\n        this.setState({\n          messageList: messageList,\n          scrollToBottom: true\n        });\n      }\n    };\n\n    this.refreshingMessages = () => {\n      this.setState({\n        messageList: [],\n        messageToBeEdited: \"\",\n        replyPreview: null,\n        liveReaction: false,\n        messageToReact: null\n      });\n      this.getContext().clearUnreadMessages();\n    };\n\n    this.messageRefreshed = messages => {\n      const messageList = [...messages];\n      this.setState({\n        messageList: messageList,\n        scrollToBottom: true\n      });\n    };\n\n    this.newMessagesArrived = newMessage => {\n      this.getContext().setUnreadMessages(newMessage);\n    };\n\n    this.markMessagesAsRead = scrollToBottom => {\n      if (this.getContext().unreadMessages.length === 0) {\n        return false;\n      }\n\n      let unreadMessages = [...this.getContext().unreadMessages];\n      let messageList = [...this.state.messageList];\n      unreadMessages.forEach(unreadMessage => {\n        if (unreadMessage.getReceiverType() === CometChat.RECEIVER_TYPE.USER) {\n          if (this.messageListRef) {\n            messageList.push(unreadMessage);\n            this.messageListRef.markMessageAsRead(unreadMessage, CometChat.ACTION_TYPE.TYPE_USER);\n          }\n        } else if (unreadMessage.getReceiverType() === CometChat.RECEIVER_TYPE.GROUP) {\n          if (this.messageListRef) {\n            messageList.push(unreadMessage);\n            this.messageListRef.markMessageAsRead(unreadMessage, CometChat.ACTION_TYPE.TYPE_GROUP);\n          }\n        }\n      });\n      this.getContext().clearUnreadMessages(); //this.props.actionGenerated(\"unreadMessages\", []);\n\n      this.setState({\n        messageList: messageList,\n        scrollToBottom: scrollToBottom\n      });\n    };\n\n    this.jumpToMessages = () => {\n      if (this.getContext().unreadMessages.length === 0) {\n        return false;\n      }\n\n      let unreadMessages = [...this.getContext().unreadMessages];\n      let messageList = [...this.state.messageList];\n      messageList = messageList.concat(unreadMessages);\n      this.getContext().clearUnreadMessages();\n      this.getContext().setClearedUnreadMessages(true);\n\n      if (messageList.length > enums.CONSTANTS[\"MAX_MESSAGE_COUNT\"]) {\n        if (this.messageListRef) {\n          this.messageListRef.reInitializeMessageBuilder();\n        }\n      } else {\n        this.markMessagesAsRead(true);\n      }\n    };\n\n    this.removeMessages = messages => {\n      const deletedMessage = messages[0];\n      const messagelist = [...this.state.messageList];\n      let messageKey = messagelist.findIndex(message => message.id === deletedMessage.id);\n\n      if (messageKey > -1) {\n        if (this.state.enableHideDeletedMessages) {\n          messagelist.splice(messageKey, 1);\n        } else {\n          let messageObj = { ...messagelist[messageKey]\n          };\n          let newMessageObj = Object.assign({}, messageObj, deletedMessage);\n          messagelist.splice(messageKey, 1, newMessageObj);\n        }\n\n        this.setState({\n          messageList: messagelist,\n          scrollToBottom: false\n        });\n      }\n    };\n\n    this.prependMessages = messages => {\n      const messageList = [...messages, ...this.state.messageList];\n      this.setState({\n        messageList: messageList,\n        scrollToBottom: false\n      });\n    };\n\n    this.appendMessage = message => {\n      let messages = [...this.state.messageList, ...message];\n      this.setState({\n        messageList: messages,\n        scrollToBottom: true\n      });\n    };\n\n    this.updateMessages = messages => {\n      this.setState({\n        messageList: messages,\n        scrollToBottom: false\n      });\n    };\n\n    this.groupUpdated = (action, message, group, options) => {\n      //if group action messages are disabled\n      if (this.state.enableGroupActionMessages === true) {\n        this.appendMessage([message]);\n      }\n\n      this.props.actionGenerated(action, message, group, options);\n    };\n\n    this.appendCallMessage = message => {\n      //if call action messages are disabled\n      if (this.state.enableCallActionMessages === false) {\n        return false;\n      }\n\n      this.appendMessage([message]);\n    };\n\n    this.updateReplyCount = messages => {\n      const receivedMessage = messages[0];\n      let messageList = [...this.state.messageList];\n      let messageKey = messageList.findIndex(m => m.id === receivedMessage.parentMessageId);\n\n      if (messageKey > -1) {\n        const messageObj = messageList[messageKey];\n        let replyCount = messageObj.hasOwnProperty(\"replyCount\") ? messageObj.replyCount : 0;\n        replyCount = replyCount + 1;\n        const newMessageObj = Object.assign({}, messageObj, {\n          replyCount: replyCount\n        });\n        messageList.splice(messageKey, 1, newMessageObj);\n        this.setState({\n          messageList: messageList,\n          scrollToBottom: false\n        });\n      }\n    };\n\n    this.smartReplyPreview = messages => {\n      const message = messages[0];\n\n      if (message.sender.uid === this.loggedInUser.uid || message.category === CometChat.CATEGORY_CUSTOM) {\n        return false;\n      }\n      /**\n       * If smart-replies feature is enabled\n       */\n\n\n      this.getContext().FeatureRestriction.isSmartRepliesEnabled().then(response => {\n        if (response === true) {\n          const smartReplyData = checkMessageForExtensionsData(message, \"smart-reply\");\n\n          if (smartReplyData && smartReplyData.hasOwnProperty(\"error\") === false) {\n            this.setState({\n              replyPreview: message\n            });\n          } else {\n            this.setState({\n              replyPreview: null\n            });\n          }\n        }\n      });\n    };\n\n    this.clearEditPreview = () => {\n      this.setState({\n        messageToBeEdited: \"\"\n      });\n    };\n\n    this.reactToMessage = message => {\n      this.setState({\n        messageToReact: message\n      });\n\n      if (this.composerRef) {\n        this.composerRef.toggleEmojiPicker();\n      }\n    };\n\n    this.state = {\n      messageList: [],\n      scrollToBottom: true,\n      messageToBeEdited: \"\",\n      replyPreview: null,\n      liveReaction: false,\n      messageToReact: null,\n      lang: props.lang,\n      unreadMessages: [],\n      viewdetailscreen: false,\n      threadmessageview: false,\n      threadmessagetype: null,\n      threadmessageitem: {},\n      threadmessageparent: {},\n      viewOriginalImage: false,\n      enableGroupActionMessages: false,\n      enableCallActionMessages: false,\n      enableSendingOneOnOneMessage: false,\n      enableSendingGroupMessage: false,\n      enableHideDeletedMessages: false\n    };\n    this.contextProviderRef = /*#__PURE__*/React.createRef();\n    this.composerRef = /*#__PURE__*/React.createRef();\n    this.messageListRef = /*#__PURE__*/React.createRef();\n    this.outgoingCallRef = /*#__PURE__*/React.createRef();\n    this.outgoingDirectCallRef = /*#__PURE__*/React.createRef();\n    this.toastRef = /*#__PURE__*/React.createRef();\n    this.reactionName = \"heart\";\n  }\n\n  componentDidMount() {\n    CometChat.getLoggedinUser().then(user => this.loggedInUser = user).catch(error => this.errorHandler(\"SOMETHING_WRONG\"));\n    this.type = this.getContext().type;\n    this.item = this.getContext().item;\n    this.enableGroupActionMessages();\n    this.enableCallActionMessages();\n    this.enableSendingOneOnOneMessage();\n    this.enableSendingGroupMessage();\n    this.enableHideDeletedMessages();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (Object.keys(this.item).length) {\n      const ifChatWindowChanged = () => {\n        let output = false;\n\n        if (this.getContext().type === CometChat.ACTION_TYPE.TYPE_USER && this.getContext().item.uid !== this.item.uid) {\n          output = true;\n        } else if (this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP && this.getContext().item.guid !== this.item.guid) {\n          output = true;\n        } else if (this.type !== this.getContext().type) {\n          output = true;\n        }\n\n        return output;\n      };\n\n      if (ifChatWindowChanged() === true) {\n        this.setState({\n          messageList: [],\n          scrollToBottom: true,\n          messageToBeEdited: \"\",\n          threadmessageview: false,\n          viewdetailscreen: false\n        });\n      }\n    }\n\n    this.type = this.getContext().type;\n    this.item = this.getContext().type === CometChat.ACTION_TYPE.TYPE_USER || CometChat.ACTION_TYPE.TYPE_GROUP ? this.getContext().item : {};\n    this.enableGroupActionMessages();\n    this.enableCallActionMessages();\n    this.enableSendingOneOnOneMessage();\n    this.enableSendingGroupMessage();\n    this.enableHideDeletedMessages();\n\n    if (prevProps.lang !== this.props.lang) {\n      this.setState({\n        lang: this.props.lang\n      });\n    }\n    /**\n     * Custom message to be appended or updated for direct calling\n     */\n\n\n    if (Object.keys(this.props.widgetsettings).length) {\n      if (Object.keys(this.getContext().directCallCustomMessage).length && this.getContext().directCallCustomMessageAction.trim().length && (this.getContext().directCallCustomMessage !== this.directCallCustomMessage || this.getContext().directCallCustomMessageAction !== this.directCallCustomMessageAction)) {\n        const customMessage = this.getContext().directCallCustomMessage;\n        const messageAction = this.getContext().directCallCustomMessageAction.trim();\n\n        switch (messageAction) {\n          case enums.ACTIONS[\"MESSAGE_COMPOSED\"]:\n            this.appendMessage(customMessage);\n            break;\n\n          case enums.ACTIONS[\"MESSAGE_SENT\"]:\n          case enums.ACTIONS[\"ERROR_IN_SENDING_MESSAGE\"]:\n            {\n              this.messageSent(customMessage);\n              this.getContext().setLastMessage(customMessage[0]);\n              setTimeout(() => {\n                this.getContext().setDirectCallCustomMessage({}, \"\");\n              }, 1000);\n              break;\n            }\n\n          default:\n            break;\n        }\n      }\n\n      this.directCallCustomMessage = this.getContext().directCallCustomMessage;\n      this.directCallCustomMessageAction = this.getContext().directCallCustomMessageAction.trim();\n    }\n  }\n\n  render() {\n    var _this$getContext;\n\n    /**\n     * If used as standalone component\n     */\n    if (this.props._parent.trim().length === 0 && this.props.chatWithUser.trim().length === 0 && this.props.chatWithGroup.trim().length === 0) {\n      return jsx(CometChatContextProvider, {\n        ref: el => this.contextProviderRef = el,\n        _component: enums.CONSTANTS[\"MESSAGES_COMPONENT\"],\n        user: this.props.chatWithUser,\n        group: this.props.chatWithGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 5\n        }\n      }, jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 6\n        }\n      }));\n    } else if (this.props._parent.trim().length && Object.keys(this.getContext().item).length === 0) {\n      return null;\n    }\n\n    let messageComposer = jsx(CometChatMessageComposer, {\n      ref: el => {\n        this.composerRef = el;\n      },\n      theme: this.props.theme,\n      lang: this.state.lang,\n      widgetsettings: this.props.widgetsettings,\n      messageToBeEdited: this.state.messageToBeEdited,\n      replyPreview: this.state.replyPreview,\n      reaction: this.reactionName,\n      messageToReact: this.state.messageToReact,\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 4\n      }\n    });\n    let newMessageIndicator = null;\n\n    if ((_this$getContext = this.getContext()) === null || _this$getContext === void 0 ? void 0 : _this$getContext.unreadMessages.length) {\n      const unreadMessageCount = this.getContext().unreadMessages.length;\n      const messageText = unreadMessageCount > 1 ? `${unreadMessageCount} ${Translator.translate(\"NEW_MESSAGES\", this.state.lang)}` : `${unreadMessageCount} ${Translator.translate(\"NEW_MESSAGE\", this.state.lang)}`;\n      newMessageIndicator = jsx(\"div\", {\n        css: messagePaneTopStyle(),\n        className: \"message_pane__top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 5\n        }\n      }, jsx(\"div\", {\n        css: messagePaneBannerStyle(this.context),\n        className: \"message_pane__banner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 6\n        }\n      }, jsx(\"div\", {\n        css: messagePaneUnreadBannerStyle(),\n        className: \"message_pane__unread_banner__banner\",\n        title: Translator.translate(\"JUMP\", this.state.lang),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 7\n        }\n      }, jsx(\"button\", {\n        type: \"button\",\n        css: messagePaneUnreadBannerMessageStyle(this.context),\n        className: \"message_pane__unread_banner__msg\",\n        onClick: this.jumpToMessages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 8\n        }\n      }, jsx(\"span\", {\n        css: iconArrowDownStyle(),\n        className: \"icon--arrow-down\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 9\n        }\n      }, \"\\u2193\", \" \"), messageText))));\n    } //if sending messages are disabled for chat wigdet in dashboard\n\n\n    if (this.getContext().type === CometChat.ACTION_TYPE.TYPE_USER && this.state.enableSendingOneOnOneMessage === false || this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP && this.state.enableSendingGroupMessage === false) {\n      messageComposer = null;\n    }\n\n    let liveReactionView = null;\n\n    if (this.state.liveReaction) {\n      liveReactionView = jsx(\"div\", {\n        css: reactionsWrapperStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 5\n        }\n      }, jsx(CometChatLiveReactions, {\n        reaction: this.reactionName,\n        theme: this.props.theme,\n        lang: this.state.lang,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 945,\n          columnNumber: 6\n        }\n      }));\n    }\n    /*\n    If used as a standalone component\n    */\n\n\n    let incomingCallView = null;\n    let incomingDirectCallView = null;\n\n    if (this.props._parent.trim().length === 0) {\n      incomingCallView = jsx(CometChatIncomingCall, {\n        theme: this.props.theme,\n        lang: this.state.lang,\n        actionGenerated: this.actionHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 23\n        }\n      });\n      incomingDirectCallView = jsx(CometChatIncomingDirectCall, {\n        theme: this.props.theme,\n        lang: this.state.lang,\n        actionGenerated: this.actionHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 958,\n          columnNumber: 29\n        }\n      });\n    } //don't include it when opened in chat widget\n\n\n    let outgoingDirectCallView = null;\n    let outgoingCallView = null;\n\n    if (Object.keys(this.props.widgetsettings).length === 0) {\n      outgoingCallView = jsx(CometChatOutgoingCall, {\n        ref: el => this.outgoingCallRef = el,\n        theme: this.props.theme,\n        lang: this.state.lang,\n        actionGenerated: this.actionHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 965,\n          columnNumber: 23\n        }\n      });\n      outgoingDirectCallView = jsx(CometChatOutgoingDirectCall, {\n        ref: el => this.outgoingDirectCallRef = el,\n        theme: this.props.theme,\n        lang: this.state.lang,\n        actionGenerated: this.actionHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 966,\n          columnNumber: 29\n        }\n      });\n    }\n\n    let detailScreen = null;\n\n    if (this.state.viewdetailscreen) {\n      if (this.getContext().type === CometChat.ACTION_TYPE.TYPE_USER) {\n        detailScreen = jsx(\"div\", {\n          css: chatSecondaryStyle(this.props, this.context),\n          className: \"chat__secondary-view\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 973,\n            columnNumber: 6\n          }\n        }, jsx(CometChatUserDetails, {\n          theme: this.props.theme,\n          lang: this.state.lang,\n          actionGenerated: this.actionHandler,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 974,\n            columnNumber: 7\n          }\n        }));\n      } else if (this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP) {\n        detailScreen = jsx(\"div\", {\n          css: chatSecondaryStyle(this.props, this.context),\n          className: \"chat__secondary-view\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 979,\n            columnNumber: 6\n          }\n        }, jsx(CometChatGroupDetails, {\n          theme: this.props.theme,\n          lang: this.state.lang,\n          actionGenerated: this.actionHandler,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 7\n          }\n        }));\n      }\n    }\n\n    let threadMessageView = null;\n\n    if (this.state.threadmessageview) {\n      threadMessageView = jsx(\"div\", {\n        css: chatSecondaryStyle(this.props, this.context),\n        className: \"chat__secondary-view\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 989,\n          columnNumber: 5\n        }\n      }, jsx(CometChatMessageThread, {\n        theme: this.props.theme,\n        activeTab: this.state.activeTab,\n        threadItem: this.state.threadmessageitem,\n        threadType: this.state.threadmessagetype,\n        parentMessage: this.state.threadmessageparent,\n        loggedInUser: this.loggedInUser,\n        lang: this.state.lang,\n        widgetsettings: this.props.widgetsettings,\n        actionGenerated: this.actionHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 990,\n          columnNumber: 6\n        }\n      }));\n    }\n\n    let originalImageView = null;\n\n    if (this.state.viewOriginalImage) {\n      originalImageView = jsx(CometChatImageViewer, {\n        close: () => this.toggleOriginalImageView(false),\n        message: this.state.viewOriginalImage,\n        lang: this.state.lang,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1007,\n          columnNumber: 24\n        }\n      });\n    }\n\n    let messageComponent = jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1011,\n        columnNumber: 4\n      }\n    }, jsx(\"div\", {\n      css: chatWrapperStyle(this.props, this.state, this.context),\n      className: \"main__chat\",\n      dir: Translator.getDirection(this.state.lang),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1012,\n        columnNumber: 5\n      }\n    }, jsx(CometChatMessageHeader, {\n      sidebar: this.props.sidebar,\n      theme: this.props.theme,\n      lang: this.state.lang,\n      viewdetail: this.props.viewdetail === false ? false : true,\n      widgetsettings: this.props.widgetsettings,\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1013,\n        columnNumber: 6\n      }\n    }), jsx(CometChatMessageList, {\n      ref: el => {\n        this.messageListRef = el;\n      },\n      theme: this.props.theme,\n      messages: this.state.messageList,\n      lang: this.state.lang,\n      scrollToBottom: this.state.scrollToBottom,\n      messageconfig: this.props.messageconfig,\n      widgetsettings: this.props.widgetsettings,\n      widgetconfig: this.props.widgetconfig,\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1014,\n        columnNumber: 6\n      }\n    }), liveReactionView, messageComposer, newMessageIndicator), jsx(CometChatToastNotification, {\n      ref: el => this.toastRef = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1031,\n        columnNumber: 5\n      }\n    }), originalImageView, detailScreen, threadMessageView, incomingCallView, outgoingCallView, incomingDirectCallView, outgoingDirectCallView);\n    let messageWrapper = messageComponent;\n    /*\n    If used as a standalone component\n    **/\n\n    if (this.props._parent.trim().length === 0) {\n      messageWrapper = jsx(CometChatContextProvider, {\n        ref: el => this.contextProviderRef = el,\n        user: this.props.chatWithUser,\n        group: this.props.chatWithGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1048,\n          columnNumber: 5\n        }\n      }, jsx(\"div\", {\n        css: chatContainerStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1049,\n          columnNumber: 6\n        }\n      }, messageComponent));\n    }\n\n    return messageWrapper;\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatMessages.contextType = CometChatContext;\nCometChatMessages.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  _parent: \"\",\n  widgetsettings: {},\n  chatWithUser: \"\",\n  chatWithGroup: \"\"\n};\nCometChatMessages.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  _parent: PropTypes.string,\n  widgetsettings: PropTypes.object,\n  chatWithUser: PropTypes.string,\n  chatWithGroup: PropTypes.string\n};\nexport { CometChatMessages };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatMessages/index.js"],"names":["React","jsx","PropTypes","CometChat","CometChatMessageHeader","CometChatMessageList","CometChatMessageComposer","CometChatLiveReactions","CometChatMessageThread","CometChatImageViewer","CometChatIncomingCall","CometChatOutgoingCall","CometChatOutgoingDirectCall","CometChatIncomingDirectCall","CometChatUserDetails","CometChatGroupDetails","CometChatToastNotification","CometChatContextProvider","CometChatContext","enums","checkMessageForExtensionsData","SoundManager","theme","Translator","chatWrapperStyle","chatSecondaryStyle","reactionsWrapperStyle","messagePaneTopStyle","messagePaneBannerStyle","messagePaneUnreadBannerStyle","messagePaneUnreadBannerMessageStyle","iconArrowDownStyle","chatContainerStyle","CometChatMessages","PureComponent","constructor","props","enableGroupActionMessages","getContext","FeatureRestriction","isGroupActionMessagesEnabled","then","response","state","setState","catch","error","enableCallActionMessages","isCallActionMessagesEnabled","enableSendingOneOnOneMessage","isOneOnOneChatEnabled","enableSendingGroupMessage","isGroupChatEnabled","enableHideDeletedMessages","isHideDeletedMessagesEnabled","_parent","length","context","contextProviderRef","actionHandler","action","messages","key","group","options","ACTIONS","message","parentMessageId","updateReplyCount","smartReplyPreview","appendMessage","play","CONSTANTS","AUDIO","actionGenerated","messageSent","setLastMessage","updateMessages","updateParentThreadedMessage","removeMessages","prependMessages","refreshingMessages","messageRefreshed","newMessagesArrived","jumpToMessages","deleteMessage","editMessage","messageEdited","clearEditPreview","GROUP_MEMBER_SCOPE_CHANGED","GROUP_MEMBER_KICKED","GROUP_MEMBER_BANNED","GROUP_MEMBER_UNBANNED","GROUP_MEMBER_ADDED","GROUP_MEMBER_LEFT","GROUP_MEMBER_JOINED","groupUpdated","INCOMING_CALL_RECEIVED","INCOMING_CALL_CANCELLED","OUTGOING_CALL_ACCEPTED","OUTGOING_CALL_REJECTED","appendCallMessage","toggleOriginalImageView","audioCall","videoCall","toggleDetailView","toggleReaction","showReaction","reactToMessage","Object","keys","widgetsettings","sessionID","type","ACTION_TYPE","TYPE_GROUP","item","guid","outgoingDirectCallRef","joinCall","viewThreadedMessage","threadMessageComposed","closeThreadedMessage","appendMemberAddedMessage","appendMemberUnbannedMessage","appendMemberScopeChangedMessage","errorHandler","infoMessageHandler","errorCode","toastRef","setError","infoCode","setInfo","messageList","forEach","eachMember","sentAt","Date","messageObj","receiver","receiverId","receiverType","RECEIVER_TYPE","GROUP","sender","loggedInUser","category","CATEGORY_ACTION","TYPE_GROUP_MEMBER","MEMBER_ADDED","actionBy","actionOn","actionFor","push","MEMBER_UNBANNED","newScope","translate","scope","lang","MEMBER_SCOPE_CHANGED","viewOriginalImage","viewdetail","viewdetailscreen","threadmessageview","parentMessage","threaditem","threadmessageparent","threadmessageitem","threadmessagetype","TYPE_USER","uid","id","getReceiverDetails","USER","call","Call","CALL_TYPE","initiateCall","outgoingCall","outgoingCallRef","startCall","VIDEO","flag","liveReaction","reaction","metadata","reactionName","messageId","deletedMessage","messageToBeEdited","messageKey","findIndex","m","replyCount","replyPreview","newMessageObj","assign","splice","_id","sort","a","b","scrollToBottom","messageToReact","clearUnreadMessages","newMessage","setUnreadMessages","markMessagesAsRead","unreadMessages","unreadMessage","getReceiverType","messageListRef","markMessageAsRead","concat","setClearedUnreadMessages","reInitializeMessageBuilder","messagelist","receivedMessage","hasOwnProperty","CATEGORY_CUSTOM","isSmartRepliesEnabled","smartReplyData","composerRef","toggleEmojiPicker","createRef","componentDidMount","getLoggedinUser","user","componentDidUpdate","prevProps","prevState","ifChatWindowChanged","output","directCallCustomMessage","directCallCustomMessageAction","trim","customMessage","messageAction","setTimeout","setDirectCallCustomMessage","render","chatWithUser","chatWithGroup","el","messageComposer","newMessageIndicator","unreadMessageCount","messageText","liveReactionView","incomingCallView","incomingDirectCallView","outgoingDirectCallView","outgoingCallView","detailScreen","threadMessageView","activeTab","originalImageView","messageComponent","getDirection","sidebar","messageconfig","widgetconfig","messageWrapper","contextType","defaultProps","getDefaultLanguage","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport {jsx} from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport {CometChat} from \"@cometchat-pro/chat\";\n\nimport {\n\tCometChatMessageHeader, \n\tCometChatMessageList, \n\tCometChatMessageComposer, \n\tCometChatLiveReactions, \n\tCometChatMessageThread, \n\tCometChatImageViewer\n} from \"../\";\n\nimport {\n\tCometChatIncomingCall, \n\tCometChatOutgoingCall, \n\tCometChatOutgoingDirectCall, \n\tCometChatIncomingDirectCall\n} from \"../../Calls\";\n\nimport {CometChatUserDetails} from \"../../Users\";\nimport {CometChatGroupDetails} from \"../../Groups\";\nimport { CometChatToastNotification } from \"../../Shared\";\n\nimport {CometChatContextProvider, CometChatContext} from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport {checkMessageForExtensionsData} from \"../../../util/common\";\nimport {SoundManager} from \"../../../util/SoundManager\";\n\nimport {theme} from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\n\nimport {\n\tchatWrapperStyle, \n\tchatSecondaryStyle, \n\treactionsWrapperStyle, \n\tmessagePaneTopStyle, \n\tmessagePaneBannerStyle, \n\tmessagePaneUnreadBannerStyle, \n\tmessagePaneUnreadBannerMessageStyle, \n\ticonArrowDownStyle, \n\tchatContainerStyle\n} from \"./style\";\n\nclass CometChatMessages extends React.PureComponent {\n\tstatic contextType = CometChatContext;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tmessageList: [],\n\t\t\tscrollToBottom: true,\n\t\t\tmessageToBeEdited: \"\",\n\t\t\treplyPreview: null,\n\t\t\tliveReaction: false,\n\t\t\tmessageToReact: null,\n\t\t\tlang: props.lang,\n\t\t\tunreadMessages: [],\n\t\t\tviewdetailscreen: false,\n\t\t\tthreadmessageview: false,\n\t\t\tthreadmessagetype: null,\n\t\t\tthreadmessageitem: {},\n\t\t\tthreadmessageparent: {},\n\t\t\tviewOriginalImage: false,\n\t\t\tenableGroupActionMessages: false,\n\t\t\tenableCallActionMessages: false,\n\t\t\tenableSendingOneOnOneMessage: false,\n\t\t\tenableSendingGroupMessage: false,\n\t\t\tenableHideDeletedMessages: false,\n\t\t};\n\n\t\tthis.contextProviderRef = React.createRef();\n\t\tthis.composerRef = React.createRef();\n\t\tthis.messageListRef = React.createRef();\n\t\tthis.outgoingCallRef = React.createRef();\n\t\tthis.outgoingDirectCallRef = React.createRef();\n\t\tthis.toastRef = React.createRef();\n\n\t\tthis.reactionName = \"heart\";\n\t}\n\n\tcomponentDidMount() {\n\t\tCometChat.getLoggedinUser()\n\t\t\t.then(user => (this.loggedInUser = user))\n\t\t\t.catch(error => this.errorHandler(\"SOMETHING_WRONG\"));\n\n\t\tthis.type = this.getContext().type;\n\t\tthis.item = this.getContext().item;\n\n\t\tthis.enableGroupActionMessages();\n\t\tthis.enableCallActionMessages();\n\t\tthis.enableSendingOneOnOneMessage();\n\t\tthis.enableSendingGroupMessage();\n\t\tthis.enableHideDeletedMessages();\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (Object.keys(this.item).length) {\n\t\t\tconst ifChatWindowChanged = () => {\n\t\t\t\tlet output = false;\n\n\t\t\t\tif (this.getContext().type === CometChat.ACTION_TYPE.TYPE_USER && this.getContext().item.uid !== this.item.uid) {\n\t\t\t\t\toutput = true;\n\t\t\t\t} else if (this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP && this.getContext().item.guid !== this.item.guid) {\n\t\t\t\t\toutput = true;\n\t\t\t\t} else if (this.type !== this.getContext().type) {\n\t\t\t\t\toutput = true;\n\t\t\t\t}\n\n\t\t\t\treturn output;\n\t\t\t};\n\n\t\t\tif (ifChatWindowChanged() === true) {\n\t\t\t\tthis.setState({ messageList: [], scrollToBottom: true, messageToBeEdited: \"\", threadmessageview: false, viewdetailscreen: false });\n\t\t\t}\n\t\t}\n\n\t\tthis.type = this.getContext().type;\n\t\tthis.item = this.getContext().type === CometChat.ACTION_TYPE.TYPE_USER || CometChat.ACTION_TYPE.TYPE_GROUP ? this.getContext().item : {};\n\n\t\tthis.enableGroupActionMessages();\n\t\tthis.enableCallActionMessages();\n\t\tthis.enableSendingOneOnOneMessage();\n\t\tthis.enableSendingGroupMessage();\n\t\tthis.enableHideDeletedMessages();\n\n\t\tif (prevProps.lang !== this.props.lang) {\n\t\t\tthis.setState({ lang: this.props.lang });\n\t\t}\n\n\t\t/**\n\t\t * Custom message to be appended or updated for direct calling\n\t\t */\n\t\tif (Object.keys(this.props.widgetsettings).length) {\n\t\t\tif (\n\t\t\t\tObject.keys(this.getContext().directCallCustomMessage).length &&\n\t\t\t\tthis.getContext().directCallCustomMessageAction.trim().length &&\n\t\t\t\t(this.getContext().directCallCustomMessage !== this.directCallCustomMessage || this.getContext().directCallCustomMessageAction !== this.directCallCustomMessageAction)\n\t\t\t) {\n\t\t\t\tconst customMessage = this.getContext().directCallCustomMessage;\n\t\t\t\tconst messageAction = this.getContext().directCallCustomMessageAction.trim();\n\n\t\t\t\tswitch (messageAction) {\n\t\t\t\t\tcase enums.ACTIONS[\"MESSAGE_COMPOSED\"]:\n\t\t\t\t\t\tthis.appendMessage(customMessage);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase enums.ACTIONS[\"MESSAGE_SENT\"]:\n\t\t\t\t\tcase enums.ACTIONS[\"ERROR_IN_SENDING_MESSAGE\"]: {\n\t\t\t\t\t\tthis.messageSent(customMessage);\n\t\t\t\t\t\tthis.getContext().setLastMessage(customMessage[0]);\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tthis.getContext().setDirectCallCustomMessage({}, \"\");\n\t\t\t\t\t\t}, 1000);\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.directCallCustomMessage = this.getContext().directCallCustomMessage;\n\t\t\tthis.directCallCustomMessageAction = this.getContext().directCallCustomMessageAction.trim();\n\t\t}\n\t}\n\n\tenableGroupActionMessages = () => {\n\t\tthis.getContext()\n\t\t\t.FeatureRestriction.isGroupActionMessagesEnabled()\n\t\t\t.then(response => {\n\t\t\t\t/**\n\t\t\t\t * Don't update state if the response has the same value\n\t\t\t\t */\n\t\t\t\tif (response !== this.state.enableGroupActionMessages) {\n\t\t\t\t\tthis.setState({ enableGroupActionMessages: response });\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tif (this.state.enableGroupActionMessages !== false) {\n\t\t\t\t\tthis.setState({ enableGroupActionMessages: false });\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tenableCallActionMessages = () => {\n\t\tthis.getContext()\n\t\t\t.FeatureRestriction.isCallActionMessagesEnabled()\n\t\t\t.then(response => {\n\t\t\t\t/**\n\t\t\t\t * Don't update state if the response has the same value\n\t\t\t\t */\n\t\t\t\tif (response !== this.state.enableCallActionMessages) {\n\t\t\t\t\tthis.setState({ enableCallActionMessages: response });\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tif (this.state.enableCallActionMessages !== false) {\n\t\t\t\t\tthis.setState({ enableCallActionMessages: false });\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tenableSendingOneOnOneMessage = () => {\n\t\tthis.getContext()\n\t\t\t.FeatureRestriction.isOneOnOneChatEnabled()\n\t\t\t.then(response => {\n\t\t\t\tif (response !== this.state.enableSendingOneOnOneMessage) {\n\t\t\t\t\tthis.setState({ enableSendingOneOnOneMessage: response });\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tif (this.state.enableSendingOneOnOneMessage !== false) {\n\t\t\t\t\tthis.setState({ enableSendingOneOnOneMessage: false });\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tenableSendingGroupMessage = () => {\n\t\tthis.getContext()\n\t\t\t.FeatureRestriction.isGroupChatEnabled()\n\t\t\t.then(response => {\n\t\t\t\tif (response !== this.state.enableSendingGroupMessage) {\n\t\t\t\t\tthis.setState({ enableSendingGroupMessage: response });\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tif (this.state.enableSendingGroupMessage !== false) {\n\t\t\t\t\tthis.setState({ enableSendingGroupMessage: false });\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tenableHideDeletedMessages = () => {\n\t\tthis.getContext()\n\t\t\t.FeatureRestriction.isHideDeletedMessagesEnabled()\n\t\t\t.then(response => {\n\t\t\t\tif (response !== this.state.enableHideDeletedMessages) {\n\t\t\t\t\tthis.setState({ enableHideDeletedMessages: response });\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tif (this.state.enableHideDeletedMessages !== false) {\n\t\t\t\t\tthis.setState({ enableHideDeletedMessages: false });\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tgetContext = () => {\n\t\tif (this.props._parent.length) {\n\t\t\treturn this.context;\n\t\t} else {\n\t\t\treturn this.contextProviderRef.state;\n\t\t}\n\t};\n\n\tactionHandler = (action, messages, key, group, options) => {\n\t\tswitch (action) {\n\t\t\tcase enums.ACTIONS[\"CUSTOM_MESSAGE_RECEIVED\"]:\n\t\t\tcase enums.ACTIONS[\"MESSAGE_RECEIVED\"]:\n\t\t\t\t{\n\t\t\t\t\tconst message = messages[0];\n\t\t\t\t\tif (message.parentMessageId) {\n\t\t\t\t\t\tthis.updateReplyCount(messages);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.smartReplyPreview(messages);\n\t\t\t\t\t\tthis.appendMessage(messages);\n\t\t\t\t\t}\n\n\t\t\t\t\tSoundManager.play(enums.CONSTANTS.AUDIO[\"INCOMING_MESSAGE\"], this.getContext());\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"MESSAGE_READ\"]: {\n\t\t\t\tif (this.props?.actionGenerated) {\n\t\t\t\t\tthis.props?.actionGenerated(action, messages);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase enums.ACTIONS[\"MESSAGE_COMPOSED\"]: {\n\t\t\t\tthis.appendMessage(messages);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase enums.ACTIONS[\"MESSAGE_SENT\"]:\n\t\t\t\tthis.messageSent(messages);\n\t\t\t\tthis.getContext().setLastMessage(messages[0]);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"ERROR_IN_SENDING_MESSAGE\"]:\n\t\t\t\tthis.messageSent(messages);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"ON_MESSAGE_READ_DELIVERED\"]:\n\t\t\t\tthis.updateMessages(messages);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"ON_MESSAGE_EDITED\"]: {\n\t\t\t\tthis.updateMessages(messages);\n\t\t\t\t//update the parent message of thread message\n\t\t\t\tthis.updateParentThreadedMessage(key, \"edit\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase enums.ACTIONS[\"ON_MESSAGE_DELETED\"]: {\n\t\t\t\tthis.removeMessages(messages);\n\t\t\t\t//remove the thread message\n\t\t\t\tthis.updateParentThreadedMessage(messages[0], \"delete\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase enums.ACTIONS[\"MESSAGES_FETCHED\"]:\n\t\t\t\tthis.prependMessages(messages);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"REFRESHING_MESSAGES\"]:\n\t\t\t\tthis.refreshingMessages();\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"MESSAGES_REFRESHED\"]:\n\t\t\t\tthis.messageRefreshed(messages);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"NEW_MESSAGES\"]:\n\t\t\t\tthis.newMessagesArrived(messages);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"CLEAR_UNREAD_MESSAGES\"]:\n\t\t\t\tthis.jumpToMessages(true);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"DELETE_MESSAGE\"]:\n\t\t\t\tthis.deleteMessage(messages);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"EDIT_MESSAGE\"]:\n\t\t\t\tthis.editMessage(messages);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"MESSAGE_EDITED\"]:\n\t\t\t\tthis.messageEdited(messages);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"CLEAR_EDIT_PREVIEW\"]:\n\t\t\t\tthis.clearEditPreview();\n\t\t\t\tbreak;\n\t\t\tcase enums.GROUP_MEMBER_SCOPE_CHANGED:\n\t\t\tcase enums.GROUP_MEMBER_KICKED:\n\t\t\tcase enums.GROUP_MEMBER_BANNED:\n\t\t\tcase enums.GROUP_MEMBER_UNBANNED:\n\t\t\tcase enums.GROUP_MEMBER_ADDED:\n\t\t\tcase enums.GROUP_MEMBER_LEFT:\n\t\t\tcase enums.GROUP_MEMBER_JOINED:\n\t\t\t\tthis.groupUpdated(action, messages, group, options);\n\t\t\t\tbreak;\n\t\t\tcase enums.INCOMING_CALL_RECEIVED:\n\t\t\tcase enums.INCOMING_CALL_CANCELLED:\n\t\t\tcase enums.OUTGOING_CALL_ACCEPTED:\n\t\t\tcase enums.OUTGOING_CALL_REJECTED:\n\t\t\t\tthis.appendCallMessage(messages);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"VIEW_ORIGINAL_IMAGE\"]:\n\t\t\t\tthis.toggleOriginalImageView(messages);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"INITIATE_AUDIO_CALL\"]:\n\t\t\t\tthis.audioCall();\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"INITIATE_VIDEO_CALL\"]:\n\t\t\t\tthis.videoCall();\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"VIEW_DETAIL\"]:\n\t\t\tcase enums.ACTIONS[\"CLOSE_GROUP_DETAIL\"]:\n\t\t\tcase enums.ACTIONS[\"CLOSE_USER_DETAIL\"]:\n\t\t\t\tthis.toggleDetailView();\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"TOGGLE_SIDEBAR\"]:\n\t\t\t\tthis.toggleDetailView();\n\t\t\t\tthis.props.actionGenerated(action);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"SEND_LIVE_REACTION\"]:\n\t\t\t\tthis.toggleReaction(true);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"SHOW_LIVE_REACTION\"]:\n\t\t\t\tthis.showReaction(messages);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"STOP_LIVE_REACTION\"]:\n\t\t\t\tthis.toggleReaction(false);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"REACT_TO_MESSAGE\"]:\n\t\t\t\tthis.reactToMessage(messages);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"OUTGOING_CALL_ACCEPTED\"]:\n\t\t\tcase enums.ACTIONS[\"USER_JOINED_CALL\"]:\n\t\t\tcase enums.ACTIONS[\"USER_LEFT_CALL\"]:\n\t\t\tcase enums.ACTIONS[\"OUTGOING_CALL_ENDED\"]:\n\t\t\tcase enums.ACTIONS[\"OUTGOING_CALL_REJECTED\"]:\n\t\t\tcase enums.ACTIONS[\"OUTGOING_CALL_CANCELLED\"]:\n\t\t\tcase enums.ACTIONS[\"INCOMING_CALL_ACCEPTED\"]:\n\t\t\tcase enums.ACTIONS[\"INCOMING_CALL_ENDED\"]:\n\t\t\tcase enums.ACTIONS[\"INCOMING_CALL_REJECTED\"]:\n\t\t\tcase enums.ACTIONS[\"DIRECT_CALL_ENDED\"]:\n\t\t\tcase enums.ACTIONS[\"DIRECT_CALL_ERROR\"]:\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"JOIN_DIRECT_CALL\"]: {\n\t\t\t\t//if used in a chat widget, trigger the event to the app component as directcall component is included outside of iframe\n\t\t\t\tif (Object.keys(this.props.widgetsettings).length) {\n\t\t\t\t\tthis.props.actionGenerated(action, messages);\n\t\t\t\t} else {\n\t\t\t\t\tconst sessionID = this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP ? this.getContext().item.guid : null;\n\t\t\t\t\tthis.outgoingDirectCallRef.joinCall(sessionID);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase enums.ACTIONS[\"VIEW_THREADED_MESSAGE\"]:\n\t\t\t\tthis.viewThreadedMessage(messages);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"THREAD_MESSAGE_COMPOSED\"]:\n\t\t\t\tthis.threadMessageComposed(messages);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"CLOSE_THREADED_MESSAGE\"]:\n\t\t\t\tthis.closeThreadedMessage();\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"ADD_GROUP_MEMBER_SUCCESS\"]:\n\t\t\t\tthis.appendMemberAddedMessage(messages);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"UNBAN_GROUP_MEMBER_SUCCESS\"]:\n\t\t\t\tthis.appendMemberUnbannedMessage(messages);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"SCOPECHANGE_GROUPMEMBER_SUCCESS\"]:\n\t\t\t\tthis.appendMemberScopeChangedMessage(messages);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"ERROR\"]:\n\t\t\t\tthis.errorHandler(key);\n\t\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"INFO\"]:\n\t\t\t\tthis.infoMessageHandler(key);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\terrorHandler = errorCode => {\n\t\tif (typeof this.toastRef.setError === \"function\") {\n\t\t\tthis.toastRef?.setError(errorCode);\n\t\t}\n\t};\n\n\tinfoMessageHandler = (infoCode) => {\n\t\tif (typeof this.toastRef.setInfo === \"function\") {\n\t\t\tthis.toastRef?.setInfo(infoCode);\n\t\t}\n\t}\n\n\tappendMemberAddedMessage = messages => {\n\t\t//if group action messages are disabled\n\t\tif (this.state.enableGroupActionMessages === false) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst messageList = [];\n\t\tmessages.forEach(eachMember => {\n\t\t\tconst sentAt = (new Date() / 1000) | 0;\n\t\t\tconst messageObj = {\n\t\t\t\treceiver: { ...this.context.item },\n\t\t\t\treceiverId: this.context.item.guid,\n\t\t\t\treceiverType: CometChat.RECEIVER_TYPE.GROUP,\n\t\t\t\tsender: { ...this.loggedInUser },\n\t\t\t\tcategory: CometChat.CATEGORY_ACTION,\n\t\t\t\ttype: CometChat.ACTION_TYPE.TYPE_GROUP_MEMBER,\n\t\t\t\tsentAt: sentAt,\n\t\t\t\taction: CometChat.ACTION_TYPE.MEMBER_ADDED,\n\t\t\t\tactionBy: { ...this.loggedInUser },\n\t\t\t\tactionOn: { ...eachMember },\n\t\t\t\tactionFor: { ...this.context.item },\n\t\t\t};\n\n\t\t\tmessageList.push(messageObj);\n\t\t});\n\n\t\tthis.appendMessage(messageList);\n\t};\n\n\tappendMemberUnbannedMessage = messages => {\n\t\t//if group action messages are disabled\n\t\tif (this.state.enableGroupActionMessages === false) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst messageList = [];\n\t\tmessages.forEach(eachMember => {\n\t\t\tconst sentAt = (new Date() / 1000) | 0;\n\t\t\tconst messageObj = {\n\t\t\t\treceiver: { ...this.context.item },\n\t\t\t\treceiverId: this.context.item.guid,\n\t\t\t\treceiverType: CometChat.RECEIVER_TYPE.GROUP,\n\t\t\t\tsender: { ...this.loggedInUser },\n\t\t\t\tcategory: CometChat.CATEGORY_ACTION,\n\t\t\t\ttype: CometChat.ACTION_TYPE.TYPE_GROUP_MEMBER,\n\t\t\t\tsentAt: sentAt,\n\t\t\t\taction: CometChat.ACTION_TYPE.MEMBER_UNBANNED,\n\t\t\t\tactionBy: { ...this.loggedInUser },\n\t\t\t\tactionOn: { ...eachMember },\n\t\t\t};\n\n\t\t\tmessageList.push(messageObj);\n\t\t});\n\n\t\tthis.appendMessage(messageList);\n\t};\n\n\tappendMemberScopeChangedMessage = messages => {\n\t\t//if group action messages are disabled\n\t\tif (this.state.enableGroupActionMessages === false) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst messageList = [];\n\n\t\tmessages.forEach(eachMember => {\n\t\t\tconst newScope = Translator.translate(eachMember.scope, this.state.lang);\n\n\t\t\tconst sentAt = (new Date() / 1000) | 0;\n\t\t\tconst messageObj = {\n\t\t\t\treceiver: { ...this.context.item },\n\t\t\t\treceiverId: this.context.item.guid,\n\t\t\t\treceiverType: CometChat.RECEIVER_TYPE.GROUP,\n\t\t\t\tsender: { ...this.loggedInUser },\n\t\t\t\tcategory: CometChat.CATEGORY_ACTION,\n\t\t\t\ttype: CometChat.ACTION_TYPE.TYPE_GROUP_MEMBER,\n\t\t\t\tsentAt: sentAt,\n\t\t\t\taction: CometChat.ACTION_TYPE.MEMBER_SCOPE_CHANGED,\n\t\t\t\tactionBy: { ...this.loggedInUser },\n\t\t\t\tactionOn: { ...eachMember },\n\t\t\t\tnewScope: newScope,\n\t\t\t};\n\t\t\tmessageList.push(messageObj);\n\t\t});\n\n\t\tthis.appendMessage(messageList);\n\t};\n\n\ttoggleOriginalImageView = message => {\n\t\tthis.setState({ viewOriginalImage: message });\n\t};\n\n\ttoggleDetailView = () => {\n\t\tlet viewdetail = !this.state.viewdetailscreen;\n\t\tthis.setState({ viewdetailscreen: viewdetail, threadmessageview: false });\n\t};\n\n\tviewThreadedMessage = parentMessage => {\n\t\tconst message = { ...parentMessage };\n\t\tconst threaditem = { ...this.getContext().item };\n\t\tthis.setState({\n\t\t\tthreadmessageview: true,\n\t\t\tthreadmessageparent: message,\n\t\t\tthreadmessageitem: threaditem,\n\t\t\tthreadmessagetype: this.getContext().type,\n\t\t\tviewdetailscreen: false,\n\t\t});\n\t};\n\n\tthreadMessageComposed = messages => {\n\t\tif (this.getContext().type !== this.state.threadmessagetype) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ((this.state.threadmessagetype === CometChat.ACTION_TYPE.TYPE_GROUP && this.getContext().item.guid !== this.state.threadmessageitem.guid) || (this.state.threadmessagetype === CometChat.ACTION_TYPE.TYPE_USER && this.getContext().item.uid !== this.state.threadmessageitem.uid)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.updateReplyCount(messages);\n\t};\n\n\tcloseThreadedMessage = () => {\n\t\tthis.setState({ threadmessageview: false, viewdetailscreen: false });\n\t};\n\n\t/*\n\tUpdating parent message of threaded conversation, when the message is edited or deleted\n\t*/\n\tupdateParentThreadedMessage = (message, action) => {\n\t\tif (this.state.threadmessageview === false || message.id !== this.state.threadmessageparent.id) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (action === \"delete\") {\n\t\t\tthis.setState({ threadmessageparent: { ...message }, threadmessageview: false });\n\t\t} else {\n\t\t\tthis.setState({ threadmessageparent: { ...message } });\n\t\t}\n\t};\n\n\tgetReceiverDetails = () => {\n\t\tlet receiverId;\n\t\tlet receiverType;\n\n\t\tif (this.getContext().type === CometChat.ACTION_TYPE.TYPE_USER) {\n\t\t\treceiverId = this.getContext().item.uid;\n\t\t\treceiverType = CometChat.RECEIVER_TYPE.USER;\n\t\t} else if (this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP) {\n\t\t\treceiverId = this.getContext().item.guid;\n\t\t\treceiverType = CometChat.RECEIVER_TYPE.GROUP;\n\t\t}\n\n\t\treturn { receiverId: receiverId, receiverType: receiverType };\n\t};\n\n\taudioCall = () => {\n\t\tconst { receiverId, receiverType } = this.getReceiverDetails();\n\t\tconst call = new CometChat.Call(receiverId, CometChat.CALL_TYPE.AUDIO, receiverType);\n\t\tCometChat.initiateCall(call)\n\t\t\t.then(outgoingCall => {\n\t\t\t\t//when this component is part of chat widget trigger an event.. (outgoingcall component is used separately in chat widget)\n\t\t\t\tif (Object.keys(this.props.widgetsettings).length) {\n\t\t\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"START_AUDIO_CALL\"], outgoingCall);\n\t\t\t\t} else {\n\t\t\t\t\tthis.outgoingCallRef.startCall(outgoingCall);\n\t\t\t\t\tthis.appendCallMessage(outgoingCall);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => this.errorHandler(\"SOMETHING_WRONG\"));\n\t};\n\n\tvideoCall = () => {\n\t\t/*\n\t\tDirect calling for groups\n\t\t*/\n\t\tif (this.getContext().type === CometChat.RECEIVER_TYPE.GROUP) {\n\t\t\tif (Object.keys(this.props.widgetsettings).length) {\n\t\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"START_DIRECT_CALL\"]);\n\t\t\t} else {\n\t\t\t\tconst sessionID = this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP ? this.getContext().item.guid : null;\n\t\t\t\tthis.outgoingDirectCallRef.startCall(sessionID);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t/*\n\t\tDefault calling for one-on-one\n\t\t*/\n\t\tconst { receiverId, receiverType } = this.getReceiverDetails();\n\t\tconst call = new CometChat.Call(receiverId, CometChat.CALL_TYPE.VIDEO, receiverType);\n\t\tCometChat.initiateCall(call)\n\t\t\t.then(outgoingCall => {\n\t\t\t\t//when this component is part of chat widget trigger an event.. (outgoingcall component is used separately in chat widget)\n\t\t\t\tif (Object.keys(this.props.widgetsettings).length) {\n\t\t\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"START_VIDEO_CALL\"], outgoingCall);\n\t\t\t\t} else {\n\t\t\t\t\tthis.outgoingCallRef.startCall(outgoingCall);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => this.errorHandler(\"SOMETHING_WRONG\"));\n\t};\n\n\ttoggleReaction = flag => {\n\t\tthis.setState({ liveReaction: flag });\n\t};\n\n\tshowReaction = reaction => {\n\t\tif (reaction.metadata.type === enums.CONSTANTS[\"METADATA_TYPE_LIVEREACTION\"]) {\n\t\t\tthis.reactionName = reaction.metadata.reaction;\n\t\t\tthis.setState({ liveReaction: true });\n\t\t}\n\t};\n\n\tdeleteMessage = message => {\n\t\tconst messageId = message.id;\n\t\tCometChat.deleteMessage(messageId)\n\t\t\t.then(deletedMessage => {\n\t\t\t\t//remove edit preview when message is deleted\n\t\t\t\tif (deletedMessage.id === this.state.messageToBeEdited.id) {\n\t\t\t\t\tthis.setState({ messageToBeEdited: \"\" });\n\t\t\t\t}\n\n\t\t\t\tconst messageList = [...this.state.messageList];\n\t\t\t\tlet messageKey = messageList.findIndex(m => m.id === message.id);\n\n\t\t\t\tif (messageList.length - messageKey === 1 && !message.replyCount) {\n\t\t\t\t\tthis.getContext().setLastMessage(deletedMessage);\n\t\t\t\t}\n\n\t\t\t\tthis.removeMessages([deletedMessage]);\n\t\t\t\tthis.updateParentThreadedMessage(deletedMessage, \"delete\");\n\t\t\t})\n\t\t\t.catch(error => this.errorHandler(\"SOMETHING_WRONG\"));\n\t};\n\n\teditMessage = message => {\n\t\tthis.setState({ messageToBeEdited: message, replyPreview: null });\n\t};\n\n\tmessageEdited = message => {\n\t\tconst messageList = [...this.state.messageList];\n\t\tlet messageKey = messageList.findIndex(m => m.id === message.id);\n\t\tif (messageKey > -1) {\n\t\t\tconst messageObj = messageList[messageKey];\n\n\t\t\tconst newMessageObj = Object.assign({}, messageObj, message);\n\n\t\t\tmessageList.splice(messageKey, 1, newMessageObj);\n\t\t\tthis.updateMessages(messageList);\n\n\t\t\tthis.updateParentThreadedMessage(newMessageObj, \"edit\");\n\n\t\t\tif (messageList.length - messageKey === 1 && !message.replyCount) {\n\t\t\t\tthis.getContext().setLastMessage(newMessageObj);\n\t\t\t}\n\t\t}\n\t};\n\n\tmessageSent = messages => {\n\t\tconst message = messages[0];\n\t\tconst messageList = [...this.state.messageList];\n\n\t\tlet messageKey = messageList.findIndex(m => m._id === message._id);\n\t\tif (messageKey > -1) {\n\t\t\tconst newMessageObj = { ...message };\n\n\t\t\tmessageList.splice(messageKey, 1, newMessageObj);\n\t\t\tmessageList.sort((a, b) => a.id - b.id);\n\t\t\tthis.setState({ messageList: messageList, scrollToBottom: true });\n\t\t}\n\t};\n\n\trefreshingMessages = () => {\n\t\tthis.setState({ messageList: [], messageToBeEdited: \"\", replyPreview: null, liveReaction: false, messageToReact: null });\n\t\tthis.getContext().clearUnreadMessages();\n\t};\n\n\tmessageRefreshed = messages => {\n\t\tconst messageList = [...messages];\n\t\tthis.setState({ messageList: messageList, scrollToBottom: true });\n\t};\n\n\tnewMessagesArrived = newMessage => {\n\t\tthis.getContext().setUnreadMessages(newMessage);\n\t};\n\n\tmarkMessagesAsRead = scrollToBottom => {\n\t\tif (this.getContext().unreadMessages.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet unreadMessages = [...this.getContext().unreadMessages];\n\t\tlet messageList = [...this.state.messageList];\n\n\t\tunreadMessages.forEach(unreadMessage => {\n\t\t\tif (unreadMessage.getReceiverType() === CometChat.RECEIVER_TYPE.USER) {\n\t\t\t\tif (this.messageListRef) {\n\t\t\t\t\tmessageList.push(unreadMessage);\n\t\t\t\t\tthis.messageListRef.markMessageAsRead(unreadMessage, CometChat.ACTION_TYPE.TYPE_USER);\n\t\t\t\t}\n\t\t\t} else if (unreadMessage.getReceiverType() === CometChat.RECEIVER_TYPE.GROUP) {\n\t\t\t\tif (this.messageListRef) {\n\t\t\t\t\tmessageList.push(unreadMessage);\n\t\t\t\t\tthis.messageListRef.markMessageAsRead(unreadMessage, CometChat.ACTION_TYPE.TYPE_GROUP);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.getContext().clearUnreadMessages();\n\t\t//this.props.actionGenerated(\"unreadMessages\", []);\n\n\t\tthis.setState({ messageList: messageList, scrollToBottom: scrollToBottom });\n\t};\n\n\tjumpToMessages = () => {\n\t\tif (this.getContext().unreadMessages.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet unreadMessages = [...this.getContext().unreadMessages];\n\t\tlet messageList = [...this.state.messageList];\n\t\tmessageList = messageList.concat(unreadMessages);\n\n\t\tthis.getContext().clearUnreadMessages();\n\t\tthis.getContext().setClearedUnreadMessages(true);\n\n\t\tif (messageList.length > enums.CONSTANTS[\"MAX_MESSAGE_COUNT\"]) {\n\t\t\tif (this.messageListRef) {\n\t\t\t\tthis.messageListRef.reInitializeMessageBuilder();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.markMessagesAsRead(true);\n\t\t}\n\t};\n\n\t//messages are deleted\n\tremoveMessages = messages => {\n\t\tconst deletedMessage = messages[0];\n\t\tconst messagelist = [...this.state.messageList];\n\n\t\tlet messageKey = messagelist.findIndex(message => message.id === deletedMessage.id);\n\t\tif (messageKey > -1) {\n\t\t\tif (this.state.enableHideDeletedMessages) {\n\t\t\t\tmessagelist.splice(messageKey, 1);\n\t\t\t} else {\n\t\t\t\tlet messageObj = { ...messagelist[messageKey] };\n\t\t\t\tlet newMessageObj = Object.assign({}, messageObj, deletedMessage);\n\n\t\t\t\tmessagelist.splice(messageKey, 1, newMessageObj);\n\t\t\t}\n\n\t\t\tthis.setState({ messageList: messagelist, scrollToBottom: false });\n\t\t}\n\t};\n\n\t//messages are fetched from backend\n\tprependMessages = messages => {\n\t\tconst messageList = [...messages, ...this.state.messageList];\n\t\tthis.setState({ messageList: messageList, scrollToBottom: false });\n\t};\n\n\t//message is received or composed & sent\n\tappendMessage = message => {\n\t\tlet messages = [...this.state.messageList, ...message];\n\t\tthis.setState({ messageList: messages, scrollToBottom: true });\n\t};\n\n\t//message status is updated\n\tupdateMessages = messages => {\n\t\tthis.setState({ messageList: messages, scrollToBottom: false });\n\t};\n\n\tgroupUpdated = (action, message, group, options) => {\n\t\t//if group action messages are disabled\n\t\tif (this.state.enableGroupActionMessages === true) {\n\t\t\tthis.appendMessage([message]);\n\t\t}\n\n\t\tthis.props.actionGenerated(action, message, group, options);\n\t};\n\n\tappendCallMessage = message => {\n\t\t//if call action messages are disabled\n\t\tif (this.state.enableCallActionMessages === false) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.appendMessage([message]);\n\t};\n\n\tupdateReplyCount = messages => {\n\t\tconst receivedMessage = messages[0];\n\n\t\tlet messageList = [...this.state.messageList];\n\t\tlet messageKey = messageList.findIndex(m => m.id === receivedMessage.parentMessageId);\n\t\tif (messageKey > -1) {\n\t\t\tconst messageObj = messageList[messageKey];\n\t\t\tlet replyCount = messageObj.hasOwnProperty(\"replyCount\") ? messageObj.replyCount : 0;\n\t\t\treplyCount = replyCount + 1;\n\t\t\tconst newMessageObj = Object.assign({}, messageObj, { replyCount: replyCount });\n\n\t\t\tmessageList.splice(messageKey, 1, newMessageObj);\n\t\t\tthis.setState({ messageList: messageList, scrollToBottom: false });\n\t\t}\n\t};\n\n\tsmartReplyPreview = messages => {\n\t\tconst message = messages[0];\n\t\tif (message.sender.uid === this.loggedInUser.uid || message.category === CometChat.CATEGORY_CUSTOM) {\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t * If smart-replies feature is enabled\n\t\t */\n\t\tthis.getContext()\n\t\t\t.FeatureRestriction.isSmartRepliesEnabled()\n\t\t\t.then(response => {\n\t\t\t\tif (response === true) {\n\t\t\t\t\tconst smartReplyData = checkMessageForExtensionsData(message, \"smart-reply\");\n\t\t\t\t\tif (smartReplyData && smartReplyData.hasOwnProperty(\"error\") === false) {\n\t\t\t\t\t\tthis.setState({ replyPreview: message });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setState({ replyPreview: null });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tclearEditPreview = () => {\n\t\tthis.setState({ messageToBeEdited: \"\" });\n\t};\n\n\treactToMessage = message => {\n\t\tthis.setState({ messageToReact: message });\n\n\t\tif (this.composerRef) {\n\t\t\tthis.composerRef.toggleEmojiPicker();\n\t\t}\n\t};\n\n\trender() {\n\t\t/**\n\t\t * If used as standalone component\n\t\t */\n\t\tif (this.props._parent.trim().length === 0 && this.props.chatWithUser.trim().length === 0 && this.props.chatWithGroup.trim().length === 0) {\n\t\t\treturn (\n\t\t\t\t<CometChatContextProvider ref={el => (this.contextProviderRef = el)} _component={enums.CONSTANTS[\"MESSAGES_COMPONENT\"]} user={this.props.chatWithUser} group={this.props.chatWithGroup}>\n\t\t\t\t\t<div></div>\n\t\t\t\t</CometChatContextProvider>\n\t\t\t);\n\t\t} else if (this.props._parent.trim().length && Object.keys(this.getContext().item).length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet messageComposer = (\n\t\t\t<CometChatMessageComposer\n\t\t\t\tref={el => {\n\t\t\t\t\tthis.composerRef = el;\n\t\t\t\t}}\n\t\t\t\ttheme={this.props.theme}\n\t\t\t\tlang={this.state.lang}\n\t\t\t\twidgetsettings={this.props.widgetsettings}\n\t\t\t\tmessageToBeEdited={this.state.messageToBeEdited}\n\t\t\t\treplyPreview={this.state.replyPreview}\n\t\t\t\treaction={this.reactionName}\n\t\t\t\tmessageToReact={this.state.messageToReact}\n\t\t\t\tactionGenerated={this.actionHandler}\n\t\t\t/>\n\t\t);\n\n\t\tlet newMessageIndicator = null;\n\t\tif (this.getContext()?.unreadMessages.length) {\n\t\t\tconst unreadMessageCount = this.getContext().unreadMessages.length;\n\t\t\tconst messageText = unreadMessageCount > 1 ? `${unreadMessageCount} ${Translator.translate(\"NEW_MESSAGES\", this.state.lang)}` : `${unreadMessageCount} ${Translator.translate(\"NEW_MESSAGE\", this.state.lang)}`;\n\t\t\tnewMessageIndicator = (\n\t\t\t\t<div css={messagePaneTopStyle()} className=\"message_pane__top\">\n\t\t\t\t\t<div css={messagePaneBannerStyle(this.context)} className=\"message_pane__banner\">\n\t\t\t\t\t\t<div css={messagePaneUnreadBannerStyle()} className=\"message_pane__unread_banner__banner\" title={Translator.translate(\"JUMP\", this.state.lang)}>\n\t\t\t\t\t\t\t<button type=\"button\" css={messagePaneUnreadBannerMessageStyle(this.context)} className=\"message_pane__unread_banner__msg\" onClick={this.jumpToMessages}>\n\t\t\t\t\t\t\t\t<span css={iconArrowDownStyle()} className=\"icon--arrow-down\">\n\t\t\t\t\t\t\t\t\t&#x2193;{\" \"}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t{messageText}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\t//if sending messages are disabled for chat wigdet in dashboard\n\t\tif ((this.getContext().type === CometChat.ACTION_TYPE.TYPE_USER && this.state.enableSendingOneOnOneMessage === false) || (this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP && this.state.enableSendingGroupMessage === false)) {\n\t\t\tmessageComposer = null;\n\t\t}\n\n\t\tlet liveReactionView = null;\n\t\tif (this.state.liveReaction) {\n\t\t\tliveReactionView = (\n\t\t\t\t<div css={reactionsWrapperStyle()}>\n\t\t\t\t\t<CometChatLiveReactions reaction={this.reactionName} theme={this.props.theme} lang={this.state.lang} />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\t/*\n\t\tIf used as a standalone component\n\t\t*/\n\t\tlet incomingCallView = null;\n\t\tlet incomingDirectCallView = null;\n\t\tif (this.props._parent.trim().length === 0) {\n\t\t\tincomingCallView = <CometChatIncomingCall theme={this.props.theme} lang={this.state.lang} actionGenerated={this.actionHandler} />;\n\n\t\t\tincomingDirectCallView = <CometChatIncomingDirectCall theme={this.props.theme} lang={this.state.lang} actionGenerated={this.actionHandler} />;\n\t\t}\n\n\t\t//don't include it when opened in chat widget\n\t\tlet outgoingDirectCallView = null;\n\t\tlet outgoingCallView = null;\n\t\tif (Object.keys(this.props.widgetsettings).length === 0) {\n\t\t\toutgoingCallView = <CometChatOutgoingCall ref={el => (this.outgoingCallRef = el)} theme={this.props.theme} lang={this.state.lang} actionGenerated={this.actionHandler} />;\n\t\t\toutgoingDirectCallView = <CometChatOutgoingDirectCall ref={el => (this.outgoingDirectCallRef = el)} theme={this.props.theme} lang={this.state.lang} actionGenerated={this.actionHandler} />;\n\t\t}\n\n\t\tlet detailScreen = null;\n\t\tif (this.state.viewdetailscreen) {\n\t\t\tif (this.getContext().type === CometChat.ACTION_TYPE.TYPE_USER) {\n\t\t\t\tdetailScreen = (\n\t\t\t\t\t<div css={chatSecondaryStyle(this.props, this.context)} className=\"chat__secondary-view\">\n\t\t\t\t\t\t<CometChatUserDetails theme={this.props.theme} lang={this.state.lang} actionGenerated={this.actionHandler} />\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t} else if (this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP) {\n\t\t\t\tdetailScreen = (\n\t\t\t\t\t<div css={chatSecondaryStyle(this.props, this.context)} className=\"chat__secondary-view\">\n\t\t\t\t\t\t<CometChatGroupDetails theme={this.props.theme} lang={this.state.lang} actionGenerated={this.actionHandler} />\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tlet threadMessageView = null;\n\t\tif (this.state.threadmessageview) {\n\t\t\tthreadMessageView = (\n\t\t\t\t<div css={chatSecondaryStyle(this.props, this.context)} className=\"chat__secondary-view\">\n\t\t\t\t\t<CometChatMessageThread\n\t\t\t\t\t\ttheme={this.props.theme}\n\t\t\t\t\t\tactiveTab={this.state.activeTab}\n\t\t\t\t\t\tthreadItem={this.state.threadmessageitem}\n\t\t\t\t\t\tthreadType={this.state.threadmessagetype}\n\t\t\t\t\t\tparentMessage={this.state.threadmessageparent}\n\t\t\t\t\t\tloggedInUser={this.loggedInUser}\n\t\t\t\t\t\tlang={this.state.lang}\n\t\t\t\t\t\twidgetsettings={this.props.widgetsettings}\n\t\t\t\t\t\tactionGenerated={this.actionHandler}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tlet originalImageView = null;\n\t\tif (this.state.viewOriginalImage) {\n\t\t\toriginalImageView = <CometChatImageViewer close={() => this.toggleOriginalImageView(false)} message={this.state.viewOriginalImage} lang={this.state.lang} />;\n\t\t}\n\n\t\tlet messageComponent = (\n\t\t\t<React.Fragment>\n\t\t\t\t<div css={chatWrapperStyle(this.props, this.state, this.context)} className=\"main__chat\" dir={Translator.getDirection(this.state.lang)}>\n\t\t\t\t\t<CometChatMessageHeader sidebar={this.props.sidebar} theme={this.props.theme} lang={this.state.lang} viewdetail={this.props.viewdetail === false ? false : true} widgetsettings={this.props.widgetsettings} actionGenerated={this.actionHandler} />\n\t\t\t\t\t<CometChatMessageList\n\t\t\t\t\t\tref={el => {\n\t\t\t\t\t\t\tthis.messageListRef = el;\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttheme={this.props.theme}\n\t\t\t\t\t\tmessages={this.state.messageList}\n\t\t\t\t\t\tlang={this.state.lang}\n\t\t\t\t\t\tscrollToBottom={this.state.scrollToBottom}\n\t\t\t\t\t\tmessageconfig={this.props.messageconfig}\n\t\t\t\t\t\twidgetsettings={this.props.widgetsettings}\n\t\t\t\t\t\twidgetconfig={this.props.widgetconfig}\n\t\t\t\t\t\tactionGenerated={this.actionHandler}\n\t\t\t\t\t/>\n\t\t\t\t\t{liveReactionView}\n\t\t\t\t\t{messageComposer}\n\t\t\t\t\t{newMessageIndicator}\n\t\t\t\t</div>\n\t\t\t\t<CometChatToastNotification ref={el => (this.toastRef = el)} />\n\t\t\t\t{originalImageView}\n\t\t\t\t{detailScreen}\n\t\t\t\t{threadMessageView}\n\t\t\t\t{incomingCallView}\n\t\t\t\t{outgoingCallView}\n\t\t\t\t{incomingDirectCallView}\n\t\t\t\t{outgoingDirectCallView}\n\t\t\t</React.Fragment>\n\t\t);\n\n\t\tlet messageWrapper = messageComponent;\n\t\t/*\n\t\tIf used as a standalone component\n\t\t**/\n\t\tif (this.props._parent.trim().length === 0) {\n\t\t\tmessageWrapper = (\n\t\t\t\t<CometChatContextProvider ref={el => (this.contextProviderRef = el)} user={this.props.chatWithUser} group={this.props.chatWithGroup}>\n\t\t\t\t\t<div css={chatContainerStyle()}>{messageComponent}</div>\n\t\t\t\t</CometChatContextProvider>\n\t\t\t);\n\t\t}\n\n\t\treturn messageWrapper;\n\t}\n}\n\n// Specifies the default values for props:\nCometChatMessages.defaultProps = {\n\tlang: Translator.getDefaultLanguage(),\n\ttheme: theme,\n\t_parent: \"\",\n\twidgetsettings: {},\n\tchatWithUser: \"\",\n\tchatWithGroup: \"\",\n};\n\nCometChatMessages.propTypes = {\n\tlang: PropTypes.string,\n\ttheme: PropTypes.object,\n\t_parent: PropTypes.string,\n\twidgetsettings: PropTypes.object,\n\tchatWithUser: PropTypes.string,\n\tchatWithGroup: PropTypes.string,\n};\n\nexport {CometChatMessages};"]},"metadata":{},"sourceType":"module"}