{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/utils/ViewportProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect, createContext, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst viewportContext = /*#__PURE__*/createContext();\nexport function useViewportContext() {\n  _s();\n\n  return useContext(viewportContext);\n}\n\n_s(useViewportContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default function ViewportProvider({\n  children\n}) {\n  _s2();\n\n  const [width, setWidth] = useState(window.innerWidth);\n  const [show, setShow] = useState(() => {\n    if (width < 575) return {\n      convos: true,\n      messages: false\n    };\n    return {\n      convos: true,\n      messages: true\n    };\n  });\n  const mobileScreen = width < 575; //\n\n  useEffect(() => {\n    const handleWindowResize = () => setWidth(window.innerWidth);\n\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []); // This handles the changes between mobile layout and desktop layout\n\n  useEffect(() => {\n    const {\n      convos,\n      messages\n    } = show;\n\n    if (width >= 575 && (!convos || !messages)) {\n      return setShow({\n        convos: true,\n        messages: true\n      });\n    }\n\n    if (width < 575 && convos && messages) {\n      return setShow({\n        convos: true,\n        messages: false\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [width]);\n  const value = {\n    width,\n    mobileScreen,\n    show,\n    setShow\n  };\n  return /*#__PURE__*/_jsxDEV(viewportContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ViewportProvider, \"hrBJHDZLzdNBxHcY3sX8vg4EPgk=\");\n\n_c = ViewportProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewportProvider\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/utils/ViewportProvider.js"],"names":["useState","useEffect","createContext","useContext","viewportContext","useViewportContext","ViewportProvider","children","width","setWidth","window","innerWidth","show","setShow","convos","messages","mobileScreen","handleWindowResize","addEventListener","removeEventListener","value"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,aAA9B,EAA6CC,UAA7C,QAA+D,OAA/D;;AAEA,MAAMC,eAAe,gBAAGF,aAAa,EAArC;AAEA,OAAO,SAASG,kBAAT,GAA8B;AAAA;;AACnC,SAAOF,UAAU,CAACC,eAAD,CAAjB;AACD;;GAFeC,kB;;AAIhB,eAAe,SAASC,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAwC;AAAA;;AACrD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACU,MAAM,CAACC,UAAR,CAAlC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,MAAM;AACrC,QAAIQ,KAAK,GAAG,GAAZ,EAAiB,OAAO;AAAEM,MAAAA,MAAM,EAAE,IAAV;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KAAP;AACjB,WAAO;AAAED,MAAAA,MAAM,EAAE,IAAV;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KAAP;AACD,GAH+B,CAAhC;AAIA,QAAMC,YAAY,GAAGR,KAAK,GAAG,GAA7B,CANqD,CAQrD;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,kBAAkB,GAAG,MAAMR,QAAQ,CAACC,MAAM,CAACC,UAAR,CAAzC;;AACAD,IAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkCD,kBAAlC;AACA,WAAO,MAAMP,MAAM,CAACS,mBAAP,CAA2B,QAA3B,EAAqCF,kBAArC,CAAb;AACD,GAJQ,EAIN,EAJM,CAAT,CATqD,CAerD;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEa,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAuBH,IAA7B;;AAEA,QAAIJ,KAAK,IAAI,GAAT,KAAiB,CAACM,MAAD,IAAW,CAACC,QAA7B,CAAJ,EAA4C;AAC1C,aAAOF,OAAO,CAAC;AACbC,QAAAA,MAAM,EAAE,IADK;AAEbC,QAAAA,QAAQ,EAAE;AAFG,OAAD,CAAd;AAID;;AACD,QAAIP,KAAK,GAAG,GAAR,IAAeM,MAAf,IAAyBC,QAA7B,EAAuC;AACrC,aAAOF,OAAO,CAAC;AACbC,QAAAA,MAAM,EAAE,IADK;AAEbC,QAAAA,QAAQ,EAAE;AAFG,OAAD,CAAd;AAID,KAda,CAed;;AACD,GAhBQ,EAgBN,CAACP,KAAD,CAhBM,CAAT;AAkBA,QAAMY,KAAK,GAAG;AACZZ,IAAAA,KADY;AAEZQ,IAAAA,YAFY;AAGZJ,IAAAA,IAHY;AAIZC,IAAAA;AAJY,GAAd;AAOA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEO,KAAjC;AAAA,cACGb;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IA9CuBD,gB;;KAAAA,gB","sourcesContent":["import { useState, useEffect, createContext, useContext } from \"react\";\n\nconst viewportContext = createContext();\n\nexport function useViewportContext() {\n  return useContext(viewportContext);\n}\n\nexport default function ViewportProvider({ children }) {\n  const [width, setWidth] = useState(window.innerWidth);\n  const [show, setShow] = useState(() => {\n    if (width < 575) return { convos: true, messages: false };\n    return { convos: true, messages: true };\n  });\n  const mobileScreen = width < 575;\n\n  //\n  useEffect(() => {\n    const handleWindowResize = () => setWidth(window.innerWidth);\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []);\n\n  // This handles the changes between mobile layout and desktop layout\n  useEffect(() => {\n    const { convos, messages } = show;\n\n    if (width >= 575 && (!convos || !messages)) {\n      return setShow({\n        convos: true,\n        messages: true,\n      });\n    }\n    if (width < 575 && convos && messages) {\n      return setShow({\n        convos: true,\n        messages: false,\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [width]);\n\n  const value = {\n    width,\n    mobileScreen,\n    show,\n    setShow,\n  };\n\n  return (\n    <viewportContext.Provider value={value}>\n      {children}\n    </viewportContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}