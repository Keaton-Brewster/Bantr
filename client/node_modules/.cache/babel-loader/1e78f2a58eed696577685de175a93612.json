{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/Conversations.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport { useConversations } from \"../utils/ConvorsationProvider\";\nimport API from \"../utils/API\";\nimport useViewport from \"../utils/useViewport\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Conversations() {\n  _s();\n\n  const {\n    messageState,\n    conversationState,\n    selectedConversationState,\n    mobileViewState,\n    loadingMessagesState\n  } = useConversations();\n  const [messages, setMessages] = messageState;\n  const [conversations, setConversations] = conversationState;\n  const [selectedConversation, setSelectedConversation] = selectedConversationState;\n  const [mobileView, setMobileView] = mobileViewState;\n  const [loadingMessages, setLoadingMessages] = loadingMessagesState;\n  const searchRef = useRef();\n  const {\n    width\n  } = useViewport();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: mobileView.conversations ? \"show\" : \"hide\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"searchConversationsInput\",\n      type: \"text\",\n      ref: searchRef,\n      placeholder: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), conversations.map((convo, i) => {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        className: \"convoBox\" // className={selectedConversation._id === convo._id ? \"selected\" : \"notSelected\"}\n        // Just another place where I am having to use a different \"id\"\n        // onClick={(e) => selectConversation(e, convo._id)}\n        ,\n        onClick: () => {\n          setLoadingMessages(true);\n          API.selectConversation(convo.id).then(messages => {\n            if (width <= 575) setMobileView({\n              conversations: false,\n              messages: true\n            });\n            setSelectedConversation(convo);\n            setMessages(messages);\n            setLoadingMessages(false);\n          });\n        },\n        children: convo.name || \"New Conversation\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bottomOfConvos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Conversations, \"mgPbnkr/lU6sMQBAFP0xKUqBeng=\", false, function () {\n  return [useConversations, useViewport];\n});\n\n_c = Conversations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversations\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/Conversations.jsx"],"names":["useRef","Row","useConversations","API","useViewport","Conversations","messageState","conversationState","selectedConversationState","mobileViewState","loadingMessagesState","messages","setMessages","conversations","setConversations","selectedConversation","setSelectedConversation","mobileView","setMobileView","loadingMessages","setLoadingMessages","searchRef","width","map","convo","i","selectConversation","id","then","name"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,yBAHI;AAIJC,IAAAA,eAJI;AAKJC,IAAAA;AALI,MAMFR,gBAAgB,EANpB;AAOA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BN,YAAhC;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCP,iBAA1C;AACA,QAAM,CAACQ,oBAAD,EAAuBC,uBAAvB,IACJR,yBADF;AAEA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BT,eAApC;AACA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCV,oBAA9C;AAEA,QAAMW,SAAS,GAAGrB,MAAM,EAAxB;AAEA,QAAM;AAAEsB,IAAAA;AAAF,MAAYlB,WAAW,EAA7B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEa,UAAU,CAACJ,aAAX,GAA2B,MAA3B,GAAoC,MAApD;AAAA,4BACE;AACE,MAAA,EAAE,EAAC,0BADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,GAAG,EAAEQ,SAHP;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,YADF,EAQGR,aAAa,CAACU,GAAd,CAAkB,CAACC,KAAD,EAAQC,CAAR,KAAc;AAC/B,0BACE,QAAC,GAAD;AAEE,QAAA,SAAS,EAAC,UAFZ,CAGE;AACA;AACA;AALF;AAME,QAAA,OAAO,EAAE,MAAM;AACbL,UAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAjB,UAAAA,GAAG,CAACuB,kBAAJ,CAAuBF,KAAK,CAACG,EAA7B,EAAiCC,IAAjC,CAAuCjB,QAAD,IAAc;AAClD,gBAAIW,KAAK,IAAI,GAAb,EACEJ,aAAa,CAAC;AACZL,cAAAA,aAAa,EAAE,KADH;AAEZF,cAAAA,QAAQ,EAAE;AAFE,aAAD,CAAb;AAIFK,YAAAA,uBAAuB,CAACQ,KAAD,CAAvB;AACAZ,YAAAA,WAAW,CAACD,QAAD,CAAX;AACAS,YAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,WATD;AAUD,SAlBH;AAAA,kBAoBGI,KAAK,CAACK,IAAN,IAAc;AApBjB,SACOJ,CADP;AAAA;AAAA;AAAA;AAAA,cADF;AAwBD,KAzBA,CARH,eAkCE;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;GAzDuBpB,a;UAOlBH,gB,EAUcE,W;;;KAjBIC,a","sourcesContent":["import { useRef } from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport { useConversations } from \"../utils/ConvorsationProvider\";\nimport API from \"../utils/API\";\nimport useViewport from \"../utils/useViewport\";\n\nexport default function Conversations() {\n  const {\n    messageState,\n    conversationState,\n    selectedConversationState,\n    mobileViewState,\n    loadingMessagesState,\n  } = useConversations();\n  const [messages, setMessages] = messageState;\n  const [conversations, setConversations] = conversationState;\n  const [selectedConversation, setSelectedConversation] =\n    selectedConversationState;\n  const [mobileView, setMobileView] = mobileViewState;\n  const [loadingMessages, setLoadingMessages] = loadingMessagesState;\n\n  const searchRef = useRef();\n\n  const { width } = useViewport();\n\n  return (\n    <div className={mobileView.conversations ? \"show\" : \"hide\"}>\n      <input\n        id=\"searchConversationsInput\"\n        type=\"text\"\n        ref={searchRef}\n        placeholder=\"search\"\n      />\n\n      {conversations.map((convo, i) => {\n        return (\n          <Row\n            key={i}\n            className=\"convoBox\"\n            // className={selectedConversation._id === convo._id ? \"selected\" : \"notSelected\"}\n            // Just another place where I am having to use a different \"id\"\n            // onClick={(e) => selectConversation(e, convo._id)}\n            onClick={() => {\n              setLoadingMessages(true);\n              API.selectConversation(convo.id).then((messages) => {\n                if (width <= 575)\n                  setMobileView({\n                    conversations: false,\n                    messages: true,\n                  });\n                setSelectedConversation(convo);\n                setMessages(messages);\n                setLoadingMessages(false);\n              });\n            }}\n          >\n            {convo.name || \"New Conversation\"}\n          </Row>\n        );\n      })}\n      <div id=\"bottomOfConvos\" />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}