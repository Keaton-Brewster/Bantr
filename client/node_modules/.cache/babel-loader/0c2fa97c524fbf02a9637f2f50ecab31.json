{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/Messages.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect, useState } from \"react\";\nimport { Navbar, Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport { FaArrowLeft, FaArrowRight } from \"react-icons/fa\";\nimport { useConversations } from \"../utils/ConvorsationProvider\";\nimport useViewport from \"../utils/useViewport\";\nimport MessageContextMenu from \"./MessageContextMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Message({\n  sendMessage\n}) {\n  _s();\n\n  const {\n    messageState,\n    userState,\n    mobileViewState\n  } = useConversations();\n  const [messages, setMessages] = messageState;\n  const [user, setUser] = userState;\n  const [mobileView, setMobileView] = mobileViewState;\n  const [contextMenu, setContextMenu] = useState({\n    xPos: String,\n    yPos: String,\n    display: \"none\"\n  });\n  const textRef = useRef();\n  const {\n    width\n  } = useViewport(); // Setting up the ability to delete messages via a custom context menu (from \"right-click\")\n\n  const messageElements = document.querySelectorAll(\".message\");\n  messageElements.forEach(element => {\n    element.addEventListener(\"contextmenu\", e => {\n      e.preventDefault();\n      const messageIndex = element.getAttribute(\"data-key\");\n      const xPos = e.pageX + \"px\";\n      const yPos = e.pageY + \"px\"; //! this does not work. I need a different way to handle the display state of the message context menu.\n      //! Possibly with custom CSS or there may be another eventListener I need\n\n      setContextMenu({\n        xPos,\n        yPos,\n        display: \"block\"\n      });\n      console.log(contextMenu);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MessageContextMenu, {\n      style: {\n        display: contextMenu.display\n      },\n      position: contextMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: mobileView.messages ? \"show\" : \"hide\",\n      children: [width <= 575 ? /*#__PURE__*/_jsxDEV(Navbar, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"backButton\",\n          onClick: e => {\n            e.preventDefault();\n            setMobileView({\n              conversations: true,\n              messages: false\n            });\n          },\n          children: /*#__PURE__*/_jsxDEV(FaArrowLeft, {\n            className: \"bg-danger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(Container, {\n        id: \"messages\",\n        children: messages.length < 0 ? /*#__PURE__*/_jsxDEV(Spinner, {\n          id: \"spinner\",\n          animation: \"border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this) : messages.map((message, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `my-1 d-flex flex-column ${message.sender_id === user._id ? \"align-self-end align-items-end\" : \"align-items-start\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              \"data-key\": i,\n              className: `message rounded px-2 py-1 ${message.sender_id === user._id ? \"bg-primary text-white\" : \"border\"}`,\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        id: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 7,\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              ref: textRef,\n              rows: \"1\",\n              id: \"chatInput\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"sendButton\",\n              onClick: e => {\n                e.preventDefault();\n                sendMessage(textRef.current.value);\n              },\n              children: /*#__PURE__*/_jsxDEV(FaArrowRight, {\n                className: \"bg-primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Message, \"Y+RFify4E4cXqslUEuIhJtgxu84=\", false, function () {\n  return [useConversations, useViewport];\n});\n\n_c = Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/Messages.jsx"],"names":["useRef","useEffect","useState","Navbar","Container","Row","Col","Spinner","FaArrowLeft","FaArrowRight","useConversations","useViewport","MessageContextMenu","Message","sendMessage","messageState","userState","mobileViewState","messages","setMessages","user","setUser","mobileView","setMobileView","contextMenu","setContextMenu","xPos","String","yPos","display","textRef","width","messageElements","document","querySelectorAll","forEach","element","addEventListener","e","preventDefault","messageIndex","getAttribute","pageX","pageY","console","log","conversations","length","map","message","i","sender_id","_id","content","current","value"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,GAA5B,EAAiCC,GAAjC,EAAsCC,OAAtC,QAAqD,iBAArD;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,gBAA1C;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;;AAEA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAAkC;AAAA;;AAC/C,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA;AAA3B,MAA+CP,gBAAgB,EAArE;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BJ,YAAhC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBL,SAAxB;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BN,eAApC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC;AAC7CwB,IAAAA,IAAI,EAAEC,MADuC;AAE7CC,IAAAA,IAAI,EAAED,MAFuC;AAG7CE,IAAAA,OAAO,EAAE;AAHoC,GAAD,CAA9C;AAMA,QAAMC,OAAO,GAAG9B,MAAM,EAAtB;AACA,QAAM;AAAE+B,IAAAA;AAAF,MAAYpB,WAAW,EAA7B,CAZ+C,CAc/C;;AAEA,QAAMqB,eAAe,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,CAAxB;AACAF,EAAAA,eAAe,CAACG,OAAhB,CAAyBC,OAAD,IAAa;AACnCA,IAAAA,OAAO,CAACC,gBAAR,CAAyB,aAAzB,EAAyCC,CAAD,IAAO;AAC7CA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,YAAY,GAAGJ,OAAO,CAACK,YAAR,CAAqB,UAArB,CAArB;AACA,YAAMf,IAAI,GAAGY,CAAC,CAACI,KAAF,GAAU,IAAvB;AACA,YAAMd,IAAI,GAAGU,CAAC,CAACK,KAAF,GAAU,IAAvB,CAJ6C,CAM7C;AACA;;AACAlB,MAAAA,cAAc,CAAC;AACbC,QAAAA,IADa;AAEbE,QAAAA,IAFa;AAGbC,QAAAA,OAAO,EAAE;AAHI,OAAD,CAAd;AAKAe,MAAAA,OAAO,CAACC,GAAR,CAAYrB,WAAZ;AACD,KAdD;AAeD,GAhBD;AAkBA,sBACE;AAAA,4BACE,QAAC,kBAAD;AACE,MAAA,KAAK,EAAE;AAAEK,QAAAA,OAAO,EAAEL,WAAW,CAACK;AAAvB,OADT;AAEE,MAAA,QAAQ,EAAEL;AAFZ;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAEF,UAAU,CAACJ,QAAX,GAAsB,MAAtB,GAA+B,MAA/C;AAAA,iBACGa,KAAK,IAAI,GAAT,gBACC,QAAC,MAAD;AAAA,+BACE;AACE,UAAA,EAAE,EAAC,YADL;AAEE,UAAA,OAAO,EAAGO,CAAD,IAAO;AACdA,YAAAA,CAAC,CAACC,cAAF;AACAhB,YAAAA,aAAa,CAAC;AACZuB,cAAAA,aAAa,EAAE,IADH;AAEZ5B,cAAAA,QAAQ,EAAE;AAFE,aAAD,CAAb;AAID,WARH;AAAA,iCAUE,QAAC,WAAD;AAAa,YAAA,SAAS,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,GAeG,IAhBN,eAiBE,QAAC,SAAD;AAAW,QAAA,EAAE,EAAC,UAAd;AAAA,kBACGA,QAAQ,CAAC6B,MAAT,GAAkB,CAAlB,gBACC,QAAC,OAAD;AAAS,UAAA,EAAE,EAAC,SAAZ;AAAsB,UAAA,SAAS,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADD,GAGC7B,QAAQ,CAAC8B,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,KAAgB;AAC3B,8BACE;AAEE,YAAA,SAAS,EAAG,2BACVD,OAAO,CAACE,SAAR,KAAsB/B,IAAI,CAACgC,GAA3B,GACI,gCADJ,GAEI,mBACL,EANH;AAAA,mCAQE;AACE,0BAAUF,CADZ;AAEE,cAAA,SAAS,EAAG,6BACVD,OAAO,CAACE,SAAR,KAAsB/B,IAAI,CAACgC,GAA3B,GACI,uBADJ,GAEI,QACL,EANH;AAAA,wBAQGH,OAAO,CAACI;AARX;AAAA;AAAA;AAAA;AAAA;AARF,aACOH,CADP;AAAA;AAAA;AAAA;AAAA,kBADF;AAkCD,SAnCD;AAJJ;AAAA;AAAA;AAAA;AAAA,cAjBF,eA2DE,QAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAiB,QAAA,EAAE,EAAC,SAApB;AAAA,+BACE,QAAC,GAAD;AAAA,kCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,mCACE;AAAU,cAAA,GAAG,EAAEpB,OAAf;AAAwB,cAAA,IAAI,EAAC,GAA7B;AAAiC,cAAA,EAAE,EAAC,WAApC;AAAgD,cAAA,IAAI,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,mCACE;AACE,cAAA,EAAE,EAAC,YADL;AAEE,cAAA,OAAO,EAAGQ,CAAD,IAAO;AACdA,gBAAAA,CAAC,CAACC,cAAF;AACAzB,gBAAAA,WAAW,CAACgB,OAAO,CAACwB,OAAR,CAAgBC,KAAjB,CAAX;AACD,eALH;AAAA,qCAOE,QAAC,YAAD;AAAc,gBAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA3DF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAsFD;;GAzHuB1C,O;UAC+BH,gB,EAWnCC,W;;;KAZIE,O","sourcesContent":["import { useRef, useEffect, useState } from \"react\";\nimport { Navbar, Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport { FaArrowLeft, FaArrowRight } from \"react-icons/fa\";\nimport { useConversations } from \"../utils/ConvorsationProvider\";\nimport useViewport from \"../utils/useViewport\";\nimport MessageContextMenu from \"./MessageContextMenu\";\n\nexport default function Message({ sendMessage }) {\n  const { messageState, userState, mobileViewState } = useConversations();\n  const [messages, setMessages] = messageState;\n  const [user, setUser] = userState;\n  const [mobileView, setMobileView] = mobileViewState;\n  const [contextMenu, setContextMenu] = useState({\n    xPos: String,\n    yPos: String,\n    display: \"none\",\n  });\n\n  const textRef = useRef();\n  const { width } = useViewport();\n\n  // Setting up the ability to delete messages via a custom context menu (from \"right-click\")\n\n  const messageElements = document.querySelectorAll(\".message\");\n  messageElements.forEach((element) => {\n    element.addEventListener(\"contextmenu\", (e) => {\n      e.preventDefault();\n      const messageIndex = element.getAttribute(\"data-key\");\n      const xPos = e.pageX + \"px\";\n      const yPos = e.pageY + \"px\";\n\n      //! this does not work. I need a different way to handle the display state of the message context menu.\n      //! Possibly with custom CSS or there may be another eventListener I need\n      setContextMenu({\n        xPos,\n        yPos,\n        display: \"block\",\n      });\n      console.log(contextMenu);\n    });\n  });\n\n  return (\n    <>\n      <MessageContextMenu\n        style={{ display: contextMenu.display }}\n        position={contextMenu}\n      />\n      <div className={mobileView.messages ? \"show\" : \"hide\"}>\n        {width <= 575 ? (\n          <Navbar>\n            <button\n              id=\"backButton\"\n              onClick={(e) => {\n                e.preventDefault();\n                setMobileView({\n                  conversations: true,\n                  messages: false,\n                });\n              }}\n            >\n              <FaArrowLeft className=\"bg-danger\" />\n            </button>\n          </Navbar>\n        ) : null}\n        <Container id=\"messages\">\n          {messages.length < 0 ? (\n            <Spinner id=\"spinner\" animation=\"border\" />\n          ) : (\n            messages.map((message, i) => {\n              return (\n                <div\n                  key={i}\n                  className={`my-1 d-flex flex-column ${\n                    message.sender_id === user._id\n                      ? \"align-self-end align-items-end\"\n                      : \"align-items-start\"\n                  }`}\n                >\n                  <div\n                    data-key={i}\n                    className={`message rounded px-2 py-1 ${\n                      message.sender_id === user._id\n                        ? \"bg-primary text-white\"\n                        : \"border\"\n                    }`}\n                  >\n                    {message.content}\n                  </div>\n                  {\n                    // for some reason, this thing breaks when you tryi to select a new conversation? No idea why\n                    /* <div\n                    className={`text-muted small ${\n                      message.sender_id === user._id ? \"text-right\" : \"\"\n                    }`}\n                  >\n                    {message.sender_id === user._id &&\n                    messages[i - 1].sender_id === user._id\n                      ? \"You\"\n                      : message.senderName}\n                  </div> */\n                  }\n                </div>\n              );\n            })\n          )}\n        </Container>\n        <Container fluid id=\"chatBox\">\n          <Row>\n            <Col xs={7}>\n              <textarea ref={textRef} rows=\"1\" id=\"chatInput\" type=\"text\" />\n            </Col>\n            <Col xs={2}>\n              <button\n                id=\"sendButton\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  sendMessage(textRef.current.value);\n                }}\n              >\n                <FaArrowRight className=\"bg-primary\" />\n              </button>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}