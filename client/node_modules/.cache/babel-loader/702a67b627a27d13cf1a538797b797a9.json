{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/MainContent/Messaging/ConversationInfoScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Spinner, ListGroup } from \"react-bootstrap\";\nimport { useConversations } from \"../../../utils/ConversationProvider\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ConversationInfoScreen({\n  containerRef\n}) {\n  _s();\n\n  const [convoInfo, setConvoInfo] = useState();\n  const {\n    selectedConversation\n  } = useConversations();\n  const [loading, setLoading] = useState(true);\n\n  function trimMessages(conversation) {\n    const mutatedConversation = { ...conversation\n    };\n    mutatedConversation.messages = [];\n    return mutatedConversation;\n  }\n\n  async function getConversationInformation() {\n    const filteredConversation = trimMessages(selectedConversation);\n    const conversationInformation = await axios.get(`api/conversations/getInfo/${JSON.stringify(filteredConversation)}`);\n    return conversationInformation.data;\n  }\n\n  useEffect(() => {\n    const thisConvoInfo = getConversationInformation();\n    setConvoInfo(thisConvoInfo);\n    setLoading(false); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    console.log(convoInfo);\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      id: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: \"40px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: \"Hello\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(ConversationInfoScreen, \"kgAcmdxjII6YoZF9s65LDO0og4Y=\", false, function () {\n  return [useConversations];\n});\n\n_c = ConversationInfoScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConversationInfoScreen\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/MainContent/Messaging/ConversationInfoScreen.jsx"],"names":["useState","useEffect","Spinner","ListGroup","useConversations","axios","ConversationInfoScreen","containerRef","convoInfo","setConvoInfo","selectedConversation","loading","setLoading","trimMessages","conversation","mutatedConversation","messages","getConversationInformation","filteredConversation","conversationInformation","get","JSON","stringify","data","thisConvoInfo","console","log","paddingTop"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,iBAAnC;AACA,SAASC,gBAAT,QAAiC,qCAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,sBAAT,CAAgC;AAAEC,EAAAA;AAAF,CAAhC,EAAkD;AAAA;;AAC/D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,EAA1C;AACA,QAAM;AAAEU,IAAAA;AAAF,MAA2BN,gBAAgB,EAAjD;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;;AAEA,WAASa,YAAT,CAAsBC,YAAtB,EAAoC;AAClC,UAAMC,mBAAmB,GAAG,EAAE,GAAGD;AAAL,KAA5B;AACAC,IAAAA,mBAAmB,CAACC,QAApB,GAA+B,EAA/B;AACA,WAAOD,mBAAP;AACD;;AAED,iBAAeE,0BAAf,GAA4C;AAC1C,UAAMC,oBAAoB,GAAGL,YAAY,CAACH,oBAAD,CAAzC;AACA,UAAMS,uBAAuB,GAAG,MAAMd,KAAK,CAACe,GAAN,CACnC,6BAA4BC,IAAI,CAACC,SAAL,CAAeJ,oBAAf,CAAqC,EAD9B,CAAtC;AAGA,WAAOC,uBAAuB,CAACI,IAA/B;AACD;;AAEDtB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,aAAa,GAAGP,0BAA0B,EAAhD;AACAR,IAAAA,YAAY,CAACe,aAAD,CAAZ;AACAZ,IAAAA,UAAU,CAAC,KAAD,CAAV,CAHc,CAId;AACD,GALQ,EAKN,EALM,CAAT;AAOAX,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,SAAZ;AACD,GAFQ,EAEN,CAACG,OAAD,CAFM,CAAT;AAIA,sBACE;AAAA,cACGA,OAAO,gBACN,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,EAAE,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YADM,gBAGN;AAAK,MAAA,KAAK,EAAE;AAAEgB,QAAAA,UAAU,EAAE;AAAd,OAAZ;AAAA,6BACE,QAAC,SAAD;AAAA,+BACE,QAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJJ,mBADF;AAaD;;GA3CuBrB,sB;UAEWF,gB;;;KAFXE,sB","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Spinner, ListGroup } from \"react-bootstrap\";\nimport { useConversations } from \"../../../utils/ConversationProvider\";\nimport axios from \"axios\";\n\nexport default function ConversationInfoScreen({ containerRef }) {\n  const [convoInfo, setConvoInfo] = useState();\n  const { selectedConversation } = useConversations();\n  const [loading, setLoading] = useState(true);\n\n  function trimMessages(conversation) {\n    const mutatedConversation = { ...conversation };\n    mutatedConversation.messages = [];\n    return mutatedConversation;\n  }\n\n  async function getConversationInformation() {\n    const filteredConversation = trimMessages(selectedConversation);\n    const conversationInformation = await axios.get(\n      `api/conversations/getInfo/${JSON.stringify(filteredConversation)}`\n    );\n    return conversationInformation.data;\n  }\n\n  useEffect(() => {\n    const thisConvoInfo = getConversationInformation();\n    setConvoInfo(thisConvoInfo);\n    setLoading(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    console.log(convoInfo);\n  }, [loading]);\n\n  return (\n    <>\n      {loading ? (\n        <Spinner animation=\"border\" id=\"spinner\" />\n      ) : (\n        <div style={{ paddingTop: \"40px\" }}>\n          <ListGroup>\n            <ListGroup.Item>Hello</ListGroup.Item>\n          </ListGroup>\n        </div>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}