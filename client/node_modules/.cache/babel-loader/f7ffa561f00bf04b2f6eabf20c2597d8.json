{"ast":null,"code":"import _extends from \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Messages/Extensions/CometChatReceiverStickerMessageBubble/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatMessageActions, CometChatThreadedMessageReplyCount, CometChatReadReceipt } from \"../../\";\nimport { CometChatMessageReactions } from \"../\";\nimport { CometChatAvatar } from \"../../../Shared\";\nimport { CometChatContext } from \"../../../../util/CometChatContext\";\nimport { checkMessageForExtensionsData } from \"../../../../util/common\";\nimport { theme } from \"../../../../resources/theme\";\nimport Translator from \"../../../../resources/localization/translator\";\nimport { messageContainerStyle, messageWrapperStyle, messageThumbnailStyle, messageDetailStyle, nameWrapperStyle, nameStyle, messageImgContainerStyle, messageImgWrapperStyle, messageInfoWrapperStyle, messageReactionsWrapperStyle } from \"./style\";\n\nclass CometChatReceiverStickerMessageBubble extends React.Component {\n  constructor(props) {\n    super(props);\n    this.messageFrom = \"receiver\";\n\n    this.handleMouseHover = () => {\n      this.setState(this.toggleHoverState);\n    };\n\n    this.toggleHoverState = state => {\n      return {\n        isHovering: !state.isHovering\n      };\n    };\n\n    const message = Object.assign({}, props.message, {\n      messageFrom: this.messageFrom\n    });\n    this.state = {\n      message: message,\n      isHovering: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const previousMessageStr = JSON.stringify(prevProps.message);\n    const currentMessageStr = JSON.stringify(this.props.message);\n\n    if (previousMessageStr !== currentMessageStr) {\n      const message = Object.assign({}, this.props.message, {\n        messageFrom: this.messageFrom\n      });\n      this.setState({\n        message: message\n      });\n    }\n  }\n\n  render() {\n    let avatar = null,\n        name = null;\n\n    if (this.props.message.receiverType === CometChat.RECEIVER_TYPE.GROUP) {\n      avatar = jsx(\"div\", {\n        css: messageThumbnailStyle(),\n        className: \"message__thumbnail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, jsx(CometChatAvatar, {\n        user: this.state.message.sender,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }));\n      name = jsx(\"div\", {\n        css: nameWrapperStyle(avatar),\n        className: \"message__name__wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }, jsx(\"span\", {\n        css: nameStyle(this.context),\n        className: \"message__name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, this.state.message.sender.name));\n    }\n\n    let stickerData = null;\n    let stickerImg = null;\n\n    if (this.state.message.hasOwnProperty(\"data\") && this.state.message.data.hasOwnProperty(\"customData\")) {\n      stickerData = this.state.message.data.customData;\n\n      if (stickerData.hasOwnProperty(\"sticker_url\")) {\n        const stickerName = stickerData.hasOwnProperty(\"sticker_name\") ? stickerData.sticker_name : Translator.translate(\"STICKER\", this.props.lang);\n        stickerImg = jsx(\"img\", {\n          src: stickerData.sticker_url,\n          alt: stickerName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 31\n          }\n        });\n      }\n    }\n\n    let messageReactions = null;\n    const reactionsData = checkMessageForExtensionsData(this.state.message, \"reactions\");\n\n    if (reactionsData) {\n      if (Object.keys(reactionsData).length) {\n        messageReactions = jsx(\"div\", {\n          css: messageReactionsWrapperStyle(),\n          className: \"message__reaction__wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }\n        }, jsx(CometChatMessageReactions, _extends({}, this.props, {\n          message: this.state.message,\n          reaction: reactionsData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }\n        })));\n      }\n    }\n\n    let toolTipView = null;\n\n    if (this.state.isHovering) {\n      toolTipView = jsx(CometChatMessageActions, _extends({}, this.props, {\n        message: this.state.message,\n        name: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 28\n        }\n      }));\n    }\n\n    return jsx(\"div\", {\n      css: messageContainerStyle(),\n      className: \"receiver__message__container message__sticker\",\n      onMouseEnter: this.handleMouseHover,\n      onMouseLeave: this.handleMouseHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, jsx(\"div\", {\n      css: messageWrapperStyle(),\n      className: \"message__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, avatar, jsx(\"div\", {\n      css: messageDetailStyle(name),\n      className: \"message__details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, name, toolTipView, jsx(\"div\", {\n      css: messageImgContainerStyle(),\n      className: \"message__image__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, jsx(\"div\", {\n      css: messageImgWrapperStyle(this.context),\n      className: \"message__image__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, stickerImg)), messageReactions, jsx(\"div\", {\n      css: messageInfoWrapperStyle(),\n      className: \"message__info__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, jsx(CometChatReadReceipt, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    })), jsx(CometChatThreadedMessageReplyCount, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }))))));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatReceiverStickerMessageBubble.contextType = CometChatContext;\nCometChatReceiverStickerMessageBubble.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme\n};\nCometChatReceiverStickerMessageBubble.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object\n};\nexport { CometChatReceiverStickerMessageBubble };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Messages/Extensions/CometChatReceiverStickerMessageBubble/index.js"],"names":["React","jsx","PropTypes","CometChat","CometChatMessageActions","CometChatThreadedMessageReplyCount","CometChatReadReceipt","CometChatMessageReactions","CometChatAvatar","CometChatContext","checkMessageForExtensionsData","theme","Translator","messageContainerStyle","messageWrapperStyle","messageThumbnailStyle","messageDetailStyle","nameWrapperStyle","nameStyle","messageImgContainerStyle","messageImgWrapperStyle","messageInfoWrapperStyle","messageReactionsWrapperStyle","CometChatReceiverStickerMessageBubble","Component","constructor","props","messageFrom","handleMouseHover","setState","toggleHoverState","state","isHovering","message","Object","assign","componentDidUpdate","prevProps","previousMessageStr","JSON","stringify","currentMessageStr","render","avatar","name","receiverType","RECEIVER_TYPE","GROUP","sender","context","stickerData","stickerImg","hasOwnProperty","data","customData","stickerName","sticker_name","translate","lang","sticker_url","messageReactions","reactionsData","keys","length","toolTipView","contextType","defaultProps","getDefaultLanguage","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\"\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { CometChatMessageActions, CometChatThreadedMessageReplyCount, CometChatReadReceipt } from \"../../\";\nimport { CometChatMessageReactions } from \"../\";\nimport { CometChatAvatar } from \"../../../Shared\";\n\nimport { CometChatContext } from \"../../../../util/CometChatContext\";\nimport { checkMessageForExtensionsData } from \"../../../../util/common\";\n\nimport { theme } from \"../../../../resources/theme\";\nimport Translator from \"../../../../resources/localization/translator\";\n\nimport {\n    messageContainerStyle,\n    messageWrapperStyle,\n    messageThumbnailStyle,\n    messageDetailStyle,\n    nameWrapperStyle,\n    nameStyle,\n    messageImgContainerStyle,\n    messageImgWrapperStyle,\n    messageInfoWrapperStyle,\n    messageReactionsWrapperStyle\n} from \"./style\";\n\nclass CometChatReceiverStickerMessageBubble extends React.Component {\n\n    static contextType = CometChatContext;\n    messageFrom = \"receiver\";\n\n    constructor(props) {\n\n        super(props);\n\n        const message = Object.assign({}, props.message, { messageFrom: this.messageFrom });\n        this.state = {\n            message: message,\n            isHovering: false\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n\n        const previousMessageStr = JSON.stringify(prevProps.message);\n        const currentMessageStr = JSON.stringify(this.props.message);\n\n        if (previousMessageStr !== currentMessageStr) {\n\n            const message = Object.assign({}, this.props.message, { messageFrom: this.messageFrom });\n            this.setState({ message: message })\n        }\n    }\n\n    handleMouseHover = () => {\n        this.setState(this.toggleHoverState);\n    }\n\n    toggleHoverState = (state) => {\n\n        return {\n            isHovering: !state.isHovering,\n        };\n    }\n\n    render() {\n\n        let avatar = null, name = null;\n        if (this.props.message.receiverType === CometChat.RECEIVER_TYPE.GROUP) {\n\n            avatar = (\n                <div css={messageThumbnailStyle()} className=\"message__thumbnail\">\n                    <CometChatAvatar user={this.state.message.sender} />\n                </div>\n            );\n\n            name = (<div css={(nameWrapperStyle(avatar))} className=\"message__name__wrapper\">\n                <span css={nameStyle(this.context)} className=\"message__name\">{this.state.message.sender.name}</span>\n            </div>);\n        }\n\n        let stickerData = null;\n        let stickerImg = null;\n        if (this.state.message.hasOwnProperty(\"data\") && this.state.message.data.hasOwnProperty(\"customData\")) {\n\n            stickerData = this.state.message.data.customData;\n            \n            if (stickerData.hasOwnProperty(\"sticker_url\")) {\n                const stickerName = (stickerData.hasOwnProperty(\"sticker_name\")) ? stickerData.sticker_name : Translator.translate(\"STICKER\", this.props.lang);\n                stickerImg = (<img src={stickerData.sticker_url} alt={stickerName} />);\n            }\n        }\n\n        let messageReactions = null;\n        const reactionsData = checkMessageForExtensionsData(this.state.message, \"reactions\");\n        if (reactionsData) {\n\n            if (Object.keys(reactionsData).length) {\n                messageReactions = (\n                    <div css={messageReactionsWrapperStyle()} className=\"message__reaction__wrapper\">\n                        <CometChatMessageReactions  {...this.props} message={this.state.message} reaction={reactionsData} />\n                    </div>\n                );\n            }\n        }\n\n        let toolTipView = null;\n        if (this.state.isHovering) {\n            toolTipView = (<CometChatMessageActions {...this.props} message={this.state.message} name={name} />);\n        }\n\n        return (\n            <div \n            css={messageContainerStyle()} \n            className=\"receiver__message__container message__sticker\"\n            onMouseEnter={this.handleMouseHover}\n            onMouseLeave={this.handleMouseHover}>\n                \n                <div css={messageWrapperStyle()} className=\"message__wrapper\">\n                    {avatar}\n                    <div css={messageDetailStyle(name)} className=\"message__details\">\n                        {name}\n                        {toolTipView}\n                        <div css={messageImgContainerStyle()} className=\"message__image__container\">\n                            <div css={messageImgWrapperStyle(this.context)} className=\"message__image__wrapper\">{stickerImg}</div>\n                        </div>\n\n                        {messageReactions}\n\n                        <div css={messageInfoWrapperStyle()} className=\"message__info__wrapper\">\n                            <CometChatReadReceipt {...this.props} message={this.state.message} />\n                            <CometChatThreadedMessageReplyCount {...this.props} message={this.state.message} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n// Specifies the default values for props:\nCometChatReceiverStickerMessageBubble.defaultProps = {\n    lang: Translator.getDefaultLanguage(),\n    theme: theme\n};\n\nCometChatReceiverStickerMessageBubble.propTypes = {\n    lang: PropTypes.string,\n    theme: PropTypes.object\n}\n\nexport { CometChatReceiverStickerMessageBubble };"]},"metadata":{},"sourceType":"module"}