{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Chats/CometChatConversationListWithMessages/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatConversationList } from \"../\";\nimport { CometChatMessages } from \"../../Messages\";\nimport { CometChatIncomingCall, CometChatIncomingDirectCall } from \"../../Calls\";\nimport { CometChatContextProvider } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { theme } from \"../../../resources/theme\";\nimport { chatScreenStyle, chatScreenSidebarStyle, chatScreenMainStyle } from \"./style\";\n\nclass CometChatConversationListWithMessages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loggedInUser = null;\n\n    this.itemClicked = (item, type) => {\n      this.contextProviderRef.setTypeAndItem(type, item);\n      this.toggleSideBar();\n    };\n\n    this.actionHandler = (action, item, count, ...otherProps) => {\n      switch (action) {\n        case enums.ACTIONS[\"TOGGLE_SIDEBAR\"]:\n          this.toggleSideBar();\n          break;\n\n        case enums.GROUP_MEMBER_SCOPE_CHANGED:\n        case enums.GROUP_MEMBER_KICKED:\n        case enums.GROUP_MEMBER_BANNED:\n          this.groupUpdated(action, item, count, ...otherProps);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.toggleSideBar = () => {\n      const sidebarview = this.state.sidebarview;\n      this.setState({\n        sidebarview: !sidebarview\n      });\n    };\n\n    this.groupUpdated = (key, message, group, options) => {\n      switch (key) {\n        case enums.GROUP_MEMBER_BANNED:\n        case enums.GROUP_MEMBER_KICKED:\n          {\n            if (this.contextProviderRef.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.contextProviderRef.item.guid === group.guid && options.user.uid === this.loggedInUser.uid) {\n              this.contextProviderRef.setItem({});\n              this.contextProviderRef.setType(\"\");\n            }\n\n            break;\n          }\n\n        case enums.GROUP_MEMBER_SCOPE_CHANGED:\n          {\n            if (this.contextProviderRef.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.contextProviderRef.item.guid === group.guid && options.user.uid === this.loggedInUser.uid) {\n              const newObject = Object.assign({}, this.contextProviderRef.item, {\n                \"scope\": options[\"scope\"]\n              });\n              this.contextProviderRef.setItem(newObject);\n              this.contextProviderRef.setType(CometChat.ACTION_TYPE.TYPE_GROUP);\n            }\n\n            break;\n          }\n\n        default:\n          break;\n      }\n    };\n\n    this.state = {\n      tab: \"conversations\",\n      sidebarview: false,\n      lang: props.lang\n    };\n    this.contextProviderRef = /*#__PURE__*/React.createRef();\n    this.chatListRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.chatWithUser.length === 0 && this.props.chatWithGroup.length === 0) {\n      this.toggleSideBar();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.lang !== this.props.lang) {\n      this.setState({\n        lang: this.props.lang\n      });\n    }\n  }\n\n  render() {\n    let messageScreen = jsx(CometChatMessages, {\n      theme: this.props.theme,\n      lang: this.state.lang,\n      _parent: \"conversations\",\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 4\n      }\n    });\n    return jsx(CometChatContextProvider, {\n      ref: el => this.contextProviderRef = el,\n      user: this.props.chatWithUser,\n      group: this.props.chatWithGroup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 4\n      }\n    }, jsx(\"div\", {\n      css: chatScreenStyle(this.props),\n      className: \"cometchat cometchat--chats\",\n      dir: Translator.getDirection(this.state.lang),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 5\n      }\n    }, jsx(\"div\", {\n      css: chatScreenSidebarStyle(this.state, this.props),\n      className: \"chats__sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 6\n      }\n    }, jsx(CometChatConversationList, {\n      ref: el => this.chatListRef = el,\n      _parent: \"clwm\",\n      theme: this.props.theme,\n      lang: this.state.lang,\n      onItemClick: this.itemClicked,\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    })), jsx(\"div\", {\n      css: chatScreenMainStyle(this.state, this.props),\n      className: \"chats__main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 6\n      }\n    }, messageScreen), jsx(CometChatIncomingCall, {\n      theme: this.props.theme,\n      lang: this.state.lang,\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 6\n      }\n    }), jsx(CometChatIncomingDirectCall, {\n      theme: this.props.theme,\n      lang: this.state.lang,\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 6\n      }\n    })));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatConversationListWithMessages.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  chatWithUser: \"\",\n  chatWithGroup: \"\"\n};\nCometChatConversationListWithMessages.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  chatWithUser: PropTypes.string,\n  chatWithGroup: PropTypes.string\n};\nexport { CometChatConversationListWithMessages };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Chats/CometChatConversationListWithMessages/index.js"],"names":["React","jsx","PropTypes","CometChat","CometChatConversationList","CometChatMessages","CometChatIncomingCall","CometChatIncomingDirectCall","CometChatContextProvider","enums","Translator","theme","chatScreenStyle","chatScreenSidebarStyle","chatScreenMainStyle","CometChatConversationListWithMessages","Component","constructor","props","loggedInUser","itemClicked","item","type","contextProviderRef","setTypeAndItem","toggleSideBar","actionHandler","action","count","otherProps","ACTIONS","GROUP_MEMBER_SCOPE_CHANGED","GROUP_MEMBER_KICKED","GROUP_MEMBER_BANNED","groupUpdated","sidebarview","state","setState","key","message","group","options","ACTION_TYPE","TYPE_GROUP","guid","user","uid","setItem","setType","newObject","Object","assign","tab","lang","createRef","chatListRef","componentDidMount","chatWithUser","length","chatWithGroup","componentDidUpdate","prevProps","render","messageScreen","el","getDirection","defaultProps","getDefaultLanguage","propTypes","string","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;;AACA;;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,SAASC,yBAAT,QAA0C,KAA1C;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,qBAAT,EAAgCC,2BAAhC,QAAmE,aAAnE;AAEA,SAASC,wBAAT,QAAyC,gCAAzC;AACA,OAAO,KAAKC,KAAZ,MAAuB,wBAAvB;AAEA,OAAOC,UAAP,MAAuB,4CAAvB;AACA,SAASC,KAAT,QAAsB,0BAAtB;AAEA,SACCC,eADD,EAECC,sBAFD,EAGCC,mBAHD,QAIO,SAJP;;AAMA,MAAMC,qCAAN,SAAoDf,KAAK,CAACgB,SAA1D,CAAoE;AAInEC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AADkB,SAFnBC,YAEmB,GAFJ,IAEI;;AAAA,SA2BnBC,WA3BmB,GA2BL,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAE7B,WAAKC,kBAAL,CAAwBC,cAAxB,CAAuCF,IAAvC,EAA6CD,IAA7C;AACA,WAAKI,aAAL;AACA,KA/BkB;;AAAA,SAiCnBC,aAjCmB,GAiCH,CAACC,MAAD,EAASN,IAAT,EAAeO,KAAf,EAAsB,GAAGC,UAAzB,KAAwC;AAEvD,cAAOF,MAAP;AAEC,aAAKlB,KAAK,CAACqB,OAAN,CAAc,gBAAd,CAAL;AACC,eAAKL,aAAL;AACD;;AACA,aAAKhB,KAAK,CAACsB,0BAAX;AACA,aAAKtB,KAAK,CAACuB,mBAAX;AACA,aAAKvB,KAAK,CAACwB,mBAAX;AACC,eAAKC,YAAL,CAAkBP,MAAlB,EAA0BN,IAA1B,EAAgCO,KAAhC,EAAuC,GAAGC,UAA1C;AACD;;AACA;AACA;AAXD;AAaA,KAhDkB;;AAAA,SAkDnBJ,aAlDmB,GAkDH,MAAM;AAErB,YAAMU,WAAW,GAAG,KAAKC,KAAL,CAAWD,WAA/B;AACA,WAAKE,QAAL,CAAc;AAAEF,QAAAA,WAAW,EAAE,CAACA;AAAhB,OAAd;AACA,KAtDkB;;AAAA,SA2DnBD,YA3DmB,GA2DJ,CAACI,GAAD,EAAMC,OAAN,EAAeC,KAAf,EAAsBC,OAAtB,KAAkC;AAEhD,cAAQH,GAAR;AACC,aAAK7B,KAAK,CAACwB,mBAAX;AACA,aAAKxB,KAAK,CAACuB,mBAAX;AAAgC;AAE/B,gBAAI,KAAKT,kBAAL,CAAwBD,IAAxB,KAAiCnB,SAAS,CAACuC,WAAV,CAAsBC,UAAvD,IACD,KAAKpB,kBAAL,CAAwBF,IAAxB,CAA6BuB,IAA7B,KAAsCJ,KAAK,CAACI,IAD3C,IAEDH,OAAO,CAACI,IAAR,CAAaC,GAAb,KAAqB,KAAK3B,YAAL,CAAkB2B,GAF1C,EAE+C;AAE9C,mBAAKvB,kBAAL,CAAwBwB,OAAxB,CAAgC,EAAhC;AACA,mBAAKxB,kBAAL,CAAwByB,OAAxB,CAAgC,EAAhC;AACA;;AACD;AACA;;AACD,aAAKvC,KAAK,CAACsB,0BAAX;AAAuC;AAEtC,gBAAI,KAAKR,kBAAL,CAAwBD,IAAxB,KAAiCnB,SAAS,CAACuC,WAAV,CAAsBC,UAAvD,IACD,KAAKpB,kBAAL,CAAwBF,IAAxB,CAA6BuB,IAA7B,KAAsCJ,KAAK,CAACI,IAD3C,IAEDH,OAAO,CAACI,IAAR,CAAaC,GAAb,KAAqB,KAAK3B,YAAL,CAAkB2B,GAF1C,EAE+C;AAE9C,oBAAMG,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAK5B,kBAAL,CAAwBF,IAA1C,EAAgD;AAAE,yBAASoB,OAAO,CAAC,OAAD;AAAlB,eAAhD,CAAlB;AACA,mBAAKlB,kBAAL,CAAwBwB,OAAxB,CAAgCE,SAAhC;AACA,mBAAK1B,kBAAL,CAAwByB,OAAxB,CAAgC7C,SAAS,CAACuC,WAAV,CAAsBC,UAAtD;AAEA;;AACD;AACA;;AACD;AACC;AA3BF;AA6BA,KA1FkB;;AAGlB,SAAKP,KAAL,GAAa;AACZgB,MAAAA,GAAG,EAAE,eADO;AAEZjB,MAAAA,WAAW,EAAE,KAFD;AAGZkB,MAAAA,IAAI,EAAEnC,KAAK,CAACmC;AAHA,KAAb;AAMA,SAAK9B,kBAAL,gBAA0BvB,KAAK,CAACsD,SAAN,EAA1B;AACA,SAAKC,WAAL,gBAAmBvD,KAAK,CAACsD,SAAN,EAAnB;AACA;;AAEDE,EAAAA,iBAAiB,GAAG;AAEnB,QAAI,KAAKtC,KAAL,CAAWuC,YAAX,CAAwBC,MAAxB,KAAmC,CAAnC,IAAwC,KAAKxC,KAAL,CAAWyC,aAAX,CAAyBD,MAAzB,KAAoC,CAAhF,EAAmF;AAClF,WAAKjC,aAAL;AACA;AACD;;AAEDmC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAE7B,QAAIA,SAAS,CAACR,IAAV,KAAmB,KAAKnC,KAAL,CAAWmC,IAAlC,EAAwC;AACvC,WAAKhB,QAAL,CAAc;AAAEgB,QAAAA,IAAI,EAAE,KAAKnC,KAAL,CAAWmC;AAAnB,OAAd;AACA;AACD;;AAmEDS,EAAAA,MAAM,GAAG;AAER,QAAIC,aAAa,GAChB,IAAC,iBAAD;AACA,MAAA,KAAK,EAAE,KAAK7C,KAAL,CAAWP,KADlB;AAEA,MAAA,IAAI,EAAE,KAAKyB,KAAL,CAAWiB,IAFjB;AAGA,MAAA,OAAO,EAAC,eAHR;AAIA,MAAA,eAAe,EAAE,KAAK3B,aAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAQA,WACC,IAAC,wBAAD;AAA0B,MAAA,GAAG,EAAEsC,EAAE,IAAI,KAAKzC,kBAAL,GAA0ByC,EAA/D;AAAmE,MAAA,IAAI,EAAE,KAAK9C,KAAL,CAAWuC,YAApF;AAAkG,MAAA,KAAK,EAAE,KAAKvC,KAAL,CAAWyC,aAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,GAAG,EAAE/C,eAAe,CAAC,KAAKM,KAAN,CAAzB;AAAuC,MAAA,SAAS,EAAC,4BAAjD;AAA8E,MAAA,GAAG,EAAER,UAAU,CAACuD,YAAX,CAAwB,KAAK7B,KAAL,CAAWiB,IAAnC,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,GAAG,EAAExC,sBAAsB,CAAC,KAAKuB,KAAN,EAAa,KAAKlB,KAAlB,CAAhC;AAA0D,MAAA,SAAS,EAAC,gBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,IAAC,yBAAD;AACA,MAAA,GAAG,EAAE8C,EAAE,IAAI,KAAKT,WAAL,GAAmBS,EAD9B;AAEA,MAAA,OAAO,EAAC,MAFR;AAGA,MAAA,KAAK,EAAE,KAAK9C,KAAL,CAAWP,KAHlB;AAIA,MAAA,IAAI,EAAE,KAAKyB,KAAL,CAAWiB,IAJjB;AAKA,MAAA,WAAW,EAAE,KAAKjC,WALlB;AAMA,MAAA,eAAe,EAAE,KAAKM,aANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,EAUC;AAAK,MAAA,GAAG,EAAEZ,mBAAmB,CAAC,KAAKsB,KAAN,EAAa,KAAKlB,KAAlB,CAA7B;AAAuD,MAAA,SAAS,EAAC,aAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgF6C,aAAhF,CAVD,EAWC,IAAC,qBAAD;AAAuB,MAAA,KAAK,EAAE,KAAK7C,KAAL,CAAWP,KAAzC;AAAgD,MAAA,IAAI,EAAE,KAAKyB,KAAL,CAAWiB,IAAjE;AAAuE,MAAA,eAAe,EAAE,KAAK3B,aAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXD,EAYC,IAAC,2BAAD;AAA6B,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWP,KAA/C;AAAsD,MAAA,IAAI,EAAE,KAAKyB,KAAL,CAAWiB,IAAvE;AAA6E,MAAA,eAAe,EAAE,KAAK3B,aAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZD,CADD,CADD;AAkBA;;AA5HkE,C,CA+HpE;;;AACAX,qCAAqC,CAACmD,YAAtC,GAAqD;AACpDb,EAAAA,IAAI,EAAE3C,UAAU,CAACyD,kBAAX,EAD8C;AAEpDxD,EAAAA,KAAK,EAAEA,KAF6C;AAGpD8C,EAAAA,YAAY,EAAE,EAHsC;AAIpDE,EAAAA,aAAa,EAAE;AAJqC,CAArD;AAOA5C,qCAAqC,CAACqD,SAAtC,GAAkD;AACjDf,EAAAA,IAAI,EAAEnD,SAAS,CAACmE,MADiC;AAEjD1D,EAAAA,KAAK,EAAET,SAAS,CAACoE,MAFgC;AAGjDb,EAAAA,YAAY,EAAEvD,SAAS,CAACmE,MAHyB;AAIjDV,EAAAA,aAAa,EAAEzD,SAAS,CAACmE;AAJwB,CAAlD;AAOA,SAAStD,qCAAT","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { CometChatConversationList } from \"../\";\nimport { CometChatMessages } from \"../../Messages\";\nimport { CometChatIncomingCall, CometChatIncomingDirectCall } from \"../../Calls\";\n\nimport { CometChatContextProvider } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\n\nimport Translator from \"../../../resources/localization/translator\";\nimport { theme } from \"../../../resources/theme\";\n\nimport {\n\tchatScreenStyle,\n\tchatScreenSidebarStyle,\n\tchatScreenMainStyle,\n} from \"./style\";\n\nclass CometChatConversationListWithMessages extends React.Component {\n\n\tloggedInUser = null;\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\ttab: \"conversations\",\n\t\t\tsidebarview: false,\n\t\t\tlang: props.lang,\n\t\t}\n\n\t\tthis.contextProviderRef = React.createRef();\n\t\tthis.chatListRef = React.createRef();\n\t}\n\t\n\tcomponentDidMount() {\n\n\t\tif (this.props.chatWithUser.length === 0 && this.props.chatWithGroup.length === 0) {\n\t\t\tthis.toggleSideBar();\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\n\t\tif (prevProps.lang !== this.props.lang) {\n\t\t\tthis.setState({ lang: this.props.lang });\n\t\t}\n\t}\n\n\titemClicked = (item, type) => {\n\n\t\tthis.contextProviderRef.setTypeAndItem(type, item);\n\t\tthis.toggleSideBar()\n\t}\n\n\tactionHandler = (action, item, count, ...otherProps) => {\n\t\t\n\t\tswitch(action) {\n\n\t\t\tcase enums.ACTIONS[\"TOGGLE_SIDEBAR\"]:\n\t\t\t\tthis.toggleSideBar();\n\t\t\tbreak;\n\t\t\tcase enums.GROUP_MEMBER_SCOPE_CHANGED:\n\t\t\tcase enums.GROUP_MEMBER_KICKED:\n\t\t\tcase enums.GROUP_MEMBER_BANNED:\n\t\t\t\tthis.groupUpdated(action, item, count, ...otherProps);\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t}\n\n\ttoggleSideBar = () => {\n\n\t\tconst sidebarview = this.state.sidebarview;\n\t\tthis.setState({ sidebarview: !sidebarview });\n\t}\n\n/**\n If the logged in user is banned, kicked or scope changed, update the chat window accordingly\n */\n\tgroupUpdated = (key, message, group, options) => {\n\n\t\tswitch (key) {\n\t\t\tcase enums.GROUP_MEMBER_BANNED:\n\t\t\tcase enums.GROUP_MEMBER_KICKED: {\n\n\t\t\t\tif (this.contextProviderRef.type === CometChat.ACTION_TYPE.TYPE_GROUP\n\t\t\t\t&& this.contextProviderRef.item.guid === group.guid\n\t\t\t\t&& options.user.uid === this.loggedInUser.uid) {\n\n\t\t\t\t\tthis.contextProviderRef.setItem({});\n\t\t\t\t\tthis.contextProviderRef.setType(\"\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase enums.GROUP_MEMBER_SCOPE_CHANGED: {\n\n\t\t\t\tif (this.contextProviderRef.type === CometChat.ACTION_TYPE.TYPE_GROUP\n\t\t\t\t&& this.contextProviderRef.item.guid === group.guid\n\t\t\t\t&& options.user.uid === this.loggedInUser.uid) {\n\n\t\t\t\t\tconst newObject = Object.assign({}, this.contextProviderRef.item, { \"scope\": options[\"scope\"] })\n\t\t\t\t\tthis.contextProviderRef.setItem(newObject);\n\t\t\t\t\tthis.contextProviderRef.setType(CometChat.ACTION_TYPE.TYPE_GROUP);\n\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\trender() {\n\n\t\tlet messageScreen = (\n\t\t\t<CometChatMessages\n\t\t\ttheme={this.props.theme}\n\t\t\tlang={this.state.lang}\n\t\t\t_parent=\"conversations\"\n\t\t\tactionGenerated={this.actionHandler} />\n\t\t);\n\n\t\treturn (\n\t\t\t<CometChatContextProvider ref={el => this.contextProviderRef = el} user={this.props.chatWithUser} group={this.props.chatWithGroup}>\n\t\t\t\t<div css={chatScreenStyle(this.props)} className=\"cometchat cometchat--chats\" dir={Translator.getDirection(this.state.lang)}>\n\t\t\t\t\t<div css={chatScreenSidebarStyle(this.state, this.props)} className=\"chats__sidebar\">\n\t\t\t\t\t\t<CometChatConversationList\n\t\t\t\t\t\tref={el => this.chatListRef = el}\n\t\t\t\t\t\t_parent=\"clwm\"\n\t\t\t\t\t\ttheme={this.props.theme}\n\t\t\t\t\t\tlang={this.state.lang}\n\t\t\t\t\t\tonItemClick={this.itemClicked}\n\t\t\t\t\t\tactionGenerated={this.actionHandler} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div css={chatScreenMainStyle(this.state, this.props)} className=\"chats__main\">{messageScreen}</div>\n\t\t\t\t\t<CometChatIncomingCall theme={this.props.theme} lang={this.state.lang} actionGenerated={this.actionHandler} />\n\t\t\t\t\t<CometChatIncomingDirectCall theme={this.props.theme} lang={this.state.lang} actionGenerated={this.actionHandler} />\n\t\t\t\t</div>\n\t\t\t</CometChatContextProvider>\n\t\t);\n\t}\n}\n\n// Specifies the default values for props:\nCometChatConversationListWithMessages.defaultProps = {\n\tlang: Translator.getDefaultLanguage(),\n\ttheme: theme,\n\tchatWithUser: \"\",\n\tchatWithGroup: \"\",\n};\n\nCometChatConversationListWithMessages.propTypes = {\n\tlang: PropTypes.string,\n\ttheme: PropTypes.object,\n\tchatWithUser: PropTypes.string,\n\tchatWithGroup: PropTypes.string,\n}\n\nexport { CometChatConversationListWithMessages };"]},"metadata":{},"sourceType":"module"}