{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/utils/ConvorsationProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport API from \"./API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst conversationContext = /*#__PURE__*/React.createContext();\nexport function useConversations() {\n  _s();\n\n  return useContext(conversationContext);\n}\n\n_s(useConversations, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function Provider({\n  id,\n  children\n}) {\n  _s2();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadingMessages, setLoadingMessages] = useState(false);\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversationIndex, setSelectedConversationIndex] = useState(0);\n  const [messages, setMessages] = useState([]);\n\n  function sendMessage(text) {\n    // Yet another place where I ran into id issues.. this is going to be a mess to fix later\n    const convo_id = conversations[selectedConversationIndex].id; // const convo_id = conversations[selectedConversationIndex]._id;\n\n    API.sendMessage(convo_id, id, text).then(data => {\n      console.log(data);\n      setMessages([...messages, data]);\n    }).catch(e => console.error(e));\n  }\n\n  useEffect(() => {\n    API.init(([convos, topMessages]) => {\n      setConversations(convos);\n      setMessages(topMessages);\n      setIsLoading(false);\n    }).catch(e => console.error(e));\n  }, []);\n  const value = {\n    loadingState: [isLoading, setIsLoading],\n    conversationState: [conversations, setConversations],\n    selectedConversation: conversations[selectedConversationIndex],\n    messageState: [messages, setMessages],\n    mobileViewState: [mobileView, setMobileView],\n    loadingMessagesState: [loadingMessages, setLoadingMessages],\n    sendMessage,\n    userID: id,\n    selectConversationIndex: setSelectedConversationIndex\n  };\n  return /*#__PURE__*/_jsxDEV(conversationContext.Provider, {\n    value: value,\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      id: \"spinner\",\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 20\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Provider, \"McjXdY2S4sm/2sbb2v4pU3I5GbY=\");\n\n_c = Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/utils/ConvorsationProvider.js"],"names":["React","useContext","useEffect","useState","Spinner","API","conversationContext","createContext","useConversations","Provider","id","children","isLoading","setIsLoading","loadingMessages","setLoadingMessages","conversations","setConversations","selectedConversationIndex","setSelectedConversationIndex","messages","setMessages","sendMessage","text","convo_id","then","data","console","log","catch","e","error","init","convos","topMessages","value","loadingState","conversationState","selectedConversation","messageState","mobileViewState","mobileView","setMobileView","loadingMessagesState","userID","selectConversationIndex"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,mBAAmB,gBAAGN,KAAK,CAACO,aAAN,EAA5B;AAEA,OAAO,SAASC,gBAAT,GAA4B;AAAA;;AACjC,SAAOP,UAAU,CAACK,mBAAD,CAAjB;AACD;;GAFeE,gB;;AAIhB,OAAO,SAASC,QAAT,CAAkB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAlB,EAAoC;AAAA;;AACzC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACe,yBAAD,EAA4BC,4BAA5B,IAA4DhB,QAAQ,CAAC,CAAD,CAA1E;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;;AACA,WAASmB,WAAT,CAAqBC,IAArB,EAA2B;AACzB;AACA,UAAMC,QAAQ,GAAGR,aAAa,CAACE,yBAAD,CAAb,CAAyCR,EAA1D,CAFyB,CAGzB;;AACAL,IAAAA,GAAG,CAACiB,WAAJ,CAAgBE,QAAhB,EAA0Bd,EAA1B,EAA8Ba,IAA9B,EACGE,IADH,CACSC,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAL,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcM,IAAd,CAAD,CAAX;AACD,KAJH,EAKGG,KALH,CAKUC,CAAD,IAAOH,OAAO,CAACI,KAAR,CAAcD,CAAd,CALhB;AAMD;;AAED5B,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,GAAG,CAAC2B,IAAJ,CAAS,CAAC,CAACC,MAAD,EAASC,WAAT,CAAD,KAA2B;AAClCjB,MAAAA,gBAAgB,CAACgB,MAAD,CAAhB;AACAZ,MAAAA,WAAW,CAACa,WAAD,CAAX;AACArB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAJD,EAIGgB,KAJH,CAIUC,CAAD,IAAOH,OAAO,CAACI,KAAR,CAAcD,CAAd,CAJhB;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,QAAMK,KAAK,GAAG;AACZC,IAAAA,YAAY,EAAE,CAACxB,SAAD,EAAYC,YAAZ,CADF;AAEZwB,IAAAA,iBAAiB,EAAE,CAACrB,aAAD,EAAgBC,gBAAhB,CAFP;AAGZqB,IAAAA,oBAAoB,EAAEtB,aAAa,CAACE,yBAAD,CAHvB;AAIZqB,IAAAA,YAAY,EAAE,CAACnB,QAAD,EAAWC,WAAX,CAJF;AAKZmB,IAAAA,eAAe,EAAE,CAACC,UAAD,EAAaC,aAAb,CALL;AAMZC,IAAAA,oBAAoB,EAAE,CAAC7B,eAAD,EAAkBC,kBAAlB,CANV;AAOZO,IAAAA,WAPY;AAQZsB,IAAAA,MAAM,EAAElC,EARI;AASZmC,IAAAA,uBAAuB,EAAE1B;AATb,GAAd;AAWA,sBACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEgB,KAArC;AAAA,cACGvB,SAAS,gBAAG,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAH,GAAiDD;AAD7D;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IA1CeF,Q;;KAAAA,Q","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport API from \"./API\";\n\nconst conversationContext = React.createContext();\n\nexport function useConversations() {\n  return useContext(conversationContext);\n}\n\nexport function Provider({ id, children }) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadingMessages, setLoadingMessages] = useState(false);\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversationIndex, setSelectedConversationIndex] = useState(0);\n  const [messages, setMessages] = useState([]);\n  function sendMessage(text) {\n    // Yet another place where I ran into id issues.. this is going to be a mess to fix later\n    const convo_id = conversations[selectedConversationIndex].id;\n    // const convo_id = conversations[selectedConversationIndex]._id;\n    API.sendMessage(convo_id, id, text)\n      .then((data) => {\n        console.log(data);\n        setMessages([...messages, data]);\n      })\n      .catch((e) => console.error(e));\n  }\n\n  useEffect(() => {\n    API.init(([convos, topMessages]) => {\n      setConversations(convos);\n      setMessages(topMessages);\n      setIsLoading(false);\n    }).catch((e) => console.error(e));\n  }, []);\n\n  const value = {\n    loadingState: [isLoading, setIsLoading],\n    conversationState: [conversations, setConversations],\n    selectedConversation: conversations[selectedConversationIndex],\n    messageState: [messages, setMessages],\n    mobileViewState: [mobileView, setMobileView],\n    loadingMessagesState: [loadingMessages, setLoadingMessages],\n    sendMessage,\n    userID: id,\n    selectConversationIndex: setSelectedConversationIndex,\n  };\n  return (\n    <conversationContext.Provider value={value}>\n      {isLoading ? <Spinner id=\"spinner\" animation=\"border\" /> : children}\n    </conversationContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}