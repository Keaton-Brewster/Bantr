{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Groups/CometChatViewGroupMemberListItem/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatAvatar, CometChatUserPresence } from \"../../Shared\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { modalRowStyle, nameColumnStyle, avatarStyle, nameStyle, roleStyle, scopeColumnStyle, scopeIconStyle, actionColumnStyle, banIconStyle, kickIconStyle, scopeWrapperStyle, scopeSelectionStyle } from \"./style\";\nimport scopeIcon from \"./resources/edit.svg\";\nimport doneIcon from \"./resources/done.svg\";\nimport clearIcon from \"./resources/close.svg\";\nimport banIcon from \"./resources/ban-member.svg\";\nimport kickIcon from \"./resources/delete.svg\";\n\nclass CometChatViewGroupMemberListItem extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.toggleChangeScope = flag => {\n      this.setState({\n        showChangeScope: flag\n      });\n    };\n\n    this.scopeChangeHandler = event => {\n      this.setState({\n        scope: event.target.value\n      });\n    };\n\n    this.updateMemberScope = () => {\n      this.props.actionGenerated(enums.ACTIONS[\"CHANGE_SCOPE_GROUP_MEMBER\"], this.props.member, this.state.scope);\n      this.toggleChangeScope();\n    };\n\n    this.toggleTooltip = (event, flag) => {\n      const elem = event.currentTarget;\n\n      if (elem.classList.contains(\"name\")) {\n        const scrollWidth = elem.scrollWidth;\n        const clientWidth = elem.clientWidth;\n\n        if (scrollWidth <= clientWidth) {\n          return false;\n        }\n      }\n\n      if (flag) {\n        elem.setAttribute(\"title\", this.props.member.name);\n      } else {\n        elem.removeAttribute(\"title\");\n      }\n    };\n\n    this.changeScopeDropDown = jsx(\"select\", {\n      className: \"members-scope-select\",\n      onChange: this.scopeChangeHandler,\n      defaultValue: this.props.member.scope,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    });\n    this.state = {\n      showChangeScope: false,\n      scope: null\n    };\n    this.roles = context.roles;\n  }\n\n  render() {\n    let editClassName = \"\";\n    let name = this.props.member.name;\n    let scope = jsx(\"span\", {\n      css: roleStyle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 22\n      }\n    }, this.roles[this.props.member.scope]);\n    let changescope = null;\n    let ban = jsx(\"i\", {\n      css: banIconStyle(banIcon, this.context),\n      title: Translator.translate(\"BAN\", this.props.lang),\n      onClick: () => {\n        this.props.actionGenerated(enums.ACTIONS[\"BAN_GROUP_MEMBER\"], this.props.member);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 20\n      }\n    });\n    let kick = jsx(\"i\", {\n      css: kickIconStyle(kickIcon, this.context),\n      title: Translator.translate(\"KICK\", this.props.lang),\n      onClick: () => {\n        this.props.actionGenerated(enums.ACTIONS[\"KICK_GROUP_MEMBER\"], this.props.member);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    });\n\n    if (this.state.showChangeScope) {\n      let options = jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, jsx(\"option\", {\n        value: CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, this.roles[CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT]), jsx(\"option\", {\n        value: CometChat.GROUP_MEMBER_SCOPE.MODERATOR,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }, this.roles[CometChat.GROUP_MEMBER_SCOPE.MODERATOR]), jsx(\"option\", {\n        value: CometChat.GROUP_MEMBER_SCOPE.ADMIN,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, this.roles[CometChat.GROUP_MEMBER_SCOPE.ADMIN]));\n\n      if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.MODERATOR && this.props.member.scope === CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT) {\n        options = jsx(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }\n        }, jsx(\"option\", {\n          value: CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }\n        }, this.roles[CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT]), jsx(\"option\", {\n          value: CometChat.GROUP_MEMBER_SCOPE.MODERATOR,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }\n        }, this.roles[CometChat.GROUP_MEMBER_SCOPE.MODERATOR]));\n      }\n\n      changescope = jsx(\"div\", {\n        css: scopeWrapperStyle(),\n        className: \"scope__wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }, jsx(\"select\", {\n        css: scopeSelectionStyle(),\n        className: \"scope__select\",\n        onChange: this.scopeChangeHandler,\n        defaultValue: this.props.member.scope,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      }, options), jsx(\"i\", {\n        css: scopeIconStyle(doneIcon, this.context),\n        title: Translator.translate(\"CHANGE_SCOPE\", this.props.lang),\n        onClick: this.updateMemberScope,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }), jsx(\"i\", {\n        css: scopeIconStyle(clearIcon, this.context),\n        title: Translator.translate(\"CHANGE_SCOPE\", this.props.lang),\n        onClick: () => this.toggleChangeScope(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT) {\n        changescope = scope;\n      } else {\n        changescope = jsx(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }\n        }, scope, jsx(\"i\", {\n          css: scopeIconStyle(scopeIcon, this.context),\n          title: Translator.translate(\"CHANGE_SCOPE\", this.props.lang),\n          onClick: () => this.toggleChangeScope(true),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }\n        }));\n      }\n    } //disable change scope, kick, ban of group owner\n\n\n    if (this.context.item.owner === this.props.member.uid) {\n      scope = jsx(\"span\", {\n        css: roleStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 22\n        }\n      }, Translator.translate(\"OWNER\", this.props.lang));\n      changescope = scope;\n      ban = null;\n      kick = null;\n    } //disable change scope, kick, ban of self\n\n\n    if (this.props.loggedinuser.uid === this.props.member.uid) {\n      name = Translator.translate(\"YOU\", this.props.lang);\n      changescope = scope;\n      ban = null;\n      kick = null;\n    } //if the loggedin user is moderator, don't allow to change scope, ban, kick group moderators or administrators\n\n\n    if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.MODERATOR && (this.props.member.scope === CometChat.GROUP_MEMBER_SCOPE.ADMIN || this.props.member.scope === CometChat.GROUP_MEMBER_SCOPE.MODERATOR)) {\n      changescope = scope;\n      ban = null;\n      kick = null;\n    } //if the loggedin user is administrator but not group owner, don't allow to change scope, ban, kick group administrators\n\n\n    if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.ADMIN && this.context.item.owner !== this.props.loggedinuser.uid && this.props.member.scope === CometChat.GROUP_MEMBER_SCOPE.ADMIN) {\n      changescope = scope;\n      ban = null;\n      kick = null;\n    }\n\n    let editAccess = null; //if the loggedin user is participant, don't show the option to change scope, ban, or kick group members\n\n    if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT) {\n      editAccess = null;\n      editClassName = \"true\";\n    } else {\n      editAccess = jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      }, jsx(\"div\", {\n        css: actionColumnStyle(this.context),\n        className: \"ban\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }\n      }, ban), jsx(\"div\", {\n        css: actionColumnStyle(this.context),\n        className: \"kick\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }\n      }, kick));\n      /**\n       * if kick and ban feature is disabled\n       */\n\n      if (this.props.enableBanGroupMembers === false && this.props.enableKickGroupMembers === false) {\n        editAccess = null;\n      } else if (this.props.enableBanGroupMembers === false) {\n        //if ban feature is disabled\n        editAccess = jsx(\"div\", {\n          css: actionColumnStyle(this.context),\n          className: \"kick\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 21\n          }\n        }, kick);\n      } else if (this.props.enableKickGroupMembers === false) {\n        //if kick feature is disabled\n        editAccess = jsx(\"div\", {\n          css: actionColumnStyle(this.context),\n          className: \"ban\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 21\n          }\n        }, ban);\n      }\n      /**\n       * if promote_demote_members feature is disabled\n       */\n\n\n      if (this.props.enableChangeScope === false) {\n        changescope = scope;\n      }\n    }\n\n    let userPresence = jsx(CometChatUserPresence, {\n      status: this.props.member.status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    });\n    return jsx(\"div\", {\n      css: modalRowStyle(this.context),\n      className: \"content__row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    }, jsx(\"div\", {\n      css: nameColumnStyle(this.context, editClassName),\n      className: \"userinfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, jsx(\"div\", {\n      css: avatarStyle(this.context, editClassName),\n      className: \"thumbnail\",\n      onMouseEnter: event => this.toggleTooltip(event, true),\n      onMouseLeave: event => this.toggleTooltip(event, false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }, jsx(CometChatAvatar, {\n      user: this.props.member,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }), userPresence), jsx(\"div\", {\n      css: nameStyle(this.context, editClassName),\n      className: \"name\",\n      onMouseEnter: event => this.toggleTooltip(event, true),\n      onMouseLeave: event => this.toggleTooltip(event, false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }\n    }, name)), jsx(\"div\", {\n      css: scopeColumnStyle(this.context),\n      className: \"scope\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }, changescope), editAccess);\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatViewGroupMemberListItem.contextType = CometChatContext;\nCometChatViewGroupMemberListItem.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  loggedinuser: {},\n  enableChangeScope: false\n};\nCometChatViewGroupMemberListItem.propTypes = {\n  lang: PropTypes.string,\n  loggedinuser: PropTypes.shape(CometChat.User),\n  enableChangeScope: PropTypes.bool\n};\nexport { CometChatViewGroupMemberListItem };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Groups/CometChatViewGroupMemberListItem/index.js"],"names":["React","jsx","PropTypes","CometChat","CometChatAvatar","CometChatUserPresence","CometChatContext","enums","Translator","modalRowStyle","nameColumnStyle","avatarStyle","nameStyle","roleStyle","scopeColumnStyle","scopeIconStyle","actionColumnStyle","banIconStyle","kickIconStyle","scopeWrapperStyle","scopeSelectionStyle","CometChatViewGroupMemberListItem","Component","constructor","props","context","toggleChangeScope","flag","setState","showChangeScope","scopeChangeHandler","event","scope","target","value","updateMemberScope","actionGenerated","ACTIONS","member","state","toggleTooltip","elem","currentTarget","classList","contains","scrollWidth","clientWidth","setAttribute","name","removeAttribute","changeScopeDropDown","roles","render","editClassName","changescope","ban","banIcon","translate","lang","kick","kickIcon","options","GROUP_MEMBER_SCOPE","PARTICIPANT","MODERATOR","ADMIN","item","doneIcon","clearIcon","scopeIcon","owner","uid","loggedinuser","editAccess","enableBanGroupMembers","enableKickGroupMembers","enableChangeScope","userPresence","status","contextType","defaultProps","getDefaultLanguage","propTypes","string","shape","User","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { CometChatAvatar, CometChatUserPresence } from \"../../Shared\";\n\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\n\nimport Translator from \"../../../resources/localization/translator\";\n\nimport {\n    modalRowStyle,\n    nameColumnStyle,\n    avatarStyle,\n    nameStyle,\n    roleStyle,\n    scopeColumnStyle,\n    scopeIconStyle,\n    actionColumnStyle,\n    banIconStyle,\n    kickIconStyle,\n    scopeWrapperStyle,\n    scopeSelectionStyle\n} from \"./style\";\n\nimport scopeIcon from \"./resources/edit.svg\";\nimport doneIcon from \"./resources/done.svg\";\nimport clearIcon from \"./resources/close.svg\";\nimport banIcon from \"./resources/ban-member.svg\";\nimport kickIcon from \"./resources/delete.svg\";\n\nclass CometChatViewGroupMemberListItem extends React.Component {\n\n    static contextType = CometChatContext;\n\n    constructor(props, context) {\n\n        super(props, context);\n\n        this.changeScopeDropDown = (\n            <select \n            className=\"members-scope-select\"\n            onChange={this.scopeChangeHandler}\n            defaultValue={this.props.member.scope}></select>\n        )\n\n        this.state = {\n            showChangeScope: false,\n            scope: null\n        }\n\n        this.roles = context.roles;\n    }\n\n    toggleChangeScope = (flag) => {\n        this.setState({ showChangeScope: flag });\n    }\n\n    scopeChangeHandler = (event) => {\n        this.setState({scope: event.target.value});\n    }\n\n    updateMemberScope = () => {\n        this.props.actionGenerated(enums.ACTIONS[\"CHANGE_SCOPE_GROUP_MEMBER\"], this.props.member, this.state.scope);\n        this.toggleChangeScope();\n    }\n\n    toggleTooltip = (event, flag) => {\n\n        const elem = event.currentTarget;\n        \n        if (elem.classList.contains(\"name\")) {\n\n            const scrollWidth = elem.scrollWidth;\n            const clientWidth = elem.clientWidth;\n            \n            if (scrollWidth <= clientWidth) {\n                return false;\n            }\n        }\n\n        if(flag) {\n            elem.setAttribute(\"title\", this.props.member.name);\n        } else {\n            elem.removeAttribute(\"title\");\n        }\n    }\n\n    render() {\n\n        let editClassName = \"\";\n    \n        let name = this.props.member.name;\n        let scope = (<span css={roleStyle()}>{this.roles[this.props.member.scope]}</span>);\n        let changescope = null;\n        let ban = (<i css={banIconStyle(banIcon, this.context)} title={Translator.translate(\"BAN\", this.props.lang)} onClick={() => { this.props.actionGenerated(enums.ACTIONS[\"BAN_GROUP_MEMBER\"], this.props.member)}}></i>);\n        let kick = (<i css={kickIconStyle(kickIcon, this.context)} title={Translator.translate(\"KICK\", this.props.lang)} onClick={() => { this.props.actionGenerated(enums.ACTIONS[\"KICK_GROUP_MEMBER\"], this.props.member)}}></i>);\n        \n\n        if(this.state.showChangeScope) {\n\n            let options = (\n                <React.Fragment>\n                    <option value={CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT}>{this.roles[CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT]}</option>\n                    <option value={CometChat.GROUP_MEMBER_SCOPE.MODERATOR}>{this.roles[CometChat.GROUP_MEMBER_SCOPE.MODERATOR]}</option>\n                    <option value={CometChat.GROUP_MEMBER_SCOPE.ADMIN}>{this.roles[CometChat.GROUP_MEMBER_SCOPE.ADMIN]}</option>\n                </React.Fragment>\n            );\n\n            if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.MODERATOR\n                && this.props.member.scope === CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT) {\n\n                options = (\n                    <React.Fragment>\n                        <option value={CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT}>{this.roles[CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT]}</option>\n                        <option value={CometChat.GROUP_MEMBER_SCOPE.MODERATOR}>{this.roles[CometChat.GROUP_MEMBER_SCOPE.MODERATOR]}</option>\n                    </React.Fragment>\n                );\n            }\n\n            changescope = (\n                <div css={scopeWrapperStyle()} className=\"scope__wrapper\">\n                    <select css={scopeSelectionStyle()} className=\"scope__select\" onChange={this.scopeChangeHandler} defaultValue={this.props.member.scope}>\n                        {options}\n                    </select>\n                    <i css={scopeIconStyle(doneIcon, this.context)} title={Translator.translate(\"CHANGE_SCOPE\", this.props.lang)} onClick={this.updateMemberScope}></i>\n                    <i css={scopeIconStyle(clearIcon, this.context)} title={Translator.translate(\"CHANGE_SCOPE\", this.props.lang)} onClick={() => this.toggleChangeScope(false)}></i>\n                </div>\n            );\n\n        } else {\n\n            if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT) {\n                changescope = scope;\n            } else {\n                changescope = (\n                    <React.Fragment>\n                        {scope}\n                        <i css={scopeIconStyle(scopeIcon, this.context)} title={Translator.translate(\"CHANGE_SCOPE\", this.props.lang)} onClick={() => this.toggleChangeScope(true)}></i>\n                    </React.Fragment>\n                );\n            }\n        }\n\n        //disable change scope, kick, ban of group owner\n        if (this.context.item.owner === this.props.member.uid) {\n            scope = (<span css={roleStyle()}>{Translator.translate(\"OWNER\", this.props.lang)}</span>);\n            changescope = scope;\n            ban = null;\n            kick = null;\n        }\n\n        //disable change scope, kick, ban of self\n        if (this.props.loggedinuser.uid === this.props.member.uid) {\n            name = Translator.translate(\"YOU\", this.props.lang);\n            changescope = scope;\n            ban = null;\n            kick = null;\n        }\n\n        //if the loggedin user is moderator, don't allow to change scope, ban, kick group moderators or administrators\n        if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.MODERATOR \n        && (this.props.member.scope === CometChat.GROUP_MEMBER_SCOPE.ADMIN || this.props.member.scope === CometChat.GROUP_MEMBER_SCOPE.MODERATOR)) {\n            changescope = scope;\n            ban = null;\n            kick = null;\n        }\n\n        //if the loggedin user is administrator but not group owner, don't allow to change scope, ban, kick group administrators\n        if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.ADMIN\n        && this.context.item.owner !== this.props.loggedinuser.uid \n        && this.props.member.scope === CometChat.GROUP_MEMBER_SCOPE.ADMIN) {\n            changescope = scope;\n            ban = null;\n            kick = null;\n        }\n        \n        let editAccess = null;\n        //if the loggedin user is participant, don't show the option to change scope, ban, or kick group members\n        if (this.context.item.scope === CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT) {\n            editAccess = null;\n            editClassName = \"true\";\n        } else {\n\n            editAccess = (\n                <React.Fragment>\n                    <div css={actionColumnStyle(this.context)} className=\"ban\">{ban}</div>\n                    <div css={actionColumnStyle(this.context)} className=\"kick\">{kick}</div>\n                </React.Fragment>\n            );\n\n            /**\n             * if kick and ban feature is disabled\n             */\n            if (this.props.enableBanGroupMembers === false && this.props.enableKickGroupMembers === false) {\n                editAccess = null;\n            } else if (this.props.enableBanGroupMembers === false) { //if ban feature is disabled\n                editAccess = (\n                    <div css={actionColumnStyle(this.context)} className=\"kick\">{kick}</div>\n                );\n            } else if (this.props.enableKickGroupMembers === false) { //if kick feature is disabled\n                editAccess = (\n                    <div css={actionColumnStyle(this.context)} className=\"ban\">{ban}</div>\n                );\n            }\n\n            /**\n             * if promote_demote_members feature is disabled\n             */\n            if (this.props.enableChangeScope === false) {\n                changescope = scope;\n            }\n        }\n\n        let userPresence = (\n            <CometChatUserPresence status={this.props.member.status} />\n        );\n        \n        return (\n            <div css={modalRowStyle(this.context)} className=\"content__row\">\n                <div css={nameColumnStyle(this.context, editClassName)} className=\"userinfo\">\n                    <div css={avatarStyle(this.context, editClassName)} className=\"thumbnail\"\n                    onMouseEnter={event => this.toggleTooltip(event, true)}\n                    onMouseLeave={event => this.toggleTooltip(event, false)}>\n                        <CometChatAvatar user={this.props.member} />\n                        {userPresence}\n                    </div>\n                    <div css={nameStyle(this.context, editClassName)} className=\"name\"\n                    onMouseEnter={event => this.toggleTooltip(event, true)}\n                    onMouseLeave={event => this.toggleTooltip(event, false)}>{name}</div>\n                </div>\n                <div css={scopeColumnStyle(this.context)} className=\"scope\">{changescope}</div>\n                {editAccess}\n            </div>\n        );\n    }\n}\n\n// Specifies the default values for props:\nCometChatViewGroupMemberListItem.defaultProps = {\n\tlang: Translator.getDefaultLanguage(),\n\tloggedinuser: {},\n\tenableChangeScope: false,\n};\n\nCometChatViewGroupMemberListItem.propTypes = {\n\tlang: PropTypes.string,\n\tloggedinuser: PropTypes.shape(CometChat.User),\n\tenableChangeScope: PropTypes.bool\n};\n\nexport { CometChatViewGroupMemberListItem };"]},"metadata":{},"sourceType":"module"}