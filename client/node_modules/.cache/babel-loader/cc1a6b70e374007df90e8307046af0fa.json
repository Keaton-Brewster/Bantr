{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Groups/CometChatAddGroupMemberListItem/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChatAvatar, CometChatUserPresence } from \"../../Shared\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport { theme } from \"../../../resources/theme\";\nimport { modalRowStyle, modalColumnStyle, avatarStyle, nameStyle, selectionColumnStyle, selectionBoxStyle } from \"./style\";\nimport inactiveIcon from \"./resources/group-member-unselect.svg\";\nimport activeIcon from \"./resources/group-member-select.svg\";\n\nconst CometChatAddGroupMemberListItem = props => {\n  _s();\n\n  const {\n    groupMembers,\n    theme\n  } = useContext(CometChatContext);\n  const [checked, setChecked] = useState(() => {\n    const found = groupMembers.find(member => member.uid === props.user.uid);\n    const value = found ? true : false;\n    return value;\n  });\n\n  const handleCheck = event => {\n    const value = checked === true ? false : true;\n    setChecked(value);\n    props.changed(props.user, value);\n  };\n\n  const toggleTooltip = (event, flag) => {\n    const elem = event.currentTarget;\n    const nameContainer = elem.lastChild;\n    const scrollWidth = nameContainer.scrollWidth;\n    const clientWidth = nameContainer.clientWidth;\n\n    if (scrollWidth <= clientWidth) {\n      return false;\n    }\n\n    if (flag) {\n      nameContainer.setAttribute(\"title\", nameContainer.textContent);\n    } else {\n      nameContainer.removeAttribute(\"title\");\n    }\n  };\n\n  return jsx(\"div\", {\n    css: modalRowStyle(theme),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, jsx(\"div\", {\n    css: modalColumnStyle(),\n    className: \"userinfo\",\n    onMouseEnter: event => toggleTooltip(event, true),\n    onMouseLeave: event => toggleTooltip(event, false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, jsx(\"div\", {\n    css: avatarStyle(),\n    className: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, jsx(CometChatAvatar, {\n    user: props.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), jsx(CometChatUserPresence, {\n    status: props.user.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  })), jsx(\"div\", {\n    css: nameStyle(),\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, props.user.name)), jsx(\"div\", {\n    css: selectionColumnStyle(),\n    className: \"selection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, jsx(\"input\", {\n    css: selectionBoxStyle(inactiveIcon, activeIcon, theme),\n    type: \"checkbox\",\n    checked: checked,\n    id: props.user.uid + \"sel\",\n    onChange: handleCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), jsx(\"label\", {\n    htmlFor: props.user.uid + \"sel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"\\xA0\")));\n}; // Specifies the default values for props:\n\n\n_s(CometChatAddGroupMemberListItem, \"CKkuOT79bdehE7QOdYuoUttKryA=\");\n\n_c = CometChatAddGroupMemberListItem;\nCometChatAddGroupMemberListItem.defaultProps = {\n  theme: theme\n};\nCometChatAddGroupMemberListItem.propTypes = {\n  theme: PropTypes.object\n};\nexport { CometChatAddGroupMemberListItem };\n\nvar _c;\n\n$RefreshReg$(_c, \"CometChatAddGroupMemberListItem\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Groups/CometChatAddGroupMemberListItem/index.js"],"names":["useState","useContext","jsx","PropTypes","CometChatAvatar","CometChatUserPresence","CometChatContext","theme","modalRowStyle","modalColumnStyle","avatarStyle","nameStyle","selectionColumnStyle","selectionBoxStyle","CometChatAddGroupMemberListItem","props","groupMembers","checked","setChecked","found","find","member","uid","user","value","handleCheck","event","changed","toggleTooltip","flag","elem","currentTarget","nameContainer","lastChild","scrollWidth","clientWidth","setAttribute","textContent","removeAttribute","status","name","inactiveIcon","activeIcon","defaultProps","propTypes","object"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\n\nimport { CometChatAvatar, CometChatUserPresence } from \"../../Shared\";\n\nimport { CometChatContext } from \"../../../util/CometChatContext\";\n\nimport { theme } from \"../../../resources/theme\";\n\nimport {\n  modalRowStyle,\n  modalColumnStyle,\n  avatarStyle,\n  nameStyle,\n  selectionColumnStyle,\n  selectionBoxStyle,\n} from \"./style\";\n\nimport inactiveIcon from \"./resources/group-member-unselect.svg\";\nimport activeIcon from \"./resources/group-member-select.svg\";\n\nconst CometChatAddGroupMemberListItem = (props) => {\n  const { groupMembers, theme } = useContext(CometChatContext);\n\n  const [checked, setChecked] = useState(() => {\n    const found = groupMembers.find((member) => member.uid === props.user.uid);\n    const value = found ? true : false;\n\n    return value;\n  });\n\n  const handleCheck = (event) => {\n    const value = checked === true ? false : true;\n    setChecked(value);\n    props.changed(props.user, value);\n  };\n\n  const toggleTooltip = (event, flag) => {\n    const elem = event.currentTarget;\n    const nameContainer = elem.lastChild;\n\n    const scrollWidth = nameContainer.scrollWidth;\n    const clientWidth = nameContainer.clientWidth;\n\n    if (scrollWidth <= clientWidth) {\n      return false;\n    }\n\n    if (flag) {\n      nameContainer.setAttribute(\"title\", nameContainer.textContent);\n    } else {\n      nameContainer.removeAttribute(\"title\");\n    }\n  };\n\n  return (\n    <div css={modalRowStyle(theme)}>\n      <div\n        css={modalColumnStyle()}\n        className=\"userinfo\"\n        onMouseEnter={(event) => toggleTooltip(event, true)}\n        onMouseLeave={(event) => toggleTooltip(event, false)}\n      >\n        <div css={avatarStyle()} className=\"avatar\">\n          <CometChatAvatar user={props.user} />\n          <CometChatUserPresence status={props.user.status} />\n        </div>\n        <div css={nameStyle()} className=\"name\">\n          {props.user.name}\n        </div>\n      </div>\n      <div css={selectionColumnStyle()} className=\"selection\">\n        <input\n          css={selectionBoxStyle(inactiveIcon, activeIcon, theme)}\n          type=\"checkbox\"\n          checked={checked}\n          id={props.user.uid + \"sel\"}\n          onChange={handleCheck}\n        />\n        <label htmlFor={props.user.uid + \"sel\"}>&nbsp;</label>\n      </div>\n    </div>\n  );\n};\n\n// Specifies the default values for props:\nCometChatAddGroupMemberListItem.defaultProps = {\n  theme: theme,\n};\n\nCometChatAddGroupMemberListItem.propTypes = {\n  theme: PropTypes.object,\n};\n\nexport { CometChatAddGroupMemberListItem };\n"]},"metadata":{},"sourceType":"module"}