{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/MainContent/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport { useViewport } from \"../../utils/ViewportProvider\";\nimport { useConversations } from \"../../utils/ConversationProvider\";\nimport MessagesTopMenu from \"./Messaging/MessagesTopMenu\";\nimport Messaging from \"./Messaging\";\nimport ConversationInfoScreen from \"./Messaging/ConversationInfoScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainContent() {\n  _s();\n\n  // Container ref is used to give refernce of width to the\n  // Chat input so that is always is 100% width of its parent\n  const containerRef = useRef();\n  const {\n    selectedConversation\n  } = useConversations();\n  const {\n    show\n  } = useViewport();\n\n  function renderSwitch() {\n    switch (activeContent) {\n      case \"conversation info\":\n        return /*#__PURE__*/_jsxDEV(ConversationInfoScreen, {\n          containerRef: containerRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 16\n        }, this);\n\n      case \"messaging\":\n        return /*#__PURE__*/_jsxDEV(Messaging, {\n          containerRef: containerRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 16\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(Messaging, {\n          containerRef: containerRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 16\n        }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: show.mainContent ? \"show\" : \"hide\",\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(MessagesTopMenu, {\n      conversationName: selectedConversation.name,\n      containerRef: containerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), renderSwitch()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainContent, \"mA5zFAWdhsdAJaxonc5BOoUDHus=\", false, function () {\n  return [useConversations, useViewport];\n});\n\n_c = MainContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/MainContent/index.jsx"],"names":["useRef","useViewport","useConversations","MessagesTopMenu","Messaging","ConversationInfoScreen","MainContent","containerRef","selectedConversation","show","renderSwitch","activeContent","mainContent","name"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,gBAAT,QAAiC,kCAAjC;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,sBAAP,MAAmC,oCAAnC;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC;AACA;AACA,QAAMC,YAAY,GAAGP,MAAM,EAA3B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAA2BN,gBAAgB,EAAjD;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAWR,WAAW,EAA5B;;AAEA,WAASS,YAAT,GAAwB;AACtB,YAAQC,aAAR;AACE,WAAK,mBAAL;AACE,4BAAO,QAAC,sBAAD;AAAwB,UAAA,YAAY,EAAEJ;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF,WAAK,WAAL;AACE,4BAAO,QAAC,SAAD;AAAW,UAAA,YAAY,EAAEA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF;AACE,4BAAO,QAAC,SAAD;AAAW,UAAA,YAAY,EAAEA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAAP;AANJ;AAQD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEE,IAAI,CAACG,WAAL,GAAmB,MAAnB,GAA4B,MAA5C;AAAoD,IAAA,GAAG,EAAEL,YAAzD;AAAA,4BACE,QAAC,eAAD;AACE,MAAA,gBAAgB,EAAEC,oBAAoB,CAACK,IADzC;AAEE,MAAA,YAAY,EAAEN;AAFhB;AAAA;AAAA;AAAA;AAAA,YADF,EAKGG,YAAY,EALf;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA3BuBJ,W;UAIWJ,gB,EAChBD,W;;;KALKK,W","sourcesContent":["import { useRef } from \"react\";\nimport { useViewport } from \"../../utils/ViewportProvider\";\nimport { useConversations } from \"../../utils/ConversationProvider\";\nimport MessagesTopMenu from \"./Messaging/MessagesTopMenu\";\nimport Messaging from \"./Messaging\";\nimport ConversationInfoScreen from \"./Messaging/ConversationInfoScreen\";\n\nexport default function MainContent() {\n  // Container ref is used to give refernce of width to the\n  // Chat input so that is always is 100% width of its parent\n  const containerRef = useRef();\n  const { selectedConversation } = useConversations();\n  const { show } = useViewport();\n\n  function renderSwitch() {\n    switch (activeContent) {\n      case \"conversation info\":\n        return <ConversationInfoScreen containerRef={containerRef} />;\n      case \"messaging\":\n        return <Messaging containerRef={containerRef} />;\n      default:\n        return <Messaging containerRef={containerRef} />;\n    }\n  }\n\n  return (\n    <div className={show.mainContent ? \"show\" : \"hide\"} ref={containerRef}>\n      <MessagesTopMenu\n        conversationName={selectedConversation.name}\n        containerRef={containerRef}\n      />\n      {renderSwitch()}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}