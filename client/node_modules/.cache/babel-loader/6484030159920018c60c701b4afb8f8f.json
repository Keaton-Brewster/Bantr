{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Groups/CometChatTransferOwnershipMemberListItem/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport { CometChatAvatar, CometChatUserPresence } from \"../../Shared\";\nimport { modalRowStyle, modalColumnStyle, avatarStyle, nameStyle, selectionColumnStyle, selectionBoxStyle } from \"./style\";\nimport inactiveIcon from \"./resources/group-member-unselect.svg\";\nimport activeIcon from \"./resources/group-member-select.svg\";\n\nclass CometChatTransferOwnershipMemberListItem extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleCheck = e => {\n      this.setState(this.toggleSelectedState);\n      this.props.checked(this.props.member);\n    };\n\n    this.toggleSelectedState = state => {\n      return {\n        isSelected: !state.isSelected\n      };\n    };\n\n    this.toggleTooltip = (event, flag) => {\n      const elem = event.currentTarget;\n      const nameContainer = elem.lastChild;\n      const scrollWidth = nameContainer.scrollWidth;\n      const clientWidth = nameContainer.clientWidth;\n\n      if (scrollWidth <= clientWidth) {\n        return false;\n      }\n\n      if (flag) {\n        nameContainer.setAttribute(\"title\", nameContainer.textContent);\n      } else {\n        nameContainer.removeAttribute(\"title\");\n      }\n    };\n\n    this.state = {\n      isSelected: false\n    };\n  }\n\n  render() {\n    return jsx(\"div\", {\n      css: modalRowStyle(this.props, this.context),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, jsx(\"div\", {\n      css: modalColumnStyle(this.context),\n      className: \"memberinfo\",\n      onMouseEnter: event => this.toggleTooltip(event, true),\n      onMouseLeave: event => this.toggleTooltip(event, false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, jsx(\"div\", {\n      css: avatarStyle(),\n      className: \"avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, jsx(CometChatAvatar, {\n      user: this.props.member,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), jsx(CometChatUserPresence, {\n      status: this.props.member.status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    })), jsx(\"div\", {\n      css: nameStyle(),\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, this.props.member.name)), jsx(\"div\", {\n      css: selectionColumnStyle(this.context),\n      className: \"selection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, this.context.roles[this.props.member.scope]), jsx(\"input\", {\n      css: selectionBoxStyle(inactiveIcon, activeIcon, this.context),\n      type: \"radio\",\n      name: \"transferOwnership\",\n      checked: this.state.checked,\n      id: this.props.member.uid + \"sel\",\n      onChange: this.handleCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }), jsx(\"label\", {\n      htmlFor: this.props.member.uid + \"sel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"\\xA0\")));\n  }\n\n}\n\nCometChatTransferOwnershipMemberListItem.contextType = CometChatContext;\nexport { CometChatTransferOwnershipMemberListItem };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Groups/CometChatTransferOwnershipMemberListItem/index.js"],"names":["React","jsx","CometChatContext","CometChatAvatar","CometChatUserPresence","modalRowStyle","modalColumnStyle","avatarStyle","nameStyle","selectionColumnStyle","selectionBoxStyle","CometChatTransferOwnershipMemberListItem","Component","constructor","props","context","handleCheck","e","setState","toggleSelectedState","checked","member","state","isSelected","toggleTooltip","event","flag","elem","currentTarget","nameContainer","lastChild","scrollWidth","clientWidth","setAttribute","textContent","removeAttribute","render","status","name","roles","scope","inactiveIcon","activeIcon","uid","contextType"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\n\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport { CometChatAvatar, CometChatUserPresence } from \"../../Shared\";\n\nimport {\n  modalRowStyle,\n  modalColumnStyle,\n  avatarStyle,\n  nameStyle,\n  selectionColumnStyle,\n  selectionBoxStyle,\n} from \"./style\";\n\nimport inactiveIcon from \"./resources/group-member-unselect.svg\";\nimport activeIcon from \"./resources/group-member-select.svg\";\n\nclass CometChatTransferOwnershipMemberListItem extends React.Component {\n  static contextType = CometChatContext;\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      isSelected: false,\n    };\n  }\n\n  handleCheck = (e) => {\n    this.setState(this.toggleSelectedState);\n    this.props.checked(this.props.member);\n  };\n\n  toggleSelectedState = (state) => {\n    return {\n      isSelected: !state.isSelected,\n    };\n  };\n\n  toggleTooltip = (event, flag) => {\n    const elem = event.currentTarget;\n    const nameContainer = elem.lastChild;\n\n    const scrollWidth = nameContainer.scrollWidth;\n    const clientWidth = nameContainer.clientWidth;\n\n    if (scrollWidth <= clientWidth) {\n      return false;\n    }\n\n    if (flag) {\n      nameContainer.setAttribute(\"title\", nameContainer.textContent);\n    } else {\n      nameContainer.removeAttribute(\"title\");\n    }\n  };\n\n  render() {\n    return (\n      <div css={modalRowStyle(this.props, this.context)}>\n        <div\n          css={modalColumnStyle(this.context)}\n          className=\"memberinfo\"\n          onMouseEnter={(event) => this.toggleTooltip(event, true)}\n          onMouseLeave={(event) => this.toggleTooltip(event, false)}\n        >\n          <div css={avatarStyle()} className=\"avatar\">\n            <CometChatAvatar user={this.props.member} />\n            <CometChatUserPresence status={this.props.member.status} />\n          </div>\n          <div css={nameStyle()} className=\"name\">\n            {this.props.member.name}\n          </div>\n        </div>\n        <div css={selectionColumnStyle(this.context)} className=\"selection\">\n          <span>{this.context.roles[this.props.member.scope]}</span>\n          <input\n            css={selectionBoxStyle(inactiveIcon, activeIcon, this.context)}\n            type=\"radio\"\n            name=\"transferOwnership\"\n            checked={this.state.checked}\n            id={this.props.member.uid + \"sel\"}\n            onChange={this.handleCheck}\n          />\n          <label htmlFor={this.props.member.uid + \"sel\"}>&nbsp;</label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport { CometChatTransferOwnershipMemberListItem };\n"]},"metadata":{},"sourceType":"module"}