{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Users/CometChatUserList/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { UserListManager } from \"./controller\";\nimport { CometChatUserListItem } from \"../../Users\";\nimport { CometChatContextProvider, CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { contactWrapperStyle, contactHeaderStyle, contactHeaderCloseStyle, contactHeaderTitleStyle, contactSearchStyle, contactSearchButtonStyle, contactSearchInputStyle, contactMsgStyle, contactMsgTxtStyle, contactListStyle, contactAlphabetStyle } from \"./style\";\nimport searchIcon from \"./resources/search.svg\";\nimport navigateIcon from \"./resources/back.svg\";\n\nclass CometChatUserList extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.toggleUserSearch = () => {\n      this.getContext().FeatureRestriction.isUserSearchEnabled().then(response => {\n        /**\n        * Don't update state if the response has the same value\n        */\n        if (response !== this.state.enableSearchUser) {\n          this.setState({\n            enableSearchUser: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableSearchUser !== false) {\n          this.setState({\n            enableSearchUser: false\n          });\n        }\n      });\n    };\n\n    this.userUpdated = user => {\n      let userlist = [...this.state.userlist]; //search for user\n\n      let userKey = userlist.findIndex(u => u.uid === user.uid); //if found in the list, update user object\n\n      if (userKey > -1) {\n        let userObj = { ...userlist[userKey]\n        };\n        let newUserObj = { ...userObj,\n          ...user\n        };\n        userlist.splice(userKey, 1, newUserObj);\n        this.setState({\n          userlist: userlist\n        });\n      }\n    };\n\n    this.handleScroll = e => {\n      const bottom = Math.round(e.currentTarget.scrollHeight - e.currentTarget.scrollTop) === Math.round(e.currentTarget.clientHeight);\n      if (bottom) this.getUsers();\n    };\n\n    this.handleClick = user => {\n      if (!this.props.onItemClick) return;\n      this.props.onItemClick(user, CometChat.ACTION_TYPE.TYPE_USER);\n    };\n\n    this.handleMenuClose = () => {\n      if (!this.props.actionGenerated) {\n        return false;\n      }\n\n      this.props.actionGenerated(enums.ACTIONS[\"TOGGLE_SIDEBAR\"]);\n    };\n\n    this.searchUsers = e => {\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n      }\n\n      let val = e.target.value;\n      this.UserListManager = new UserListManager(this.getContext(), val);\n      this.UserListManager.initializeUsersRequest().then(response => {\n        this.timeout = setTimeout(() => {\n          this.setState({\n            userlist: [],\n            decoratorMessage: Translator.translate(\"LOADING\", this.state.lang)\n          }, () => this.getUsers());\n        }, 500);\n      }).catch(error => this.setState({\n        decoratorMessage: Translator.translate(\"SOMETHING_WRONG\", this.state.lang)\n      }));\n    };\n\n    this.getUsers = () => {\n      this.UserListManager.fetchNextUsers().then(userList => {\n        if (userList.length === 0) {\n          if (this.state.userlist.length === 0) {\n            this.setState({\n              decoratorMessage: Translator.translate(\"NO_USERS_FOUND\", this.state.lang)\n            });\n          }\n        } else {\n          this.setState({\n            userlist: [...this.state.userlist, ...userList],\n            decoratorMessage: \"\"\n          });\n        }\n      }).catch(error => this.setState({\n        decoratorMessage: Translator.translate(\"SOMETHING_WRONG\", this.state.lang)\n      }));\n    };\n\n    this.getContext = () => {\n      if (this.props._parent.length) {\n        return this.context;\n      } else {\n        return this.contextProviderRef.state;\n      }\n    };\n\n    this.state = {\n      userlist: [],\n      lang: props.lang,\n      enableSearchUser: false,\n      decoratorMessage: Translator.translate(\"LOADING\", props.lang)\n    };\n    this.contextProviderRef = /*#__PURE__*/React.createRef();\n    this.userListRef = /*#__PURE__*/React.createRef();\n    CometChat.getLoggedinUser().then(user => this.loggedInUser = user).catch(error => this.setState({\n      decoratorMessage: Translator.translate(\"SOMETHING_WRONG\", this.state.lang)\n    }));\n  }\n\n  componentDidMount() {\n    this.item = this.getContext().type === CometChat.ACTION_TYPE.TYPE_USER ? this.getContext().item : null;\n    this.toggleUserSearch();\n    this.UserListManager = new UserListManager(this.getContext());\n    this.UserListManager.initializeUsersRequest().then(response => {\n      this.getUsers();\n      this.UserListManager.attachListeners(this.userUpdated);\n    }).catch(error => this.setState({\n      decoratorMessage: Translator.translate(\"SOMETHING_WRONG\", this.state.lang)\n    }));\n  }\n\n  componentDidUpdate(prevProps) {\n    //if user is blocked/unblocked, update userlist\n    if (this.item && Object.keys(this.item).length && this.getContext().type === CometChat.ACTION_TYPE.TYPE_USER && this.item.uid === this.getContext().item.uid && this.item.blockedByMe !== this.getContext().item.blockedByMe) {\n      let userlist = [...this.state.userlist]; //search for user\n\n      let userKey = userlist.findIndex(u => u.uid === this.getContext().item.uid);\n\n      if (userKey > -1) {\n        let userObject = { ...userlist[userKey]\n        };\n        let newUserObject = Object.assign({}, userObject, {\n          blockedByMe: this.getContext().item.blockedByMe\n        });\n        userlist.splice(userKey, 1, newUserObject);\n        this.setState({\n          userlist: userlist\n        });\n      }\n    }\n\n    if (prevProps.lang !== this.props.lang) {\n      this.setState({\n        lang: this.props.lang\n      });\n    }\n\n    this.item = this.getContext().type === CometChat.ACTION_TYPE.TYPE_USER ? this.getContext().item : null;\n    this.toggleUserSearch();\n  }\n\n  componentWillUnmount() {\n    this.UserListManager.removeListeners();\n    this.UserListManager = null;\n  }\n\n  render() {\n    let messageContainer = null;\n\n    if (this.state.decoratorMessage.length !== 0) {\n      messageContainer = jsx(\"div\", {\n        css: contactMsgStyle(),\n        className: \"contacts__decorator-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 5\n        }\n      }, jsx(\"p\", {\n        css: contactMsgTxtStyle(this.getContext()),\n        className: \"decorator-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 6\n        }\n      }, this.state.decoratorMessage));\n    }\n\n    const userList = [...this.state.userlist];\n    let currentLetter = \"\";\n    const users = userList.map(user => {\n      const chr = user.name[0].toUpperCase();\n      let firstChar = null;\n\n      if (chr !== currentLetter) {\n        currentLetter = chr;\n        firstChar = jsx(\"div\", {\n          css: contactAlphabetStyle(),\n          className: \"contacts__list__alphabet-filter\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 18\n          }\n        }, currentLetter);\n      } else {\n        firstChar = null;\n      }\n\n      let selectedUser = this.getContext().type === CometChat.ACTION_TYPE.TYPE_USER && this.getContext().item.uid === user.uid ? user : null;\n      return jsx(React.Fragment, {\n        key: user.uid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 5\n        }\n      }, firstChar, jsx(CometChatUserListItem, {\n        theme: this.props.theme,\n        user: user,\n        selectedUser: selectedUser,\n        lang: this.state.lang,\n        clickHandler: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 6\n        }\n      }));\n    });\n    let closeBtn = jsx(\"div\", {\n      css: contactHeaderCloseStyle(navigateIcon, this.getContext()),\n      className: \"header__close\",\n      onClick: this.handleMenuClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 18\n      }\n    });\n\n    if (this.getContext() && Object.keys(this.getContext().item).length === 0) {\n      closeBtn = null;\n    }\n\n    let searchUser = null;\n\n    if (this.state.enableSearchUser) {\n      searchUser = jsx(\"div\", {\n        css: contactSearchStyle(),\n        className: \"contacts__search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 5\n        }\n      }, jsx(\"button\", {\n        type: \"button\",\n        className: \"search__button\",\n        css: contactSearchButtonStyle(searchIcon, this.getContext()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 6\n        }\n      }), jsx(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        css: contactSearchInputStyle(),\n        className: \"search__input\",\n        placeholder: Translator.translate(\"SEARCH\", this.state.lang),\n        onChange: this.searchUsers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 6\n        }\n      }));\n    }\n\n    const userListTemplate = jsx(\"div\", {\n      css: contactWrapperStyle(this.props, this.getContext()),\n      className: \"contacts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 4\n      }\n    }, jsx(\"div\", {\n      css: contactHeaderStyle(this.getContext()),\n      className: \"contacts__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 5\n      }\n    }, closeBtn, jsx(\"h4\", {\n      css: contactHeaderTitleStyle(this.props),\n      className: \"header__title\",\n      dir: Translator.getDirection(this.state.lang),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 6\n      }\n    }, Translator.translate(\"USERS\", this.state.lang)), jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 6\n      }\n    })), searchUser, messageContainer, jsx(\"div\", {\n      css: contactListStyle(),\n      className: \"contacts__list\",\n      onScroll: this.handleScroll,\n      ref: el => this.userListRef = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 5\n      }\n    }, users));\n    let userListWrapper = userListTemplate;\n\n    if (this.props._parent === \"\") {\n      userListWrapper = jsx(CometChatContextProvider, {\n        ref: el => this.contextProviderRef = el,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 5\n        }\n      }, userListTemplate);\n    }\n\n    return userListWrapper;\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatUserList.contextType = CometChatContext;\nCometChatUserList.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  onItemClick: () => {},\n  _parent: \"\"\n};\nCometChatUserList.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  onItemClick: PropTypes.func,\n  _parent: PropTypes.string\n};\nexport { CometChatUserList };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Users/CometChatUserList/index.js"],"names":["React","jsx","PropTypes","CometChat","UserListManager","CometChatUserListItem","CometChatContextProvider","CometChatContext","enums","theme","Translator","contactWrapperStyle","contactHeaderStyle","contactHeaderCloseStyle","contactHeaderTitleStyle","contactSearchStyle","contactSearchButtonStyle","contactSearchInputStyle","contactMsgStyle","contactMsgTxtStyle","contactListStyle","contactAlphabetStyle","CometChatUserList","PureComponent","constructor","props","toggleUserSearch","getContext","FeatureRestriction","isUserSearchEnabled","then","response","state","enableSearchUser","setState","catch","error","userUpdated","user","userlist","userKey","findIndex","u","uid","userObj","newUserObj","splice","handleScroll","e","bottom","Math","round","currentTarget","scrollHeight","scrollTop","clientHeight","getUsers","handleClick","onItemClick","ACTION_TYPE","TYPE_USER","handleMenuClose","actionGenerated","ACTIONS","searchUsers","timeout","clearTimeout","val","target","value","initializeUsersRequest","setTimeout","decoratorMessage","translate","lang","fetchNextUsers","userList","length","_parent","context","contextProviderRef","createRef","userListRef","getLoggedinUser","loggedInUser","componentDidMount","item","type","attachListeners","componentDidUpdate","prevProps","Object","keys","blockedByMe","userObject","newUserObject","assign","componentWillUnmount","removeListeners","render","messageContainer","currentLetter","users","map","chr","name","toUpperCase","firstChar","selectedUser","closeBtn","navigateIcon","searchUser","searchIcon","userListTemplate","getDirection","el","userListWrapper","contextType","defaultProps","getDefaultLanguage","propTypes","string","object","func"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { UserListManager } from \"./controller\";\n\nimport { CometChatUserListItem } from \"../../Users\";\n\nimport { CometChatContextProvider, CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\n\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\n\nimport { \n  contactWrapperStyle, \n  contactHeaderStyle, \n  contactHeaderCloseStyle, \n  contactHeaderTitleStyle,\n  contactSearchStyle,\n  contactSearchButtonStyle,\n  contactSearchInputStyle,\n  contactMsgStyle,\n  contactMsgTxtStyle,\n  contactListStyle,\n  contactAlphabetStyle\n} from \"./style\";\n\nimport searchIcon from \"./resources/search.svg\";\nimport navigateIcon from \"./resources/back.svg\";\n\nclass CometChatUserList extends React.PureComponent {\n\n\titem;\n\ttimeout;\n\tstatic contextType = CometChatContext;\n\n\tconstructor(props) {\n\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tuserlist: [],\n\t\t\tlang: props.lang,\n\t\t\tenableSearchUser: false,\n\t\t\tdecoratorMessage: Translator.translate(\"LOADING\", props.lang),\n\t\t};\n\n\t\tthis.contextProviderRef = React.createRef();\n\t\tthis.userListRef = React.createRef();\n\n\t\tCometChat.getLoggedinUser()\n\t\t\t.then(user => (this.loggedInUser = user))\n\t\t\t.catch(error => this.setState({ decoratorMessage: Translator.translate(\"SOMETHING_WRONG\", this.state.lang) }));\n\t}\n\n\tcomponentDidMount() {\n\n\t\tthis.item = (this.getContext().type === CometChat.ACTION_TYPE.TYPE_USER) ? this.getContext().item : null;\n\t\tthis.toggleUserSearch();\n\n\t\tthis.UserListManager = new UserListManager(this.getContext())\n\t\tthis.UserListManager.initializeUsersRequest()\n\t\t\t.then(response => {\n\t\t\t\tthis.getUsers();\n\t\t\t\tthis.UserListManager.attachListeners(this.userUpdated);\n\t\t\t})\n\t\t\t.catch(error => this.setState({ decoratorMessage: Translator.translate(\"SOMETHING_WRONG\", this.state.lang) }));\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\n\t\t//if user is blocked/unblocked, update userlist\n\t\tif (this.item \n\t\t&& Object.keys(this.item).length\n\t\t&& this.getContext().type === CometChat.ACTION_TYPE.TYPE_USER && this.item.uid === this.getContext().item.uid\n\t\t&& this.item.blockedByMe !== this.getContext().item.blockedByMe) {\n\n\t\t\tlet userlist = [...this.state.userlist];\n\n\t\t\t\t//search for user\n\t\t\t\tlet userKey = userlist.findIndex(u => u.uid === this.getContext().item.uid);\n\t\t\t\tif(userKey > -1) {\n\n\t\t\t\tlet userObject = { ...userlist[userKey] };\n\t\t\t\tlet newUserObject = Object.assign({}, userObject, { blockedByMe: this.getContext().item.blockedByMe });\n\t\t\t\t\n\t\t\t\tuserlist.splice(userKey, 1, newUserObject);\n\t\t\t\tthis.setState({ userlist: userlist });\n\t\t\t}\n\t\t}\n\n\t\tif (prevProps.lang !== this.props.lang) {\n\t\t\tthis.setState({ lang: this.props.lang })\n\t\t}\n\n\t\tthis.item = (this.getContext().type === CometChat.ACTION_TYPE.TYPE_USER) ? this.getContext().item : null;\n\t\tthis.toggleUserSearch();\n\t}\n\n\tcomponentWillUnmount() {\n\n\t\tthis.UserListManager.removeListeners();\n\t\tthis.UserListManager = null;\n\t}\n\n\ttoggleUserSearch = () => {\n\n\t\tthis.getContext().FeatureRestriction.isUserSearchEnabled().then(response => {\n\n\t\t\t/**\n\t\t\t* Don't update state if the response has the same value\n\t\t\t*/\n\t\t\tif (response !== this.state.enableSearchUser) {\n\t\t\t\tthis.setState({enableSearchUser: response});\n\t\t\t}\n\n\t\t}).catch(error => {\n\n\t\t\tif (this.state.enableSearchUser !== false) {\n\t\t\t\tthis.setState({enableSearchUser: false});\n\t\t\t}\n\n\t\t});\n\t}\n\n\tuserUpdated = (user) => {\n\t\t\n\t\tlet userlist = [...this.state.userlist];\n\n\t\t//search for user\n\t\tlet userKey = userlist.findIndex(u => u.uid === user.uid);\n\t\t\n\t\t//if found in the list, update user object\n\t\tif(userKey > -1) {\n\n\t\t\tlet userObj = {...userlist[userKey]};\n\t\t\tlet newUserObj = {...userObj, ...user};\n\t\t\tuserlist.splice(userKey, 1, newUserObj);\n\n\t\t\tthis.setState({ userlist: userlist });\n\t\t}\n\t}\n\n\thandleScroll = (e) => {\n\n\t\tconst bottom =\n\t\tMath.round(e.currentTarget.scrollHeight - e.currentTarget.scrollTop) === Math.round(e.currentTarget.clientHeight);\n\t\tif (bottom) this.getUsers();\n\t}\n\n\thandleClick = (user) => {\n\n\t\tif(!this.props.onItemClick)\n\t\t\treturn;\n\n\t\tthis.props.onItemClick(user, CometChat.ACTION_TYPE.TYPE_USER);\n\t}\n\n  \thandleMenuClose = () => {\n\n\t\tif(!this.props.actionGenerated) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.props.actionGenerated(enums.ACTIONS[\"TOGGLE_SIDEBAR\"]);\n  \t}\n  \n \tsearchUsers = (e) => {\n\n\t\tif (this.timeout) {\n\t\t\tclearTimeout(this.timeout);\n\t\t}\n\n\t\tlet val = e.target.value;\n\t\tthis.UserListManager = new UserListManager(this.getContext(), val);\n\t\tthis.UserListManager.initializeUsersRequest()\n\t\t\t.then(response => {\n\t\t\t\tthis.timeout = setTimeout(() => {\n\t\t\t\t\tthis.setState({ userlist: [], decoratorMessage: Translator.translate(\"LOADING\", this.state.lang) }, () => this.getUsers());\n\t\t\t\t}, 500);\n\t\t\t})\n\t\t\t.catch(error => this.setState({ decoratorMessage: Translator.translate(\"SOMETHING_WRONG\", this.state.lang) }));\n  \t}\n\n\tgetUsers = () => {\n\n\t\tthis.UserListManager.fetchNextUsers()\n\t\t\t.then(userList => {\n\n\t\t\t\tif (userList.length === 0) {\n\t\t\t\t\tif (this.state.userlist.length === 0) {\n\t\t\t\t\t\tthis.setState({ decoratorMessage: Translator.translate(\"NO_USERS_FOUND\", this.state.lang) });\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({ userlist: [...this.state.userlist, ...userList], decoratorMessage: \"\" });\n\t\t\t\t}\n\t\t\t\t\n\t\t\t})\n\t\t\t.catch(error => this.setState({ decoratorMessage: Translator.translate(\"SOMETHING_WRONG\", this.state.lang) }));\n\t}\n\n\tgetContext = () => {\n\n\t\tif (this.props._parent.length) {\n\t\t\treturn this.context;\n\t\t} else {\n\t\t\treturn this.contextProviderRef.state;\n\t\t}\n\t}\n\n  \trender() {\n\n\t\tlet messageContainer = null;\n\t\tif (this.state.decoratorMessage.length !== 0) {\n\t\t\tmessageContainer = (\n\t\t\t\t<div css={contactMsgStyle()} className=\"contacts__decorator-message\">\n\t\t\t\t\t<p css={contactMsgTxtStyle(this.getContext())} className=\"decorator-message\">\n\t\t\t\t\t\t{this.state.decoratorMessage}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tconst userList = [...this.state.userlist];\n\t\tlet currentLetter = \"\";\n\t\t\n\t\tconst users = userList.map(user => {\n\t\t\n\t\t\tconst chr = user.name[0].toUpperCase();\n\t\t\tlet firstChar = null;\n\t\t\tif (chr !== currentLetter) {\n\t\t\t\tcurrentLetter = chr;\n\t\t\t\tfirstChar = (<div css={contactAlphabetStyle()} className=\"contacts__list__alphabet-filter\">{currentLetter}</div>);\n\t\t\t} else {\n\t\t\t\tfirstChar = null;\n\t\t\t}\n\t\t\t\n\t\t\tlet selectedUser = (this.getContext().type === CometChat.ACTION_TYPE.TYPE_USER && this.getContext().item.uid === user.uid) ? user : null;\n\n\t\t\treturn (\n\t\t\t\t<React.Fragment key={user.uid}>\n\t\t\t\t\t{firstChar}\n\t\t\t\t\t<CometChatUserListItem theme={this.props.theme} user={user} selectedUser={selectedUser} lang={this.state.lang} clickHandler={this.handleClick} />\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\n\t\t});\n\n\t\tlet closeBtn = <div css={contactHeaderCloseStyle(navigateIcon, this.getContext())} className=\"header__close\" onClick={this.handleMenuClose}></div>;\n\t\tif (this.getContext() && Object.keys(this.getContext().item).length === 0) {\n\t\t\tcloseBtn = null;\n\t\t}\n\n\t\tlet searchUser = null;\n\t\tif (this.state.enableSearchUser) {\n\t\t\tsearchUser = (\n\t\t\t\t<div css={contactSearchStyle()} className=\"contacts__search\">\n\t\t\t\t\t<button type=\"button\" className=\"search__button\" css={contactSearchButtonStyle(searchIcon, this.getContext())} />\n\t\t\t\t\t<input type=\"text\" autoComplete=\"off\" css={contactSearchInputStyle()} className=\"search__input\" placeholder={Translator.translate(\"SEARCH\", this.state.lang)} onChange={this.searchUsers} />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tconst userListTemplate = (\n\t\t\t<div css={contactWrapperStyle(this.props, this.getContext())} className=\"contacts\">\n\t\t\t\t<div css={contactHeaderStyle(this.getContext())} className=\"contacts__header\">\n\t\t\t\t\t{closeBtn}\n\t\t\t\t\t<h4 css={contactHeaderTitleStyle(this.props)} className=\"header__title\" dir={Translator.getDirection(this.state.lang)}>\n\t\t\t\t\t\t{Translator.translate(\"USERS\", this.state.lang)}\n\t\t\t\t\t</h4>\n\t\t\t\t\t<div></div>\n\t\t\t\t</div>\n\t\t\t\t{searchUser}\n\t\t\t\t{messageContainer}\n\t\t\t\t<div css={contactListStyle()} className=\"contacts__list\" onScroll={this.handleScroll} ref={el => (this.userListRef = el)}>\n\t\t\t\t\t{users}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t\tlet userListWrapper = (userListTemplate);\n\t\tif (this.props._parent === \"\") {\n\t\t\tuserListWrapper = (\n\t\t\t\t<CometChatContextProvider ref={el => (this.contextProviderRef = el)}>\n\t\t\t\t\t{userListTemplate}\n\t\t\t\t</CometChatContextProvider>\n\t\t\t);\n\t\t}\n\n\t\treturn (userListWrapper);\n  \t}\n}\n\n// Specifies the default values for props:\nCometChatUserList.defaultProps = {\n\tlang: Translator.getDefaultLanguage(),\n\ttheme: theme,\n\tonItemClick: () => {},\n\t_parent: \"\"\n};\n\nCometChatUserList.propTypes = {\n\tlang: PropTypes.string,\n\ttheme: PropTypes.object,\n\tonItemClick: PropTypes.func,\n\t_parent: PropTypes.string\n}\n\nexport { CometChatUserList };\n"]},"metadata":{},"sourceType":"module"}