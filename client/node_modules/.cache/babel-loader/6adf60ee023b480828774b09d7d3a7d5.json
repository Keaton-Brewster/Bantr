{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatLiveReactions/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport * as enums from \"../../../util/enums.js\";\nimport { reactionContainerStyle, reactionEmojiStyle } from \"./style\";\nimport heartIcon from \"./resources/heart.png\";\n\nclass CometChatLiveReactions extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.setItems = () => {\n      const width = this.parentElement.offsetWidth;\n      const height = this.parentElement.offsetHeight;\n      const elements = this.parentElement.querySelectorAll(\".emoji\");\n\n      for (let i = 0; i < elements.length; i++) {\n        const element = elements[i],\n              elementWidth = element.offsetWidth,\n              elementHeight = element.offsetHeight;\n        const item = {\n          element: element,\n          elementHeight: elementHeight,\n          elementWidth: elementWidth,\n          ySpeed: -this.verticalSpeed,\n          omega: 2 * Math.PI * this.horizontalSpeed / (width * 60),\n          //omega= 2Pi*frequency\n          random: (Math.random() / 2 + 0.5) * i * 10000,\n          //random time offset\n          x: function (time) {\n            return (Math.sin(this.omega * (time + this.random)) + 1) / 2 * (width - elementWidth);\n          },\n          y: height + (Math.random() + 1) * i * elementHeight\n        };\n        this.items.push(item);\n      }\n    };\n\n    this.requestAnimation = () => {\n      this.timer = setTimeout(this.animate, 1000 / 60);\n    };\n\n    this.animate = () => {\n      if (!this.parentElement) {\n        return false;\n      }\n\n      const height = this.parentElement.offsetHeight;\n      const time = +new Date(); //little trick, gives unix time in ms\n\n      for (let i = 0; i < this.items.length; i++) {\n        const item = this.items[i];\n        const transformString = \"translate3d(\" + item.x(time) + \"px, \" + item.y + \"px, 0px)\";\n        item.element.style.transform = transformString;\n        item.element.style.visibility = \"visible\";\n\n        if (item.y <= height) {\n          item.element.classList.add(\"fade\");\n        }\n\n        item.y += item.ySpeed;\n      }\n\n      this.requestAnimation();\n    };\n\n    this.parentElement = /*#__PURE__*/React.createRef();\n    this.counter = 0;\n    this.verticalSpeed = 5;\n    this.horizontalSpeed = 2;\n    this.items = [];\n    this.before = Date.now();\n    const reaction = props.reaction ? enums.CONSTANTS[\"LIVE_REACTIONS\"][props.reaction] : enums.CONSTANTS[\"LIVE_REACTIONS\"][\"heart\"];\n    const reactionImg = jsx(\"img\", {\n      src: heartIcon,\n      alt: reaction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }\n    });\n    this.emojis = Array(6).fill(reactionImg);\n  }\n\n  componentDidMount() {\n    this.setItems();\n    this.requestAnimation();\n  }\n\n  componentWillUnmount() {\n    this.timer = null;\n  }\n\n  render() {\n    const emojis = this.emojis.map((emoji, index) => jsx(\"span\", {\n      className: \"emoji\",\n      css: reactionEmojiStyle(),\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, emoji));\n    return jsx(\"div\", {\n      ref: el => this.parentElement = el,\n      css: reactionContainerStyle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, emojis);\n  }\n\n}\n\nexport { CometChatLiveReactions };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatLiveReactions/index.js"],"names":["React","jsx","enums","reactionContainerStyle","reactionEmojiStyle","heartIcon","CometChatLiveReactions","PureComponent","constructor","props","setItems","width","parentElement","offsetWidth","height","offsetHeight","elements","querySelectorAll","i","length","element","elementWidth","elementHeight","item","ySpeed","verticalSpeed","omega","Math","PI","horizontalSpeed","random","x","time","sin","y","items","push","requestAnimation","timer","setTimeout","animate","Date","transformString","style","transform","visibility","classList","add","createRef","counter","before","now","reaction","CONSTANTS","reactionImg","emojis","Array","fill","componentDidMount","componentWillUnmount","render","map","emoji","index","el"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\n\nimport * as enums from \"../../../util/enums.js\";\n\nimport { reactionContainerStyle, reactionEmojiStyle } from \"./style\";\n\nimport heartIcon from \"./resources/heart.png\";\n\nclass CometChatLiveReactions extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.parentElement = React.createRef();\n\n    this.counter = 0;\n    this.verticalSpeed = 5;\n    this.horizontalSpeed = 2;\n    this.items = [];\n\n    this.before = Date.now();\n\n    const reaction = props.reaction\n      ? enums.CONSTANTS[\"LIVE_REACTIONS\"][props.reaction]\n      : enums.CONSTANTS[\"LIVE_REACTIONS\"][\"heart\"];\n    const reactionImg = <img src={heartIcon} alt={reaction} />;\n    this.emojis = Array(6).fill(reactionImg);\n  }\n\n  componentDidMount() {\n    this.setItems();\n    this.requestAnimation();\n  }\n\n  componentWillUnmount() {\n    this.timer = null;\n  }\n\n  setItems = () => {\n    const width = this.parentElement.offsetWidth;\n    const height = this.parentElement.offsetHeight;\n\n    const elements = this.parentElement.querySelectorAll(\".emoji\");\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i],\n        elementWidth = element.offsetWidth,\n        elementHeight = element.offsetHeight;\n\n      const item = {\n        element: element,\n        elementHeight: elementHeight,\n        elementWidth: elementWidth,\n        ySpeed: -this.verticalSpeed,\n        omega: (2 * Math.PI * this.horizontalSpeed) / (width * 60), //omega= 2Pi*frequency\n        random: (Math.random() / 2 + 0.5) * i * 10000, //random time offset\n        x: function (time) {\n          return (\n            ((Math.sin(this.omega * (time + this.random)) + 1) / 2) *\n            (width - elementWidth)\n          );\n        },\n        y: height + (Math.random() + 1) * i * elementHeight,\n      };\n\n      this.items.push(item);\n    }\n  };\n\n  requestAnimation = () => {\n    this.timer = setTimeout(this.animate, 1000 / 60);\n  };\n\n  animate = () => {\n    if (!this.parentElement) {\n      return false;\n    }\n\n    const height = this.parentElement.offsetHeight;\n    const time = +new Date(); //little trick, gives unix time in ms\n\n    for (let i = 0; i < this.items.length; i++) {\n      const item = this.items[i];\n\n      const transformString =\n        \"translate3d(\" + item.x(time) + \"px, \" + item.y + \"px, 0px)\";\n      item.element.style.transform = transformString;\n\n      item.element.style.visibility = \"visible\";\n\n      if (item.y <= height) {\n        item.element.classList.add(\"fade\");\n      }\n\n      item.y += item.ySpeed;\n    }\n\n    this.requestAnimation();\n  };\n\n  render() {\n    const emojis = this.emojis.map((emoji, index) => (\n      <span className=\"emoji\" css={reactionEmojiStyle()} key={index}>\n        {emoji}\n      </span>\n    ));\n    return (\n      <div\n        ref={(el) => (this.parentElement = el)}\n        css={reactionContainerStyle()}\n      >\n        {emojis}\n      </div>\n    );\n  }\n}\n\nexport { CometChatLiveReactions };\n"]},"metadata":{},"sourceType":"module"}