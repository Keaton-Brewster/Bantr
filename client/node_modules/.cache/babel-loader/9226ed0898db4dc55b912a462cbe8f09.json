{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/MainContent/Messaging/MessagesTopMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport { useContentContext } from \"../../../utils/ContentProvider\";\nimport { useViewport } from \"../../../utils/ViewportProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MessagesTopMenu({\n  conversationName,\n  containerRef\n}) {\n  _s();\n\n  const {\n    width,\n    isMobile,\n    setMobileDisplay\n  } = useViewport();\n  const [menuBarWidth, setMenuBarWidth] = useState(\"100%\");\n  const {\n    activeContent,\n    setActiveContent\n  } = useContentContext();\n\n  function openConversationInfo() {\n    setActiveContent({\n      conversationInfo: true\n    });\n  } // To make the back button multipurpose, simply switch case the state of the current display\n  // And then act accordingly\n\n\n  function handleBackButton() {\n    if (activeContent.messaging) return setMobileDisplay({\n      menu: true,\n      mainContent: false\n    });\n    setActiveContent({\n      messaging: true\n    });\n  }\n\n  useEffect(() => {\n    if (width >= 680) setMenuBarWidth(`${containerRef.current.offsetWidth}px`);else setMenuBarWidth(\"100%\"); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [width]);\n  return /*#__PURE__*/_jsxDEV(Nav, {\n    id: \"messagesTopMenu\",\n    className: \"flex-row justify-content-end\",\n    style: {\n      width: menuBarWidth\n    },\n    children: [isMobile || activeContent.conversationInfo ? /*#__PURE__*/_jsxDEV(Nav.Item, {\n      onClick: handleBackButton,\n      children: /*#__PURE__*/_jsxDEV(FaArrowLeft, {\n        className: \"backButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Nav.Item, {\n      id: \"conversationName\",\n      style: {\n        paddingLeft: `${!isMobile && activeContent.messaging ? \"30px\" : \"\"}`\n      },\n      children: conversationName ? conversationName : \"Untitled Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n      onClick: openConversationInfo,\n      children: /*#__PURE__*/_jsxDEV(BsThreeDotsVertical, {\n        id: \"conversationInfoButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MessagesTopMenu, \"ryIQavI1ZsR1MskeV7YOOXjKVmo=\", false, function () {\n  return [useViewport, useContentContext];\n});\n\n_c = MessagesTopMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagesTopMenu\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/MainContent/Messaging/MessagesTopMenu.jsx"],"names":["useState","useEffect","Nav","BsThreeDotsVertical","FaArrowLeft","useContentContext","useViewport","MessagesTopMenu","conversationName","containerRef","width","isMobile","setMobileDisplay","menuBarWidth","setMenuBarWidth","activeContent","setActiveContent","openConversationInfo","conversationInfo","handleBackButton","messaging","menu","mainContent","current","offsetWidth","paddingLeft"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,mBAAT,QAAoC,gBAApC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,WAAT,QAA4B,iCAA5B;;AAEA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,CAAzB,EAA6D;AAAA;;AAC1E,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAAwCN,WAAW,EAAzD;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,MAAD,CAAhD;AACA,QAAM;AAAEe,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAsCX,iBAAiB,EAA7D;;AAEA,WAASY,oBAAT,GAAgC;AAC9BD,IAAAA,gBAAgB,CAAC;AACfE,MAAAA,gBAAgB,EAAE;AADH,KAAD,CAAhB;AAGD,GATyE,CAW1E;AACA;;;AACA,WAASC,gBAAT,GAA4B;AAC1B,QAAIJ,aAAa,CAACK,SAAlB,EACE,OAAOR,gBAAgB,CAAC;AACtBS,MAAAA,IAAI,EAAE,IADgB;AAEtBC,MAAAA,WAAW,EAAE;AAFS,KAAD,CAAvB;AAIFN,IAAAA,gBAAgB,CAAC;AAAEI,MAAAA,SAAS,EAAE;AAAb,KAAD,CAAhB;AACD;;AAEDnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,KAAK,IAAI,GAAb,EAAkBI,eAAe,CAAE,GAAEL,YAAY,CAACc,OAAb,CAAqBC,WAAY,IAArC,CAAf,CAAlB,KACKV,eAAe,CAAC,MAAD,CAAf,CAFS,CAGd;AACD,GAJQ,EAIN,CAACJ,KAAD,CAJM,CAAT;AAMA,sBACE,QAAC,GAAD;AACE,IAAA,EAAE,EAAC,iBADL;AAEE,IAAA,SAAS,EAAC,8BAFZ;AAGE,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAEG;AAAT,KAHT;AAAA,eAKGF,QAAQ,IAAII,aAAa,CAACG,gBAA1B,gBACC,QAAC,GAAD,CAAK,IAAL;AAAU,MAAA,OAAO,EAAEC,gBAAnB;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,GAIG,IATN,eAUE,QAAC,GAAD,CAAK,IAAL;AACE,MAAA,EAAE,EAAC,kBADL;AAEE,MAAA,KAAK,EAAE;AACLM,QAAAA,WAAW,EAAG,GAAE,CAACd,QAAD,IAAaI,aAAa,CAACK,SAA3B,GAAuC,MAAvC,GAAgD,EAAG;AAD9D,OAFT;AAAA,gBAMGZ,gBAAgB,GAAGA,gBAAH,GAAsB;AANzC;AAAA;AAAA;AAAA;AAAA,YAVF,eAkBE,QAAC,GAAD,CAAK,IAAL;AAAU,MAAA,OAAO,EAAES,oBAAnB;AAAA,6BACE,QAAC,mBAAD;AAAqB,QAAA,EAAE,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GApDuBV,e;UACwBD,W,EAEFD,iB;;;KAHtBE,e","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport { useContentContext } from \"../../../utils/ContentProvider\";\nimport { useViewport } from \"../../../utils/ViewportProvider\";\n\nexport default function MessagesTopMenu({ conversationName, containerRef }) {\n  const { width, isMobile, setMobileDisplay } = useViewport();\n  const [menuBarWidth, setMenuBarWidth] = useState(\"100%\");\n  const { activeContent, setActiveContent } = useContentContext();\n\n  function openConversationInfo() {\n    setActiveContent({\n      conversationInfo: true,\n    });\n  }\n\n  // To make the back button multipurpose, simply switch case the state of the current display\n  // And then act accordingly\n  function handleBackButton() {\n    if (activeContent.messaging)\n      return setMobileDisplay({\n        menu: true,\n        mainContent: false,\n      });\n    setActiveContent({ messaging: true });\n  }\n\n  useEffect(() => {\n    if (width >= 680) setMenuBarWidth(`${containerRef.current.offsetWidth}px`);\n    else setMenuBarWidth(\"100%\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [width]);\n\n  return (\n    <Nav\n      id=\"messagesTopMenu\"\n      className=\"flex-row justify-content-end\"\n      style={{ width: menuBarWidth }}\n    >\n      {isMobile || activeContent.conversationInfo ? (\n        <Nav.Item onClick={handleBackButton}>\n          <FaArrowLeft className=\"backButton\" />\n        </Nav.Item>\n      ) : null}\n      <Nav.Item\n        id=\"conversationName\"\n        style={{\n          paddingLeft: `${!isMobile && activeContent.messaging ? \"30px\" : \"\"}`,\n        }}\n      >\n        {conversationName ? conversationName : \"Untitled Conversation\"}\n      </Nav.Item>\n      <Nav.Item onClick={openConversationInfo}>\n        <BsThreeDotsVertical id=\"conversationInfoButton\" />\n      </Nav.Item>\n    </Nav>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}