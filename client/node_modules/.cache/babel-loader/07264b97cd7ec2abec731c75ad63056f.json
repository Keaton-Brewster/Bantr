{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Groups/CometChatViewGroupMemberList/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatViewGroupMemberListItem } from \"../../Groups\";\nimport { CometChatBackdrop } from \"../../Shared\";\nimport * as enums from \"../../../util/enums.js\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { modalWrapperStyle, modalCloseStyle, modalBodyStyle, modalCaptionStyle, modalListStyle, listHeaderStyle, listStyle, nameColumnStyle, scopeColumnStyle, actionColumnStyle, modalErrorStyle } from \"./style\";\nimport clearIcon from \"./resources/close.svg\";\n\nclass CometChatViewGroupMemberList extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleScroll = e => {\n      const bottom = Math.round(e.currentTarget.scrollHeight - e.currentTarget.scrollTop) === Math.round(e.currentTarget.clientHeight);\n\n      if (bottom) {\n        this.props.actionGenerated(enums.ACTIONS[\"FETCH_GROUP_MEMBERS\"]);\n      }\n    };\n\n    this.updateMembers = (action, member, scope) => {\n      switch (action) {\n        case enums.ACTIONS[\"BAN_GROUP_MEMBER\"]:\n          this.banMember(member);\n          break;\n\n        case enums.ACTIONS[\"KICK_GROUP_MEMBER\"]:\n          this.kickMember(member);\n          break;\n\n        case enums.ACTIONS[\"CHANGE_SCOPE_GROUP_MEMBER\"]:\n          this.changeScope(member, scope);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.banMember = memberToBan => {\n      const guid = this.context.item.guid;\n      CometChat.banGroupMember(guid, memberToBan.uid).then(response => {\n        if (response) {\n          this.context.setToastMessage(\"success\", \"BAN_GROUPMEMBER_SUCCESS\");\n          this.props.actionGenerated(enums.ACTIONS[\"BAN_GROUPMEMBER_SUCCESS\"], memberToBan);\n        } else {\n          this.setState({\n            errorMessage: Translator.translate(\"SOMETHING_WRONG\", this.props.lang)\n          });\n        }\n      }).catch(error => this.setState({\n        errorMessage: Translator.translate(\"SOMETHING_WRONG\", this.props.lang)\n      }));\n    };\n\n    this.kickMember = memberToKick => {\n      const guid = this.context.item.guid;\n      CometChat.kickGroupMember(guid, memberToKick.uid).then(response => {\n        if (response) {\n          this.context.setToastMessage(\"success\", \"KICK_GROUPMEMBER_SUCCESS\");\n          this.props.actionGenerated(enums.ACTIONS[\"KICK_GROUPMEMBER_SUCCESS\"], memberToKick);\n        } else {\n          this.setState({\n            errorMessage: Translator.translate(\"SOMETHING_WRONG\", this.props.lang)\n          });\n        }\n      }).catch(error => this.setState({\n        errorMessage: Translator.translate(\"SOMETHING_WRONG\", this.props.lang)\n      }));\n    };\n\n    this.changeScope = (member, scope) => {\n      const guid = this.context.item.guid;\n      CometChat.updateGroupMemberScope(guid, member.uid, scope).then(response => {\n        if (response) {\n          this.context.setToastMessage(\"success\", \"SCOPECHANGE_GROUPMEMBER_SUCCESS\");\n          const updatedMember = Object.assign({}, member, {\n            scope: scope\n          });\n          this.props.actionGenerated(enums.ACTIONS[\"SCOPECHANGE_GROUPMEMBER_SUCCESS\"], updatedMember);\n        } else {\n          this.setState({\n            errorMessage: Translator.translate(\"SOMETHING_WRONG\", this.props.lang)\n          });\n        }\n      }).catch(error => this.setState({\n        errorMessage: Translator.translate(\"SOMETHING_WRONG\", this.props.lang)\n      }));\n    };\n\n    this.setUserColumnTitle = editAccess => {\n      if (this._isMounted) {\n        if (editAccess !== null && this.mq.matches) {\n          this.setState({\n            userColumnTitle: Translator.translate(\"AVATAR\", this.props.lang)\n          });\n        } else {\n          this.setState({\n            userColumnTitle: Translator.translate(\"NAME\", this.props.lang)\n          });\n        }\n      }\n    };\n\n    this._isMounted = false;\n    const chatWindow = context.UIKitSettings.chatWindow;\n    this.mq = chatWindow.matchMedia(this.context.theme.breakPoints[1]);\n    let userColumnTitle = Translator.translate(\"NAME\", props.lang);\n\n    if (this.mq.matches) {\n      userColumnTitle = Translator.translate(\"AVATAR\", props.lang);\n    }\n\n    this.state = {\n      userColumnTitle: userColumnTitle,\n      errorMessage: \"\"\n    };\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const membersList = [...this.context.groupMembers];\n    const groupMembers = membersList.map((member, key) => {\n      return jsx(CometChatViewGroupMemberListItem, {\n        loggedinuser: this.props.loggedinuser,\n        theme: this.props.theme,\n        key: key,\n        member: member,\n        lang: this.props.lang,\n        enableChangeScope: this.props.enableChangeScope,\n        enableBanGroupMembers: this.props.enableBanGroupMembers,\n        enableKickGroupMembers: this.props.enableKickGroupMembers,\n        actionGenerated: this.updateMembers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }\n      });\n    });\n    let editAccess = null;\n\n    if (this.context.item.scope !== CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT) {\n      editAccess = jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }\n      }, jsx(\"div\", {\n        css: actionColumnStyle(this.context),\n        className: \"ban\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }\n      }, Translator.translate(\"BAN\", this.props.lang)), jsx(\"div\", {\n        css: actionColumnStyle(this.context),\n        className: \"kick\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }\n      }, Translator.translate(\"KICK\", this.props.lang)));\n\n      if (this.props.enableKickGroupMembers === false && this.props.enableBanGroupMembers === false) {\n        editAccess = null;\n      }\n    }\n\n    this.mq.addListener(editAccess => this.setUserColumnTitle(editAccess));\n    return jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 7\n      }\n    }, jsx(CometChatBackdrop, {\n      show: true,\n      clicked: this.props.close,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }), jsx(\"div\", {\n      css: modalWrapperStyle(this.context),\n      className: \"modal__viewmembers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }\n    }, jsx(\"span\", {\n      css: modalCloseStyle(clearIcon, this.context),\n      className: \"modal__close\",\n      onClick: this.props.close,\n      title: Translator.translate(\"CLOSE\", this.props.lang),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }\n    }), jsx(\"div\", {\n      css: modalBodyStyle(),\n      className: \"modal__body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }\n    }, jsx(\"div\", {\n      css: modalCaptionStyle(Translator.getDirection(this.props.lang)),\n      className: \"modal__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }, Translator.translate(\"GROUP_MEMBERS\", this.props.lang)), jsx(\"div\", {\n      css: modalErrorStyle(this.context),\n      className: \"modal__error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }\n    }, this.state.errorMessage), jsx(\"div\", {\n      css: modalListStyle(),\n      className: \"modal__content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }\n    }, jsx(\"div\", {\n      css: listHeaderStyle(this.context),\n      className: \"content__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 15\n      }\n    }, jsx(\"div\", {\n      css: nameColumnStyle(this.context, editAccess),\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }\n    }, this.state.userColumnTitle), jsx(\"div\", {\n      css: scopeColumnStyle(this.context),\n      className: \"scope\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    }, Translator.translate(\"SCOPE\", this.props.lang)), editAccess), jsx(\"div\", {\n      css: listStyle(),\n      className: \"content__list\",\n      onScroll: this.handleScroll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 15\n      }\n    }, groupMembers)))));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatViewGroupMemberList.contextType = CometChatContext;\nCometChatViewGroupMemberList.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  userColumnTitle: \"\",\n  enableChangeScope: false,\n  enableKickGroupMembers: false,\n  enableBanGroupMembers: false\n};\nCometChatViewGroupMemberList.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  userColumnTitle: PropTypes.string,\n  enableChangeScope: PropTypes.bool,\n  enableKickGroupMembers: PropTypes.bool,\n  enableBanGroupMembers: PropTypes.bool\n};\nexport { CometChatViewGroupMemberList };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Groups/CometChatViewGroupMemberList/index.js"],"names":["React","jsx","PropTypes","CometChat","CometChatViewGroupMemberListItem","CometChatBackdrop","enums","CometChatContext","theme","Translator","modalWrapperStyle","modalCloseStyle","modalBodyStyle","modalCaptionStyle","modalListStyle","listHeaderStyle","listStyle","nameColumnStyle","scopeColumnStyle","actionColumnStyle","modalErrorStyle","CometChatViewGroupMemberList","Component","constructor","props","context","handleScroll","e","bottom","Math","round","currentTarget","scrollHeight","scrollTop","clientHeight","actionGenerated","ACTIONS","updateMembers","action","member","scope","banMember","kickMember","changeScope","memberToBan","guid","item","banGroupMember","uid","then","response","setToastMessage","setState","errorMessage","translate","lang","catch","error","memberToKick","kickGroupMember","updateGroupMemberScope","updatedMember","Object","assign","setUserColumnTitle","editAccess","_isMounted","mq","matches","userColumnTitle","chatWindow","UIKitSettings","matchMedia","breakPoints","state","componentWillUnmount","render","membersList","groupMembers","map","key","loggedinuser","enableChangeScope","enableBanGroupMembers","enableKickGroupMembers","GROUP_MEMBER_SCOPE","PARTICIPANT","addListener","close","clearIcon","getDirection","contextType","defaultProps","getDefaultLanguage","propTypes","string","object","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { CometChatViewGroupMemberListItem } from \"../../Groups\";\nimport { CometChatBackdrop } from \"../../Shared\";\n\nimport * as enums from \"../../../util/enums.js\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\n\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\n\nimport {\n  modalWrapperStyle,\n  modalCloseStyle,\n  modalBodyStyle,\n  modalCaptionStyle,\n  modalListStyle,\n  listHeaderStyle,\n  listStyle,\n  nameColumnStyle,\n  scopeColumnStyle,\n  actionColumnStyle,\n  modalErrorStyle,\n} from \"./style\";\n\nimport clearIcon from \"./resources/close.svg\";\n\nclass CometChatViewGroupMemberList extends React.Component {\n  static contextType = CometChatContext;\n\n  constructor(props, context) {\n    super(props, context);\n    this._isMounted = false;\n    const chatWindow = context.UIKitSettings.chatWindow;\n    this.mq = chatWindow.matchMedia(this.context.theme.breakPoints[1]);\n\n    let userColumnTitle = Translator.translate(\"NAME\", props.lang);\n    if (this.mq.matches) {\n      userColumnTitle = Translator.translate(\"AVATAR\", props.lang);\n    }\n\n    this.state = {\n      userColumnTitle: userColumnTitle,\n      errorMessage: \"\",\n    };\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  handleScroll = (e) => {\n    const bottom =\n      Math.round(e.currentTarget.scrollHeight - e.currentTarget.scrollTop) ===\n      Math.round(e.currentTarget.clientHeight);\n    if (bottom) {\n      this.props.actionGenerated(enums.ACTIONS[\"FETCH_GROUP_MEMBERS\"]);\n    }\n  };\n\n  updateMembers = (action, member, scope) => {\n    switch (action) {\n      case enums.ACTIONS[\"BAN_GROUP_MEMBER\"]:\n        this.banMember(member);\n        break;\n      case enums.ACTIONS[\"KICK_GROUP_MEMBER\"]:\n        this.kickMember(member);\n        break;\n      case enums.ACTIONS[\"CHANGE_SCOPE_GROUP_MEMBER\"]:\n        this.changeScope(member, scope);\n        break;\n      default:\n        break;\n    }\n  };\n\n  banMember = (memberToBan) => {\n    const guid = this.context.item.guid;\n    CometChat.banGroupMember(guid, memberToBan.uid)\n      .then((response) => {\n        if (response) {\n          this.context.setToastMessage(\"success\", \"BAN_GROUPMEMBER_SUCCESS\");\n          this.props.actionGenerated(\n            enums.ACTIONS[\"BAN_GROUPMEMBER_SUCCESS\"],\n            memberToBan\n          );\n        } else {\n          this.setState({\n            errorMessage: Translator.translate(\n              \"SOMETHING_WRONG\",\n              this.props.lang\n            ),\n          });\n        }\n      })\n      .catch((error) =>\n        this.setState({\n          errorMessage: Translator.translate(\n            \"SOMETHING_WRONG\",\n            this.props.lang\n          ),\n        })\n      );\n  };\n\n  kickMember = (memberToKick) => {\n    const guid = this.context.item.guid;\n    CometChat.kickGroupMember(guid, memberToKick.uid)\n      .then((response) => {\n        if (response) {\n          this.context.setToastMessage(\"success\", \"KICK_GROUPMEMBER_SUCCESS\");\n          this.props.actionGenerated(\n            enums.ACTIONS[\"KICK_GROUPMEMBER_SUCCESS\"],\n            memberToKick\n          );\n        } else {\n          this.setState({\n            errorMessage: Translator.translate(\n              \"SOMETHING_WRONG\",\n              this.props.lang\n            ),\n          });\n        }\n      })\n      .catch((error) =>\n        this.setState({\n          errorMessage: Translator.translate(\n            \"SOMETHING_WRONG\",\n            this.props.lang\n          ),\n        })\n      );\n  };\n\n  changeScope = (member, scope) => {\n    const guid = this.context.item.guid;\n    CometChat.updateGroupMemberScope(guid, member.uid, scope)\n      .then((response) => {\n        if (response) {\n          this.context.setToastMessage(\n            \"success\",\n            \"SCOPECHANGE_GROUPMEMBER_SUCCESS\"\n          );\n          const updatedMember = Object.assign({}, member, { scope: scope });\n          this.props.actionGenerated(\n            enums.ACTIONS[\"SCOPECHANGE_GROUPMEMBER_SUCCESS\"],\n            updatedMember\n          );\n        } else {\n          this.setState({\n            errorMessage: Translator.translate(\n              \"SOMETHING_WRONG\",\n              this.props.lang\n            ),\n          });\n        }\n      })\n      .catch((error) =>\n        this.setState({\n          errorMessage: Translator.translate(\n            \"SOMETHING_WRONG\",\n            this.props.lang\n          ),\n        })\n      );\n  };\n\n  setUserColumnTitle = (editAccess) => {\n    if (this._isMounted) {\n      if (editAccess !== null && this.mq.matches) {\n        this.setState({\n          userColumnTitle: Translator.translate(\"AVATAR\", this.props.lang),\n        });\n      } else {\n        this.setState({\n          userColumnTitle: Translator.translate(\"NAME\", this.props.lang),\n        });\n      }\n    }\n  };\n\n  render() {\n    const membersList = [...this.context.groupMembers];\n\n    const groupMembers = membersList.map((member, key) => {\n      return (\n        <CometChatViewGroupMemberListItem\n          loggedinuser={this.props.loggedinuser}\n          theme={this.props.theme}\n          key={key}\n          member={member}\n          lang={this.props.lang}\n          enableChangeScope={this.props.enableChangeScope}\n          enableBanGroupMembers={this.props.enableBanGroupMembers}\n          enableKickGroupMembers={this.props.enableKickGroupMembers}\n          actionGenerated={this.updateMembers}\n        />\n      );\n    });\n\n    let editAccess = null;\n    if (this.context.item.scope !== CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT) {\n      editAccess = (\n        <React.Fragment>\n          <div css={actionColumnStyle(this.context)} className=\"ban\">\n            {Translator.translate(\"BAN\", this.props.lang)}\n          </div>\n          <div css={actionColumnStyle(this.context)} className=\"kick\">\n            {Translator.translate(\"KICK\", this.props.lang)}\n          </div>\n        </React.Fragment>\n      );\n\n      if (\n        this.props.enableKickGroupMembers === false &&\n        this.props.enableBanGroupMembers === false\n      ) {\n        editAccess = null;\n      }\n    }\n\n    this.mq.addListener((editAccess) => this.setUserColumnTitle(editAccess));\n\n    return (\n      <React.Fragment>\n        <CometChatBackdrop show={true} clicked={this.props.close} />\n        <div\n          css={modalWrapperStyle(this.context)}\n          className=\"modal__viewmembers\"\n        >\n          <span\n            css={modalCloseStyle(clearIcon, this.context)}\n            className=\"modal__close\"\n            onClick={this.props.close}\n            title={Translator.translate(\"CLOSE\", this.props.lang)}\n          ></span>\n          <div css={modalBodyStyle()} className=\"modal__body\">\n            <div\n              css={modalCaptionStyle(Translator.getDirection(this.props.lang))}\n              className=\"modal__title\"\n            >\n              {Translator.translate(\"GROUP_MEMBERS\", this.props.lang)}\n            </div>\n            <div css={modalErrorStyle(this.context)} className=\"modal__error\">\n              {this.state.errorMessage}\n            </div>\n            <div css={modalListStyle()} className=\"modal__content\">\n              <div\n                css={listHeaderStyle(this.context)}\n                className=\"content__header\"\n              >\n                <div\n                  css={nameColumnStyle(this.context, editAccess)}\n                  className=\"name\"\n                >\n                  {this.state.userColumnTitle}\n                </div>\n                <div css={scopeColumnStyle(this.context)} className=\"scope\">\n                  {Translator.translate(\"SCOPE\", this.props.lang)}\n                </div>\n                {editAccess}\n              </div>\n              <div\n                css={listStyle()}\n                className=\"content__list\"\n                onScroll={this.handleScroll}\n              >\n                {groupMembers}\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\n// Specifies the default values for props:\nCometChatViewGroupMemberList.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  userColumnTitle: \"\",\n  enableChangeScope: false,\n  enableKickGroupMembers: false,\n  enableBanGroupMembers: false,\n};\n\nCometChatViewGroupMemberList.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  userColumnTitle: PropTypes.string,\n  enableChangeScope: PropTypes.bool,\n  enableKickGroupMembers: PropTypes.bool,\n  enableBanGroupMembers: PropTypes.bool,\n};\n\nexport { CometChatViewGroupMemberList };\n"]},"metadata":{},"sourceType":"module"}