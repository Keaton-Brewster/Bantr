{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/util/CometChatContext.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatToastNotification } from \"../components/Shared\";\nimport { UIKitSettings } from \"./UIKitSettings\";\nimport * as enums from \"./enums.js\";\nimport Translator from \"../resources/localization/translator\";\nimport { FeatureRestriction } from \"./FeatureRestriction\";\nimport { theme } from \"../resources/theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CometChatContext = /*#__PURE__*/React.createContext({});\nexport class CometChatContextProvider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getUser = uid => {\n      const promise = new Promise((resolve, reject) => {\n        if (!uid) {\n          const error = {\n            code: \"UID_NOT_AVAILABLE\"\n          };\n          reject(error);\n        }\n\n        CometChat.getUser(uid).then(user => resolve(user)).catch(error => reject(error));\n      });\n      return promise;\n    };\n\n    this.getGroup = guid => {\n      const promise = new Promise((resolve, reject) => {\n        if (!guid) {\n          const error = {\n            code: \"GUID_NOT_AVAILABLE\"\n          };\n          reject(error);\n        }\n\n        CometChat.getGroup(guid).then(group => {\n          if (group.hasJoined === false) {\n            const guid = group.guid;\n            const groupType = group.type;\n            let password = \"\";\n\n            if (groupType === CometChat.GROUP_TYPE.PASSWORD) {\n              const promptMessage = Translator.translate(\"ENTER_PASSWORD_JOIN_GROUP\", this.props.lang);\n              password = prompt(promptMessage);\n            }\n\n            CometChat.joinGroup(guid, groupType, password).then(group => {\n              this.setToastMessage(\"success\", \"GROUP_JOIN_SUCCESS\");\n              resolve(group);\n            }).catch(error => reject(error));\n          } else {\n            resolve(group);\n          }\n        }).catch(error => reject(error));\n      });\n      return promise;\n    };\n\n    this.setToastMessage = (type, message) => {\n      // switch(type) {\n      //     case \"error\":\n      //         this.toastRef.setError(message);\n      //     break;\n      //     case \"success\":\n      //         this.toastRef.setSuccess(message);\n      //         break;\n      //     case \"info\":\n      //         this.toastRef.setInfo(message);\n      //         break;\n      //     case \"warning\":\n      //         this.toastRef.setWarning(message);\n      //         break;\n      //     default:\n      //     break;\n      // }\n      return null;\n    };\n\n    this.clearGroupMembers = () => {\n      this.setState({\n        groupMembers: [],\n        groupAdmins: [],\n        groupModerators: [],\n        bannedGroupMembers: []\n      });\n    };\n\n    this.setAllGroupMembers = (groupMembers, groupAdmins, groupModerators) => {\n      this.setState({\n        groupMembers: [...this.state.groupMembers, ...groupMembers],\n        groupAdmins: [...this.state.groupAdmins, ...groupAdmins],\n        groupModerators: [...this.state.groupModerators, ...groupModerators]\n      });\n    };\n\n    this.updateGroupMembers = groupMembers => {\n      this.setState({\n        groupMembers: [...groupMembers]\n      });\n    };\n\n    this.setGroupMembers = groupMembers => {\n      this.setState({\n        groupMembers: [...this.state.groupMembers, ...groupMembers]\n      });\n    };\n\n    this.setGroupAdmins = groupAdmins => {\n      this.setState({\n        groupAdmins: [...this.state.groupAdmins, ...groupAdmins]\n      });\n    };\n\n    this.setGroupModerators = groupModerators => {\n      this.setState({\n        groupModerators: [...this.state.groupModerators, ...groupModerators]\n      });\n    };\n\n    this.setBannedGroupMembers = bannedMembers => {\n      this.setState({\n        bannedGroupMembers: [...this.state.bannedGroupMembers, ...bannedMembers]\n      });\n    };\n\n    this.updateBannedGroupMembers = bannedMembers => {\n      this.setState({\n        bannedGroupMembers: [...bannedMembers]\n      });\n    };\n\n    this.setCallInProgress = (call, callType) => {\n      this.setState({\n        callInProgress: { ...call\n        },\n        callType\n      });\n    };\n\n    this.setItem = item => {\n      this.setState({\n        item: { ...item\n        }\n      });\n    };\n\n    this.setType = type => {\n      this.setState({\n        type\n      });\n    };\n\n    this.setTypeAndItem = (type, item) => {\n      this.setState({\n        item: { ...item\n        },\n        type\n      });\n    };\n\n    this.setDeletedGroupId = guid => {\n      this.setState({\n        deletedGroupId: guid\n      });\n    };\n\n    this.setLeftGroupId = guid => {\n      this.setState({\n        leftGroupId: guid\n      });\n    };\n\n    this.setLastMessage = message => {\n      this.setState({\n        lastMessage: message\n      });\n    };\n\n    this.setUnreadMessages = newMessage => {\n      let messageList = [...this.state.unreadMessages];\n      messageList = messageList.concat(newMessage);\n      this.setState({\n        unreadMessages: messageList\n      });\n      this.setClearedUnreadMessages(false);\n    };\n\n    this.clearUnreadMessages = () => {\n      this.setState({\n        unreadMessages: []\n      });\n    };\n\n    this.setClearedUnreadMessages = flag => {\n      this.setState({\n        clearedUnreadMessages: flag\n      });\n    };\n\n    this.setDirectCallCustomMessage = (message, event) => {\n      this.setState({\n        directCallCustomMessage: message,\n        directCallCustomMessageAction: event\n      });\n    };\n\n    this.checkIfDirectCallIsOngoing = () => {\n      let output = null;\n\n      if (Object.keys(this.state.callInProgress).length && (this.state.callType === enums.CONSTANTS[\"INCOMING_DIRECT_CALLING\"] || this.state.callType === enums.CONSTANTS[\"OUTGOING_DIRECT_CALLING\"])) {\n        if (this.state.callInProgress.customData.sessionID === this.state.item.guid) {\n          output = enums.CONSTANTS.CALLS[\"ONGOING_CALL_SAME_GROUP\"];\n        } else {\n          output = enums.CONSTANTS.CALLS[\"ONGOING_CALL_DIFF_GROUP\"];\n        }\n      }\n\n      return output;\n    };\n\n    this.checkIfCallIsOngoing = () => {\n      if (Object.keys(this.state.callInProgress).length) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.getActiveCallSessionID = () => {\n      let sessionID;\n\n      if (this.state.callType === enums.CONSTANTS[\"INCOMING_DIRECT_CALLING\"] || this.state.callType === enums.CONSTANTS[\"OUTGOING_DIRECT_CALLING\"]) {\n        var _this$state$callInPro, _this$state$callInPro2, _this$state$callInPro3;\n\n        sessionID = (_this$state$callInPro = this.state.callInProgress) === null || _this$state$callInPro === void 0 ? void 0 : (_this$state$callInPro2 = _this$state$callInPro.data) === null || _this$state$callInPro2 === void 0 ? void 0 : (_this$state$callInPro3 = _this$state$callInPro2.customData) === null || _this$state$callInPro3 === void 0 ? void 0 : _this$state$callInPro3.sessionID;\n      } else {\n        var _this$state$callInPro4;\n\n        sessionID = (_this$state$callInPro4 = this.state.callInProgress) === null || _this$state$callInPro4 === void 0 ? void 0 : _this$state$callInPro4.sessionId;\n      }\n\n      return sessionID;\n    };\n\n    this.setConversationToBeDeleted = conversation => {\n      this.setState({\n        conversationToBeDeleted: conversation\n      });\n    };\n\n    this.hasKeyValue = (data, key) => {\n      if (data.hasOwnProperty(key) === false || data[key] === null || data[key] === undefined) {\n        return false;\n      }\n\n      return true;\n    };\n\n    const settings = new UIKitSettings();\n    const featureRestriction = new FeatureRestriction(settings);\n    this.state = {\n      item: {},\n      type: \"\",\n      toastMessage: props.toastMessage,\n      groupMembers: props.groupMembers,\n      bannedGroupMembers: props.bannedGroupMembers,\n      groupAdmins: props.groupAdmins,\n      groupModerators: props.groupModerators,\n      callInProgress: props.callInProgress,\n      callType: \"\",\n      deletedGroupId: \"\",\n      leftGroupId: \"\",\n      lastMessage: {},\n      unreadMessages: [],\n      clearedUnreadMessages: false,\n      directCallCustomMessage: {},\n      directCallCustomMessageAction: \"\",\n      conversationToBeDeleted: null,\n      UIKitSettings: settings,\n      FeatureRestriction: featureRestriction,\n      theme: theme,\n      language: props.language,\n      roles: {\n        [CometChat.GROUP_MEMBER_SCOPE.ADMIN]: Translator.translate(\"ADMINISTRATOR\", props.language),\n        [CometChat.GROUP_MEMBER_SCOPE.MODERATOR]: Translator.translate(\"MODERATOR\", props.language),\n        [CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT]: Translator.translate(\"PARTICIPANT\", props.language)\n      },\n      setGroupMembers: this.setGroupMembers,\n      updateGroupMembers: this.updateGroupMembers,\n      setAllGroupMembers: this.setAllGroupMembers,\n      setGroupAdmins: this.setGroupAdmins,\n      setGroupModerators: this.setGroupModerators,\n      setBannedGroupMembers: this.setBannedGroupMembers,\n      updateBannedGroupMembers: this.updateBannedGroupMembers,\n      clearGroupMembers: this.clearGroupMembers,\n      setToastMessage: this.setToastMessage,\n      setCallInProgress: this.setCallInProgress,\n      setItem: this.setItem,\n      setType: this.setType,\n      setTypeAndItem: this.setTypeAndItem,\n      setDeletedGroupId: this.setDeletedGroupId,\n      setLeftGroupId: this.setLeftGroupId,\n      setLastMessage: this.setLastMessage,\n      setUnreadMessages: this.setUnreadMessages,\n      clearUnreadMessages: this.clearUnreadMessages,\n      setClearedUnreadMessages: this.setClearedUnreadMessages,\n      setDirectCallCustomMessage: this.setDirectCallCustomMessage,\n      checkIfDirectCallIsOngoing: this.checkIfDirectCallIsOngoing,\n      checkIfCallIsOngoing: this.checkIfCallIsOngoing,\n      getActiveCallSessionID: this.getActiveCallSessionID,\n      setConversationToBeDeleted: this.setConversationToBeDeleted,\n      hasKeyValue: this.hasKeyValue\n    };\n    this.toastRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.user.trim().length) {\n      this.getUser(this.props.user.trim()).then(user => {\n        this.setType(CometChat.ACTION_TYPE.TYPE_USER);\n        this.setItem(user);\n      }).catch(error => {\n        const errorCode = error && error.hasOwnProperty(\"code\") ? error.code : \"UID_NOT_AVAILABLE\";\n        this.toastRef.setError(errorCode);\n      });\n    } else if (this.props.group.trim().length) {\n      this.getGroup(this.props.group.trim()).then(group => {\n        this.setType(CometChat.ACTION_TYPE.TYPE_GROUP);\n        this.setItem(group);\n      }).catch(error => {\n        const errorCode = error && error.hasOwnProperty(\"code\") ? error.code : \"GUID_NOT_AVAILABLE\";\n        this.toastRef.setError(errorCode);\n      });\n    } else if (this.props.user.trim().length === 0 && this.props.group.trim().length === 0 && this.props._component === enums.CONSTANTS[\"MESSAGES_COMPONENT\"]) {\n      const errorCode = \"UID_OR_GUID_NOT_AVAILABLE\";\n      this.toastRef.setError(errorCode);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.user.trim().length && prevProps.user !== this.props.user) {\n      this.getUser(this.props.user).then(user => {\n        this.setType(CometChat.ACTION_TYPE.TYPE_USER);\n        this.setItem(user);\n        this.clearUnreadMessages();\n        this.setClearedUnreadMessages(false);\n      }).catch(error => {\n        const errorCode = error && error.hasOwnProperty(\"code\") ? error.code : \"UID_NOT_AVAILABLE\";\n        this.toastRef.setError(errorCode);\n      });\n    } else if (this.props.group.trim().length && prevProps.group !== this.props.group) {\n      this.getGroup(this.props.group).then(group => {\n        this.setType(CometChat.ACTION_TYPE.TYPE_GROUP);\n        this.setItem(group);\n        this.clearUnreadMessages();\n        this.setClearedUnreadMessages(false);\n      }).catch(error => {\n        const errorCode = error && error.hasOwnProperty(\"code\") ? error.code : \"UID_NOT_AVAILABLE\";\n        this.toastRef.setError(errorCode);\n      });\n    } //when the active group is deleted, close the chat window.\n\n\n    if (this.state.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.state.item.guid === this.state.deletedGroupId) {\n      this.setItem({});\n      this.setType(\"\");\n      this.setDeletedGroupId(\"\");\n    } //when the active group is left, close the chat window.\n\n\n    if (this.state.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.state.item.guid === this.state.leftGroupId) {\n      this.setTypeAndItem({}, \"\");\n      this.setLeftGroupId(\"\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(CometChatContext.Provider, {\n      value: this.state,\n      children: [/*#__PURE__*/_jsxDEV(CometChatToastNotification, {\n        ref: el => this.toastRef = el,\n        lang: this.props.lang,\n        position: this.props.toastNotificationPos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 5\n      }, this), this.props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 4\n    }, this);\n  }\n\n}\nCometChatContextProvider.defaultProps = {\n  toastMessage: {},\n  groupMembers: [],\n  bannedGroupMembers: [],\n  groupAdmins: [],\n  groupModerators: [],\n  callInProgress: {},\n  user: \"\",\n  group: \"\",\n  _component: \"\",\n  language: Translator.getDefaultLanguage()\n};\nCometChatContextProvider.propTypes = {\n  toastMessage: PropTypes.object,\n  groupMembers: PropTypes.array,\n  bannedGroupMembers: PropTypes.array,\n  groupAdmins: PropTypes.array,\n  groupModerators: PropTypes.array,\n  callInProgress: PropTypes.object,\n  group: PropTypes.string,\n  user: PropTypes.string,\n  _component: PropTypes.string,\n  language: PropTypes.string\n};","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/util/CometChatContext.js"],"names":["React","PropTypes","CometChat","CometChatToastNotification","UIKitSettings","enums","Translator","FeatureRestriction","theme","CometChatContext","createContext","CometChatContextProvider","Component","constructor","props","getUser","uid","promise","Promise","resolve","reject","error","code","then","user","catch","getGroup","guid","group","hasJoined","groupType","type","password","GROUP_TYPE","PASSWORD","promptMessage","translate","lang","prompt","joinGroup","setToastMessage","message","clearGroupMembers","setState","groupMembers","groupAdmins","groupModerators","bannedGroupMembers","setAllGroupMembers","state","updateGroupMembers","setGroupMembers","setGroupAdmins","setGroupModerators","setBannedGroupMembers","bannedMembers","updateBannedGroupMembers","setCallInProgress","call","callType","callInProgress","setItem","item","setType","setTypeAndItem","setDeletedGroupId","deletedGroupId","setLeftGroupId","leftGroupId","setLastMessage","lastMessage","setUnreadMessages","newMessage","messageList","unreadMessages","concat","setClearedUnreadMessages","clearUnreadMessages","flag","clearedUnreadMessages","setDirectCallCustomMessage","event","directCallCustomMessage","directCallCustomMessageAction","checkIfDirectCallIsOngoing","output","Object","keys","length","CONSTANTS","customData","sessionID","CALLS","checkIfCallIsOngoing","getActiveCallSessionID","data","sessionId","setConversationToBeDeleted","conversation","conversationToBeDeleted","hasKeyValue","key","hasOwnProperty","undefined","settings","featureRestriction","toastMessage","language","roles","GROUP_MEMBER_SCOPE","ADMIN","MODERATOR","PARTICIPANT","toastRef","createRef","componentDidMount","trim","ACTION_TYPE","TYPE_USER","errorCode","setError","TYPE_GROUP","_component","componentDidUpdate","prevProps","render","el","toastNotificationPos","children","defaultProps","getDefaultLanguage","propTypes","object","array","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { CometChatToastNotification } from \"../components/Shared\";\nimport { UIKitSettings } from \"./UIKitSettings\";\nimport * as enums from \"./enums.js\";\n\nimport Translator from \"../resources/localization/translator\";\nimport { FeatureRestriction } from \"./FeatureRestriction\";\nimport { theme } from \"../resources/theme\";\n\nexport const CometChatContext = React.createContext({});\n\nexport class CometChatContextProvider extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tconst settings = new UIKitSettings();\n\t\tconst featureRestriction = new FeatureRestriction(settings);\n\n\t\tthis.state = {\n\t\t\titem: {},\n\t\t\ttype: \"\",\n\t\t\ttoastMessage: props.toastMessage,\n\t\t\tgroupMembers: props.groupMembers,\n\t\t\tbannedGroupMembers: props.bannedGroupMembers,\n\t\t\tgroupAdmins: props.groupAdmins,\n\t\t\tgroupModerators: props.groupModerators,\n\t\t\tcallInProgress: props.callInProgress,\n\t\t\tcallType: \"\",\n\t\t\tdeletedGroupId: \"\",\n\t\t\tleftGroupId: \"\",\n\t\t\tlastMessage: {},\n\t\t\tunreadMessages: [],\n\t\t\tclearedUnreadMessages: false,\n\t\t\tdirectCallCustomMessage: {},\n\t\t\tdirectCallCustomMessageAction: \"\",\n\t\t\tconversationToBeDeleted: null,\n\t\t\tUIKitSettings: settings,\n\t\t\tFeatureRestriction: featureRestriction,\n\t\t\ttheme: theme,\n\t\t\tlanguage: props.language,\n\t\t\troles: {\n\t\t\t\t[CometChat.GROUP_MEMBER_SCOPE.ADMIN]: Translator.translate(\"ADMINISTRATOR\", props.language),\n\t\t\t\t[CometChat.GROUP_MEMBER_SCOPE.MODERATOR]: Translator.translate(\"MODERATOR\", props.language),\n\t\t\t\t[CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT]: Translator.translate(\"PARTICIPANT\", props.language),\n\t\t\t},\n\t\t\tsetGroupMembers: this.setGroupMembers,\n\t\t\tupdateGroupMembers: this.updateGroupMembers,\n\t\t\tsetAllGroupMembers: this.setAllGroupMembers,\n\t\t\tsetGroupAdmins: this.setGroupAdmins,\n\t\t\tsetGroupModerators: this.setGroupModerators,\n\t\t\tsetBannedGroupMembers: this.setBannedGroupMembers,\n\t\t\tupdateBannedGroupMembers: this.updateBannedGroupMembers,\n\t\t\tclearGroupMembers: this.clearGroupMembers,\n\t\t\tsetToastMessage: this.setToastMessage,\n\t\t\tsetCallInProgress: this.setCallInProgress,\n\t\t\tsetItem: this.setItem,\n\t\t\tsetType: this.setType,\n\t\t\tsetTypeAndItem: this.setTypeAndItem,\n\t\t\tsetDeletedGroupId: this.setDeletedGroupId,\n\t\t\tsetLeftGroupId: this.setLeftGroupId,\n\t\t\tsetLastMessage: this.setLastMessage,\n\t\t\tsetUnreadMessages: this.setUnreadMessages,\n\t\t\tclearUnreadMessages: this.clearUnreadMessages,\n\t\t\tsetClearedUnreadMessages: this.setClearedUnreadMessages,\n\t\t\tsetDirectCallCustomMessage: this.setDirectCallCustomMessage,\n\t\t\tcheckIfDirectCallIsOngoing: this.checkIfDirectCallIsOngoing,\n\t\t\tcheckIfCallIsOngoing: this.checkIfCallIsOngoing,\n\t\t\tgetActiveCallSessionID: this.getActiveCallSessionID,\n\t\t\tsetConversationToBeDeleted: this.setConversationToBeDeleted,\n\t\t\thasKeyValue: this.hasKeyValue,\n\t\t};\n\n\t\tthis.toastRef = React.createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.user.trim().length) {\n\t\t\tthis.getUser(this.props.user.trim())\n\t\t\t\t.then(user => {\n\t\t\t\t\tthis.setType(CometChat.ACTION_TYPE.TYPE_USER);\n\t\t\t\t\tthis.setItem(user);\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconst errorCode = error && error.hasOwnProperty(\"code\") ? error.code : \"UID_NOT_AVAILABLE\";\n\t\t\t\t\tthis.toastRef.setError(errorCode);\n\t\t\t\t});\n\t\t} else if (this.props.group.trim().length) {\n\t\t\tthis.getGroup(this.props.group.trim())\n\t\t\t\t.then(group => {\n\t\t\t\t\tthis.setType(CometChat.ACTION_TYPE.TYPE_GROUP);\n\t\t\t\t\tthis.setItem(group);\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconst errorCode = error && error.hasOwnProperty(\"code\") ? error.code : \"GUID_NOT_AVAILABLE\";\n\t\t\t\t\tthis.toastRef.setError(errorCode);\n\t\t\t\t});\n\t\t} else if (this.props.user.trim().length === 0 && this.props.group.trim().length === 0 && this.props._component === enums.CONSTANTS[\"MESSAGES_COMPONENT\"]) {\n\t\t\tconst errorCode = \"UID_OR_GUID_NOT_AVAILABLE\";\n\t\t\tthis.toastRef.setError(errorCode);\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t\n\t\tif (this.props.user.trim().length && prevProps.user !== this.props.user) {\n\t\t\tthis.getUser(this.props.user)\n\t\t\t\t.then(user => {\n\t\t\t\t\tthis.setType(CometChat.ACTION_TYPE.TYPE_USER);\n\t\t\t\t\tthis.setItem(user);\n\t\t\t\t\tthis.clearUnreadMessages();\n\t\t\t\t\tthis.setClearedUnreadMessages(false);\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconst errorCode = error && error.hasOwnProperty(\"code\") ? error.code : \"UID_NOT_AVAILABLE\";\n\t\t\t\t\tthis.toastRef.setError(errorCode);\n\t\t\t\t});\n\t\t} else if (this.props.group.trim().length && prevProps.group !== this.props.group) {\n\t\t\tthis.getGroup(this.props.group)\n\t\t\t\t.then(group => {\n\t\t\t\t\tthis.setType(CometChat.ACTION_TYPE.TYPE_GROUP);\n\t\t\t\t\tthis.setItem(group);\n\t\t\t\t\tthis.clearUnreadMessages();\n\t\t\t\t\tthis.setClearedUnreadMessages(false);\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconst errorCode = error && error.hasOwnProperty(\"code\") ? error.code : \"UID_NOT_AVAILABLE\";\n\t\t\t\t\tthis.toastRef.setError(errorCode);\n\t\t\t\t});\n\t\t}\n\n\t\t//when the active group is deleted, close the chat window.\n\t\tif (this.state.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.state.item.guid === this.state.deletedGroupId) {\n\t\t\tthis.setItem({});\n\t\t\tthis.setType(\"\");\n\t\t\tthis.setDeletedGroupId(\"\");\n\t\t}\n\n\t\t//when the active group is left, close the chat window.\n\t\tif (this.state.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.state.item.guid === this.state.leftGroupId) {\n\t\t\tthis.setTypeAndItem({}, \"\");\n\t\t\tthis.setLeftGroupId(\"\");\n\t\t}\n\t}\n\n\tgetUser = uid => {\n\t\tconst promise = new Promise((resolve, reject) => {\n\t\t\tif (!uid) {\n\t\t\t\tconst error = {code: \"UID_NOT_AVAILABLE\"};\n\t\t\t\treject(error);\n\t\t\t}\n\n\t\t\tCometChat.getUser(uid)\n\t\t\t\t.then(user => resolve(user))\n\t\t\t\t.catch(error => reject(error));\n\t\t});\n\n\t\treturn promise;\n\t};\n\n\tgetGroup = guid => {\n\t\tconst promise = new Promise((resolve, reject) => {\n\t\t\tif (!guid) {\n\t\t\t\tconst error = {code: \"GUID_NOT_AVAILABLE\"};\n\t\t\t\treject(error);\n\t\t\t}\n\n\t\t\tCometChat.getGroup(guid)\n\t\t\t\t.then(group => {\n\t\t\t\t\tif (group.hasJoined === false) {\n\t\t\t\t\t\tconst guid = group.guid;\n\t\t\t\t\t\tconst groupType = group.type;\n\t\t\t\t\t\tlet password = \"\";\n\t\t\t\t\t\tif (groupType === CometChat.GROUP_TYPE.PASSWORD) {\n\t\t\t\t\t\t\tconst promptMessage = Translator.translate(\"ENTER_PASSWORD_JOIN_GROUP\", this.props.lang);\n\t\t\t\t\t\t\tpassword = prompt(promptMessage);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tCometChat.joinGroup(guid, groupType, password)\n\t\t\t\t\t\t\t.then(group => {\n\t\t\t\t\t\t\t\tthis.setToastMessage(\"success\", \"GROUP_JOIN_SUCCESS\");\n\t\t\t\t\t\t\t\tresolve(group);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(error => reject(error));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(group);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(error => reject(error));\n\t\t});\n\n\t\treturn promise;\n\t};\n\n\tsetToastMessage = (type, message) => {\n\t\t// switch(type) {\n\n\t\t//     case \"error\":\n\t\t//         this.toastRef.setError(message);\n\t\t//     break;\n\t\t//     case \"success\":\n\t\t//         this.toastRef.setSuccess(message);\n\t\t//         break;\n\t\t//     case \"info\":\n\t\t//         this.toastRef.setInfo(message);\n\t\t//         break;\n\t\t//     case \"warning\":\n\t\t//         this.toastRef.setWarning(message);\n\t\t//         break;\n\t\t//     default:\n\t\t//     break;\n\t\t// }\n\n\t\treturn null;\n\t};\n\n\tclearGroupMembers = () => {\n\t\tthis.setState({\n\t\t\tgroupMembers: [],\n\t\t\tgroupAdmins: [],\n\t\t\tgroupModerators: [],\n\t\t\tbannedGroupMembers: [],\n\t\t});\n\t};\n\n\tsetAllGroupMembers = (groupMembers, groupAdmins, groupModerators) => {\n\t\tthis.setState({\n\t\t\tgroupMembers: [...this.state.groupMembers, ...groupMembers],\n\t\t\tgroupAdmins: [...this.state.groupAdmins, ...groupAdmins],\n\t\t\tgroupModerators: [...this.state.groupModerators, ...groupModerators],\n\t\t});\n\t};\n\n\tupdateGroupMembers = groupMembers => {\n\t\tthis.setState({\n\t\t\tgroupMembers: [...groupMembers],\n\t\t});\n\t};\n\n\tsetGroupMembers = groupMembers => {\n\t\tthis.setState({\n\t\t\tgroupMembers: [...this.state.groupMembers, ...groupMembers],\n\t\t});\n\t};\n\n\tsetGroupAdmins = groupAdmins => {\n\t\tthis.setState({\n\t\t\tgroupAdmins: [...this.state.groupAdmins, ...groupAdmins],\n\t\t});\n\t};\n\n\tsetGroupModerators = groupModerators => {\n\t\tthis.setState({\n\t\t\tgroupModerators: [...this.state.groupModerators, ...groupModerators],\n\t\t});\n\t};\n\n\tsetBannedGroupMembers = bannedMembers => {\n\t\tthis.setState({\n\t\t\tbannedGroupMembers: [...this.state.bannedGroupMembers, ...bannedMembers],\n\t\t});\n\t};\n\n\tupdateBannedGroupMembers = bannedMembers => {\n\t\tthis.setState({\n\t\t\tbannedGroupMembers: [...bannedMembers],\n\t\t});\n\t};\n\n\tsetCallInProgress = (call, callType) => {\n\t\tthis.setState({callInProgress: {...call}, callType});\n\t};\n\n\tsetItem = item => {\n\t\tthis.setState({item: {...item}});\n\t};\n\n\tsetType = type => {\n\t\tthis.setState({type});\n\t};\n\n\tsetTypeAndItem = (type, item) => {\n\t\tthis.setState({item: {...item}, type});\n\t};\n\n\tsetDeletedGroupId = guid => {\n\t\tthis.setState({deletedGroupId: guid});\n\t};\n\n\tsetLeftGroupId = guid => {\n\t\tthis.setState({leftGroupId: guid});\n\t};\n\n\tsetLastMessage = message => {\n\t\tthis.setState({lastMessage: message});\n\t};\n\n\tsetUnreadMessages = newMessage => {\n\t\tlet messageList = [...this.state.unreadMessages];\n\t\tmessageList = messageList.concat(newMessage);\n\n\t\tthis.setState({unreadMessages: messageList});\n\t\tthis.setClearedUnreadMessages(false);\n\t};\n\n\tclearUnreadMessages = () => {\n\t\tthis.setState({unreadMessages: []});\n\t};\n\n\tsetClearedUnreadMessages = flag => {\n\t\tthis.setState({clearedUnreadMessages: flag});\n\t};\n\n\tsetDirectCallCustomMessage = (message, event) => {\n\t\tthis.setState({directCallCustomMessage: message, directCallCustomMessageAction: event});\n\t};\n\n\tcheckIfDirectCallIsOngoing = () => {\n\t\tlet output = null;\n\n\t\tif (Object.keys(this.state.callInProgress).length && (this.state.callType === enums.CONSTANTS[\"INCOMING_DIRECT_CALLING\"] || this.state.callType === enums.CONSTANTS[\"OUTGOING_DIRECT_CALLING\"])) {\n\t\t\tif (this.state.callInProgress.customData.sessionID === this.state.item.guid) {\n\t\t\t\toutput = enums.CONSTANTS.CALLS[\"ONGOING_CALL_SAME_GROUP\"];\n\t\t\t} else {\n\t\t\t\toutput = enums.CONSTANTS.CALLS[\"ONGOING_CALL_DIFF_GROUP\"];\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tcheckIfCallIsOngoing = () => {\n\t\tif (Object.keys(this.state.callInProgress).length) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tgetActiveCallSessionID = () => {\n\t\tlet sessionID;\n\t\tif (this.state.callType === enums.CONSTANTS[\"INCOMING_DIRECT_CALLING\"] || this.state.callType === enums.CONSTANTS[\"OUTGOING_DIRECT_CALLING\"]) {\n\t\t\tsessionID = this.state.callInProgress?.data?.customData?.sessionID;\n\t\t} else {\n\t\t\tsessionID = this.state.callInProgress?.sessionId;\n\t\t}\n\n\t\treturn sessionID;\n\t};\n\n\tsetConversationToBeDeleted = conversation => {\n\t\tthis.setState({ conversationToBeDeleted: conversation });\n\t};\n\n\thasKeyValue = (data, key) => {\n\n\t\tif(data.hasOwnProperty(key) === false || data[key] === null || data[key] === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<CometChatContext.Provider value={this.state}>\n\t\t\t\t<CometChatToastNotification ref={el => (this.toastRef = el)} lang={this.props.lang} position={this.props.toastNotificationPos} />\n\t\t\t\t{this.props.children}\n\t\t\t</CometChatContext.Provider>\n\t\t);\n\t}\n}\n\nCometChatContextProvider.defaultProps = {\n\ttoastMessage: {},\n\tgroupMembers: [],\n\tbannedGroupMembers: [],\n\tgroupAdmins: [],\n\tgroupModerators: [],\n\tcallInProgress: {},\n\tuser: \"\",\n\tgroup: \"\",\n\t_component: \"\",\n\tlanguage: Translator.getDefaultLanguage(),\n};\n\nCometChatContextProvider.propTypes = {\n\ttoastMessage: PropTypes.object,\n\tgroupMembers: PropTypes.array,\n\tbannedGroupMembers: PropTypes.array,\n\tgroupAdmins: PropTypes.array,\n\tgroupModerators: PropTypes.array,\n\tcallInProgress: PropTypes.object,\n\tgroup: PropTypes.string,\n\tuser: PropTypes.string,\n\t_component: PropTypes.string,\n\tlanguage: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}