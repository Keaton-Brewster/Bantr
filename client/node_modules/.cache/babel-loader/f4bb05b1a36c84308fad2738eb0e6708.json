{"ast":null,"code":"import _extends from \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatMessageList/index.js\";\nimport React from \"react\";\nimport dateFormat from \"dateformat\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { MessageListManager } from \"./controller\";\nimport { CometChatSenderTextMessageBubble, CometChatReceiverTextMessageBubble, CometChatSenderImageMessageBubble, CometChatReceiverImageMessageBubble, CometChatSenderFileMessageBubble, CometChatReceiverFileMessageBubble, CometChatSenderAudioMessageBubble, CometChatReceiverAudioMessageBubble, CometChatSenderVideoMessageBubble, CometChatReceiverVideoMessageBubble, CometChatSenderDirectCallBubble, CometChatReceiverDirectCallBubble, CometChatDeleteMessageBubble, CometChatActionMessageBubble } from \"../\";\nimport { CometChatSenderPollMessageBubble, CometChatReceiverPollMessageBubble, CometChatSenderStickerBubble, CometChatReceiverStickerMessageBubble, CometChatSenderDocumentBubble, CometChatReceiverDocumentBubble, CometChatSenderWhiteboardBubble, CometChatReceiverWhiteboardBubble } from \"../Extensions\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport { getMessageDate } from \"../../../util/common\";\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { chatListStyle, listWrapperStyle, messageDateContainerStyle, messageDateStyle, decoratorMessageStyle, decoratorMessageTxtStyle } from \"./style\";\n\nclass CometChatMessageList extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.loggedInUser = null;\n    this.lastScrollTop = 0;\n    this.times = 0;\n    this.item = {};\n\n    this.enableMessageReaction = () => {\n      /**\n       * If reacting to messages feature is disabled\n       */\n      this.context.FeatureRestriction.isReactionsEnabled().then(response => {\n        if (response !== this.state.enableMessageReaction) {\n          this.setState({\n            enableMessageReaction: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableMessageReaction !== false) {\n          this.setState({\n            enableMessageReaction: false\n          });\n        }\n      });\n    };\n\n    this.scrollToBottom = (scrollHeight = 0) => {\n      if (this.messagesEnd) {\n        this.messagesEnd.scrollTop = this.messagesEnd.scrollHeight - scrollHeight;\n      }\n    };\n\n    this.messageHandler = (item, actionGenerated = enums.ACTIONS[\"MESSAGES_FETCHED\"]) => {\n      this.fetchMessages().then(messageList => {\n        if (messageList.length === 0) {\n          this.setState({\n            decoratorMessage: Translator.translate(\"NO_MESSAGES_FOUND\", this.props.lang)\n          });\n        } else {\n          this.setState({\n            decoratorMessage: \"\"\n          });\n        } //updating messagecount variable\n\n\n        this.messageCount = messageList.length;\n        messageList.forEach(message => {\n          //if the sender of the message is not the loggedin user, mark the message as read.\n          if (message.getSender().getUid() !== this.loggedInUser.getUid() && message.hasOwnProperty(\"readAt\") === false) {\n            if (message.getReceiverType() === CometChat.RECEIVER_TYPE.USER) {\n              CometChat.markAsRead(message.getId().toString(), message.getSender().getUid(), message.getReceiverType());\n              this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_READ\"], message);\n            } else if (message.getReceiverType() === CometChat.RECEIVER_TYPE.GROUP) {\n              CometChat.markAsRead(message.getId().toString(), message.getReceiverId(), message.getReceiverType());\n              this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_READ\"], message);\n            }\n          }\n        });\n        this.lastScrollTop = this.messagesEnd.scrollHeight; //abort(don't return messagelist), when the chat window changes\n\n        if (item.hasOwnProperty(\"uid\") && this.context.item.hasOwnProperty(\"uid\") && item.uid === this.context.item.uid || item.hasOwnProperty(\"guid\") && this.context.item.hasOwnProperty(\"guid\") && item.guid === this.context.item.guid) {\n          this.props.actionGenerated(actionGenerated, messageList);\n        }\n      }).catch(error => {\n        if (this.props.messages.length === 0) {\n          this.setState({\n            decoratorMessage: Translator.translate(\"SOMETHING_WRONG\", this.props.lang)\n          });\n        }\n\n        if (error && error.hasOwnProperty(\"code\") && error.code === \"ERR_GUID_NOT_FOUND\") {//this.context.setDeletedGroupId(this.context.item.guid);\n        }\n      });\n    };\n\n    this.fetchMessages = () => {\n      const promise = new Promise((resolve, reject) => {\n        this.MessageListManager.fetchPreviousMessages().then(messageList => {\n          resolve(messageList);\n        }).catch(error => reject(error));\n      });\n      return promise;\n    };\n\n    this.messageUpdated = (key, message, group, options) => {\n      switch (key) {\n        case enums.MESSAGE_DELETED:\n          this.onMessageDeleted(message);\n          break;\n\n        case enums.MESSAGE_EDITED:\n          this.onMessageEdited(message);\n          break;\n\n        case enums.MESSAGE_DELIVERED:\n        case enums.MESSAGE_READ:\n          this.onMessageReadAndDelivered(message);\n          break;\n\n        case enums.TEXT_MESSAGE_RECEIVED:\n        case enums.MEDIA_MESSAGE_RECEIVED:\n          this.onMessageReceived(message);\n          break;\n\n        case enums.CUSTOM_MESSAGE_RECEIVED:\n          this.onCustomMessageReceived(message);\n          break;\n\n        case enums.GROUP_MEMBER_SCOPE_CHANGED:\n        case enums.GROUP_MEMBER_JOINED:\n        case enums.GROUP_MEMBER_LEFT:\n        case enums.GROUP_MEMBER_ADDED:\n        case enums.GROUP_MEMBER_KICKED:\n        case enums.GROUP_MEMBER_BANNED:\n        case enums.GROUP_MEMBER_UNBANNED:\n          this.onGroupUpdated(key, message, group, options);\n          break;\n\n        case enums.INCOMING_CALL_RECEIVED:\n        case enums.INCOMING_CALL_CANCELLED:\n        case enums.OUTGOING_CALL_ACCEPTED:\n        case enums.OUTGOING_CALL_REJECTED:\n          this.onCallUpdated(key, message);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.onMessageDeleted = message => {\n      if (this.context.type === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverType() === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverId() === this.context.item.guid) {\n        this.props.actionGenerated(enums.ACTIONS[\"ON_MESSAGE_DELETED\"], [message]);\n      } else if (this.context.type === CometChat.RECEIVER_TYPE.USER && message.getReceiverType() === CometChat.RECEIVER_TYPE.USER && message.getSender().uid === this.context.item.uid) {\n        this.props.actionGenerated(enums.ACTIONS[\"ON_MESSAGE_DELETED\"], [message]);\n      }\n    };\n\n    this.onMessageEdited = message => {\n      const messageList = [...this.props.messages];\n\n      const updateEditedMessage = message => {\n        let messageKey = messageList.findIndex(m => m.id === message.id);\n\n        if (messageKey > -1) {\n          const messageObj = messageList[messageKey];\n          const newMessageObj = Object.assign({}, messageObj, message);\n          messageList.splice(messageKey, 1, newMessageObj);\n          this.props.actionGenerated(enums.ACTIONS[\"ON_MESSAGE_EDITED\"], messageList, newMessageObj);\n        }\n      };\n\n      if (this.context.type === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverType() === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverId() === this.context.item.guid) {\n        updateEditedMessage(message);\n      } else if (this.context.type === CometChat.RECEIVER_TYPE.USER && message.getReceiverType() === CometChat.RECEIVER_TYPE.USER && this.loggedInUser.uid === message.getReceiverId() && message.getSender().uid === this.context.item.uid) {\n        updateEditedMessage(message);\n      } else if (this.context.type === CometChat.RECEIVER_TYPE.USER && message.getReceiverType() === CometChat.RECEIVER_TYPE.USER && this.loggedInUser.uid === message.getSender().uid && message.getReceiverId() === this.context.item.uid) {\n        updateEditedMessage(message);\n      }\n    };\n\n    this.onMessageReadAndDelivered = message => {\n      //read receipts\n      if (message.getReceiverType() === CometChat.RECEIVER_TYPE.USER && message.getSender().getUid() === this.context.item.uid && message.getReceiver() === this.loggedInUser.uid) {\n        let messageList = [...this.props.messages];\n\n        if (message.getReceiptType() === \"delivery\") {\n          //search for message\n          let messageKey = messageList.findIndex(m => m.id === message.messageId);\n\n          if (messageKey > -1) {\n            let messageObj = messageList[messageKey];\n            let newMessageObj = Object.assign({}, messageObj, {\n              deliveredAt: message.getDeliveredAt()\n            });\n            messageList.splice(messageKey, 1, newMessageObj);\n            this.props.actionGenerated(enums.ACTIONS[\"ON_MESSAGE_READ_DELIVERED\"], messageList);\n          }\n        } else if (message.getReceiptType() === \"read\") {\n          //search for message\n          let messageKey = messageList.findIndex(m => m.id === message.messageId);\n\n          if (messageKey > -1) {\n            let messageObj = { ...messageList[messageKey]\n            };\n            let newMessageObj = Object.assign({}, messageObj, {\n              readAt: message.getReadAt()\n            });\n            messageList.splice(messageKey, 1, newMessageObj);\n            this.props.actionGenerated(enums.ACTIONS[\"ON_MESSAGE_READ_DELIVERED\"], messageList);\n          }\n        }\n      } else if (message.getReceiverType() === CometChat.RECEIVER_TYPE.GROUP && message.getReceiver() === this.context.item.guid) {//not implemented\n      }\n    };\n\n    this.reInitializeMessageBuilder = () => {\n      if (this.props.hasOwnProperty(\"parentMessageId\") === false) {\n        this.messageCount = 0;\n      }\n\n      this.props.actionGenerated(enums.ACTIONS[\"REFRESHING_MESSAGES\"], []);\n      this.setState({\n        decoratorMessage: Translator.translate(\"LOADING\", this.props.lang)\n      });\n      this.MessageListManager.removeListeners();\n\n      if (this.props.parentMessageId) {\n        this.MessageListManager = new MessageListManager(this.context, this.context.item, this.context.type, this.props.parentMessageId);\n      } else {\n        this.MessageListManager = new MessageListManager(this.context, this.context.item, this.context.type);\n      }\n\n      this.MessageListManager.initializeMessageRequest().then(() => {\n        this.messageHandler(this.context.item, enums.ACTIONS[\"MESSAGES_REFRESHED\"]);\n        this.MessageListManager.attachListeners(this.messageUpdated);\n      });\n    };\n\n    this.markMessageAsRead = (message, type) => {\n      if (message.hasOwnProperty(\"readAt\") === false) {\n        if (type === CometChat.ACTION_TYPE.TYPE_USER) {\n          CometChat.markAsRead(message.getId().toString(), message.getSender().uid, message.getReceiverType());\n        } else if (type === CometChat.ACTION_TYPE.TYPE_GROUP) {\n          CometChat.markAsRead(message.getId().toString(), message.getReceiverId(), message.getReceiverType());\n        }\n      }\n    };\n\n    this.onMessageReceived = message => {\n      /**\n       * message receiver is chat window group\n       */\n      if (this.context.type === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverType() === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverId() === this.context.item.guid) {\n        this.messageReceivedHandler(message, CometChat.RECEIVER_TYPE.GROUP);\n      } else if (this.context.type === CometChat.RECEIVER_TYPE.USER && message.getReceiverType() === CometChat.RECEIVER_TYPE.USER) {\n        var _this$loggedInUser, _this$loggedInUser2;\n\n        /**\n         * If the message sender is chat window user and message receiver is logged-in user\n         * OR\n         * If the message sender is logged-in user and message receiver is chat window user\n         */\n        if (message.getSender().uid === this.context.item.uid && message.getReceiverId() === ((_this$loggedInUser = this.loggedInUser) === null || _this$loggedInUser === void 0 ? void 0 : _this$loggedInUser.uid) || message.getSender().uid === ((_this$loggedInUser2 = this.loggedInUser) === null || _this$loggedInUser2 === void 0 ? void 0 : _this$loggedInUser2.uid) && message.getReceiverId() === this.context.item.uid) {\n          this.messageReceivedHandler(message, CometChat.RECEIVER_TYPE.USER);\n        }\n      }\n    };\n\n    this.messageReceivedHandler = (message, type) => {\n      //handling dom lag - increment count only for main message list\n      if (message.hasOwnProperty(\"parentMessageId\") === false && this.props.hasOwnProperty(\"parentMessageId\") === false) {\n        ++this.messageCount; //if the user has not scrolled in chat window(scroll is at the bottom of the chat window)\n\n        if (this.messagesEnd.scrollHeight - this.messagesEnd.scrollTop - this.messagesEnd.clientHeight < 20) {\n          if (this.messageCount > enums.CONSTANTS[\"MAX_MESSAGE_COUNT\"]) {\n            this.reInitializeMessageBuilder();\n          } else {\n            this.markMessageAsRead(message, type);\n            this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_RECEIVED\"], [message]);\n          }\n        } else {\n          //if the user has scrolled up in chat window\n          this.props.actionGenerated(enums.ACTIONS[\"NEW_MESSAGES\"], [message]);\n        }\n      } else if (message.hasOwnProperty(\"parentMessageId\") === true && this.props.hasOwnProperty(\"parentMessageId\") === true) {\n        if (message.parentMessageId === this.props.parentMessageId) {\n          this.markMessageAsRead(message, type);\n        }\n\n        this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_RECEIVED\"], [message]);\n      } else {\n        this.props.actionGenerated(enums.ACTIONS[\"MESSAGE_RECEIVED\"], [message]);\n      }\n    };\n\n    this.onCustomMessageReceived = message => {\n      //new messages\n      if (this.context.type === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverType() === CometChat.RECEIVER_TYPE.GROUP && this.loggedInUser.uid === message.getSender().uid && message.getReceiverId() === this.context.item.guid && (message.type === enums.CUSTOM_TYPE_POLL || message.type === enums.CUSTOM_TYPE_DOCUMENT || message.type === enums.CUSTOM_TYPE_WHITEBOARD)) {\n        //showing polls, collaborative document and whiteboard for sender (custom message received listener for sender)\n        this.props.actionGenerated(enums.ACTIONS[\"CUSTOM_MESSAGE_RECEIVED\"], [message]);\n      } else if (this.context.type === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverType() === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverId() === this.context.item.guid) {\n        this.customMessageReceivedHandler(message, CometChat.RECEIVER_TYPE.GROUP);\n      } else if (this.context.type === CometChat.RECEIVER_TYPE.USER && message.getReceiverType() === CometChat.RECEIVER_TYPE.USER && message.getSender().uid === this.context.item.uid) {\n        this.customMessageReceivedHandler(message, CometChat.RECEIVER_TYPE.USER);\n      } else if (this.context.type === CometChat.RECEIVER_TYPE.USER && message.getReceiverType() === CometChat.RECEIVER_TYPE.USER && this.loggedInUser.uid === message.getSender().uid && message.getReceiverId() === this.context.item.uid && (message.type === enums.CUSTOM_TYPE_POLL || message.type === enums.CUSTOM_TYPE_DOCUMENT || message.type === enums.CUSTOM_TYPE_WHITEBOARD)) {\n        //showing polls, collaborative document and whiteboard for sender (custom message received listener for sender)\n        this.props.actionGenerated(enums.ACTIONS[\"CUSTOM_MESSAGE_RECEIVED\"], [message]);\n      }\n    };\n\n    this.customMessageReceivedHandler = (message, type) => {\n      //handling dom lag - increment count only for main message list\n      if (message.hasOwnProperty(\"parentMessageId\") === false && this.props.hasOwnProperty(\"parentMessageId\") === false) {\n        ++this.messageCount; //if the user has not scrolled in chat window(scroll is at the bottom of the chat window)\n\n        if (this.messagesEnd.scrollHeight - this.messagesEnd.scrollTop === this.messagesEnd.clientHeight) {\n          if (this.messageCount > enums.CONSTANTS[\"MAX_MESSAGE_COUNT\"]) {\n            this.reInitializeMessageBuilder();\n          } else {\n            this.markMessageAsRead(message, type);\n            this.props.actionGenerated(enums.ACTIONS[\"CUSTOM_MESSAGE_RECEIVED\"], [message]);\n          }\n        } else {\n          //if the user has scrolled in chat window\n          this.props.actionGenerated(enums.ACTIONS[\"NEW_MESSAGES\"], [message]);\n        }\n      } else if (message.hasOwnProperty(\"parentMessageId\") === true && this.props.hasOwnProperty(\"parentMessageId\") === true) {\n        if (message.parentMessageId === this.props.parentMessageId) {\n          this.markMessageAsRead(message, type);\n        }\n\n        this.props.actionGenerated(enums.ACTIONS[\"CUSTOM_MESSAGE_RECEIVED\"], [message]);\n      } else {\n        this.props.actionGenerated(enums.ACTIONS[\"CUSTOM_MESSAGE_RECEIVED\"], [message]);\n      }\n    };\n\n    this.onCallUpdated = (key, message) => {\n      if (this.context.type === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverType() === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverId() === this.context.item.guid) {\n        this.props.actionGenerated(key, message);\n      } else if (this.context.type === CometChat.RECEIVER_TYPE.USER && message.getReceiverType() === CometChat.RECEIVER_TYPE.USER && message.getSender().uid === this.context.item.uid) {\n        this.props.actionGenerated(key, message);\n      }\n    };\n\n    this.onGroupUpdated = (key, message, group, options) => {\n      if (this.context.type === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverType() === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverId() === this.context.item.guid) {\n        this.props.actionGenerated(key, message, null, group, options);\n      }\n    };\n\n    this.handleScroll = e => {\n      const scrollTop = e.currentTarget.scrollTop;\n      const scrollHeight = e.currentTarget.scrollHeight;\n      const clientHeight = e.currentTarget.clientHeight;\n      this.lastScrollTop = scrollHeight - scrollTop;\n\n      if (this.lastScrollTop === clientHeight) {\n        this.props.actionGenerated(enums.ACTIONS[\"CLEAR_UNREAD_MESSAGES\"]);\n      }\n\n      const top = Math.round(scrollTop) === 0;\n\n      if (top && this.props.messages.length) {\n        this.messageHandler(this.context.item);\n      }\n    };\n\n    this.getSenderMessageComponent = (message, key) => {\n      let component;\n\n      if (message.hasOwnProperty(\"deletedAt\")) {\n        component = jsx(CometChatDeleteMessageBubble, _extends({\n          key: key,\n          message: message,\n          messageOf: \"sender\"\n        }, this.props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 16\n          }\n        }));\n      } else {\n        switch (message.type) {\n          case CometChat.MESSAGE_TYPE.TEXT:\n            component = jsx(CometChatSenderTextMessageBubble, _extends({\n              loggedInUser: this.loggedInUser,\n              key: key,\n              message: message\n            }, this.props, {\n              enableMessageReaction: this.state.enableMessageReaction,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 18\n              }\n            }));\n            break;\n\n          case CometChat.MESSAGE_TYPE.IMAGE:\n            component = jsx(CometChatSenderImageMessageBubble, _extends({\n              loggedInUser: this.loggedInUser,\n              key: key,\n              message: message\n            }, this.props, {\n              enableMessageReaction: this.state.enableMessageReaction,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 18\n              }\n            }));\n            break;\n\n          case CometChat.MESSAGE_TYPE.FILE:\n            component = jsx(CometChatSenderFileMessageBubble, _extends({\n              loggedInUser: this.loggedInUser,\n              key: key,\n              message: message\n            }, this.props, {\n              enableMessageReaction: this.state.enableMessageReaction,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 18\n              }\n            }));\n            break;\n\n          case CometChat.MESSAGE_TYPE.VIDEO:\n            component = jsx(CometChatSenderVideoMessageBubble, _extends({\n              loggedInUser: this.loggedInUser,\n              key: key,\n              message: message\n            }, this.props, {\n              enableMessageReaction: this.state.enableMessageReaction,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 18\n              }\n            }));\n            break;\n\n          case CometChat.MESSAGE_TYPE.AUDIO:\n            component = jsx(CometChatSenderAudioMessageBubble, _extends({\n              loggedInUser: this.loggedInUser,\n              key: key,\n              message: message\n            }, this.props, {\n              enableMessageReaction: this.state.enableMessageReaction,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 18\n              }\n            }));\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return component;\n    };\n\n    this.getReceiverMessageComponent = (message, key) => {\n      let component;\n\n      if (message.hasOwnProperty(\"deletedAt\")) {\n        component = jsx(CometChatDeleteMessageBubble, {\n          key: key,\n          message: message,\n          messageOf: \"receiver\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 16\n          }\n        });\n      } else {\n        switch (message.type) {\n          case \"message\":\n          case CometChat.MESSAGE_TYPE.TEXT:\n            component = message.text ? jsx(CometChatReceiverTextMessageBubble, _extends({\n              loggedInUser: this.loggedInUser,\n              key: key,\n              message: message\n            }, this.props, {\n              enableMessageReaction: this.state.enableMessageReaction,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 33\n              }\n            })) : null;\n            break;\n\n          case CometChat.MESSAGE_TYPE.IMAGE:\n            component = message.data.url ? jsx(CometChatReceiverImageMessageBubble, _extends({\n              loggedInUser: this.loggedInUser,\n              key: key,\n              message: message\n            }, this.props, {\n              enableMessageReaction: this.state.enableMessageReaction,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 37\n              }\n            })) : null;\n            break;\n\n          case CometChat.MESSAGE_TYPE.FILE:\n            component = message.data.attachments ? jsx(CometChatReceiverFileMessageBubble, _extends({\n              loggedInUser: this.loggedInUser,\n              key: key,\n              message: message\n            }, this.props, {\n              enableMessageReaction: this.state.enableMessageReaction,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 45\n              }\n            })) : null;\n            break;\n\n          case CometChat.MESSAGE_TYPE.AUDIO:\n            component = message.data.url ? jsx(CometChatReceiverAudioMessageBubble, _extends({\n              loggedInUser: this.loggedInUser,\n              key: key,\n              message: message\n            }, this.props, {\n              enableMessageReaction: this.state.enableMessageReaction,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 37\n              }\n            })) : null;\n            break;\n\n          case CometChat.MESSAGE_TYPE.VIDEO:\n            component = message.data.url ? jsx(CometChatReceiverVideoMessageBubble, _extends({\n              loggedInUser: this.loggedInUser,\n              key: key,\n              message: message\n            }, this.props, {\n              enableMessageReaction: this.state.enableMessageReaction,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 37\n              }\n            })) : null;\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return component;\n    };\n\n    this.getSenderCustomMessageComponent = (message, key) => {\n      let component;\n\n      if (message.hasOwnProperty(\"deletedAt\")) {\n        component = jsx(CometChatDeleteMessageBubble, _extends({\n          key: key,\n          message: message,\n          messageOf: \"sender\"\n        }, this.props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 16\n          }\n        }));\n      } else {\n        switch (message.type) {\n          case enums.CUSTOM_TYPE_POLL:\n            component = jsx(CometChatSenderPollMessageBubble, _extends({\n              loggedInUser: this.loggedInUser,\n              key: key,\n              message: message\n            }, this.props, {\n              enableMessageReaction: this.state.enableMessageReaction,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 18\n              }\n            }));\n            break;\n\n          case enums.CUSTOM_TYPE_STICKER:\n            component = jsx(CometChatSenderStickerBubble, _extends({\n              loggedInUser: this.loggedInUser,\n              key: key,\n              message: message\n            }, this.props, {\n              enableMessageReaction: this.state.enableMessageReaction,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 18\n              }\n            }));\n            break;\n\n          case enums.CUSTOM_TYPE_DOCUMENT:\n            component = jsx(CometChatSenderDocumentBubble, _extends({\n              loggedInUser: this.loggedInUser,\n              key: key,\n              message: message\n            }, this.props, {\n              enableMessageReaction: this.state.enableMessageReaction,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 18\n              }\n            }));\n            break;\n\n          case enums.CUSTOM_TYPE_WHITEBOARD:\n            component = jsx(CometChatSenderWhiteboardBubble, _extends({\n              loggedInUser: this.loggedInUser,\n              key: key,\n              message: message\n            }, this.props, {\n              enableMessageReaction: this.state.enableMessageReaction,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 18\n              }\n            }));\n            break;\n\n          case enums.CUSTOM_TYPE_MEETING:\n            component = jsx(CometChatSenderDirectCallBubble, _extends({\n              loggedInUser: this.loggedInUser,\n              key: key,\n              message: message\n            }, this.props, {\n              enableMessageReaction: this.state.enableMessageReaction,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 18\n              }\n            }));\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return component;\n    };\n\n    this.getReceiverCustomMessageComponent = (message, key) => {\n      let component;\n\n      if (message.hasOwnProperty(\"deletedAt\")) {\n        component = jsx(CometChatDeleteMessageBubble, _extends({\n          key: key,\n          message: message,\n          messageOf: \"receiver\"\n        }, this.props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 16\n          }\n        }));\n      } else {\n        switch (message.type) {\n          case enums.CUSTOM_TYPE_POLL:\n            component = jsx(CometChatReceiverPollMessageBubble, _extends({\n              loggedInUser: this.loggedInUser,\n              key: key,\n              message: message\n            }, this.props, {\n              enableMessageReaction: this.state.enableMessageReaction,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 18\n              }\n            }));\n            break;\n\n          case enums.CUSTOM_TYPE_STICKER:\n            component = jsx(CometChatReceiverStickerMessageBubble, _extends({\n              loggedInUser: this.loggedInUser,\n              key: key,\n              message: message\n            }, this.props, {\n              enableMessageReaction: this.state.enableMessageReaction,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 18\n              }\n            }));\n            break;\n\n          case enums.CUSTOM_TYPE_DOCUMENT:\n            component = jsx(CometChatReceiverDocumentBubble, _extends({\n              loggedInUser: this.loggedInUser,\n              key: key,\n              message: message\n            }, this.props, {\n              enableMessageReaction: this.state.enableMessageReaction,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 18\n              }\n            }));\n            break;\n\n          case enums.CUSTOM_TYPE_WHITEBOARD:\n            component = jsx(CometChatReceiverWhiteboardBubble, _extends({\n              loggedInUser: this.loggedInUser,\n              key: key,\n              message: message\n            }, this.props, {\n              enableMessageReaction: this.state.enableMessageReaction,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 18\n              }\n            }));\n            break;\n\n          case enums.CUSTOM_TYPE_MEETING:\n            component = jsx(CometChatReceiverDirectCallBubble, _extends({\n              loggedInUser: this.loggedInUser,\n              key: key,\n              message: message\n            }, this.props, {\n              enableMessageReaction: this.state.enableMessageReaction,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 18\n              }\n            }));\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return component;\n    };\n\n    this.getActionMessageComponent = (message, key) => {\n      return jsx(CometChatActionMessageBubble, _extends({\n        loggedInUser: this.loggedInUser,\n        key: key,\n        message: message\n      }, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 10\n        }\n      }));\n    };\n\n    this.getComponent = (message, key) => {\n      let component;\n\n      switch (message.category) {\n        case CometChat.CATEGORY_ACTION:\n        case CometChat.CATEGORY_CALL:\n          component = this.getActionMessageComponent(message, key);\n          break;\n\n        case CometChat.CATEGORY_MESSAGE:\n          if (this.loggedInUser.uid === message.sender.uid) {\n            component = this.getSenderMessageComponent(message, key);\n          } else {\n            component = this.getReceiverMessageComponent(message, key);\n          }\n\n          break;\n\n        case CometChat.CATEGORY_CUSTOM:\n          if (this.loggedInUser.uid === message.sender.uid) {\n            component = this.getSenderCustomMessageComponent(message, key);\n          } else {\n            component = this.getReceiverCustomMessageComponent(message, key);\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      return component;\n    };\n\n    this.state = {\n      onItemClick: null,\n      enableMessageReaction: false,\n      decoratorMessage: Translator.translate(\"LOADING\", this.props.lang)\n    };\n    this.messagesEnd = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    CometChat.getLoggedinUser().then(user => this.loggedInUser = user).catch(error => this.props.actionGenerated(enums.ACTIONS[\"ERROR\"], [], \"SOMETHING_WRONG\"));\n\n    if (Object.keys(this.context.item).length === 0 && this.context.type.trim().length === 0) {\n      return false;\n    }\n\n    this.item = this.context.type === CometChat.ACTION_TYPE.TYPE_USER || CometChat.ACTION_TYPE.TYPE_GROUP ? this.context.item : {};\n\n    if (this.props.parentMessageId) {\n      this.MessageListManager = new MessageListManager(this.context, this.context.item, this.context.type, this.props.parentMessageId);\n    } else {\n      this.MessageListManager = new MessageListManager(this.context, this.context.item, this.context.type);\n    }\n\n    this.MessageListManager.initializeMessageRequest().then(() => {\n      this.messageHandler(this.context.item);\n      this.MessageListManager.attachListeners(this.messageUpdated);\n    });\n    this.enableMessageReaction();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const ifChatWindowChanged = () => {\n      let output = false;\n\n      if (this.context.type === CometChat.ACTION_TYPE.TYPE_USER && this.context.item.uid !== this.item.uid) {\n        output = true;\n      } else if (this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.context.item.guid !== this.item.guid) {\n        output = true;\n      } else if (prevProps.parentMessageId !== this.props.parentMessageId) {\n        output = true;\n      }\n\n      return output;\n    };\n\n    if (ifChatWindowChanged() === true) {\n      var _this$MessageListMana;\n\n      this.messageCount = 0;\n      this.setState({\n        decoratorMessage: Translator.translate(\"LOADING\", this.props.lang)\n      });\n      (_this$MessageListMana = this.MessageListManager) === null || _this$MessageListMana === void 0 ? void 0 : _this$MessageListMana.removeListeners();\n\n      if (this.props.parentMessageId) {\n        this.MessageListManager = new MessageListManager(this.context, this.context.item, this.context.type, this.props.parentMessageId);\n      } else {\n        this.MessageListManager = new MessageListManager(this.context, this.context.item, this.context.type);\n      }\n\n      this.MessageListManager.initializeMessageRequest().then(() => {\n        this.messageHandler(this.context.item);\n        this.MessageListManager.attachListeners(this.messageUpdated);\n      });\n    }\n\n    const previousMessageStr = JSON.stringify(prevProps.messages);\n    const currentMessageStr = JSON.stringify(this.props.messages);\n\n    if (previousMessageStr !== currentMessageStr) {\n      if (this.props.scrollToBottom) {\n        this.scrollToBottom();\n      } else {\n        this.scrollToBottom(this.lastScrollTop);\n      }\n    }\n\n    this.item = this.context.type === CometChat.ACTION_TYPE.TYPE_USER || CometChat.ACTION_TYPE.TYPE_GROUP ? this.context.item : {};\n\n    if (this.context.leftGroupId.trim().length) {\n      this.item = {};\n    }\n\n    this.enableMessageReaction();\n  }\n\n  componentWillUnmount() {\n    this.MessageListManager.removeListeners();\n    this.MessageListManager = null;\n  }\n\n  render() {\n    let messageContainer = null;\n\n    if (this.state.decoratorMessage.length !== 0 && this.props.messages.length === 0) {\n      messageContainer = jsx(\"div\", {\n        css: decoratorMessageStyle(),\n        className: \"messages__decorator-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 5\n        }\n      }, jsx(\"p\", {\n        css: decoratorMessageTxtStyle(this.context),\n        className: \"decorator-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 6\n        }\n      }, this.state.decoratorMessage));\n    }\n\n    let cDate = null;\n    const messages = this.props.messages.map((message, key) => {\n      let dateSeparator = null;\n      const dateField = message._composedAt || message.sentAt;\n      const messageDate = message.sentAt * 1000;\n      const messageSentDate = dateFormat(messageDate, \"dd/mm/yyyy\");\n\n      if (cDate !== messageSentDate) {\n        dateSeparator = jsx(\"div\", {\n          css: messageDateContainerStyle(),\n          className: \"message__date\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 6\n          }\n        }, jsx(\"span\", {\n          css: messageDateStyle(this.context),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 7\n          }\n        }, getMessageDate(dateField, this.props.lang)));\n      }\n\n      cDate = messageSentDate;\n      return jsx(React.Fragment, {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 5\n        }\n      }, dateSeparator, this.getComponent(message, key));\n    });\n    return jsx(\"div\", {\n      className: \"chat__list\",\n      css: chatListStyle(this.context),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 4\n      }\n    }, messageContainer, jsx(\"div\", {\n      className: \"list__wrapper\",\n      css: listWrapperStyle(),\n      ref: el => {\n        this.messagesEnd = el;\n      },\n      onScroll: this.handleScroll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 5\n      }\n    }, messages));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatMessageList.contextType = CometChatContext;\nCometChatMessageList.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme\n};\nCometChatMessageList.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object\n};\nexport { CometChatMessageList };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatMessageList/index.js"],"names":["React","dateFormat","jsx","PropTypes","CometChat","MessageListManager","CometChatSenderTextMessageBubble","CometChatReceiverTextMessageBubble","CometChatSenderImageMessageBubble","CometChatReceiverImageMessageBubble","CometChatSenderFileMessageBubble","CometChatReceiverFileMessageBubble","CometChatSenderAudioMessageBubble","CometChatReceiverAudioMessageBubble","CometChatSenderVideoMessageBubble","CometChatReceiverVideoMessageBubble","CometChatSenderDirectCallBubble","CometChatReceiverDirectCallBubble","CometChatDeleteMessageBubble","CometChatActionMessageBubble","CometChatSenderPollMessageBubble","CometChatReceiverPollMessageBubble","CometChatSenderStickerBubble","CometChatReceiverStickerMessageBubble","CometChatSenderDocumentBubble","CometChatReceiverDocumentBubble","CometChatSenderWhiteboardBubble","CometChatReceiverWhiteboardBubble","CometChatContext","enums","getMessageDate","theme","Translator","chatListStyle","listWrapperStyle","messageDateContainerStyle","messageDateStyle","decoratorMessageStyle","decoratorMessageTxtStyle","CometChatMessageList","PureComponent","constructor","props","loggedInUser","lastScrollTop","times","item","enableMessageReaction","context","FeatureRestriction","isReactionsEnabled","then","response","state","setState","catch","error","scrollToBottom","scrollHeight","messagesEnd","scrollTop","messageHandler","actionGenerated","ACTIONS","fetchMessages","messageList","length","decoratorMessage","translate","lang","messageCount","forEach","message","getSender","getUid","hasOwnProperty","getReceiverType","RECEIVER_TYPE","USER","markAsRead","getId","toString","GROUP","getReceiverId","uid","guid","messages","code","promise","Promise","resolve","reject","fetchPreviousMessages","messageUpdated","key","group","options","MESSAGE_DELETED","onMessageDeleted","MESSAGE_EDITED","onMessageEdited","MESSAGE_DELIVERED","MESSAGE_READ","onMessageReadAndDelivered","TEXT_MESSAGE_RECEIVED","MEDIA_MESSAGE_RECEIVED","onMessageReceived","CUSTOM_MESSAGE_RECEIVED","onCustomMessageReceived","GROUP_MEMBER_SCOPE_CHANGED","GROUP_MEMBER_JOINED","GROUP_MEMBER_LEFT","GROUP_MEMBER_ADDED","GROUP_MEMBER_KICKED","GROUP_MEMBER_BANNED","GROUP_MEMBER_UNBANNED","onGroupUpdated","INCOMING_CALL_RECEIVED","INCOMING_CALL_CANCELLED","OUTGOING_CALL_ACCEPTED","OUTGOING_CALL_REJECTED","onCallUpdated","type","updateEditedMessage","messageKey","findIndex","m","id","messageObj","newMessageObj","Object","assign","splice","getReceiver","getReceiptType","messageId","deliveredAt","getDeliveredAt","readAt","getReadAt","reInitializeMessageBuilder","removeListeners","parentMessageId","initializeMessageRequest","attachListeners","markMessageAsRead","ACTION_TYPE","TYPE_USER","TYPE_GROUP","messageReceivedHandler","clientHeight","CONSTANTS","CUSTOM_TYPE_POLL","CUSTOM_TYPE_DOCUMENT","CUSTOM_TYPE_WHITEBOARD","customMessageReceivedHandler","handleScroll","e","currentTarget","top","Math","round","getSenderMessageComponent","component","MESSAGE_TYPE","TEXT","IMAGE","FILE","VIDEO","AUDIO","getReceiverMessageComponent","text","data","url","attachments","getSenderCustomMessageComponent","CUSTOM_TYPE_STICKER","CUSTOM_TYPE_MEETING","getReceiverCustomMessageComponent","getActionMessageComponent","getComponent","category","CATEGORY_ACTION","CATEGORY_CALL","CATEGORY_MESSAGE","sender","CATEGORY_CUSTOM","onItemClick","createRef","componentDidMount","getLoggedinUser","user","keys","trim","componentDidUpdate","prevProps","prevState","ifChatWindowChanged","output","previousMessageStr","JSON","stringify","currentMessageStr","leftGroupId","componentWillUnmount","render","messageContainer","cDate","map","dateSeparator","dateField","_composedAt","sentAt","messageDate","messageSentDate","el","contextType","defaultProps","getDefaultLanguage","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport dateFormat from \"dateformat\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { MessageListManager } from \"./controller\";\n\nimport { \n  CometChatSenderTextMessageBubble, CometChatReceiverTextMessageBubble,\n  CometChatSenderImageMessageBubble, CometChatReceiverImageMessageBubble,\n  CometChatSenderFileMessageBubble, CometChatReceiverFileMessageBubble,\n  CometChatSenderAudioMessageBubble, CometChatReceiverAudioMessageBubble,\n  CometChatSenderVideoMessageBubble, CometChatReceiverVideoMessageBubble,\n  CometChatSenderDirectCallBubble, CometChatReceiverDirectCallBubble,\n  CometChatDeleteMessageBubble, CometChatActionMessageBubble\n} from \"../\"\n\nimport {\n  CometChatSenderPollMessageBubble, CometChatReceiverPollMessageBubble,\n  CometChatSenderStickerBubble, CometChatReceiverStickerMessageBubble,\n  CometChatSenderDocumentBubble, CometChatReceiverDocumentBubble,\n  CometChatSenderWhiteboardBubble, CometChatReceiverWhiteboardBubble,\n} from \"../Extensions\"\n\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport { getMessageDate } from \"../../../util/common\";\n\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\n\nimport { \n\tchatListStyle,\n\tlistWrapperStyle,\n\tmessageDateContainerStyle,\n\tmessageDateStyle,\n\tdecoratorMessageStyle,\n\tdecoratorMessageTxtStyle\n} from \"./style\";\n\nclass CometChatMessageList extends React.PureComponent {\n\n\tloggedInUser = null;\n\tlastScrollTop = 0;\n\ttimes = 0;\n\titem = {};\n\n\tstatic contextType = CometChatContext;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tonItemClick: null,\n\t\t\tenableMessageReaction: false,\n\t\t\tdecoratorMessage: Translator.translate(\"LOADING\", this.props.lang),\n\t\t};\n\n\t\tthis.messagesEnd = React.createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\t\n\t\tCometChat.getLoggedinUser()\n\t\t\t.then(user => (this.loggedInUser = user))\n\t\t\t.catch(error => this.props.actionGenerated(enums.ACTIONS[\"ERROR\"], [], \"SOMETHING_WRONG\"));\n\n\t\tif (Object.keys(this.context.item).length === 0 && this.context.type.trim().length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.item = this.context.type === CometChat.ACTION_TYPE.TYPE_USER || CometChat.ACTION_TYPE.TYPE_GROUP ? this.context.item : {};\n\n\t\tif (this.props.parentMessageId) {\n\t\t\tthis.MessageListManager = new MessageListManager(this.context, this.context.item, this.context.type, this.props.parentMessageId);\n\t\t} else {\n\t\t\tthis.MessageListManager = new MessageListManager(this.context, this.context.item, this.context.type);\n\t\t}\n\n\t\tthis.MessageListManager.initializeMessageRequest().then(() => {\n\t\t\tthis.messageHandler(this.context.item);\n\t\t\tthis.MessageListManager.attachListeners(this.messageUpdated);\n\t\t});\n\n\t\tthis.enableMessageReaction();\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tconst ifChatWindowChanged = () => {\n\t\t\tlet output = false;\n\n\t\t\tif (this.context.type === CometChat.ACTION_TYPE.TYPE_USER && this.context.item.uid !== this.item.uid) {\n\t\t\t\toutput = true;\n\t\t\t} else if (this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.context.item.guid !== this.item.guid) {\n\t\t\t\toutput = true;\n\t\t\t} else if (prevProps.parentMessageId !== this.props.parentMessageId) {\n\t\t\t\toutput = true;\n\t\t\t}\n\t\t\treturn output;\n\t\t};\n\n\t\tif (ifChatWindowChanged() === true) {\n\n\t\t\tthis.messageCount = 0;\n\t\t\tthis.setState({ decoratorMessage: Translator.translate(\"LOADING\", this.props.lang) });\n\t\t\t\n\t\t\tthis.MessageListManager?.removeListeners();\n\n\t\t\tif (this.props.parentMessageId) {\n\t\t\t\tthis.MessageListManager = new MessageListManager(this.context, this.context.item, this.context.type, this.props.parentMessageId);\n\t\t\t} else {\n\t\t\t\tthis.MessageListManager = new MessageListManager(this.context, this.context.item, this.context.type);\n\t\t\t}\n\n\t\t\tthis.MessageListManager.initializeMessageRequest().then(() => {\n\t\t\t\tthis.messageHandler(this.context.item);\n\t\t\t\tthis.MessageListManager.attachListeners(this.messageUpdated);\n\t\t\t});\n\t\t}\n\n\t\tconst previousMessageStr = JSON.stringify(prevProps.messages);\n\t\tconst currentMessageStr = JSON.stringify(this.props.messages);\n\n\t\tif (previousMessageStr !== currentMessageStr) {\n\t\t\tif (this.props.scrollToBottom) {\n\t\t\t\tthis.scrollToBottom();\n\t\t\t} else {\n\t\t\t\tthis.scrollToBottom(this.lastScrollTop);\n\t\t\t}\n\t\t}\n\n\t\tthis.item = this.context.type === CometChat.ACTION_TYPE.TYPE_USER || CometChat.ACTION_TYPE.TYPE_GROUP ? this.context.item : {};\n\t\tif (this.context.leftGroupId.trim().length) {\n\t\t\tthis.item = {};\n\t\t}\n\n\t\tthis.enableMessageReaction();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.MessageListManager.removeListeners();\n\t\tthis.MessageListManager = null;\n\t}\n\n\tenableMessageReaction = () => {\n\t\t/**\n\t\t * If reacting to messages feature is disabled\n\t\t */\n\t\tthis.context.FeatureRestriction.isReactionsEnabled()\n\t\t\t.then(response => {\n\t\t\t\tif (response !== this.state.enableMessageReaction) {\n\t\t\t\t\tthis.setState({ enableMessageReaction: response });\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tif (this.state.enableMessageReaction !== false) {\n\t\t\t\t\tthis.setState({ enableMessageReaction: false });\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tscrollToBottom = (scrollHeight = 0) => {\n\t\tif (this.messagesEnd) {\n\t\t\tthis.messagesEnd.scrollTop = this.messagesEnd.scrollHeight - scrollHeight;\n\t\t}\n\t};\n\n\tmessageHandler = (item, actionGenerated = enums.ACTIONS[\"MESSAGES_FETCHED\"]) => {\n\t\t\n\t\tthis.fetchMessages()\n\t\t\t.then(messageList => {\n\n\t\t\t\tif (messageList.length === 0) {\n\t\t\t\t\tthis.setState({ decoratorMessage: Translator.translate(\"NO_MESSAGES_FOUND\", this.props.lang) });\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({ decoratorMessage: \"\" });\n\t\t\t\t}\n\n\t\t\t\t//updating messagecount variable\n\t\t\t\tthis.messageCount = messageList.length;\n\n\t\t\t\tmessageList.forEach(message => {\n\t\t\t\t\t//if the sender of the message is not the loggedin user, mark the message as read.\n\t\t\t\t\tif (message.getSender().getUid() !== this.loggedInUser.getUid() && message.hasOwnProperty(\"readAt\") === false) {\n\t\t\t\t\t\tif (message.getReceiverType() === CometChat.RECEIVER_TYPE.USER) {\n\t\t\t\t\t\t\tCometChat.markAsRead(message.getId().toString(), message.getSender().getUid(), message.getReceiverType());\n\t\t\t\t\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"MESSAGE_READ\"], message);\n\t\t\t\t\t\t} else if (message.getReceiverType() === CometChat.RECEIVER_TYPE.GROUP) {\n\t\t\t\t\t\t\tCometChat.markAsRead(message.getId().toString(), message.getReceiverId(), message.getReceiverType());\n\t\t\t\t\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"MESSAGE_READ\"], message);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tthis.lastScrollTop = this.messagesEnd.scrollHeight;\n\n\t\t\t\t//abort(don't return messagelist), when the chat window changes\n\t\t\t\tif ((item.hasOwnProperty(\"uid\") && this.context.item.hasOwnProperty(\"uid\") && item.uid === this.context.item.uid) || (item.hasOwnProperty(\"guid\") && this.context.item.hasOwnProperty(\"guid\") && item.guid === this.context.item.guid)) {\n\t\t\t\t\tthis.props.actionGenerated(actionGenerated, messageList);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\n\t\t\t\tif(this.props.messages.length === 0) {\n\t\t\t\t\tthis.setState({ decoratorMessage: Translator.translate(\"SOMETHING_WRONG\", this.props.lang) });\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (error && error.hasOwnProperty(\"code\") && error.code === \"ERR_GUID_NOT_FOUND\") {\n\t\t\t\t\t//this.context.setDeletedGroupId(this.context.item.guid);\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tfetchMessages = () => {\n\t\tconst promise = new Promise((resolve, reject) => {\n\t\t\tthis.MessageListManager.fetchPreviousMessages()\n\t\t\t\t.then(messageList => {\n\t\t\t\t\tresolve(messageList);\n\t\t\t\t})\n\t\t\t\t.catch(error => reject(error));\n\t\t});\n\n\t\treturn promise;\n\t};\n\n\t//callback for listener functions\n\tmessageUpdated = (key, message, group, options) => {\n\t\tswitch (key) {\n\t\t\tcase enums.MESSAGE_DELETED:\n\t\t\t\tthis.onMessageDeleted(message);\n\t\t\t\tbreak;\n\t\t\tcase enums.MESSAGE_EDITED:\n\t\t\t\tthis.onMessageEdited(message);\n\t\t\t\tbreak;\n\t\t\tcase enums.MESSAGE_DELIVERED:\n\t\t\tcase enums.MESSAGE_READ:\n\t\t\t\tthis.onMessageReadAndDelivered(message);\n\t\t\t\tbreak;\n\t\t\tcase enums.TEXT_MESSAGE_RECEIVED:\n\t\t\tcase enums.MEDIA_MESSAGE_RECEIVED:\n\t\t\t\tthis.onMessageReceived(message);\n\t\t\t\tbreak;\n\t\t\tcase enums.CUSTOM_MESSAGE_RECEIVED:\n\t\t\t\tthis.onCustomMessageReceived(message);\n\t\t\t\tbreak;\n\t\t\tcase enums.GROUP_MEMBER_SCOPE_CHANGED:\n\t\t\tcase enums.GROUP_MEMBER_JOINED:\n\t\t\tcase enums.GROUP_MEMBER_LEFT:\n\t\t\tcase enums.GROUP_MEMBER_ADDED:\n\t\t\tcase enums.GROUP_MEMBER_KICKED:\n\t\t\tcase enums.GROUP_MEMBER_BANNED:\n\t\t\tcase enums.GROUP_MEMBER_UNBANNED:\n\t\t\t\tthis.onGroupUpdated(key, message, group, options);\n\t\t\t\tbreak;\n\t\t\tcase enums.INCOMING_CALL_RECEIVED:\n\t\t\tcase enums.INCOMING_CALL_CANCELLED:\n\t\t\tcase enums.OUTGOING_CALL_ACCEPTED:\n\t\t\tcase enums.OUTGOING_CALL_REJECTED:\n\t\t\t\tthis.onCallUpdated(key, message);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tonMessageDeleted = message => {\n\t\tif (this.context.type === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverType() === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverId() === this.context.item.guid) {\n\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"ON_MESSAGE_DELETED\"], [message]);\n\t\t} else if (this.context.type === CometChat.RECEIVER_TYPE.USER && message.getReceiverType() === CometChat.RECEIVER_TYPE.USER && message.getSender().uid === this.context.item.uid) {\n\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"ON_MESSAGE_DELETED\"], [message]);\n\t\t}\n\t};\n\n\tonMessageEdited = message => {\n\t\tconst messageList = [...this.props.messages];\n\t\tconst updateEditedMessage = message => {\n\t\t\tlet messageKey = messageList.findIndex(m => m.id === message.id);\n\n\t\t\tif (messageKey > -1) {\n\t\t\t\tconst messageObj = messageList[messageKey];\n\t\t\t\tconst newMessageObj = Object.assign({}, messageObj, message);\n\n\t\t\t\tmessageList.splice(messageKey, 1, newMessageObj);\n\t\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"ON_MESSAGE_EDITED\"], messageList, newMessageObj);\n\t\t\t}\n\t\t};\n\n\t\tif (this.context.type === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverType() === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverId() === this.context.item.guid) {\n\t\t\tupdateEditedMessage(message);\n\t\t} else if (this.context.type === CometChat.RECEIVER_TYPE.USER && message.getReceiverType() === CometChat.RECEIVER_TYPE.USER && this.loggedInUser.uid === message.getReceiverId() && message.getSender().uid === this.context.item.uid) {\n\t\t\tupdateEditedMessage(message);\n\t\t} else if (this.context.type === CometChat.RECEIVER_TYPE.USER && message.getReceiverType() === CometChat.RECEIVER_TYPE.USER && this.loggedInUser.uid === message.getSender().uid && message.getReceiverId() === this.context.item.uid) {\n\t\t\tupdateEditedMessage(message);\n\t\t}\n\t};\n\n\tonMessageReadAndDelivered = message => {\n\t\t//read receipts\n\t\tif (message.getReceiverType() === CometChat.RECEIVER_TYPE.USER && message.getSender().getUid() === this.context.item.uid && message.getReceiver() === this.loggedInUser.uid) {\n\t\t\tlet messageList = [...this.props.messages];\n\n\t\t\tif (message.getReceiptType() === \"delivery\") {\n\t\t\t\t//search for message\n\n\t\t\t\tlet messageKey = messageList.findIndex(m => m.id === message.messageId);\n\n\t\t\t\tif (messageKey > -1) {\n\t\t\t\t\tlet messageObj = messageList[messageKey];\n\t\t\t\t\tlet newMessageObj = Object.assign({}, messageObj, { deliveredAt: message.getDeliveredAt() });\n\n\t\t\t\t\tmessageList.splice(messageKey, 1, newMessageObj);\n\t\t\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"ON_MESSAGE_READ_DELIVERED\"], messageList);\n\t\t\t\t}\n\t\t\t} else if (message.getReceiptType() === \"read\") {\n\t\t\t\t//search for message\n\t\t\t\tlet messageKey = messageList.findIndex(m => m.id === message.messageId);\n\n\t\t\t\tif (messageKey > -1) {\n\t\t\t\t\tlet messageObj = { ...messageList[messageKey] };\n\t\t\t\t\tlet newMessageObj = Object.assign({}, messageObj, { readAt: message.getReadAt() });\n\n\t\t\t\t\tmessageList.splice(messageKey, 1, newMessageObj);\n\t\t\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"ON_MESSAGE_READ_DELIVERED\"], messageList);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (message.getReceiverType() === CometChat.RECEIVER_TYPE.GROUP && message.getReceiver() === this.context.item.guid) {\n\t\t\t//not implemented\n\t\t}\n\t};\n\n\treInitializeMessageBuilder = () => {\n\t\tif (this.props.hasOwnProperty(\"parentMessageId\") === false) {\n\t\t\tthis.messageCount = 0;\n\t\t}\n\n\t\tthis.props.actionGenerated(enums.ACTIONS[\"REFRESHING_MESSAGES\"], []);\n\n\t\tthis.setState({ decoratorMessage: Translator.translate(\"LOADING\", this.props.lang) });\n\t\tthis.MessageListManager.removeListeners();\n\n\t\tif (this.props.parentMessageId) {\n\t\t\tthis.MessageListManager = new MessageListManager(this.context, this.context.item, this.context.type, this.props.parentMessageId);\n\t\t} else {\n\t\t\tthis.MessageListManager = new MessageListManager(this.context, this.context.item, this.context.type);\n\t\t}\n\n\t\tthis.MessageListManager.initializeMessageRequest().then(() => {\n\t\t\tthis.messageHandler(this.context.item, enums.ACTIONS[\"MESSAGES_REFRESHED\"]);\n\t\t\tthis.MessageListManager.attachListeners(this.messageUpdated);\n\t\t});\n\t};\n\n\tmarkMessageAsRead = (message, type) => {\n\t\tif (message.hasOwnProperty(\"readAt\") === false) {\n\t\t\tif (type === CometChat.ACTION_TYPE.TYPE_USER) {\n\t\t\t\tCometChat.markAsRead(message.getId().toString(), message.getSender().uid, message.getReceiverType());\n\t\t\t} else if (type === CometChat.ACTION_TYPE.TYPE_GROUP) {\n\t\t\t\tCometChat.markAsRead(message.getId().toString(), message.getReceiverId(), message.getReceiverType());\n\t\t\t}\n\t\t}\n\t};\n\n\tonMessageReceived = message => {\n\t\t/**\n\t\t * message receiver is chat window group\n\t\t */\n\t\tif (this.context.type === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverType() === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverId() === this.context.item.guid) {\n\t\t\tthis.messageReceivedHandler(message, CometChat.RECEIVER_TYPE.GROUP);\n\t\t} else if (this.context.type === CometChat.RECEIVER_TYPE.USER && message.getReceiverType() === CometChat.RECEIVER_TYPE.USER) {\n\t\t\t/**\n\t\t\t * If the message sender is chat window user and message receiver is logged-in user\n\t\t\t * OR\n\t\t\t * If the message sender is logged-in user and message receiver is chat window user\n\t\t\t */\n\t\t\tif ((message.getSender().uid === this.context.item.uid && message.getReceiverId() === this.loggedInUser?.uid) || (message.getSender().uid === this.loggedInUser?.uid && message.getReceiverId() === this.context.item.uid)) {\n\t\t\t\tthis.messageReceivedHandler(message, CometChat.RECEIVER_TYPE.USER);\n\t\t\t}\n\t\t}\n\t};\n\n\tmessageReceivedHandler = (message, type) => {\n\t\t//handling dom lag - increment count only for main message list\n\t\tif (message.hasOwnProperty(\"parentMessageId\") === false && this.props.hasOwnProperty(\"parentMessageId\") === false) {\n\t\t\t++this.messageCount;\n\n\t\t\t//if the user has not scrolled in chat window(scroll is at the bottom of the chat window)\n\t\t\tif (this.messagesEnd.scrollHeight - this.messagesEnd.scrollTop - this.messagesEnd.clientHeight < 20) {\n\t\t\t\tif (this.messageCount > enums.CONSTANTS[\"MAX_MESSAGE_COUNT\"]) {\n\t\t\t\t\tthis.reInitializeMessageBuilder();\n\t\t\t\t} else {\n\t\t\t\t\tthis.markMessageAsRead(message, type);\n\t\t\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"MESSAGE_RECEIVED\"], [message]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//if the user has scrolled up in chat window\n\t\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"NEW_MESSAGES\"], [message]);\n\t\t\t}\n\t\t} else if (message.hasOwnProperty(\"parentMessageId\") === true && this.props.hasOwnProperty(\"parentMessageId\") === true) {\n\t\t\tif (message.parentMessageId === this.props.parentMessageId) {\n\t\t\t\tthis.markMessageAsRead(message, type);\n\t\t\t}\n\n\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"MESSAGE_RECEIVED\"], [message]);\n\t\t} else {\n\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"MESSAGE_RECEIVED\"], [message]);\n\t\t}\n\t};\n\n\t//polls, stickers, collaborative document, collaborative whiteboard\n\tonCustomMessageReceived = message => {\n\t\t//new messages\n\t\tif (\n\t\t\tthis.context.type === CometChat.RECEIVER_TYPE.GROUP &&\n\t\t\tmessage.getReceiverType() === CometChat.RECEIVER_TYPE.GROUP &&\n\t\t\tthis.loggedInUser.uid === message.getSender().uid &&\n\t\t\tmessage.getReceiverId() === this.context.item.guid &&\n\t\t\t(message.type === enums.CUSTOM_TYPE_POLL || message.type === enums.CUSTOM_TYPE_DOCUMENT || message.type === enums.CUSTOM_TYPE_WHITEBOARD)\n\t\t) {\n\t\t\t//showing polls, collaborative document and whiteboard for sender (custom message received listener for sender)\n\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"CUSTOM_MESSAGE_RECEIVED\"], [message]);\n\t\t} else if (this.context.type === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverType() === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverId() === this.context.item.guid) {\n\t\t\tthis.customMessageReceivedHandler(message, CometChat.RECEIVER_TYPE.GROUP);\n\t\t} else if (this.context.type === CometChat.RECEIVER_TYPE.USER && message.getReceiverType() === CometChat.RECEIVER_TYPE.USER && message.getSender().uid === this.context.item.uid) {\n\t\t\tthis.customMessageReceivedHandler(message, CometChat.RECEIVER_TYPE.USER);\n\t\t} else if (\n\t\t\tthis.context.type === CometChat.RECEIVER_TYPE.USER &&\n\t\t\tmessage.getReceiverType() === CometChat.RECEIVER_TYPE.USER &&\n\t\t\tthis.loggedInUser.uid === message.getSender().uid &&\n\t\t\tmessage.getReceiverId() === this.context.item.uid &&\n\t\t\t(message.type === enums.CUSTOM_TYPE_POLL || message.type === enums.CUSTOM_TYPE_DOCUMENT || message.type === enums.CUSTOM_TYPE_WHITEBOARD)\n\t\t) {\n\t\t\t//showing polls, collaborative document and whiteboard for sender (custom message received listener for sender)\n\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"CUSTOM_MESSAGE_RECEIVED\"], [message]);\n\t\t}\n\t};\n\n\tcustomMessageReceivedHandler = (message, type) => {\n\t\t//handling dom lag - increment count only for main message list\n\t\tif (message.hasOwnProperty(\"parentMessageId\") === false && this.props.hasOwnProperty(\"parentMessageId\") === false) {\n\t\t\t++this.messageCount;\n\n\t\t\t//if the user has not scrolled in chat window(scroll is at the bottom of the chat window)\n\t\t\tif (this.messagesEnd.scrollHeight - this.messagesEnd.scrollTop === this.messagesEnd.clientHeight) {\n\t\t\t\tif (this.messageCount > enums.CONSTANTS[\"MAX_MESSAGE_COUNT\"]) {\n\t\t\t\t\tthis.reInitializeMessageBuilder();\n\t\t\t\t} else {\n\t\t\t\t\tthis.markMessageAsRead(message, type);\n\t\t\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"CUSTOM_MESSAGE_RECEIVED\"], [message]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//if the user has scrolled in chat window\n\n\t\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"NEW_MESSAGES\"], [message]);\n\t\t\t}\n\t\t} else if (message.hasOwnProperty(\"parentMessageId\") === true && this.props.hasOwnProperty(\"parentMessageId\") === true) {\n\t\t\tif (message.parentMessageId === this.props.parentMessageId) {\n\t\t\t\tthis.markMessageAsRead(message, type);\n\t\t\t}\n\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"CUSTOM_MESSAGE_RECEIVED\"], [message]);\n\t\t} else {\n\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"CUSTOM_MESSAGE_RECEIVED\"], [message]);\n\t\t}\n\t};\n\n\tonCallUpdated = (key, message) => {\n\t\tif (this.context.type === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverType() === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverId() === this.context.item.guid) {\n\t\t\tthis.props.actionGenerated(key, message);\n\t\t} else if (this.context.type === CometChat.RECEIVER_TYPE.USER && message.getReceiverType() === CometChat.RECEIVER_TYPE.USER && message.getSender().uid === this.context.item.uid) {\n\t\t\tthis.props.actionGenerated(key, message);\n\t\t}\n\t};\n\n\tonGroupUpdated = (key, message, group, options) => {\n\t\tif (this.context.type === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverType() === CometChat.RECEIVER_TYPE.GROUP && message.getReceiverId() === this.context.item.guid) {\n\t\t\tthis.props.actionGenerated(key, message, null, group, options);\n\t\t}\n\t};\n\n\thandleScroll = e => {\n\t\tconst scrollTop = e.currentTarget.scrollTop;\n\t\tconst scrollHeight = e.currentTarget.scrollHeight;\n\t\tconst clientHeight = e.currentTarget.clientHeight;\n\n\t\tthis.lastScrollTop = scrollHeight - scrollTop;\n\n\t\tif (this.lastScrollTop === clientHeight) {\n\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"CLEAR_UNREAD_MESSAGES\"]);\n\t\t}\n\n\t\tconst top = Math.round(scrollTop) === 0;\n\t\tif (top && this.props.messages.length) {\n\t\t\tthis.messageHandler(this.context.item);\n\t\t}\n\t};\n\n\tgetSenderMessageComponent = (message, key) => {\n\t\tlet component;\n\n\t\tif (message.hasOwnProperty(\"deletedAt\")) {\n\t\t\tcomponent = <CometChatDeleteMessageBubble key={key} message={message} messageOf=\"sender\" {...this.props} />;\n\t\t} else {\n\t\t\tswitch (message.type) {\n\t\t\t\tcase CometChat.MESSAGE_TYPE.TEXT:\n\t\t\t\t\tcomponent = <CometChatSenderTextMessageBubble loggedInUser={this.loggedInUser} key={key} message={message} {...this.props} enableMessageReaction={this.state.enableMessageReaction} />;\n\t\t\t\t\tbreak;\n\t\t\t\tcase CometChat.MESSAGE_TYPE.IMAGE:\n\t\t\t\t\tcomponent = <CometChatSenderImageMessageBubble loggedInUser={this.loggedInUser} key={key} message={message} {...this.props} enableMessageReaction={this.state.enableMessageReaction} />;\n\t\t\t\t\tbreak;\n\t\t\t\tcase CometChat.MESSAGE_TYPE.FILE:\n\t\t\t\t\tcomponent = <CometChatSenderFileMessageBubble loggedInUser={this.loggedInUser} key={key} message={message} {...this.props} enableMessageReaction={this.state.enableMessageReaction} />;\n\t\t\t\t\tbreak;\n\t\t\t\tcase CometChat.MESSAGE_TYPE.VIDEO:\n\t\t\t\t\tcomponent = <CometChatSenderVideoMessageBubble loggedInUser={this.loggedInUser} key={key} message={message} {...this.props} enableMessageReaction={this.state.enableMessageReaction} />;\n\t\t\t\t\tbreak;\n\t\t\t\tcase CometChat.MESSAGE_TYPE.AUDIO:\n\t\t\t\t\tcomponent = <CometChatSenderAudioMessageBubble loggedInUser={this.loggedInUser} key={key} message={message} {...this.props} enableMessageReaction={this.state.enableMessageReaction} />;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn component;\n\t};\n\n\tgetReceiverMessageComponent = (message, key) => {\n\t\tlet component;\n\n\t\tif (message.hasOwnProperty(\"deletedAt\")) {\n\t\t\tcomponent = <CometChatDeleteMessageBubble key={key} message={message} messageOf=\"receiver\" />;\n\t\t} else {\n\t\t\tswitch (message.type) {\n\t\t\t\tcase \"message\":\n\t\t\t\tcase CometChat.MESSAGE_TYPE.TEXT:\n\t\t\t\t\tcomponent = message.text ? <CometChatReceiverTextMessageBubble loggedInUser={this.loggedInUser} key={key} message={message} {...this.props} enableMessageReaction={this.state.enableMessageReaction} /> : null;\n\t\t\t\t\tbreak;\n\t\t\t\tcase CometChat.MESSAGE_TYPE.IMAGE:\n\t\t\t\t\tcomponent = message.data.url ? <CometChatReceiverImageMessageBubble loggedInUser={this.loggedInUser} key={key} message={message} {...this.props} enableMessageReaction={this.state.enableMessageReaction} /> : null;\n\t\t\t\t\tbreak;\n\t\t\t\tcase CometChat.MESSAGE_TYPE.FILE:\n\t\t\t\t\tcomponent = message.data.attachments ? <CometChatReceiverFileMessageBubble loggedInUser={this.loggedInUser} key={key} message={message} {...this.props} enableMessageReaction={this.state.enableMessageReaction} /> : null;\n\t\t\t\t\tbreak;\n\t\t\t\tcase CometChat.MESSAGE_TYPE.AUDIO:\n\t\t\t\t\tcomponent = message.data.url ? <CometChatReceiverAudioMessageBubble loggedInUser={this.loggedInUser} key={key} message={message} {...this.props} enableMessageReaction={this.state.enableMessageReaction} /> : null;\n\t\t\t\t\tbreak;\n\t\t\t\tcase CometChat.MESSAGE_TYPE.VIDEO:\n\t\t\t\t\tcomponent = message.data.url ? <CometChatReceiverVideoMessageBubble loggedInUser={this.loggedInUser} key={key} message={message} {...this.props} enableMessageReaction={this.state.enableMessageReaction} /> : null;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn component;\n\t};\n\n\tgetSenderCustomMessageComponent = (message, key) => {\n\t\tlet component;\n\t\tif (message.hasOwnProperty(\"deletedAt\")) {\n\t\t\tcomponent = <CometChatDeleteMessageBubble key={key} message={message} messageOf=\"sender\" {...this.props} />;\n\t\t} else {\n\t\t\tswitch (message.type) {\n\t\t\t\tcase enums.CUSTOM_TYPE_POLL:\n\t\t\t\t\tcomponent = <CometChatSenderPollMessageBubble loggedInUser={this.loggedInUser} key={key} message={message} {...this.props} enableMessageReaction={this.state.enableMessageReaction} />;\n\t\t\t\t\tbreak;\n\t\t\t\tcase enums.CUSTOM_TYPE_STICKER:\n\t\t\t\t\tcomponent = <CometChatSenderStickerBubble loggedInUser={this.loggedInUser} key={key} message={message} {...this.props} enableMessageReaction={this.state.enableMessageReaction} />;\n\t\t\t\t\tbreak;\n\t\t\t\tcase enums.CUSTOM_TYPE_DOCUMENT:\n\t\t\t\t\tcomponent = <CometChatSenderDocumentBubble loggedInUser={this.loggedInUser} key={key} message={message} {...this.props} enableMessageReaction={this.state.enableMessageReaction} />;\n\t\t\t\t\tbreak;\n\t\t\t\tcase enums.CUSTOM_TYPE_WHITEBOARD:\n\t\t\t\t\tcomponent = <CometChatSenderWhiteboardBubble loggedInUser={this.loggedInUser} key={key} message={message} {...this.props} enableMessageReaction={this.state.enableMessageReaction} />;\n\t\t\t\t\tbreak;\n\t\t\t\tcase enums.CUSTOM_TYPE_MEETING:\n\t\t\t\t\tcomponent = <CometChatSenderDirectCallBubble loggedInUser={this.loggedInUser} key={key} message={message} {...this.props} enableMessageReaction={this.state.enableMessageReaction} />;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn component;\n\t};\n\n\tgetReceiverCustomMessageComponent = (message, key) => {\n\t\tlet component;\n\t\tif (message.hasOwnProperty(\"deletedAt\")) {\n\t\t\tcomponent = <CometChatDeleteMessageBubble key={key} message={message} messageOf=\"receiver\" {...this.props} />;\n\t\t} else {\n\t\t\tswitch (message.type) {\n\t\t\t\tcase enums.CUSTOM_TYPE_POLL:\n\t\t\t\t\tcomponent = <CometChatReceiverPollMessageBubble loggedInUser={this.loggedInUser} key={key} message={message} {...this.props} enableMessageReaction={this.state.enableMessageReaction} />;\n\t\t\t\t\tbreak;\n\t\t\t\tcase enums.CUSTOM_TYPE_STICKER:\n\t\t\t\t\tcomponent = <CometChatReceiverStickerMessageBubble loggedInUser={this.loggedInUser} key={key} message={message} {...this.props} enableMessageReaction={this.state.enableMessageReaction} />;\n\t\t\t\t\tbreak;\n\t\t\t\tcase enums.CUSTOM_TYPE_DOCUMENT:\n\t\t\t\t\tcomponent = <CometChatReceiverDocumentBubble loggedInUser={this.loggedInUser} key={key} message={message} {...this.props} enableMessageReaction={this.state.enableMessageReaction} />;\n\t\t\t\t\tbreak;\n\t\t\t\tcase enums.CUSTOM_TYPE_WHITEBOARD:\n\t\t\t\t\tcomponent = <CometChatReceiverWhiteboardBubble loggedInUser={this.loggedInUser} key={key} message={message} {...this.props} enableMessageReaction={this.state.enableMessageReaction} />;\n\t\t\t\t\tbreak;\n\t\t\t\tcase enums.CUSTOM_TYPE_MEETING:\n\t\t\t\t\tcomponent = <CometChatReceiverDirectCallBubble loggedInUser={this.loggedInUser} key={key} message={message} {...this.props} enableMessageReaction={this.state.enableMessageReaction} />;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn component;\n\t};\n\n\tgetActionMessageComponent = (message, key) => {\n\t\treturn <CometChatActionMessageBubble loggedInUser={this.loggedInUser} key={key} message={message} {...this.props} />;\n\t};\n\n\tgetComponent = (message, key) => {\n\t\tlet component;\n\n\t\tswitch (message.category) {\n\t\t\tcase CometChat.CATEGORY_ACTION:\n\t\t\tcase CometChat.CATEGORY_CALL:\n\t\t\t\tcomponent = this.getActionMessageComponent(message, key);\n\t\t\t\tbreak;\n\t\t\tcase CometChat.CATEGORY_MESSAGE:\n\t\t\t\tif (this.loggedInUser.uid === message.sender.uid) {\n\t\t\t\t\tcomponent = this.getSenderMessageComponent(message, key);\n\t\t\t\t} else {\n\t\t\t\t\tcomponent = this.getReceiverMessageComponent(message, key);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase CometChat.CATEGORY_CUSTOM:\n\t\t\t\tif (this.loggedInUser.uid === message.sender.uid) {\n\t\t\t\t\tcomponent = this.getSenderCustomMessageComponent(message, key);\n\t\t\t\t} else {\n\t\t\t\t\tcomponent = this.getReceiverCustomMessageComponent(message, key);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn component;\n\t};\n\n\trender() {\n\t\tlet messageContainer = null;\n\t\tif (this.state.decoratorMessage.length !== 0 && this.props.messages.length === 0) {\n\t\t\tmessageContainer = (\n\t\t\t\t<div css={decoratorMessageStyle()} className=\"messages__decorator-message\">\n\t\t\t\t\t<p css={decoratorMessageTxtStyle(this.context)} className=\"decorator-message\">\n\t\t\t\t\t\t{this.state.decoratorMessage}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tlet cDate = null;\n\t\tconst messages = this.props.messages.map((message, key) => {\n\t\t\tlet dateSeparator = null;\n\n\t\t\tconst dateField = message._composedAt || message.sentAt;\n\n\t\t\tconst messageDate = message.sentAt * 1000;\n\t\t\tconst messageSentDate = dateFormat(messageDate, \"dd/mm/yyyy\");\n\n\t\t\tif (cDate !== messageSentDate) {\n\t\t\t\tdateSeparator = (\n\t\t\t\t\t<div css={messageDateContainerStyle()} className=\"message__date\">\n\t\t\t\t\t\t<span css={messageDateStyle(this.context)}>{getMessageDate(dateField, this.props.lang)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t\tcDate = messageSentDate;\n\n\t\t\treturn (\n\t\t\t\t<React.Fragment key={key}>\n\t\t\t\t\t{dateSeparator}\n\t\t\t\t\t{this.getComponent(message, key)}\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<div className=\"chat__list\" css={chatListStyle(this.context)}>\n\t\t\t\t{messageContainer}\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"list__wrapper\"\n\t\t\t\t\tcss={listWrapperStyle()}\n\t\t\t\t\tref={el => {\n\t\t\t\t\t\tthis.messagesEnd = el;\n\t\t\t\t\t}}\n\t\t\t\t\tonScroll={this.handleScroll}>\n\t\t\t\t\t{messages}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// Specifies the default values for props:\nCometChatMessageList.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme\n};\n\nCometChatMessageList.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object\n}\n\nexport { CometChatMessageList };\n"]},"metadata":{},"sourceType":"module"}