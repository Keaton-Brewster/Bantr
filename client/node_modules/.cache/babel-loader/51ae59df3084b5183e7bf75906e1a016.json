{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Pages/Home/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { Container, Row, Col, InputGroup, FormControl } from \"react-bootstrap\";\nimport API from \"../../utils/API\";\nimport { useConversations } from \"../../utils/ConvorsationProvider\";\nimport Messages from \"../../Comps/Message\";\nimport \"./home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const {\n    conversationState,\n    messageState,\n    selectedConversationState\n  } = useConversations();\n  const [conversations, setConversations] = conversationState;\n  const [messages, setMessages] = messageState;\n  const [selectedConversation, setSelectedConversation] = selectedConversationState;\n  const searchRef = useRef();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 3,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"searchConversationsInput\",\n              type: \"text\",\n              ref: searchRef,\n              placeholder: \"search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this), conversations.map((convo, i) => {\n              return /*#__PURE__*/_jsxDEV(Row, {\n                className: \"convoBox\",\n                id: selectedConversation.id === convo.id ? \"selected\" : \"#\" // className={selectedConversation._id === convo._id ? \"selected\" : \"notSelected\"}\n                // Just another place where I am having to use a different \"id\"\n                // onClick={(e) => selectConversation(e, convo._id)}\n                ,\n                onClick: () => API.selectConversation(convo.id).then(messages => {\n                  setSelectedConversation(convo);\n                  setMessages(messages);\n                }),\n                children: convo.name || \"New Conversation\"\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 19\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"bottomOfConvos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 9,\n            id: \"messageBox\",\n            children: /*#__PURE__*/_jsxDEV(Messages, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"LdQxS+btBXR0dnRkZpdFTf9GjKI=\", false, function () {\n  return [useConversations];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Pages/Home/index.jsx"],"names":["React","useRef","Container","Row","Col","InputGroup","FormControl","API","useConversations","Messages","Home","conversationState","messageState","selectedConversationState","conversations","setConversations","messages","setMessages","selectedConversation","setSelectedConversation","searchRef","map","convo","i","id","selectConversation","then","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,UAA9B,EAA0CC,WAA1C,QAA6D,iBAA7D;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,gBAAT,QAAiC,kCAAjC;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAO,YAAP;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA,YAArB;AAAmCC,IAAAA;AAAnC,MACJL,gBAAgB,EADlB;AAEA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCJ,iBAA1C;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BL,YAAhC;AACA,QAAM,CAACM,oBAAD,EAAuBC,uBAAvB,IACJN,yBADF;AAGA,QAAMO,SAAS,GAAGnB,MAAM,EAAxB;AAEA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA,6BACE,QAAC,GAAD;AAAA,+BACE;AAAA,kCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,oCACE;AACE,cAAA,EAAE,EAAC,0BADL;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,GAAG,EAAEmB,SAHP;AAIE,cAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,oBADF,EAQGN,aAAa,CAACO,GAAd,CAAkB,CAACC,KAAD,EAAQC,CAAR,KAAc;AAC/B,kCACE,QAAC,GAAD;AAEE,gBAAA,SAAS,EAAC,UAFZ;AAGE,gBAAA,EAAE,EAAEL,oBAAoB,CAACM,EAArB,KAA4BF,KAAK,CAACE,EAAlC,GAAuC,UAAvC,GAAoD,GAH1D,CAIE;AACA;AACA;AANF;AAOE,gBAAA,OAAO,EAAE,MACPjB,GAAG,CAACkB,kBAAJ,CAAuBH,KAAK,CAACE,EAA7B,EAAiCE,IAAjC,CAAuCV,QAAD,IAAc;AAClDG,kBAAAA,uBAAuB,CAACG,KAAD,CAAvB;AACAL,kBAAAA,WAAW,CAACD,QAAD,CAAX;AACD,iBAHD,CARJ;AAAA,0BAcGM,KAAK,CAACK,IAAN,IAAc;AAdjB,iBACOJ,CADP;AAAA;AAAA;AAAA;AAAA,sBADF;AAkBD,aAnBA,CARH,eA4BE;AAAK,cAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,oBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eA+BE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAY,YAAA,EAAE,EAAC,YAAf;AAAA,mCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA/BF;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA2CD;;GArDuBb,I;UAEpBF,gB;;;KAFoBE,I","sourcesContent":["import React, { useRef } from \"react\";\nimport { Container, Row, Col, InputGroup, FormControl } from \"react-bootstrap\";\nimport API from \"../../utils/API\";\nimport { useConversations } from \"../../utils/ConvorsationProvider\";\nimport Messages from \"../../Comps/Message\";\nimport \"./home.css\";\n\nexport default function Home() {\n  const { conversationState, messageState, selectedConversationState } =\n    useConversations();\n  const [conversations, setConversations] = conversationState;\n  const [messages, setMessages] = messageState;\n  const [selectedConversation, setSelectedConversation] =\n    selectedConversationState;\n\n  const searchRef = useRef();\n\n  return (\n    <>\n      <Container fluid>\n        <Row>\n          <>\n            <Col sm={3}>\n              <input\n                id=\"searchConversationsInput\"\n                type=\"text\"\n                ref={searchRef}\n                placeholder=\"search\"\n              />\n\n              {conversations.map((convo, i) => {\n                return (\n                  <Row\n                    key={i}\n                    className=\"convoBox\"\n                    id={selectedConversation.id === convo.id ? \"selected\" : \"#\"}\n                    // className={selectedConversation._id === convo._id ? \"selected\" : \"notSelected\"}\n                    // Just another place where I am having to use a different \"id\"\n                    // onClick={(e) => selectConversation(e, convo._id)}\n                    onClick={() =>\n                      API.selectConversation(convo.id).then((messages) => {\n                        setSelectedConversation(convo);\n                        setMessages(messages);\n                      })\n                    }\n                  >\n                    {convo.name || \"New Conversation\"}\n                  </Row>\n                );\n              })}\n              <div id=\"bottomOfConvos\" />\n            </Col>\n            <Col sm={9} id=\"messageBox\">\n              <Messages />\n            </Col>\n          </>\n        </Row>\n      </Container>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}