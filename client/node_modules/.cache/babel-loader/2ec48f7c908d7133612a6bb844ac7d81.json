{"ast":null,"code":"import _extends from \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Chats/CometChatConversationListItem/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatAvatar, CometChatBadgeCount, CometChatUserPresence } from \"../../Shared\";\nimport { CometChatConversationListActions } from \"../CometChatConversationListActions\";\nimport * as enums from \"../../../util/enums.js\";\nimport { checkMessageForExtensionsData, getTimeStampForLastMessage } from \"../../../util/common\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { listItem, itemThumbnailStyle, itemDetailStyle, itemRowStyle, itemNameStyle, itemLastMsgStyle, itemLastMsgTimeStyle } from \"./style\";\n\nclass CometChatConversationListItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getLastMessage = () => {\n      if (this.props.hasOwnProperty(\"conversation\") === false) {\n        return false;\n      }\n\n      if (this.props.conversation.hasOwnProperty(\"lastMessage\") === false) {\n        return false;\n      }\n\n      let message = null;\n      const lastMessage = this.props.conversation.lastMessage;\n\n      if (lastMessage.hasOwnProperty(\"deletedAt\")) {\n        if (this.state.enableHideDeletedMessages) {\n          message = \"\";\n        } else {\n          message = this.props.loggedInUser.uid === lastMessage.sender.uid ? `${Translator.translate(\"YOU_DELETED_THIS_MESSAGE\", this.props.lang)}` : `${Translator.translate(\"THIS_MESSAGE_DELETED\", this.props.lang)}`;\n        }\n      } else {\n        switch (lastMessage.category) {\n          case CometChat.CATEGORY_MESSAGE:\n            message = this.getMessage(lastMessage);\n            break;\n\n          case CometChat.CATEGORY_CALL:\n            message = this.getCallMessage(lastMessage);\n            break;\n\n          case CometChat.CATEGORY_ACTION:\n            message = this.getActionMessage(lastMessage);\n            break;\n\n          case CometChat.CATEGORY_CUSTOM:\n            message = this.getCustomMessage(lastMessage);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return message;\n    };\n\n    this.getLastMessageTimestamp = () => {\n      if (this.props.hasOwnProperty(\"conversation\") === false) {\n        return false;\n      }\n\n      if (this.props.conversation.hasOwnProperty(\"lastMessage\") === false) {\n        return false;\n      }\n\n      if (this.props.conversation.lastMessage.hasOwnProperty(\"sentAt\") === false && this.props.conversation.lastMessage.hasOwnProperty(\"_composedAt\") === false) {\n        return false;\n      }\n\n      let timestamp = this.props.conversation.lastMessage._composedAt || this.props.conversation.lastMessage.sentAt;\n      timestamp = getTimeStampForLastMessage(timestamp, this.props.lang);\n      return timestamp;\n    };\n\n    this.getCustomMessage = lastMessage => {\n      let message = null;\n      const sender = this.props.loggedInUser.uid !== lastMessage.sender.uid ? `${lastMessage.sender.name}: ` : ``;\n\n      switch (lastMessage.type) {\n        case enums.CUSTOM_TYPE_POLL:\n          {\n            const pollMessage = Translator.translate(\"CUSTOM_MESSAGE_POLL\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${pollMessage}` : `${pollMessage}`;\n          }\n          break;\n\n        case enums.CUSTOM_TYPE_STICKER:\n          {\n            const stickerMessage = Translator.translate(\"CUSTOM_MESSAGE_STICKER\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${stickerMessage}` : `${stickerMessage}`;\n          }\n          break;\n\n        case enums.CUSTOM_TYPE_DOCUMENT:\n          {\n            const docMessage = Translator.translate(\"CUSTOM_MESSAGE_DOCUMENT\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${docMessage}` : `${docMessage}`;\n          }\n          break;\n\n        case enums.CUSTOM_TYPE_WHITEBOARD:\n          {\n            const whiteboardMessage = Translator.translate(\"CUSTOM_MESSAGE_WHITEBOARD\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${whiteboardMessage}` : `${whiteboardMessage}`;\n          }\n          break;\n\n        case enums.CUSTOM_TYPE_MEETING:\n          {\n            const meetingMessage = Translator.translate(\"VIDEO_CALL\", this.props.lang);\n            message = `${sender} ${meetingMessage}`;\n          }\n          break;\n\n        default:\n          break;\n      }\n\n      return message;\n    };\n\n    this.getTextMessage = message => {\n      let messageText = message.text; //xss extensions data\n\n      const xssData = checkMessageForExtensionsData(message, \"xss-filter\");\n\n      if (xssData && xssData.hasOwnProperty(\"sanitized_text\")) {\n        messageText = xssData.sanitized_text;\n      } //datamasking extensions data\n\n\n      const maskedData = checkMessageForExtensionsData(message, \"data-masking\");\n\n      if (maskedData && maskedData.hasOwnProperty(\"data\") && maskedData.data.hasOwnProperty(\"sensitive_data\") && maskedData.data.hasOwnProperty(\"message_masked\") && maskedData.data.sensitive_data === \"yes\") {\n        messageText = maskedData.data.message_masked;\n      } //profanity extensions data\n\n\n      const profaneData = checkMessageForExtensionsData(message, \"profanity-filter\");\n\n      if (profaneData && profaneData.hasOwnProperty(\"profanity\") && profaneData.hasOwnProperty(\"message_clean\") && profaneData.profanity === \"yes\") {\n        messageText = profaneData.message_clean;\n      }\n\n      return messageText;\n    };\n\n    this.getMessage = lastMessage => {\n      var _this$props, _this$props$loggedInU, _lastMessage$sender, _lastMessage$sender2;\n\n      let message = null;\n      const sender = ((_this$props = this.props) === null || _this$props === void 0 ? void 0 : (_this$props$loggedInU = _this$props.loggedInUser) === null || _this$props$loggedInU === void 0 ? void 0 : _this$props$loggedInU.uid) !== (lastMessage === null || lastMessage === void 0 ? void 0 : (_lastMessage$sender = lastMessage.sender) === null || _lastMessage$sender === void 0 ? void 0 : _lastMessage$sender.uid) ? `${lastMessage === null || lastMessage === void 0 ? void 0 : (_lastMessage$sender2 = lastMessage.sender) === null || _lastMessage$sender2 === void 0 ? void 0 : _lastMessage$sender2.name}: ` : ``;\n\n      switch (lastMessage.type) {\n        case CometChat.MESSAGE_TYPE.TEXT:\n          {\n            const textMessage = this.getTextMessage(lastMessage);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${textMessage}` : `${textMessage}`;\n          }\n          break;\n\n        case CometChat.MESSAGE_TYPE.MEDIA:\n          {\n            const mediaMessage = Translator.translate(\"MEDIA_MESSAGE\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${mediaMessage}` : `${mediaMessage}`;\n          }\n          break;\n\n        case CometChat.MESSAGE_TYPE.IMAGE:\n          {\n            const imageMessage = Translator.translate(\"MESSAGE_IMAGE\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${imageMessage}` : `${imageMessage}`;\n          }\n          break;\n\n        case CometChat.MESSAGE_TYPE.FILE:\n          {\n            const fileMessage = Translator.translate(\"MESSAGE_FILE\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${fileMessage}` : `${fileMessage}`;\n          }\n          break;\n\n        case CometChat.MESSAGE_TYPE.VIDEO:\n          {\n            const videoMessage = Translator.translate(\"MESSAGE_VIDEO\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${videoMessage}` : `${videoMessage}`;\n          }\n          break;\n\n        case CometChat.MESSAGE_TYPE.AUDIO:\n          {\n            const audioMessage = Translator.translate(\"MESSAGE_AUDIO\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${audioMessage}` : `${audioMessage}`;\n          }\n          break;\n\n        case CometChat.MESSAGE_TYPE.CUSTOM:\n          {\n            const customMessage = Translator.translate(\"CUSTOM_MESSAGE\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${customMessage}` : `${customMessage}`;\n          }\n          break;\n\n        default:\n          break;\n      }\n\n      return message;\n    };\n\n    this.getCallMessage = lastMessage => {\n      let message = null;\n      const sender = this.props.loggedInUser.uid !== lastMessage.sender.uid ? `${lastMessage.sender.name}: ` : ``;\n\n      switch (lastMessage.type) {\n        case CometChat.MESSAGE_TYPE.VIDEO:\n          {\n            const videoMessage = Translator.translate(\"VIDEO_CALL\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${videoMessage}` : `${videoMessage}`;\n          }\n          break;\n\n        case CometChat.MESSAGE_TYPE.AUDIO:\n          {\n            const audioMessage = Translator.translate(\"AUDIO_CALL\", this.props.lang);\n            message = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${audioMessage}` : `${audioMessage}`;\n          }\n          break;\n\n        default:\n          break;\n      }\n\n      return message;\n    };\n\n    this.getActionMessage = message => {\n      let actionMessage = null;\n\n      if (message.hasOwnProperty(\"actionBy\") === false || message.hasOwnProperty(\"actionOn\") === false) {\n        return actionMessage;\n      }\n\n      if (message.action !== CometChat.ACTION_TYPE.MEMBER_JOINED && message.action !== CometChat.ACTION_TYPE.MEMBER_LEFT && (message.actionBy.hasOwnProperty(\"name\") === false || message.actionOn.hasOwnProperty(\"name\") === false)) {\n        return actionMessage;\n      }\n\n      if (message.action === CometChat.ACTION_TYPE.MEMBER_SCOPE_CHANGED) {\n        if (message.hasOwnProperty(\"data\") && message.data.hasOwnProperty(\"extras\")) {\n          if (message.data.extras.hasOwnProperty(\"scope\")) {\n            if (message.data.extras.scope.hasOwnProperty(\"new\") === false) {\n              return actionMessage;\n            }\n          } else {\n            return actionMessage;\n          }\n        } else {\n          return actionMessage;\n        }\n      }\n\n      if (message.action === CometChat.ACTION_TYPE.MEMBER_SCOPE_CHANGED && message.data.extras.hasOwnProperty(\"scope\") === false) {\n        return actionMessage;\n      }\n\n      if (message.action === CometChat.ACTION_TYPE.MEMBER_SCOPE_CHANGED && message.data.extras.scope.hasOwnProperty(\"new\") === false) {\n        return actionMessage;\n      }\n\n      const byEntity = message.actionBy;\n      const onEntity = message.actionOn;\n      const byString = byEntity.name;\n      const forString = message.action !== CometChat.ACTION_TYPE.MEMBER_JOINED && message.action !== CometChat.ACTION_TYPE.MEMBER_LEFT ? onEntity.name : \"\";\n\n      switch (message.action) {\n        case CometChat.ACTION_TYPE.MEMBER_ADDED:\n          actionMessage = `${byString} ${Translator.translate(\"ADDED\", this.props.lang)} ${forString}`;\n          break;\n\n        case CometChat.ACTION_TYPE.MEMBER_JOINED:\n          actionMessage = `${byString} ${Translator.translate(\"JOINED\", this.props.lang)}`;\n          break;\n\n        case CometChat.ACTION_TYPE.MEMBER_LEFT:\n          actionMessage = `${byString} ${Translator.translate(\"LEFT\", this.props.lang)}`;\n          break;\n\n        case CometChat.ACTION_TYPE.MEMBER_KICKED:\n          actionMessage = `${byString} ${Translator.translate(\"KICKED\", this.props.lang)} ${forString}`;\n          break;\n\n        case CometChat.ACTION_TYPE.MEMBER_BANNED:\n          actionMessage = `${byString} ${Translator.translate(\"BANNED\", this.props.lang)} ${forString}`;\n          break;\n\n        case CometChat.ACTION_TYPE.MEMBER_UNBANNED:\n          actionMessage = `${byString} ${Translator.translate(\"UNBANNED\", this.props.lang)} ${forString}`;\n          break;\n\n        case CometChat.ACTION_TYPE.MEMBER_SCOPE_CHANGED:\n          {\n            const newScope = message[\"data\"][\"extras\"][\"scope\"][\"new\"];\n            actionMessage = `${byString} ${Translator.translate(\"MADE\", this.props.lang)} ${forString} ${Translator.translate(newScope, this.props.lang)}`;\n            break;\n          }\n\n        default:\n          break;\n      }\n\n      return actionMessage;\n    };\n\n    this.toggleTooltip = (event, flag) => {\n      const elem = event.target;\n      const scrollWidth = elem.scrollWidth;\n      const clientWidth = elem.clientWidth;\n\n      if (scrollWidth <= clientWidth) {\n        return false;\n      }\n\n      if (flag) {\n        elem.setAttribute(\"title\", elem.textContent);\n      } else {\n        elem.removeAttribute(\"title\");\n      }\n    };\n\n    this.enableUnreadCount = () => {\n      this.context.FeatureRestriction.isUnreadCountEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableUnreadCount) {\n          this.setState({\n            enableUnreadCount: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableUnreadCount !== false) {\n          this.setState({\n            enableUnreadCount: false\n          });\n        }\n      });\n    };\n\n    this.enableHideDeletedMessages = () => {\n      this.context.FeatureRestriction.isHideDeletedMessagesEnabled().then(response => {\n        if (response !== this.state.enableHideDeletedMessages) {\n          this.setState({\n            enableHideDeletedMessages: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableHideDeletedMessages !== false) {\n          this.setState({\n            enableHideDeletedMessages: false\n          });\n        }\n      });\n    };\n\n    this.handleMouseHover = toggleFlag => {\n      if (toggleFlag && !this.state.isHovering) {\n        this.setState({\n          isHovering: true\n        });\n      } else if (!toggleFlag && this.state.isHovering) {\n        this.setState({\n          isHovering: false\n        });\n      }\n    };\n\n    this.state = {\n      lastMessage: \"\",\n      lastMessageTimestamp: \"\",\n      enableUnreadCount: false,\n      isHovering: false,\n      enableHideDeletedMessages: false\n    };\n  }\n\n  componentDidMount() {\n    const message = this.getLastMessage();\n    const timestamp = this.getLastMessageTimestamp();\n    this.enableUnreadCount();\n    this.enableHideDeletedMessages();\n    this.setState({\n      lastMessage: message,\n      lastMessageTimestamp: timestamp\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const previousItem = JSON.stringify(prevProps.conversation);\n    const currentItem = JSON.stringify(this.props.conversation);\n\n    if (previousItem !== currentItem || prevProps.lang !== this.props.lang) {\n      const message = this.getLastMessage();\n      const timestamp = this.getLastMessageTimestamp();\n      this.setState({\n        lastMessage: message,\n        lastMessageTimestamp: timestamp\n      });\n    }\n\n    this.enableUnreadCount();\n    this.enableHideDeletedMessages();\n  }\n\n  render() {\n    let lastMessageTimeStamp = null;\n\n    if (this.state.lastMessage) {\n      lastMessageTimeStamp = jsx(\"span\", {\n        css: itemLastMsgTimeStyle(this.props),\n        className: \"item__details__timestamp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 5\n        }\n      }, this.state.lastMessageTimestamp);\n    }\n\n    let presence;\n\n    if (this.props.conversation.conversationType === CometChat.RECEIVER_TYPE.USER) {\n      const status = this.props.conversation.conversationWith.status;\n      presence = jsx(CometChatUserPresence, {\n        status: status,\n        borderColor: this.props.theme.borderColor.primary,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 15\n        }\n      });\n    }\n\n    let avatar = null;\n\n    if (this.props.conversation.conversationType === CometChat.RECEIVER_TYPE.USER) {\n      avatar = jsx(CometChatAvatar, {\n        user: this.props.conversation.conversationWith,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }\n      });\n    } else if (this.props.conversation.conversationType === CometChat.RECEIVER_TYPE.GROUP) {\n      avatar = jsx(CometChatAvatar, {\n        group: this.props.conversation.conversationWith,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }\n      });\n    }\n\n    let unreadCount = null;\n\n    if (this.state.enableUnreadCount) {\n      unreadCount = jsx(CometChatBadgeCount, {\n        theme: this.props.theme,\n        count: this.props.conversation.unreadMessageCount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 18\n        }\n      });\n    }\n\n    let toolTipView = null;\n\n    if (this.state.isHovering) {\n      toolTipView = jsx(CometChatConversationListActions, _extends({}, this.props, {\n        conversation: this.props.conversation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 18\n        }\n      }));\n    }\n\n    return jsx(\"div\", {\n      css: listItem(this.props),\n      className: \"list__item\",\n      onMouseEnter: () => this.handleMouseHover(true),\n      onMouseLeave: () => this.handleMouseHover(false),\n      onClick: () => this.props.handleClick(this.props.conversation),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 4\n      }\n    }, jsx(\"div\", {\n      css: itemThumbnailStyle(),\n      className: \"list__item__thumbnail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 5\n      }\n    }, avatar, presence), jsx(\"div\", {\n      css: itemDetailStyle(),\n      className: \"list__item__details\",\n      dir: Translator.getDirection(this.props.lang),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 5\n      }\n    }, jsx(\"div\", {\n      css: itemRowStyle(),\n      className: \"item__details_block_one\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 6\n      }\n    }, jsx(\"div\", {\n      css: itemNameStyle(),\n      className: \"item__details__name\",\n      onMouseEnter: event => this.toggleTooltip(event, true),\n      onMouseLeave: event => this.toggleTooltip(event, false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 7\n      }\n    }, this.props.conversation.conversationWith.name), lastMessageTimeStamp), jsx(\"div\", {\n      css: itemRowStyle(),\n      className: \"item__details_block_two\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 6\n      }\n    }, jsx(\"div\", {\n      css: itemLastMsgStyle(this.props),\n      className: \"item__details__last-message\",\n      onMouseEnter: event => this.toggleTooltip(event, true),\n      onMouseLeave: event => this.toggleTooltip(event, false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 7\n      }\n    }, this.state.lastMessage), unreadCount)), toolTipView);\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatConversationListItem.contextType = CometChatContext;\nCometChatConversationListItem.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  loggedInUser: null,\n  conversation: {\n    conversationWith: {}\n  }\n};\nCometChatConversationListItem.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  loggedInUser: PropTypes.shape(CometChat.User),\n  conversation: PropTypes.shape(CometChat.Conversation)\n};\nexport { CometChatConversationListItem };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Chats/CometChatConversationListItem/index.js"],"names":["React","jsx","PropTypes","CometChat","CometChatAvatar","CometChatBadgeCount","CometChatUserPresence","CometChatConversationListActions","enums","checkMessageForExtensionsData","getTimeStampForLastMessage","CometChatContext","theme","Translator","listItem","itemThumbnailStyle","itemDetailStyle","itemRowStyle","itemNameStyle","itemLastMsgStyle","itemLastMsgTimeStyle","CometChatConversationListItem","Component","constructor","props","getLastMessage","hasOwnProperty","conversation","message","lastMessage","state","enableHideDeletedMessages","loggedInUser","uid","sender","translate","lang","category","CATEGORY_MESSAGE","getMessage","CATEGORY_CALL","getCallMessage","CATEGORY_ACTION","getActionMessage","CATEGORY_CUSTOM","getCustomMessage","getLastMessageTimestamp","timestamp","_composedAt","sentAt","name","type","CUSTOM_TYPE_POLL","pollMessage","receiverType","RECEIVER_TYPE","GROUP","CUSTOM_TYPE_STICKER","stickerMessage","CUSTOM_TYPE_DOCUMENT","docMessage","CUSTOM_TYPE_WHITEBOARD","whiteboardMessage","CUSTOM_TYPE_MEETING","meetingMessage","getTextMessage","messageText","text","xssData","sanitized_text","maskedData","data","sensitive_data","message_masked","profaneData","profanity","message_clean","MESSAGE_TYPE","TEXT","textMessage","MEDIA","mediaMessage","IMAGE","imageMessage","FILE","fileMessage","VIDEO","videoMessage","AUDIO","audioMessage","CUSTOM","customMessage","actionMessage","action","ACTION_TYPE","MEMBER_JOINED","MEMBER_LEFT","actionBy","actionOn","MEMBER_SCOPE_CHANGED","extras","scope","byEntity","onEntity","byString","forString","MEMBER_ADDED","MEMBER_KICKED","MEMBER_BANNED","MEMBER_UNBANNED","newScope","toggleTooltip","event","flag","elem","target","scrollWidth","clientWidth","setAttribute","textContent","removeAttribute","enableUnreadCount","context","FeatureRestriction","isUnreadCountEnabled","then","response","setState","catch","error","isHideDeletedMessagesEnabled","handleMouseHover","toggleFlag","isHovering","lastMessageTimestamp","componentDidMount","componentDidUpdate","prevProps","previousItem","JSON","stringify","currentItem","render","lastMessageTimeStamp","presence","conversationType","USER","status","conversationWith","borderColor","primary","avatar","unreadCount","unreadMessageCount","toolTipView","handleClick","getDirection","contextType","defaultProps","getDefaultLanguage","propTypes","string","object","shape","User","Conversation"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport {CometChatAvatar, CometChatBadgeCount, CometChatUserPresence } from \"../../Shared\";\nimport {CometChatConversationListActions} from \"../CometChatConversationListActions\";\n\nimport * as enums from \"../../../util/enums.js\";\nimport { checkMessageForExtensionsData, getTimeStampForLastMessage } from \"../../../util/common\";\nimport { CometChatContext } from \"../../../util/CometChatContext\"\n\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\n\nimport {\n  listItem,\n  itemThumbnailStyle,\n  itemDetailStyle,\n  itemRowStyle,\n  itemNameStyle,\n  itemLastMsgStyle,\n  itemLastMsgTimeStyle\n} from \"./style\";\n\nclass CometChatConversationListItem extends React.Component {\n\tstatic contextType = CometChatContext;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tlastMessage: \"\",\n\t\t\tlastMessageTimestamp: \"\",\n\t\t\tenableUnreadCount: false,\n\t\t\tisHovering: false,\n\t\t\tenableHideDeletedMessages: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst message = this.getLastMessage();\n\t\tconst timestamp = this.getLastMessageTimestamp();\n\t\tthis.enableUnreadCount();\n\t\tthis.enableHideDeletedMessages();\n\n\t\tthis.setState({ lastMessage: message, lastMessageTimestamp: timestamp });\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tconst previousItem = JSON.stringify(prevProps.conversation);\n\t\tconst currentItem = JSON.stringify(this.props.conversation);\n\n\t\tif (previousItem !== currentItem || prevProps.lang !== this.props.lang) {\n\t\t\tconst message = this.getLastMessage();\n\t\t\tconst timestamp = this.getLastMessageTimestamp();\n\n\t\t\tthis.setState({ lastMessage: message, lastMessageTimestamp: timestamp });\n\t\t}\n\n\t\tthis.enableUnreadCount();\n\t\tthis.enableHideDeletedMessages();\n\t}\n\n\tgetLastMessage = () => {\n\t\tif (this.props.hasOwnProperty(\"conversation\") === false) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.props.conversation.hasOwnProperty(\"lastMessage\") === false) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet message = null;\n\t\tconst lastMessage = this.props.conversation.lastMessage;\n\n\t\tif (lastMessage.hasOwnProperty(\"deletedAt\")) {\n\t\t\tif (this.state.enableHideDeletedMessages) {\n\t\t\t\tmessage = \"\";\n\t\t\t} else {\n\t\t\t\tmessage = this.props.loggedInUser.uid === lastMessage.sender.uid ? `${Translator.translate(\"YOU_DELETED_THIS_MESSAGE\", this.props.lang)}` : `${Translator.translate(\"THIS_MESSAGE_DELETED\", this.props.lang)}`;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (lastMessage.category) {\n\t\t\t\tcase CometChat.CATEGORY_MESSAGE:\n\t\t\t\t\tmessage = this.getMessage(lastMessage);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CometChat.CATEGORY_CALL:\n\t\t\t\t\tmessage = this.getCallMessage(lastMessage);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CometChat.CATEGORY_ACTION:\n\t\t\t\t\tmessage = this.getActionMessage(lastMessage);\n\t\t\t\t\tbreak;\n\t\t\t\tcase CometChat.CATEGORY_CUSTOM:\n\t\t\t\t\tmessage = this.getCustomMessage(lastMessage);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn message;\n\t};\n\n\tgetLastMessageTimestamp = () => {\n\t\tif (this.props.hasOwnProperty(\"conversation\") === false) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.props.conversation.hasOwnProperty(\"lastMessage\") === false) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.props.conversation.lastMessage.hasOwnProperty(\"sentAt\") === false && this.props.conversation.lastMessage.hasOwnProperty(\"_composedAt\") === false) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet timestamp = this.props.conversation.lastMessage._composedAt || this.props.conversation.lastMessage.sentAt;\n\t\ttimestamp = getTimeStampForLastMessage(timestamp, this.props.lang);\n\n\t\treturn timestamp;\n\t};\n\n\tgetCustomMessage = lastMessage => {\n\t\tlet message = null;\n\t\tconst sender = this.props.loggedInUser.uid !== lastMessage.sender.uid ? `${lastMessage.sender.name}: ` : ``;\n\n\t\tswitch (lastMessage.type) {\n\t\t\tcase enums.CUSTOM_TYPE_POLL:\n\t\t\t\t{\n\t\t\t\t\tconst pollMessage = Translator.translate(\"CUSTOM_MESSAGE_POLL\", this.props.lang);\n\t\t\t\t\tmessage = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${pollMessage}` : `${pollMessage}`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase enums.CUSTOM_TYPE_STICKER:\n\t\t\t\t{\n\t\t\t\t\tconst stickerMessage = Translator.translate(\"CUSTOM_MESSAGE_STICKER\", this.props.lang);\n\t\t\t\t\tmessage = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${stickerMessage}` : `${stickerMessage}`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase enums.CUSTOM_TYPE_DOCUMENT:\n\t\t\t\t{\n\t\t\t\t\tconst docMessage = Translator.translate(\"CUSTOM_MESSAGE_DOCUMENT\", this.props.lang);\n\t\t\t\t\tmessage = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${docMessage}` : `${docMessage}`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase enums.CUSTOM_TYPE_WHITEBOARD:\n\t\t\t\t{\n\t\t\t\t\tconst whiteboardMessage = Translator.translate(\"CUSTOM_MESSAGE_WHITEBOARD\", this.props.lang);\n\t\t\t\t\tmessage = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${whiteboardMessage}` : `${whiteboardMessage}`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase enums.CUSTOM_TYPE_MEETING:\n\t\t\t\t{\n\t\t\t\t\tconst meetingMessage = Translator.translate(\"VIDEO_CALL\", this.props.lang);\n\t\t\t\t\tmessage = `${sender} ${meetingMessage}`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn message;\n\t};\n\n\tgetTextMessage = message => {\n\t\tlet messageText = message.text;\n\n\t\t//xss extensions data\n\t\tconst xssData = checkMessageForExtensionsData(message, \"xss-filter\");\n\t\tif (xssData && xssData.hasOwnProperty(\"sanitized_text\")) {\n\t\t\tmessageText = xssData.sanitized_text;\n\t\t}\n\n\t\t//datamasking extensions data\n\t\tconst maskedData = checkMessageForExtensionsData(message, \"data-masking\");\n\t\tif (maskedData && maskedData.hasOwnProperty(\"data\") && maskedData.data.hasOwnProperty(\"sensitive_data\") && maskedData.data.hasOwnProperty(\"message_masked\") && maskedData.data.sensitive_data === \"yes\") {\n\t\t\tmessageText = maskedData.data.message_masked;\n\t\t}\n\n\t\t//profanity extensions data\n\t\tconst profaneData = checkMessageForExtensionsData(message, \"profanity-filter\");\n\t\tif (profaneData && profaneData.hasOwnProperty(\"profanity\") && profaneData.hasOwnProperty(\"message_clean\") && profaneData.profanity === \"yes\") {\n\t\t\tmessageText = profaneData.message_clean;\n\t\t}\n\n\t\treturn messageText;\n\t};\n\n\tgetMessage = lastMessage => {\n\t\tlet message = null;\n\t\tconst sender = this.props?.loggedInUser?.uid !== lastMessage?.sender?.uid ? `${lastMessage?.sender?.name}: ` : ``;\n\n\t\tswitch (lastMessage.type) {\n\t\t\tcase CometChat.MESSAGE_TYPE.TEXT:\n\t\t\t\t{\n\t\t\t\t\tconst textMessage = this.getTextMessage(lastMessage);\n\t\t\t\t\tmessage = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${textMessage}` : `${textMessage}`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase CometChat.MESSAGE_TYPE.MEDIA:\n\t\t\t\t{\n\t\t\t\t\tconst mediaMessage = Translator.translate(\"MEDIA_MESSAGE\", this.props.lang);\n\t\t\t\t\tmessage = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${mediaMessage}` : `${mediaMessage}`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase CometChat.MESSAGE_TYPE.IMAGE:\n\t\t\t\t{\n\t\t\t\t\tconst imageMessage = Translator.translate(\"MESSAGE_IMAGE\", this.props.lang);\n\t\t\t\t\tmessage = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${imageMessage}` : `${imageMessage}`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase CometChat.MESSAGE_TYPE.FILE:\n\t\t\t\t{\n\t\t\t\t\tconst fileMessage = Translator.translate(\"MESSAGE_FILE\", this.props.lang);\n\t\t\t\t\tmessage = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${fileMessage}` : `${fileMessage}`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase CometChat.MESSAGE_TYPE.VIDEO:\n\t\t\t\t{\n\t\t\t\t\tconst videoMessage = Translator.translate(\"MESSAGE_VIDEO\", this.props.lang);\n\t\t\t\t\tmessage = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${videoMessage}` : `${videoMessage}`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase CometChat.MESSAGE_TYPE.AUDIO:\n\t\t\t\t{\n\t\t\t\t\tconst audioMessage = Translator.translate(\"MESSAGE_AUDIO\", this.props.lang);\n\t\t\t\t\tmessage = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${audioMessage}` : `${audioMessage}`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase CometChat.MESSAGE_TYPE.CUSTOM:\n\t\t\t\t{\n\t\t\t\t\tconst customMessage = Translator.translate(\"CUSTOM_MESSAGE\", this.props.lang);\n\t\t\t\t\tmessage = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${customMessage}` : `${customMessage}`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn message;\n\t};\n\n\tgetCallMessage = lastMessage => {\n\t\tlet message = null;\n\t\tconst sender = this.props.loggedInUser.uid !== lastMessage.sender.uid ? `${lastMessage.sender.name}: ` : ``;\n\n\t\tswitch (lastMessage.type) {\n\t\t\tcase CometChat.MESSAGE_TYPE.VIDEO:\n\t\t\t\t{\n\t\t\t\t\tconst videoMessage = Translator.translate(\"VIDEO_CALL\", this.props.lang);\n\t\t\t\t\tmessage = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${videoMessage}` : `${videoMessage}`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase CometChat.MESSAGE_TYPE.AUDIO:\n\t\t\t\t{\n\t\t\t\t\tconst audioMessage = Translator.translate(\"AUDIO_CALL\", this.props.lang);\n\t\t\t\t\tmessage = lastMessage.receiverType === CometChat.RECEIVER_TYPE.GROUP ? `${sender} ${audioMessage}` : `${audioMessage}`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn message;\n\t};\n\n\tgetActionMessage = message => {\n\t\tlet actionMessage = null;\n\n\t\tif (message.hasOwnProperty(\"actionBy\") === false || message.hasOwnProperty(\"actionOn\") === false) {\n\t\t\treturn actionMessage;\n\t\t}\n\n\t\tif (message.action !== CometChat.ACTION_TYPE.MEMBER_JOINED && message.action !== CometChat.ACTION_TYPE.MEMBER_LEFT && (message.actionBy.hasOwnProperty(\"name\") === false || message.actionOn.hasOwnProperty(\"name\") === false)) {\n\t\t\treturn actionMessage;\n\t\t}\n\n\t\tif (message.action === CometChat.ACTION_TYPE.MEMBER_SCOPE_CHANGED) {\n\t\t\tif (message.hasOwnProperty(\"data\") && message.data.hasOwnProperty(\"extras\")) {\n\t\t\t\tif (message.data.extras.hasOwnProperty(\"scope\")) {\n\t\t\t\t\tif (message.data.extras.scope.hasOwnProperty(\"new\") === false) {\n\t\t\t\t\t\treturn actionMessage;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn actionMessage;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn actionMessage;\n\t\t\t}\n\t\t}\n\n\t\tif (message.action === CometChat.ACTION_TYPE.MEMBER_SCOPE_CHANGED && message.data.extras.hasOwnProperty(\"scope\") === false) {\n\t\t\treturn actionMessage;\n\t\t}\n\n\t\tif (message.action === CometChat.ACTION_TYPE.MEMBER_SCOPE_CHANGED && message.data.extras.scope.hasOwnProperty(\"new\") === false) {\n\t\t\treturn actionMessage;\n\t\t}\n\n\t\tconst byEntity = message.actionBy;\n\t\tconst onEntity = message.actionOn;\n\n\t\tconst byString = byEntity.name;\n\t\tconst forString = message.action !== CometChat.ACTION_TYPE.MEMBER_JOINED && message.action !== CometChat.ACTION_TYPE.MEMBER_LEFT ? onEntity.name : \"\";\n\n\t\tswitch (message.action) {\n\t\t\tcase CometChat.ACTION_TYPE.MEMBER_ADDED:\n\t\t\t\tactionMessage = `${byString} ${Translator.translate(\"ADDED\", this.props.lang)} ${forString}`;\n\t\t\t\tbreak;\n\t\t\tcase CometChat.ACTION_TYPE.MEMBER_JOINED:\n\t\t\t\tactionMessage = `${byString} ${Translator.translate(\"JOINED\", this.props.lang)}`;\n\t\t\t\tbreak;\n\t\t\tcase CometChat.ACTION_TYPE.MEMBER_LEFT:\n\t\t\t\tactionMessage = `${byString} ${Translator.translate(\"LEFT\", this.props.lang)}`;\n\t\t\t\tbreak;\n\t\t\tcase CometChat.ACTION_TYPE.MEMBER_KICKED:\n\t\t\t\tactionMessage = `${byString} ${Translator.translate(\"KICKED\", this.props.lang)} ${forString}`;\n\t\t\t\tbreak;\n\t\t\tcase CometChat.ACTION_TYPE.MEMBER_BANNED:\n\t\t\t\tactionMessage = `${byString} ${Translator.translate(\"BANNED\", this.props.lang)} ${forString}`;\n\t\t\t\tbreak;\n\t\t\tcase CometChat.ACTION_TYPE.MEMBER_UNBANNED:\n\t\t\t\tactionMessage = `${byString} ${Translator.translate(\"UNBANNED\", this.props.lang)} ${forString}`;\n\t\t\t\tbreak;\n\t\t\tcase CometChat.ACTION_TYPE.MEMBER_SCOPE_CHANGED: {\n\t\t\t\tconst newScope = message[\"data\"][\"extras\"][\"scope\"][\"new\"];\n\t\t\t\tactionMessage = `${byString} ${Translator.translate(\"MADE\", this.props.lang)} ${forString} ${Translator.translate(newScope, this.props.lang)}`;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn actionMessage;\n\t};\n\n\ttoggleTooltip = (event, flag) => {\n\t\tconst elem = event.target;\n\n\t\tconst scrollWidth = elem.scrollWidth;\n\t\tconst clientWidth = elem.clientWidth;\n\n\t\tif (scrollWidth <= clientWidth) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (flag) {\n\t\t\telem.setAttribute(\"title\", elem.textContent);\n\t\t} else {\n\t\t\telem.removeAttribute(\"title\");\n\t\t}\n\t};\n\n\tenableUnreadCount = () => {\n\t\tthis.context.FeatureRestriction.isUnreadCountEnabled()\n\t\t\t.then(response => {\n\t\t\t\t/**\n\t\t\t\t * Don't update state if the response has the same value\n\t\t\t\t */\n\t\t\t\tif (response !== this.state.enableUnreadCount) {\n\t\t\t\t\tthis.setState({ enableUnreadCount: response });\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tif (this.state.enableUnreadCount !== false) {\n\t\t\t\t\tthis.setState({ enableUnreadCount: false });\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tenableHideDeletedMessages = () => {\n\t\tthis.context.FeatureRestriction.isHideDeletedMessagesEnabled()\n\t\t\t.then(response => {\n\t\t\t\tif (response !== this.state.enableHideDeletedMessages) {\n\t\t\t\t\tthis.setState({ enableHideDeletedMessages: response });\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tif (this.state.enableHideDeletedMessages !== false) {\n\t\t\t\t\tthis.setState({ enableHideDeletedMessages: false });\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\thandleMouseHover = toggleFlag => {\n\t\tif (toggleFlag && !this.state.isHovering) {\n\t\t\tthis.setState({ isHovering: true });\n\t\t} else if (!toggleFlag && this.state.isHovering) {\n\t\t\tthis.setState({ isHovering: false });\n\t\t}\n\t};\n\n\trender() {\n\t\tlet lastMessageTimeStamp = null;\n\t\tif (this.state.lastMessage) {\n\t\t\tlastMessageTimeStamp = (\n\t\t\t\t<span css={itemLastMsgTimeStyle(this.props)} className=\"item__details__timestamp\">\n\t\t\t\t\t{this.state.lastMessageTimestamp}\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\n\t\tlet presence;\n\t\tif (this.props.conversation.conversationType === CometChat.RECEIVER_TYPE.USER) {\n\t\t\tconst status = this.props.conversation.conversationWith.status;\n\t\t\tpresence = <CometChatUserPresence status={status} borderColor={this.props.theme.borderColor.primary} />;\n\t\t}\n\n\t\tlet avatar = null;\n\t\tif (this.props.conversation.conversationType === CometChat.RECEIVER_TYPE.USER) {\n\t\t\tavatar = <CometChatAvatar user={this.props.conversation.conversationWith} />;\n\t\t} else if (this.props.conversation.conversationType === CometChat.RECEIVER_TYPE.GROUP) {\n\t\t\tavatar = <CometChatAvatar group={this.props.conversation.conversationWith} />;\n\t\t}\n\n\t\tlet unreadCount = null;\n\t\tif (this.state.enableUnreadCount) {\n\t\t\tunreadCount = <CometChatBadgeCount theme={this.props.theme} count={this.props.conversation.unreadMessageCount} />;\n\t\t}\n\n\t\tlet toolTipView = null;\n\t\tif (this.state.isHovering) {\n\t\t\ttoolTipView = <CometChatConversationListActions {...this.props} conversation={this.props.conversation} />;\n\t\t}\n\n\t\treturn (\n\t\t\t<div css={listItem(this.props)} className=\"list__item\" onMouseEnter={() => this.handleMouseHover(true)} onMouseLeave={() => this.handleMouseHover(false)} onClick={() => this.props.handleClick(this.props.conversation)}>\n\t\t\t\t<div css={itemThumbnailStyle()} className=\"list__item__thumbnail\">\n\t\t\t\t\t{avatar}\n\t\t\t\t\t{presence}\n\t\t\t\t</div>\n\t\t\t\t<div css={itemDetailStyle()} className=\"list__item__details\" dir={Translator.getDirection(this.props.lang)}>\n\t\t\t\t\t<div css={itemRowStyle()} className=\"item__details_block_one\">\n\t\t\t\t\t\t<div css={itemNameStyle()} className=\"item__details__name\" onMouseEnter={event => this.toggleTooltip(event, true)} onMouseLeave={event => this.toggleTooltip(event, false)}>\n\t\t\t\t\t\t\t{this.props.conversation.conversationWith.name}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{lastMessageTimeStamp}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div css={itemRowStyle()} className=\"item__details_block_two\">\n\t\t\t\t\t\t<div css={itemLastMsgStyle(this.props)} className=\"item__details__last-message\" onMouseEnter={event => this.toggleTooltip(event, true)} onMouseLeave={event => this.toggleTooltip(event, false)}>\n\t\t\t\t\t\t\t{this.state.lastMessage}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{unreadCount}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{toolTipView}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// Specifies the default values for props:\nCometChatConversationListItem.defaultProps = {\n\tlang: Translator.getDefaultLanguage(),\n\ttheme: theme,\n\tloggedInUser: null,\n\tconversation: {\n\t\tconversationWith: {}\n\t}\n};\n\nCometChatConversationListItem.propTypes = {\n\tlang: PropTypes.string,\n\ttheme: PropTypes.object,\n\tloggedInUser: PropTypes.shape(CometChat.User),\n\tconversation: PropTypes.shape(CometChat.Conversation)\n}\n\nexport { CometChatConversationListItem };"]},"metadata":{},"sourceType":"module"}