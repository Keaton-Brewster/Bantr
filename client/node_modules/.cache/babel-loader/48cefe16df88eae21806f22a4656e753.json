{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/Conversations.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport { Row, ListGroup } from \"react-bootstrap\";\nimport { BsChatSquareDots as Chat } from \"react-icons/bs\";\nimport { useConversations } from \"../utils/ConversationProvider\";\nimport useViewport from \"../utils/useViewport\";\nimport NewConversationModal from \"./NewConversationModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Conversations({\n  show,\n  setShow\n}) {\n  _s();\n\n  const {\n    conversations,\n    selectedConversation,\n    selectConversationIndex\n  } = useConversations();\n  const [newConvoModal, setNewConvoModal] = useState(false);\n  const searchRef = useRef();\n  const width = useViewport();\n\n  function createConversation(event) {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: show ? \"show\" : \"hide\",\n    children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n      variant: \"flush\",\n      children: conversations.map((convo, index) => {\n        return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          className: `convoBox ${convo._id === selectedConversation._id && width > 575 ? \"activeConvo\" : \"\"}`,\n          onClick: event => {\n            event.preventDefault();\n            selectConversationIndex(index);\n            if (width < 575) setShow({\n              convos: false,\n              messages: true\n            });\n          },\n          children: convo.name || \"New Conversation\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"newConversationButton\",\n      onClick: e => {\n        e.preventDefault();\n        setNewConvoModal(true);\n      },\n      children: /*#__PURE__*/_jsxDEV(Chat, {\n        id: \"newChat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewConversationModal, {\n      show: newConvoModal,\n      hide: () => setNewConvoModal(false),\n      createConversation: createConversation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Conversations, \"B0cvyIQ/J6gXSM1YlO9v2NYsViU=\", false, function () {\n  return [useConversations, useViewport];\n});\n\n_c = Conversations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversations\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/Conversations.jsx"],"names":["useState","useRef","Row","ListGroup","BsChatSquareDots","Chat","useConversations","useViewport","NewConversationModal","Conversations","show","setShow","conversations","selectedConversation","selectConversationIndex","newConvoModal","setNewConvoModal","searchRef","width","createConversation","event","map","convo","index","_id","preventDefault","convos","messages","name","e"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,iBAA/B;AACA,SAASC,gBAAgB,IAAIC,IAA7B,QAAyC,gBAAzC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAEA,eAAe,SAASC,aAAT,CAAuB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,EAA0C;AAAA;;AACvD,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,oBAAjB;AAAuCC,IAAAA;AAAvC,MACJR,gBAAgB,EADlB;AAEA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAMiB,SAAS,GAAGhB,MAAM,EAAxB;AAEA,QAAMiB,KAAK,GAAGX,WAAW,EAAzB;;AAEA,WAASY,kBAAT,CAA4BC,KAA5B,EAAmC,CAAE;;AAErC,sBACE;AAAK,IAAA,SAAS,EAAEV,IAAI,GAAG,MAAH,GAAY,MAAhC;AAAA,4BAOE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAC,OAAnB;AAAA,gBACGE,aAAa,CAACS,GAAd,CAAkB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACnC,4BACE,QAAC,SAAD,CAAW,IAAX;AAEE,UAAA,SAAS,EAAG,YACVD,KAAK,CAACE,GAAN,KAAcX,oBAAoB,CAACW,GAAnC,IAA0CN,KAAK,GAAG,GAAlD,GACI,aADJ,GAEI,EACL,EANH;AAOE,UAAA,OAAO,EAAGE,KAAD,IAAW;AAClBA,YAAAA,KAAK,CAACK,cAAN;AACAX,YAAAA,uBAAuB,CAACS,KAAD,CAAvB;AACA,gBAAIL,KAAK,GAAG,GAAZ,EACEP,OAAO,CAAC;AACNe,cAAAA,MAAM,EAAE,KADF;AAENC,cAAAA,QAAQ,EAAE;AAFJ,aAAD,CAAP;AAIH,WAfH;AAAA,oBAiBGL,KAAK,CAACM,IAAN,IAAc;AAjBjB,WACOL,KADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAqBD,OAtBA;AADH;AAAA;AAAA;AAAA;AAAA,YAPF,eAgCE;AACE,MAAA,EAAE,EAAC,uBADL;AAEE,MAAA,OAAO,EAAGM,CAAD,IAAO;AACdA,QAAAA,CAAC,CAACJ,cAAF;AACAT,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,OALH;AAAA,6BAOE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YAhCF,eAyCE,QAAC,oBAAD;AACE,MAAA,IAAI,EAAED,aADR;AAEE,MAAA,IAAI,EAAE,MAAMC,gBAAgB,CAAC,KAAD,CAF9B;AAGE,MAAA,kBAAkB,EAAEG;AAHtB;AAAA;AAAA;AAAA;AAAA,YAzCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD;;GA5DuBV,a;UAEpBH,gB,EAKYC,W;;;KAPQE,a","sourcesContent":["import { useState, useRef } from \"react\";\nimport { Row, ListGroup } from \"react-bootstrap\";\nimport { BsChatSquareDots as Chat } from \"react-icons/bs\";\nimport { useConversations } from \"../utils/ConversationProvider\";\nimport useViewport from \"../utils/useViewport\";\nimport NewConversationModal from \"./NewConversationModal\";\n\nexport default function Conversations({ show, setShow }) {\n  const { conversations, selectedConversation, selectConversationIndex } =\n    useConversations();\n  const [newConvoModal, setNewConvoModal] = useState(false);\n\n  const searchRef = useRef();\n\n  const width = useViewport();\n\n  function createConversation(event) {}\n\n  return (\n    <div className={show ? \"show\" : \"hide\"}>\n      {/* <input\n        id=\"searchConversationsInput\"\n        type=\"text\"\n        ref={searchRef}\n        placeholder=\"search\"\n      /> */}\n      <ListGroup variant=\"flush\">\n        {conversations.map((convo, index) => {\n          return (\n            <ListGroup.Item\n              key={index}\n              className={`convoBox ${\n                convo._id === selectedConversation._id && width > 575\n                  ? \"activeConvo\"\n                  : \"\"\n              }`}\n              onClick={(event) => {\n                event.preventDefault();\n                selectConversationIndex(index);\n                if (width < 575)\n                  setShow({\n                    convos: false,\n                    messages: true,\n                  });\n              }}\n            >\n              {convo.name || \"New Conversation\"}\n            </ListGroup.Item>\n          );\n        })}\n      </ListGroup>\n      <button\n        id=\"newConversationButton\"\n        onClick={(e) => {\n          e.preventDefault();\n          setNewConvoModal(true);\n        }}\n      >\n        <Chat id=\"newChat\" />\n      </button>\n      <NewConversationModal\n        show={newConvoModal}\n        hide={() => setNewConvoModal(false)}\n        createConversation={createConversation}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}