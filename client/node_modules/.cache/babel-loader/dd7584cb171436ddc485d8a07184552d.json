{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Groups/CometChatGroupListWithMessages/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatGroupList } from \"../\";\nimport { CometChatMessages } from \"../../Messages\";\nimport { CometChatIncomingDirectCall } from \"../../Calls\";\nimport { CometChatContextProvider } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { groupScreenStyle, groupScreenSidebarStyle, groupScreenMainStyle } from \"./style\";\n\nclass CometChatGroupListWithMessages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loggedInUser = null;\n\n    this.itemClicked = (group, type) => {\n      this.contextProviderRef.setTypeAndItem(type, group);\n      this.toggleSideBar();\n    };\n\n    this.actionHandler = (action, item, count, ...otherProps) => {\n      switch (action) {\n        case enums.ACTIONS[\"TOGGLE_SIDEBAR\"]:\n          this.toggleSideBar();\n          break;\n\n        case enums.GROUP_MEMBER_SCOPE_CHANGED:\n        case enums.GROUP_MEMBER_KICKED:\n        case enums.GROUP_MEMBER_BANNED:\n          this.groupUpdated(action, item, count, ...otherProps);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.toggleSideBar = () => {\n      const sidebarview = this.state.sidebarview;\n      this.setState({\n        sidebarview: !sidebarview\n      });\n    };\n\n    this.groupUpdated = (key, message, group, options) => {\n      switch (key) {\n        case enums.GROUP_MEMBER_BANNED:\n        case enums.GROUP_MEMBER_KICKED:\n          {\n            if (this.contextProviderRef.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.contextProviderRef.item.guid === group.guid && options.user.uid === this.loggedInUser.uid) {\n              this.contextProviderRef.setItem({});\n              this.contextProviderRef.setType(\"\");\n            }\n\n            break;\n          }\n\n        case enums.GROUP_MEMBER_SCOPE_CHANGED:\n          {\n            if (this.contextProviderRef.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.contextProviderRef.item.guid === group.guid && options.user.uid === this.loggedInUser.uid) {\n              const newObject = Object.assign({}, this.contextProviderRef.item, {\n                scope: options[\"scope\"]\n              });\n              this.contextProviderRef.setItem(newObject);\n              this.contextProviderRef.setType(CometChat.ACTION_TYPE.TYPE_GROUP);\n            }\n\n            break;\n          }\n\n        default:\n          break;\n      }\n    };\n\n    this.state = {\n      sidebarview: false,\n      lang: props.lang\n    };\n    this.groupListRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.chatWithGroup.length === 0) {\n      this.toggleSideBar();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.lang !== this.props.lang) {\n      this.setState({\n        lang: this.props.lang\n      });\n    }\n  }\n\n  render() {\n    let messageScreen = jsx(CometChatMessages, {\n      theme: this.props.theme,\n      lang: this.state.lang,\n      _parent: \"groups\",\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    });\n    return jsx(CometChatContextProvider, {\n      ref: el => this.contextProviderRef = el,\n      group: this.props.chatWithGroup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, jsx(\"div\", {\n      css: groupScreenStyle(this.props),\n      className: \"cometchat cometchat--groups\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, jsx(\"div\", {\n      css: groupScreenSidebarStyle(this.state, this.props),\n      className: \"groups__sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, jsx(CometChatGroupList, {\n      ref: el => this.groupListRef = el,\n      _parent: \"glwm\",\n      theme: this.props.theme,\n      lang: this.state.lang,\n      onItemClick: this.itemClicked,\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    })), jsx(\"div\", {\n      css: groupScreenMainStyle(this.state, this.props),\n      className: \"groups__main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, messageScreen), jsx(CometChatIncomingDirectCall, {\n      theme: this.props.theme,\n      lang: this.state.lang,\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatGroupListWithMessages.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  chatWithGroup: \"\"\n};\nCometChatGroupListWithMessages.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  chatWithGroup: PropTypes.string\n};\nexport { CometChatGroupListWithMessages };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Groups/CometChatGroupListWithMessages/index.js"],"names":["React","jsx","PropTypes","CometChat","CometChatGroupList","CometChatMessages","CometChatIncomingDirectCall","CometChatContextProvider","enums","theme","Translator","groupScreenStyle","groupScreenSidebarStyle","groupScreenMainStyle","CometChatGroupListWithMessages","Component","constructor","props","loggedInUser","itemClicked","group","type","contextProviderRef","setTypeAndItem","toggleSideBar","actionHandler","action","item","count","otherProps","ACTIONS","GROUP_MEMBER_SCOPE_CHANGED","GROUP_MEMBER_KICKED","GROUP_MEMBER_BANNED","groupUpdated","sidebarview","state","setState","key","message","options","ACTION_TYPE","TYPE_GROUP","guid","user","uid","setItem","setType","newObject","Object","assign","scope","lang","groupListRef","createRef","componentDidMount","chatWithGroup","length","componentDidUpdate","prevProps","render","messageScreen","el","defaultProps","getDefaultLanguage","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { CometChatGroupList } from \"../\";\nimport { CometChatMessages } from \"../../Messages\";\nimport { CometChatIncomingDirectCall } from \"../../Calls\";\n\nimport { CometChatContextProvider } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\n\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\n\nimport {\n  groupScreenStyle,\n  groupScreenSidebarStyle,\n  groupScreenMainStyle,\n} from \"./style\";\n\nclass CometChatGroupListWithMessages extends React.Component {\n  loggedInUser = null;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sidebarview: false,\n      lang: props.lang,\n    };\n\n    this.groupListRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.chatWithGroup.length === 0) {\n      this.toggleSideBar();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.lang !== this.props.lang) {\n      this.setState({ lang: this.props.lang });\n    }\n  }\n\n  itemClicked = (group, type) => {\n    this.contextProviderRef.setTypeAndItem(type, group);\n    this.toggleSideBar();\n  };\n\n  actionHandler = (action, item, count, ...otherProps) => {\n    switch (action) {\n      case enums.ACTIONS[\"TOGGLE_SIDEBAR\"]:\n        this.toggleSideBar();\n        break;\n      case enums.GROUP_MEMBER_SCOPE_CHANGED:\n      case enums.GROUP_MEMBER_KICKED:\n      case enums.GROUP_MEMBER_BANNED:\n        this.groupUpdated(action, item, count, ...otherProps);\n        break;\n      default:\n        break;\n    }\n  };\n\n  toggleSideBar = () => {\n    const sidebarview = this.state.sidebarview;\n    this.setState({ sidebarview: !sidebarview });\n  };\n\n  /**\n If the logged in user is banned, kicked or scope changed, update the chat window accordingly\n */\n  groupUpdated = (key, message, group, options) => {\n    switch (key) {\n      case enums.GROUP_MEMBER_BANNED:\n      case enums.GROUP_MEMBER_KICKED: {\n        if (\n          this.contextProviderRef.type === CometChat.ACTION_TYPE.TYPE_GROUP &&\n          this.contextProviderRef.item.guid === group.guid &&\n          options.user.uid === this.loggedInUser.uid\n        ) {\n          this.contextProviderRef.setItem({});\n          this.contextProviderRef.setType(\"\");\n        }\n        break;\n      }\n      case enums.GROUP_MEMBER_SCOPE_CHANGED: {\n        if (\n          this.contextProviderRef.type === CometChat.ACTION_TYPE.TYPE_GROUP &&\n          this.contextProviderRef.item.guid === group.guid &&\n          options.user.uid === this.loggedInUser.uid\n        ) {\n          const newObject = Object.assign({}, this.contextProviderRef.item, {\n            scope: options[\"scope\"],\n          });\n          this.contextProviderRef.setItem(newObject);\n          this.contextProviderRef.setType(CometChat.ACTION_TYPE.TYPE_GROUP);\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  render() {\n    let messageScreen = (\n      <CometChatMessages\n        theme={this.props.theme}\n        lang={this.state.lang}\n        _parent=\"groups\"\n        actionGenerated={this.actionHandler}\n      />\n    );\n\n    return (\n      <CometChatContextProvider\n        ref={(el) => (this.contextProviderRef = el)}\n        group={this.props.chatWithGroup}\n      >\n        <div\n          css={groupScreenStyle(this.props)}\n          className=\"cometchat cometchat--groups\"\n        >\n          <div\n            css={groupScreenSidebarStyle(this.state, this.props)}\n            className=\"groups__sidebar\"\n          >\n            <CometChatGroupList\n              ref={(el) => (this.groupListRef = el)}\n              _parent=\"glwm\"\n              theme={this.props.theme}\n              lang={this.state.lang}\n              onItemClick={this.itemClicked}\n              actionGenerated={this.actionHandler}\n            />\n          </div>\n          <div\n            css={groupScreenMainStyle(this.state, this.props)}\n            className=\"groups__main\"\n          >\n            {messageScreen}\n          </div>\n          <CometChatIncomingDirectCall\n            theme={this.props.theme}\n            lang={this.state.lang}\n            actionGenerated={this.actionHandler}\n          />\n        </div>\n      </CometChatContextProvider>\n    );\n  }\n}\n\n// Specifies the default values for props:\nCometChatGroupListWithMessages.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  chatWithGroup: \"\",\n};\n\nCometChatGroupListWithMessages.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  chatWithGroup: PropTypes.string,\n};\n\nexport { CometChatGroupListWithMessages };\n"]},"metadata":{},"sourceType":"module"}