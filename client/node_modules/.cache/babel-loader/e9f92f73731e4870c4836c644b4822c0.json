{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Pages/Home/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport { useConversations } from \"../../utils/ConvorsationProvider\";\nimport API from \"../../utils/API\";\nimport useViewport from \"../../utils/useViewport\"; // import ConversationsDesktop from \"../../Comps/Desktop/Conversations\";\n// import MessagesDesktop from \"../../Comps/Desktop/Messages\";\n\nimport Conversations from \"../../Comps/Mobile/Conversations\";\nimport Messages from \"../../Comps/Mobile/Messages\";\nimport \"./home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const {\n    selectedConversationState,\n    userState,\n    messageState,\n    loadingMessagesState,\n    mobileViewState\n  } = useConversations();\n  const [user, setUser] = userState;\n  const [selectedConversation, setSelectedConversation] = selectedConversationState;\n  const [messages, setMessages] = messageState;\n  const [loadingMessages, setLoadingMessages] = loadingMessagesState;\n  const [mobileView, setMobileView] = mobileViewState;\n  const {\n    width\n  } = useViewport();\n\n  function sendMessage(text) {\n    // Yet another place where I ran into id issues.. this is going to be a mess to fix later\n    const convo_id = selectedConversation.id; // const convo_id = selectedConversation._id;\n\n    API.sendMessage(convo_id, user._id, text).then(data => {\n      console.log(data);\n      setMessages([...messages, data]);\n    }).catch(e => console.error(e));\n  }\n\n  useEffect(() => {\n    if (width <= 575) {\n      setMobileView({\n        conversations: true,\n        messages: false\n      });\n      setSelectedConversation();\n      return;\n    }\n\n    setMobileView({\n      conversations: true,\n      messages: true\n    });\n  }, [width, setSelectedConversation, setMobileView]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: width > 575 ? /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Conversations, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 9,\n          id: \"messageBox\",\n          children: /*#__PURE__*/_jsxDEV(Messages, {\n            sendMessage: sendMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Conversations, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), loadingMessages ? /*#__PURE__*/_jsxDEV(Spinner, {\n        id: \"spinner\",\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Messages, {\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"A2aZPVKleaIsxBLE0XN6gxViU58=\", false, function () {\n  return [useConversations, useViewport];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Pages/Home/index.jsx"],"names":["useEffect","Container","Row","Col","Spinner","useConversations","API","useViewport","Conversations","Messages","Home","selectedConversationState","userState","messageState","loadingMessagesState","mobileViewState","user","setUser","selectedConversation","setSelectedConversation","messages","setMessages","loadingMessages","setLoadingMessages","mobileView","setMobileView","width","sendMessage","text","convo_id","id","_id","then","data","console","log","catch","e","error","conversations"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport { useConversations } from \"../../utils/ConvorsationProvider\";\nimport API from \"../../utils/API\";\nimport useViewport from \"../../utils/useViewport\";\n// import ConversationsDesktop from \"../../Comps/Desktop/Conversations\";\n// import MessagesDesktop from \"../../Comps/Desktop/Messages\";\nimport Conversations from \"../../Comps/Mobile/Conversations\";\nimport Messages from \"../../Comps/Mobile/Messages\";\nimport \"./home.css\";\n\nexport default function Home() {\n  const {\n    selectedConversationState,\n    userState,\n    messageState,\n    loadingMessagesState,\n    mobileViewState,\n  } = useConversations();\n  const [user, setUser] = userState;\n  const [selectedConversation, setSelectedConversation] =\n    selectedConversationState;\n  const [messages, setMessages] = messageState;\n  const [loadingMessages, setLoadingMessages] = loadingMessagesState;\n  const [mobileView, setMobileView] = mobileViewState;\n  const { width } = useViewport();\n\n  function sendMessage(text) {\n    // Yet another place where I ran into id issues.. this is going to be a mess to fix later\n    const convo_id = selectedConversation.id;\n    // const convo_id = selectedConversation._id;\n    API.sendMessage(convo_id, user._id, text)\n      .then((data) => {\n        console.log(data);\n        setMessages([...messages, data]);\n      })\n      .catch((e) => console.error(e));\n  }\n\n  useEffect(() => {\n    if (width <= 575) {\n      setMobileView({ conversations: true, messages: false });\n      setSelectedConversation();\n      return;\n    }\n    setMobileView({ conversations: true, messages: true });\n  }, [width, setSelectedConversation, setMobileView]);\n\n  return (\n    <>\n      {width > 575 ? (\n        <Container fluid>\n          <Row>\n            <Col sm={3}>\n              <Conversations />\n            </Col>\n            <Col sm={9} id=\"messageBox\">\n              <Messages sendMessage={sendMessage} />\n            </Col>\n          </Row>\n        </Container>\n      ) : (\n        <Container fluid>\n          <Conversations />\n          {loadingMessages ? (\n            <Spinner id=\"spinner\" animation=\"border\" />\n          ) : (\n            <Messages sendMessage={sendMessage} />\n          )}\n        </Container>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}