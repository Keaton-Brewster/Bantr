{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/MainContent/Messaging/MessagesTopMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport { useMainContent } from \"..\";\nimport { useViewport } from \"../../../utils/ViewportProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MessagesTopMenu({\n  conversationName,\n  containerRef\n}) {\n  _s();\n\n  const {\n    width,\n    mobileScreen,\n    setShow\n  } = useViewport();\n  const [menuBarWidth, setMenuBarWidth] = useState(\"100%\");\n  const {\n    activeContent,\n    setActiveContent\n  } = useMainContent();\n\n  function openConversationInfo() {\n    setActiveContent(\"conversation info\");\n  }\n\n  function handleBackButton() {\n    console.log(activeContent);\n\n    switch (activeContent) {\n      case \"messaging\":\n        setShow({\n          menu: true,\n          mainContent: false\n        });\n        break;\n\n      case \"conversation info\":\n        setActiveContent(\"messaging\");\n        break;\n\n      default:\n        setShow({\n          menu: true,\n          mainContent: false\n        });\n    }\n  }\n\n  useEffect(() => {\n    if (width >= 680) setMenuBarWidth(`${containerRef.current.offsetWidth}px`);else setMenuBarWidth(\"100%\"); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [width]);\n  return /*#__PURE__*/_jsxDEV(Nav, {\n    id: \"messagesTopMenu\",\n    className: \"flex-row justify-content-end\",\n    style: {\n      width: menuBarWidth\n    },\n    children: [mobileScreen || activeContent === \"conversation info\" ? /*#__PURE__*/_jsxDEV(Nav.Item, {\n      onClick: handleBackButton,\n      children: /*#__PURE__*/_jsxDEV(FaArrowLeft, {\n        className: \"backButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Nav.Item, {\n      id: \"conversationName\",\n      style: {\n        paddingLeft: `${activeContent === \"messaging\" ? \"30px\" : \"\"}`\n      },\n      children: conversationName ? conversationName : \"Untitled Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n      onClick: openConversationInfo,\n      children: /*#__PURE__*/_jsxDEV(AiOutlineInfoCircle, {\n        id: \"messageInfoButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MessagesTopMenu, \"rg+zuSPvXH0nMCb7pbW7CTj4P3o=\", false, function () {\n  return [useViewport, useMainContent];\n});\n\n_c = MessagesTopMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagesTopMenu\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/MainContent/Messaging/MessagesTopMenu.jsx"],"names":["useState","useEffect","Nav","AiOutlineInfoCircle","FaArrowLeft","useMainContent","useViewport","MessagesTopMenu","conversationName","containerRef","width","mobileScreen","setShow","menuBarWidth","setMenuBarWidth","activeContent","setActiveContent","openConversationInfo","handleBackButton","console","log","menu","mainContent","current","offsetWidth","paddingLeft"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,mBAAT,QAAoC,gBAApC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,cAAT,QAA+B,IAA/B;AACA,SAASC,WAAT,QAA4B,iCAA5B;;AAEA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,CAAzB,EAA6D;AAAA;;AAC1E,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,YAAT;AAAuBC,IAAAA;AAAvB,MAAmCN,WAAW,EAApD;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,MAAD,CAAhD;AACA,QAAM;AAAEe,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAsCX,cAAc,EAA1D;;AAEA,WAASY,oBAAT,GAAgC;AAC9BD,IAAAA,gBAAgB,CAAC,mBAAD,CAAhB;AACD;;AAED,WAASE,gBAAT,GAA4B;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;;AACA,YAAQA,aAAR;AACE,WAAK,WAAL;AACEH,QAAAA,OAAO,CAAC;AACNS,UAAAA,IAAI,EAAE,IADA;AAENC,UAAAA,WAAW,EAAE;AAFP,SAAD,CAAP;AAIA;;AACF,WAAK,mBAAL;AACEN,QAAAA,gBAAgB,CAAC,WAAD,CAAhB;AACA;;AACF;AACEJ,QAAAA,OAAO,CAAC;AACNS,UAAAA,IAAI,EAAE,IADA;AAENC,UAAAA,WAAW,EAAE;AAFP,SAAD,CAAP;AAXJ;AAgBD;;AAEDrB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,KAAK,IAAI,GAAb,EAAkBI,eAAe,CAAE,GAAEL,YAAY,CAACc,OAAb,CAAqBC,WAAY,IAArC,CAAf,CAAlB,KACKV,eAAe,CAAC,MAAD,CAAf,CAFS,CAGd;AACD,GAJQ,EAIN,CAACJ,KAAD,CAJM,CAAT;AAMA,sBACE,QAAC,GAAD;AACE,IAAA,EAAE,EAAC,iBADL;AAEE,IAAA,SAAS,EAAC,8BAFZ;AAGE,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAEG;AAAT,KAHT;AAAA,eAKGF,YAAY,IAAII,aAAa,KAAK,mBAAlC,gBACC,QAAC,GAAD,CAAK,IAAL;AAAU,MAAA,OAAO,EAAEG,gBAAnB;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,GAIG,IATN,eAUE,QAAC,GAAD,CAAK,IAAL;AACE,MAAA,EAAE,EAAC,kBADL;AAEE,MAAA,KAAK,EAAE;AACLO,QAAAA,WAAW,EAAG,GAAEV,aAAa,KAAK,WAAlB,GAAgC,MAAhC,GAAyC,EAAG;AADvD,OAFT;AAAA,gBAMGP,gBAAgB,GAAGA,gBAAH,GAAsB;AANzC;AAAA;AAAA;AAAA;AAAA,YAVF,eAkBE,QAAC,GAAD,CAAK,IAAL;AAAU,MAAA,OAAO,EAAES,oBAAnB;AAAA,6BACE,QAAC,mBAAD;AAAqB,QAAA,EAAE,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA3DuBV,e;UACmBD,W,EAEGD,c;;;KAHtBE,e","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport { useMainContent } from \"..\";\nimport { useViewport } from \"../../../utils/ViewportProvider\";\n\nexport default function MessagesTopMenu({ conversationName, containerRef }) {\n  const { width, mobileScreen, setShow } = useViewport();\n  const [menuBarWidth, setMenuBarWidth] = useState(\"100%\");\n  const { activeContent, setActiveContent } = useMainContent();\n\n  function openConversationInfo() {\n    setActiveContent(\"conversation info\");\n  }\n\n  function handleBackButton() {\n    console.log(activeContent);\n    switch (activeContent) {\n      case \"messaging\":\n        setShow({\n          menu: true,\n          mainContent: false,\n        });\n        break;\n      case \"conversation info\":\n        setActiveContent(\"messaging\");\n        break;\n      default:\n        setShow({\n          menu: true,\n          mainContent: false,\n        });\n    }\n  }\n\n  useEffect(() => {\n    if (width >= 680) setMenuBarWidth(`${containerRef.current.offsetWidth}px`);\n    else setMenuBarWidth(\"100%\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [width]);\n\n  return (\n    <Nav\n      id=\"messagesTopMenu\"\n      className=\"flex-row justify-content-end\"\n      style={{ width: menuBarWidth }}\n    >\n      {mobileScreen || activeContent === \"conversation info\" ? (\n        <Nav.Item onClick={handleBackButton}>\n          <FaArrowLeft className=\"backButton\" />\n        </Nav.Item>\n      ) : null}\n      <Nav.Item\n        id=\"conversationName\"\n        style={{\n          paddingLeft: `${activeContent === \"messaging\" ? \"30px\" : \"\"}`,\n        }}\n      >\n        {conversationName ? conversationName : \"Untitled Conversation\"}\n      </Nav.Item>\n      <Nav.Item onClick={openConversationInfo}>\n        <AiOutlineInfoCircle id=\"messageInfoButton\" />\n      </Nav.Item>\n    </Nav>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}