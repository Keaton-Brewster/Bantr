{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/MainContent/Messaging/ConversationInfoScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { useConversations } from \"../../../utils/ConversationProvider\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ConversationInfoScreen({\n  containerRef\n}) {\n  _s();\n\n  const [convoInfo, setConvoInfo] = useState();\n  const {\n    selectedConversation\n  } = useConversations();\n  const [loading, setLoading] = useState(true);\n\n  function trimMessages(conversation) {\n    const mutatedConversation = { ...conversation\n    };\n    mutatedConversation.messages = [];\n    return mutatedConversation;\n  }\n\n  async function getConversationInformation() {\n    const filteredConversation = trimMessages(selectedConversation);\n    const conversationInformation = await axios.get(`api/conversations/getInfo/${JSON.stringify(filteredConversation)}`);\n    return conversationInformation.data;\n  }\n\n  useEffect(() => {\n    const thisConvoInfo = getConversationInformation();\n    setConvoInfo(thisConvoInfo); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingTop: \"40px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: [\"Hello, \", convoInfo.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConversationInfoScreen, \"zKr4Vs6FaFzBsZxl3+yzQvkPIHw=\", false, function () {\n  return [useConversations];\n});\n\n_c = ConversationInfoScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConversationInfoScreen\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/MainContent/Messaging/ConversationInfoScreen.jsx"],"names":["useState","useEffect","ListGroup","useConversations","axios","ConversationInfoScreen","containerRef","convoInfo","setConvoInfo","selectedConversation","loading","setLoading","trimMessages","conversation","mutatedConversation","messages","getConversationInformation","filteredConversation","conversationInformation","get","JSON","stringify","data","thisConvoInfo","paddingTop","name"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,gBAAT,QAAiC,qCAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,sBAAT,CAAgC;AAAEC,EAAAA;AAAF,CAAhC,EAAkD;AAAA;;AAC/D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;AACA,QAAM;AAAES,IAAAA;AAAF,MAA2BN,gBAAgB,EAAjD;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;;AAEA,WAASY,YAAT,CAAsBC,YAAtB,EAAoC;AAClC,UAAMC,mBAAmB,GAAG,EAAE,GAAGD;AAAL,KAA5B;AACAC,IAAAA,mBAAmB,CAACC,QAApB,GAA+B,EAA/B;AACA,WAAOD,mBAAP;AACD;;AAED,iBAAeE,0BAAf,GAA4C;AAC1C,UAAMC,oBAAoB,GAAGL,YAAY,CAACH,oBAAD,CAAzC;AACA,UAAMS,uBAAuB,GAAG,MAAMd,KAAK,CAACe,GAAN,CACnC,6BAA4BC,IAAI,CAACC,SAAL,CAAeJ,oBAAf,CAAqC,EAD9B,CAAtC;AAGA,WAAOC,uBAAuB,CAACI,IAA/B;AACD;;AAEDrB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,aAAa,GAAGP,0BAA0B,EAAhD;AACAR,IAAAA,YAAY,CAACe,aAAD,CAAZ,CAFc,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAZ;AAAA,2BACE,QAAC,SAAD;AAAA,6BACE,QAAC,SAAD,CAAW,IAAX;AAAA,8BAAwBjB,SAAS,CAACkB,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAhCuBpB,sB;UAEWF,gB;;;KAFXE,sB","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { useConversations } from \"../../../utils/ConversationProvider\";\nimport axios from \"axios\";\n\nexport default function ConversationInfoScreen({ containerRef }) {\n  const [convoInfo, setConvoInfo] = useState();\n  const { selectedConversation } = useConversations();\n  const [loading, setLoading] = useState(true);\n\n  function trimMessages(conversation) {\n    const mutatedConversation = { ...conversation };\n    mutatedConversation.messages = [];\n    return mutatedConversation;\n  }\n\n  async function getConversationInformation() {\n    const filteredConversation = trimMessages(selectedConversation);\n    const conversationInformation = await axios.get(\n      `api/conversations/getInfo/${JSON.stringify(filteredConversation)}`\n    );\n    return conversationInformation.data;\n  }\n\n  useEffect(() => {\n    const thisConvoInfo = getConversationInformation();\n    setConvoInfo(thisConvoInfo);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div style={{ paddingTop: \"40px\" }}>\n      <ListGroup>\n        <ListGroup.Item>Hello, {convoInfo.name}</ListGroup.Item>\n      </ListGroup>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}