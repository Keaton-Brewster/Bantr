{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Users/CometChatUserListWithMessages/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChatUserList } from \"../\";\nimport { CometChatMessages } from \"../../Messages\";\nimport { CometChatIncomingCall } from \"../../Calls\";\nimport { CometChatContextProvider } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { userScreenStyle, userScreenSidebarStyle, userScreenMainStyle } from \"./style\";\n\nclass CometChatUserListWithMessages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loggedInUser = null;\n\n    this.itemClicked = (user, type) => {\n      this.contextProviderRef.setTypeAndItem(type, user);\n      this.toggleSideBar();\n    };\n\n    this.actionHandler = action => {\n      switch (action) {\n        case enums.ACTIONS[\"TOGGLE_SIDEBAR\"]:\n          this.toggleSideBar();\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.toggleSideBar = () => {\n      const sidebarview = this.state.sidebarview;\n      this.setState({\n        sidebarview: !sidebarview\n      });\n    };\n\n    this.state = {\n      sidebarview: false,\n      lang: props.lang\n    };\n    this.contextProviderRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.chatWithUser.length === 0) {\n      this.toggleSideBar();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.lang !== this.props.lang) {\n      this.setState({\n        lang: this.props.lang\n      });\n    }\n  }\n\n  render() {\n    let messageScreen = jsx(CometChatMessages, {\n      _parent: \"userscreen\",\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    });\n    return jsx(CometChatContextProvider, {\n      ref: el => this.contextProviderRef = el,\n      user: this.props.chatWithUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, jsx(\"div\", {\n      css: userScreenStyle(this.props),\n      className: \"cometchat cometchat--contacts\",\n      dir: Translator.getDirection(this.state.lang),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, jsx(\"div\", {\n      css: userScreenSidebarStyle(this.state, this.props),\n      className: \"contacts__sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, jsx(CometChatUserList, {\n      _parent: \"ulwm\",\n      theme: this.props.theme,\n      lang: this.state.lang,\n      onItemClick: this.itemClicked,\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    })), jsx(\"div\", {\n      css: userScreenMainStyle(this.state, this.props),\n      className: \"contacts__main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, messageScreen), jsx(CometChatIncomingCall, {\n      theme: this.props.theme,\n      lang: this.state.lang,\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatUserListWithMessages.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  chatWithUser: \"\"\n};\nCometChatUserListWithMessages.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  chatWithUser: PropTypes.string\n};\nexport { CometChatUserListWithMessages };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Users/CometChatUserListWithMessages/index.js"],"names":["React","jsx","PropTypes","CometChatUserList","CometChatMessages","CometChatIncomingCall","CometChatContextProvider","enums","theme","Translator","userScreenStyle","userScreenSidebarStyle","userScreenMainStyle","CometChatUserListWithMessages","Component","constructor","props","loggedInUser","itemClicked","user","type","contextProviderRef","setTypeAndItem","toggleSideBar","actionHandler","action","ACTIONS","sidebarview","state","setState","lang","createRef","componentDidMount","chatWithUser","length","componentDidUpdate","prevProps","render","messageScreen","el","getDirection","defaultProps","getDefaultLanguage","propTypes","string","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;;AACA;;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,iBAAT,QAAkC,KAAlC;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,qBAAT,QAAsC,aAAtC;AAEA,SAASC,wBAAT,QAAyC,gCAAzC;AACA,OAAO,KAAKC,KAAZ,MAAuB,wBAAvB;AAEA,SAASC,KAAT,QAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,4CAAvB;AAEA,SACEC,eADF,EAEEC,sBAFF,EAGEC,mBAHF,QAIO,SAJP;;AAMA,MAAMC,6BAAN,SAA4Cb,KAAK,CAACc,SAAlD,CAA4D;AAG1DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAFnBC,YAEmB,GAFJ,IAEI;;AAAA,SAuBnBC,WAvBmB,GAuBL,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC5B,WAAKC,kBAAL,CAAwBC,cAAxB,CAAuCF,IAAvC,EAA6CD,IAA7C;AACA,WAAKI,aAAL;AACD,KA1BkB;;AAAA,SA4BnBC,aA5BmB,GA4BFC,MAAD,IAAY;AAC1B,cAAQA,MAAR;AACE,aAAKlB,KAAK,CAACmB,OAAN,CAAc,gBAAd,CAAL;AACE,eAAKH,aAAL;AACA;;AACF;AACE;AALJ;AAOD,KApCkB;;AAAA,SAsCnBA,aAtCmB,GAsCH,MAAM;AACpB,YAAMI,WAAW,GAAG,KAAKC,KAAL,CAAWD,WAA/B;AACA,WAAKE,QAAL,CAAc;AAAEF,QAAAA,WAAW,EAAE,CAACA;AAAhB,OAAd;AACD,KAzCkB;;AAGjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,WAAW,EAAE,KADF;AAEXG,MAAAA,IAAI,EAAEd,KAAK,CAACc;AAFD,KAAb;AAKA,SAAKT,kBAAL,gBAA0BrB,KAAK,CAAC+B,SAAN,EAA1B;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKhB,KAAL,CAAWiB,YAAX,CAAwBC,MAAxB,KAAmC,CAAvC,EAA0C;AACxC,WAAKX,aAAL;AACD;AACF;;AAEDY,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACN,IAAV,KAAmB,KAAKd,KAAL,CAAWc,IAAlC,EAAwC;AACtC,WAAKD,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE,KAAKd,KAAL,CAAWc;AAAnB,OAAd;AACD;AACF;;AAsBDO,EAAAA,MAAM,GAAG;AACP,QAAIC,aAAa,GACf,IAAC,iBAAD;AACE,MAAA,OAAO,EAAC,YADV;AAEE,MAAA,eAAe,EAAE,KAAKd,aAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOA,WACE,IAAC,wBAAD;AACE,MAAA,GAAG,EAAGe,EAAD,IAAS,KAAKlB,kBAAL,GAA0BkB,EAD1C;AAEE,MAAA,IAAI,EAAE,KAAKvB,KAAL,CAAWiB,YAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AACE,MAAA,GAAG,EAAEvB,eAAe,CAAC,KAAKM,KAAN,CADtB;AAEE,MAAA,SAAS,EAAC,+BAFZ;AAGE,MAAA,GAAG,EAAEP,UAAU,CAAC+B,YAAX,CAAwB,KAAKZ,KAAL,CAAWE,IAAnC,CAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AACE,MAAA,GAAG,EAAEnB,sBAAsB,CAAC,KAAKiB,KAAN,EAAa,KAAKZ,KAAlB,CAD7B;AAEE,MAAA,SAAS,EAAC,mBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,IAAC,iBAAD;AACE,MAAA,OAAO,EAAC,MADV;AAEE,MAAA,KAAK,EAAE,KAAKA,KAAL,CAAWR,KAFpB;AAGE,MAAA,IAAI,EAAE,KAAKoB,KAAL,CAAWE,IAHnB;AAIE,MAAA,WAAW,EAAE,KAAKZ,WAJpB;AAKE,MAAA,eAAe,EAAE,KAAKM,aALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CALF,EAiBE;AACE,MAAA,GAAG,EAAEZ,mBAAmB,CAAC,KAAKgB,KAAN,EAAa,KAAKZ,KAAlB,CAD1B;AAEE,MAAA,SAAS,EAAC,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGsB,aAJH,CAjBF,EAuBE,IAAC,qBAAD;AACE,MAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWR,KADpB;AAEE,MAAA,IAAI,EAAE,KAAKoB,KAAL,CAAWE,IAFnB;AAGE,MAAA,eAAe,EAAE,KAAKN,aAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,CAJF,CADF;AAoCD;;AA1FyD,C,CA6F5D;;;AACAX,6BAA6B,CAAC4B,YAA9B,GAA6C;AAC3CX,EAAAA,IAAI,EAAErB,UAAU,CAACiC,kBAAX,EADqC;AAE3ClC,EAAAA,KAAK,EAAEA,KAFoC;AAG3CyB,EAAAA,YAAY,EAAE;AAH6B,CAA7C;AAMApB,6BAA6B,CAAC8B,SAA9B,GAA0C;AACxCb,EAAAA,IAAI,EAAE5B,SAAS,CAAC0C,MADwB;AAExCpC,EAAAA,KAAK,EAAEN,SAAS,CAAC2C,MAFuB;AAGxCZ,EAAAA,YAAY,EAAE/B,SAAS,CAAC0C;AAHgB,CAA1C;AAMA,SAAS/B,6BAAT","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\n\nimport { CometChatUserList } from \"../\";\nimport { CometChatMessages } from \"../../Messages\";\nimport { CometChatIncomingCall } from \"../../Calls\";\n\nimport { CometChatContextProvider } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\n\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\n\nimport {\n  userScreenStyle,\n  userScreenSidebarStyle,\n  userScreenMainStyle,\n} from \"./style\";\n\nclass CometChatUserListWithMessages extends React.Component {\n  loggedInUser = null;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sidebarview: false,\n      lang: props.lang,\n    };\n\n    this.contextProviderRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.chatWithUser.length === 0) {\n      this.toggleSideBar();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.lang !== this.props.lang) {\n      this.setState({ lang: this.props.lang });\n    }\n  }\n\n  itemClicked = (user, type) => {\n    this.contextProviderRef.setTypeAndItem(type, user);\n    this.toggleSideBar();\n  };\n\n  actionHandler = (action) => {\n    switch (action) {\n      case enums.ACTIONS[\"TOGGLE_SIDEBAR\"]:\n        this.toggleSideBar();\n        break;\n      default:\n        break;\n    }\n  };\n\n  toggleSideBar = () => {\n    const sidebarview = this.state.sidebarview;\n    this.setState({ sidebarview: !sidebarview });\n  };\n\n  render() {\n    let messageScreen = (\n      <CometChatMessages\n        _parent=\"userscreen\"\n        actionGenerated={this.actionHandler}\n      />\n    );\n\n    return (\n      <CometChatContextProvider\n        ref={(el) => (this.contextProviderRef = el)}\n        user={this.props.chatWithUser}\n      >\n        <div\n          css={userScreenStyle(this.props)}\n          className=\"cometchat cometchat--contacts\"\n          dir={Translator.getDirection(this.state.lang)}\n        >\n          <div\n            css={userScreenSidebarStyle(this.state, this.props)}\n            className=\"contacts__sidebar\"\n          >\n            <CometChatUserList\n              _parent=\"ulwm\"\n              theme={this.props.theme}\n              lang={this.state.lang}\n              onItemClick={this.itemClicked}\n              actionGenerated={this.actionHandler}\n            />\n          </div>\n          <div\n            css={userScreenMainStyle(this.state, this.props)}\n            className=\"contacts__main\"\n          >\n            {messageScreen}\n          </div>\n          <CometChatIncomingCall\n            theme={this.props.theme}\n            lang={this.state.lang}\n            actionGenerated={this.actionHandler}\n          />\n        </div>\n      </CometChatContextProvider>\n    );\n  }\n}\n\n// Specifies the default values for props:\nCometChatUserListWithMessages.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  chatWithUser: \"\",\n};\n\nCometChatUserListWithMessages.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  chatWithUser: PropTypes.string,\n};\n\nexport { CometChatUserListWithMessages };\n"]},"metadata":{},"sourceType":"module"}