{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Users/CometChatUserDetails/index.js\";\nimport React from \"react\";\nimport dateFormat from \"dateformat\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatAvatar, CometChatToastNotification } from \"../../Shared/\";\nimport { CometChatSharedMediaView } from \"../../Shared/CometChatSharedMediaView/index.js\";\nimport { UserDetailManager } from \"./controller\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { userDetailStyle, headerStyle, headerCloseStyle, headerTitleStyle, sectionStyle, actionSectionStyle, mediaSectionStyle, privacySectionStyle, sectionHeaderStyle, sectionContentStyle, contentItemStyle, itemLinkStyle, userInfoSectionStyle, userThumbnailStyle, userNameStyle, userStatusStyle, userPresenceStyle } from \"./style\";\nimport navigateIcon from \"./resources/back.svg\";\n\nclass CometChatUserDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.enableUserPresence = () => {\n      this.context.FeatureRestriction.isUserPresenceEnabled().then(response => {\n        if (response !== this.state.enableUserPresence) {\n          this.setState({\n            enableUserPresence: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableUserPresence !== false) {\n          this.setState({\n            enableUserPresence: false\n          });\n        }\n      });\n    };\n\n    this.updateUser = (key, user) => {\n      switch (key) {\n        case enums.USER_ONLINE:\n        case enums.USER_OFFLINE:\n          {\n            if (this.context.type === CometChat.ACTION_TYPE.TYPE_USER && this.context.item.uid === user.uid) {\n              //if user presence feature is disabled\n              if (this.state.enableUserPresence === false) {\n                return false;\n              }\n\n              let status = \"\";\n\n              if (user.status === CometChat.USER_STATUS.OFFLINE) {\n                status = Translator.translate(\"OFFLINE\", this.context.language);\n              } else if (user.status === CometChat.USER_STATUS.ONLINE) {\n                status = Translator.translate(\"ONLINE\", this.context.language);\n              }\n\n              this.setState({\n                status: status\n              });\n            }\n\n            break;\n          }\n\n        default:\n          break;\n      }\n    };\n\n    this.setStatusForUser = () => {\n      let status = null;\n\n      if (this.context.item.status === CometChat.USER_STATUS.OFFLINE && this.context.item.lastActiveAt) {\n        const lastActive = this.context.item.lastActiveAt * 1000;\n        const messageDate = dateFormat(lastActive, \"dS mmm yyyy, h:MM TT\");\n        status = `${Translator.translate(\"LAST_ACTIVE_AT\", this.context.language)}: ${messageDate}`;\n      } else if (this.context.item.status === CometChat.USER_STATUS.OFFLINE) {\n        status = Translator.translate(\"OFFLINE\", this.context.language);\n      } else if (this.context.item.status === CometChat.USER_STATUS.ONLINE) {\n        status = Translator.translate(\"ONLINE\", this.context.language);\n      }\n\n      this.setState({\n        status: status\n      });\n    };\n\n    this.enableSharedMedia = () => {\n      this.context.FeatureRestriction.isSharedMediaEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableSharedMedia && this._isMounted) {\n          this.setState({\n            enableSharedMedia: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableSharedMedia !== false && this._isMounted) {\n          this.setState({\n            enableSharedMedia: false\n          });\n        }\n      });\n    };\n\n    this.enableBlockUser = () => {\n      this.context.FeatureRestriction.isBlockUserEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableBlockUser) {\n          this.setState({\n            enableBlockUser: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableBlockUser !== false) {\n          this.setState({\n            enableBlockUser: false\n          });\n        }\n      });\n    };\n\n    this.enableViewProfile = () => {\n      this.context.FeatureRestriction.isViewProfileEnabled().then(response => {\n        if (response !== this.state.enableViewProfile && this._isMounted) {\n          this.setState({\n            enableViewProfile: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableViewProfile !== false && this._isMounted) {\n          this.setState({\n            enableViewProfile: false\n          });\n        }\n      });\n    };\n\n    this.blockUser = () => {\n      let uid = this.context.item.uid;\n      let usersList = [uid];\n      CometChat.blockUsers(usersList).then(response => {\n        if (response && response.hasOwnProperty(uid) && response[uid].hasOwnProperty(\"success\") && response[uid][\"success\"] === true) {\n          this.context.setToastMessage(\"success\", \"BLOCK_USER_SUCCESS\");\n          this.context.setItem(Object.assign({}, this.context.item, {\n            blockedByMe: true\n          }));\n          this.context.setType(CometChat.ACTION_TYPE.TYPE_USER);\n        } else {\n          this.toastRef.setError(\"SOMETHING_WRONG\");\n        }\n      }).catch(error => this.toastRef.setError(\"SOMETHING_WRONG\"));\n    };\n\n    this.unblockUser = () => {\n      let uid = this.context.item.uid;\n      let usersList = [uid];\n      CometChat.unblockUsers(usersList).then(response => {\n        if (response && response.hasOwnProperty(uid) && response[uid].hasOwnProperty(\"success\") && response[uid][\"success\"] === true) {\n          this.context.setToastMessage(\"success\", \"UNBLOCK_USER_SUCCESS\");\n          this.context.setItem(Object.assign({}, this.context.item, {\n            blockedByMe: false\n          }));\n          this.context.setType(CometChat.ACTION_TYPE.TYPE_USER);\n        } else {\n          this.toastRef.setError(\"SOMETHING_WRONG\");\n        }\n      }).catch(error => this.toastRef.setError(\"SOMETHING_WRONG\"));\n    };\n\n    this.viewProfile = () => {\n      const profileLink = this.context.item.link;\n      window.open(profileLink, \"\", \"fullscreen=yes, scrollbars=auto\");\n    };\n\n    this._isMounted = false;\n    this.state = {\n      loggedInUser: null,\n      status: null,\n      enableSharedMedia: false,\n      enableBlockUser: false,\n      enableViewProfile: false,\n      enableUserPresence: false\n    };\n    this.toastRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    CometChat.getLoggedinUser().then(user => {\n      if (this._isMounted) {\n        this.setState({\n          loggedInUser: user\n        });\n      }\n    }).catch(error => this.toastRef.setError(\"SOMETHING_WRONG\"));\n    this._isMounted = true;\n    this.toastRef = /*#__PURE__*/React.createRef();\n    this.UserDetailManager = new UserDetailManager();\n    this.UserDetailManager.attachListeners(this.updateUser);\n    this.setStatusForUser();\n    this.enableSharedMedia();\n    this.enableBlockUser();\n    this.enableViewProfile();\n    this.enableUserPresence();\n  }\n\n  componentDidUpdate() {\n    this.enableSharedMedia();\n    this.enableBlockUser();\n    this.enableViewProfile();\n    this.enableUserPresence();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    this.UserDetailManager.removeListeners();\n    this.UserDetailManager = null;\n  }\n\n  render() {\n    if (this.state.loggedInUser === null) {\n      return null;\n    }\n\n    let viewProfile = null;\n\n    if (this.state.enableViewProfile === true && this.context.item.hasOwnProperty(\"link\") && this.context.item.link && this.context.item.link.trim().length) {\n      viewProfile = jsx(\"div\", {\n        css: sectionStyle(),\n        className: \"detailpane__section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 9\n        }\n      }, jsx(\"div\", {\n        css: actionSectionStyle(this.context),\n        className: \"section section__viewprofile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }\n      }, jsx(\"h6\", {\n        css: sectionHeaderStyle(this.props),\n        className: \"section__header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }\n      }, Translator.translate(\"ACTIONS\", this.context.language)), jsx(\"div\", {\n        css: sectionContentStyle(),\n        className: \"section__content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }\n      }, jsx(\"div\", {\n        css: contentItemStyle(),\n        className: \"content__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 15\n        }\n      }, jsx(\"div\", {\n        css: itemLinkStyle(this.context),\n        className: \"item__link\",\n        onClick: this.viewProfile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 17\n        }\n      }, Translator.translate(\"VIEW_PROFILE\", this.context.language))))));\n    }\n\n    let blockUserText;\n\n    if (this.context.item.blockedByMe) {\n      blockUserText = jsx(\"div\", {\n        css: itemLinkStyle(this.context),\n        className: \"item__link\",\n        onClick: this.unblockUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 9\n        }\n      }, Translator.translate(\"UNBLOCK_USER\", this.context.language));\n    } else {\n      blockUserText = jsx(\"div\", {\n        css: itemLinkStyle(this.context),\n        className: \"item__link\",\n        onClick: this.blockUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 9\n        }\n      }, Translator.translate(\"BLOCK_USER\", this.context.language));\n    }\n\n    let blockUserView = jsx(\"div\", {\n      css: sectionStyle(),\n      className: \"detailpane__section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 7\n      }\n    }, jsx(\"div\", {\n      css: privacySectionStyle(this.context),\n      className: \"section section__privacy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }\n    }, jsx(\"h6\", {\n      css: sectionHeaderStyle(this.context),\n      className: \"section__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }\n    }, Translator.translate(\"OPTIONS\", this.context.language)), jsx(\"div\", {\n      css: sectionContentStyle(),\n      className: \"section__content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }\n    }, jsx(\"div\", {\n      css: contentItemStyle(),\n      className: \"content__item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 13\n      }\n    }, blockUserText)))); //if block/unblock user feature is disabled\n\n    if (this.state.enableBlockUser === false) {\n      blockUserView = null;\n    }\n\n    let sharedmediaView = jsx(\"div\", {\n      css: mediaSectionStyle(),\n      className: \"detailpane__section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 7\n      }\n    }, jsx(CometChatSharedMediaView, {\n      theme: this.props.theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }\n    })); //if shared media feature is disabled\n\n    if (this.state.enableSharedMedia === false) {\n      sharedmediaView = null;\n    }\n\n    return jsx(\"div\", {\n      css: userDetailStyle(this.context),\n      className: \"detailpane detailpane--user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 7\n      }\n    }, jsx(\"div\", {\n      css: headerStyle(this.context),\n      className: \"detailpane__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }\n    }, jsx(\"div\", {\n      css: headerCloseStyle(navigateIcon, this.context),\n      className: \"header__close\",\n      onClick: () => this.props.actionGenerated(enums.ACTIONS[\"CLOSE_USER_DETAIL\"]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }\n    }), jsx(\"h4\", {\n      css: headerTitleStyle(),\n      className: \"header__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 11\n      }\n    }, Translator.translate(\"DETAILS\", this.context.language))), jsx(\"div\", {\n      css: sectionStyle(),\n      className: \"detailpane__section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }\n    }, jsx(\"div\", {\n      css: userInfoSectionStyle(),\n      className: \"section section__userinfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }\n    }, jsx(\"div\", {\n      css: userThumbnailStyle(),\n      className: \"user__thumbnail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 13\n      }\n    }, jsx(CometChatAvatar, {\n      user: this.context.item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 15\n      }\n    })), jsx(\"div\", {\n      css: userStatusStyle(),\n      className: \"user__status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 13\n      }\n    }, jsx(\"h6\", {\n      css: userNameStyle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 15\n      }\n    }, this.context.item.name), jsx(\"span\", {\n      css: userPresenceStyle(this.context, this.state),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 15\n      }\n    }, this.state.status)))), jsx(CometChatToastNotification, {\n      ref: el => this.toastRef = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }\n    }), viewProfile, blockUserView, sharedmediaView);\n  }\n\n}\n\nCometChatUserDetails.contextType = CometChatContext;\nexport { CometChatUserDetails };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Users/CometChatUserDetails/index.js"],"names":["React","dateFormat","jsx","CometChat","CometChatAvatar","CometChatToastNotification","CometChatSharedMediaView","UserDetailManager","CometChatContext","enums","Translator","userDetailStyle","headerStyle","headerCloseStyle","headerTitleStyle","sectionStyle","actionSectionStyle","mediaSectionStyle","privacySectionStyle","sectionHeaderStyle","sectionContentStyle","contentItemStyle","itemLinkStyle","userInfoSectionStyle","userThumbnailStyle","userNameStyle","userStatusStyle","userPresenceStyle","CometChatUserDetails","Component","constructor","props","enableUserPresence","context","FeatureRestriction","isUserPresenceEnabled","then","response","state","setState","catch","error","updateUser","key","user","USER_ONLINE","USER_OFFLINE","type","ACTION_TYPE","TYPE_USER","item","uid","status","USER_STATUS","OFFLINE","translate","language","ONLINE","setStatusForUser","lastActiveAt","lastActive","messageDate","enableSharedMedia","isSharedMediaEnabled","_isMounted","enableBlockUser","isBlockUserEnabled","enableViewProfile","isViewProfileEnabled","blockUser","usersList","blockUsers","hasOwnProperty","setToastMessage","setItem","Object","assign","blockedByMe","setType","toastRef","setError","unblockUser","unblockUsers","viewProfile","profileLink","link","window","open","loggedInUser","createRef","componentDidMount","getLoggedinUser","attachListeners","componentDidUpdate","componentWillUnmount","removeListeners","render","trim","length","blockUserText","blockUserView","sharedmediaView","theme","navigateIcon","actionGenerated","ACTIONS","name","el","contextType"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport dateFormat from \"dateformat\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { CometChatAvatar, CometChatToastNotification } from \"../../Shared/\";\nimport { CometChatSharedMediaView } from \"../../Shared/CometChatSharedMediaView/index.js\";\n\nimport { UserDetailManager } from \"./controller\";\n\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\n\nimport Translator from \"../../../resources/localization/translator\";\n\nimport {\n  userDetailStyle,\n  headerStyle,\n  headerCloseStyle,\n  headerTitleStyle,\n  sectionStyle,\n  actionSectionStyle,\n  mediaSectionStyle,\n  privacySectionStyle,\n  sectionHeaderStyle,\n  sectionContentStyle,\n  contentItemStyle,\n  itemLinkStyle,\n  userInfoSectionStyle,\n  userThumbnailStyle,\n  userNameStyle,\n  userStatusStyle,\n  userPresenceStyle,\n} from \"./style\";\n\nimport navigateIcon from \"./resources/back.svg\";\n\nclass CometChatUserDetails extends React.Component {\n  static contextType = CometChatContext;\n\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this.state = {\n      loggedInUser: null,\n      status: null,\n      enableSharedMedia: false,\n      enableBlockUser: false,\n      enableViewProfile: false,\n      enableUserPresence: false,\n    };\n\n    this.toastRef = React.createRef();\n  }\n\n  componentDidMount() {\n    CometChat.getLoggedinUser()\n      .then((user) => {\n        if (this._isMounted) {\n          this.setState({ loggedInUser: user });\n        }\n      })\n      .catch((error) => this.toastRef.setError(\"SOMETHING_WRONG\"));\n\n    this._isMounted = true;\n    this.toastRef = React.createRef();\n\n    this.UserDetailManager = new UserDetailManager();\n    this.UserDetailManager.attachListeners(this.updateUser);\n\n    this.setStatusForUser();\n    this.enableSharedMedia();\n    this.enableBlockUser();\n    this.enableViewProfile();\n    this.enableUserPresence();\n  }\n\n  componentDidUpdate() {\n    this.enableSharedMedia();\n    this.enableBlockUser();\n    this.enableViewProfile();\n    this.enableUserPresence();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    this.UserDetailManager.removeListeners();\n    this.UserDetailManager = null;\n  }\n\n  enableUserPresence = () => {\n    this.context.FeatureRestriction.isUserPresenceEnabled()\n      .then((response) => {\n        if (response !== this.state.enableUserPresence) {\n          this.setState({ enableUserPresence: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableUserPresence !== false) {\n          this.setState({ enableUserPresence: false });\n        }\n      });\n  };\n\n  updateUser = (key, user) => {\n    switch (key) {\n      case enums.USER_ONLINE:\n      case enums.USER_OFFLINE: {\n        if (\n          this.context.type === CometChat.ACTION_TYPE.TYPE_USER &&\n          this.context.item.uid === user.uid\n        ) {\n          //if user presence feature is disabled\n          if (this.state.enableUserPresence === false) {\n            return false;\n          }\n\n          let status = \"\";\n          if (user.status === CometChat.USER_STATUS.OFFLINE) {\n            status = Translator.translate(\"OFFLINE\", this.context.language);\n          } else if (user.status === CometChat.USER_STATUS.ONLINE) {\n            status = Translator.translate(\"ONLINE\", this.context.language);\n          }\n          this.setState({ status: status });\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  setStatusForUser = () => {\n    let status = null;\n    if (\n      this.context.item.status === CometChat.USER_STATUS.OFFLINE &&\n      this.context.item.lastActiveAt\n    ) {\n      const lastActive = this.context.item.lastActiveAt * 1000;\n      const messageDate = dateFormat(lastActive, \"dS mmm yyyy, h:MM TT\");\n\n      status = `${Translator.translate(\n        \"LAST_ACTIVE_AT\",\n        this.context.language\n      )}: ${messageDate}`;\n    } else if (this.context.item.status === CometChat.USER_STATUS.OFFLINE) {\n      status = Translator.translate(\"OFFLINE\", this.context.language);\n    } else if (this.context.item.status === CometChat.USER_STATUS.ONLINE) {\n      status = Translator.translate(\"ONLINE\", this.context.language);\n    }\n\n    this.setState({ status: status });\n  };\n\n  enableSharedMedia = () => {\n    this.context.FeatureRestriction.isSharedMediaEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableSharedMedia && this._isMounted) {\n          this.setState({ enableSharedMedia: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableSharedMedia !== false && this._isMounted) {\n          this.setState({ enableSharedMedia: false });\n        }\n      });\n  };\n\n  enableBlockUser = () => {\n    this.context.FeatureRestriction.isBlockUserEnabled()\n      .then((response) => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableBlockUser) {\n          this.setState({ enableBlockUser: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableBlockUser !== false) {\n          this.setState({ enableBlockUser: false });\n        }\n      });\n  };\n\n  enableViewProfile = () => {\n    this.context.FeatureRestriction.isViewProfileEnabled()\n      .then((response) => {\n        if (response !== this.state.enableViewProfile && this._isMounted) {\n          this.setState({ enableViewProfile: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableViewProfile !== false && this._isMounted) {\n          this.setState({ enableViewProfile: false });\n        }\n      });\n  };\n\n  blockUser = () => {\n    let uid = this.context.item.uid;\n    let usersList = [uid];\n    CometChat.blockUsers(usersList)\n      .then((response) => {\n        if (\n          response &&\n          response.hasOwnProperty(uid) &&\n          response[uid].hasOwnProperty(\"success\") &&\n          response[uid][\"success\"] === true\n        ) {\n          this.context.setToastMessage(\"success\", \"BLOCK_USER_SUCCESS\");\n          this.context.setItem(\n            Object.assign({}, this.context.item, { blockedByMe: true })\n          );\n          this.context.setType(CometChat.ACTION_TYPE.TYPE_USER);\n        } else {\n          this.toastRef.setError(\"SOMETHING_WRONG\");\n        }\n      })\n      .catch((error) => this.toastRef.setError(\"SOMETHING_WRONG\"));\n  };\n\n  unblockUser = () => {\n    let uid = this.context.item.uid;\n    let usersList = [uid];\n    CometChat.unblockUsers(usersList)\n      .then((response) => {\n        if (\n          response &&\n          response.hasOwnProperty(uid) &&\n          response[uid].hasOwnProperty(\"success\") &&\n          response[uid][\"success\"] === true\n        ) {\n          this.context.setToastMessage(\"success\", \"UNBLOCK_USER_SUCCESS\");\n          this.context.setItem(\n            Object.assign({}, this.context.item, { blockedByMe: false })\n          );\n          this.context.setType(CometChat.ACTION_TYPE.TYPE_USER);\n        } else {\n          this.toastRef.setError(\"SOMETHING_WRONG\");\n        }\n      })\n      .catch((error) => this.toastRef.setError(\"SOMETHING_WRONG\"));\n  };\n\n  viewProfile = () => {\n    const profileLink = this.context.item.link;\n    window.open(profileLink, \"\", \"fullscreen=yes, scrollbars=auto\");\n  };\n\n  render() {\n    if (this.state.loggedInUser === null) {\n      return null;\n    }\n\n    let viewProfile = null;\n    if (\n      this.state.enableViewProfile === true &&\n      this.context.item.hasOwnProperty(\"link\") &&\n      this.context.item.link &&\n      this.context.item.link.trim().length\n    ) {\n      viewProfile = (\n        <div css={sectionStyle()} className=\"detailpane__section\">\n          <div\n            css={actionSectionStyle(this.context)}\n            className=\"section section__viewprofile\"\n          >\n            <h6\n              css={sectionHeaderStyle(this.props)}\n              className=\"section__header\"\n            >\n              {Translator.translate(\"ACTIONS\", this.context.language)}\n            </h6>\n            <div css={sectionContentStyle()} className=\"section__content\">\n              <div css={contentItemStyle()} className=\"content__item\">\n                <div\n                  css={itemLinkStyle(this.context)}\n                  className=\"item__link\"\n                  onClick={this.viewProfile}\n                >\n                  {Translator.translate(\"VIEW_PROFILE\", this.context.language)}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    let blockUserText;\n    if (this.context.item.blockedByMe) {\n      blockUserText = (\n        <div\n          css={itemLinkStyle(this.context)}\n          className=\"item__link\"\n          onClick={this.unblockUser}\n        >\n          {Translator.translate(\"UNBLOCK_USER\", this.context.language)}\n        </div>\n      );\n    } else {\n      blockUserText = (\n        <div\n          css={itemLinkStyle(this.context)}\n          className=\"item__link\"\n          onClick={this.blockUser}\n        >\n          {Translator.translate(\"BLOCK_USER\", this.context.language)}\n        </div>\n      );\n    }\n\n    let blockUserView = (\n      <div css={sectionStyle()} className=\"detailpane__section\">\n        <div\n          css={privacySectionStyle(this.context)}\n          className=\"section section__privacy\"\n        >\n          <h6\n            css={sectionHeaderStyle(this.context)}\n            className=\"section__header\"\n          >\n            {Translator.translate(\"OPTIONS\", this.context.language)}\n          </h6>\n          <div css={sectionContentStyle()} className=\"section__content\">\n            <div css={contentItemStyle()} className=\"content__item\">\n              {blockUserText}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n    //if block/unblock user feature is disabled\n    if (this.state.enableBlockUser === false) {\n      blockUserView = null;\n    }\n\n    let sharedmediaView = (\n      <div css={mediaSectionStyle()} className=\"detailpane__section\">\n        <CometChatSharedMediaView theme={this.props.theme} />\n      </div>\n    );\n\n    //if shared media feature is disabled\n    if (this.state.enableSharedMedia === false) {\n      sharedmediaView = null;\n    }\n\n    return (\n      <div\n        css={userDetailStyle(this.context)}\n        className=\"detailpane detailpane--user\"\n      >\n        <div css={headerStyle(this.context)} className=\"detailpane__header\">\n          <div\n            css={headerCloseStyle(navigateIcon, this.context)}\n            className=\"header__close\"\n            onClick={() =>\n              this.props.actionGenerated(enums.ACTIONS[\"CLOSE_USER_DETAIL\"])\n            }\n          ></div>\n          <h4 css={headerTitleStyle()} className=\"header__title\">\n            {Translator.translate(\"DETAILS\", this.context.language)}\n          </h4>\n        </div>\n        <div css={sectionStyle()} className=\"detailpane__section\">\n          <div\n            css={userInfoSectionStyle()}\n            className=\"section section__userinfo\"\n          >\n            <div css={userThumbnailStyle()} className=\"user__thumbnail\">\n              <CometChatAvatar user={this.context.item} />\n            </div>\n            <div css={userStatusStyle()} className=\"user__status\">\n              <h6 css={userNameStyle()}>{this.context.item.name}</h6>\n              <span css={userPresenceStyle(this.context, this.state)}>\n                {this.state.status}\n              </span>\n            </div>\n          </div>\n        </div>\n        <CometChatToastNotification ref={(el) => (this.toastRef = el)} />\n        {viewProfile}\n        {blockUserView}\n        {sharedmediaView}\n      </div>\n    );\n  }\n}\n\nexport { CometChatUserDetails };\n"]},"metadata":{},"sourceType":"module"}