{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatLiveReactions/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport * as enums from \"../../../util/enums.js\";\nimport { reactionContainerStyle, reactionEmojiStyle } from \"./style\";\nimport heartIcon from \"./resources/heart.png\";\n\nclass CometChatLiveReactions extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.setItems = () => {\n      const width = this.parentElement.offsetWidth;\n      const height = this.parentElement.offsetHeight;\n      const elements = this.parentElement.querySelectorAll(\".emoji\");\n\n      for (let i = 0; i < elements.length; i++) {\n        const element = elements[i],\n              elementWidth = element.offsetWidth,\n              elementHeight = element.offsetHeight;\n        const item = {\n          element: element,\n          elementHeight: elementHeight,\n          elementWidth: elementWidth,\n          ySpeed: -this.verticalSpeed,\n          omega: 2 * Math.PI * this.horizontalSpeed / (width * 60),\n          //omega= 2Pi*frequency\n          random: (Math.random() / 2 + 0.5) * i * 10000,\n          //random time offset\n          x: function (time) {\n            return (Math.sin(this.omega * (time + this.random)) + 1) / 2 * (width - elementWidth);\n          },\n          y: height + (Math.random() + 1) * i * elementHeight\n        };\n        this.items.push(item);\n      }\n    };\n\n    this.requestAnimation = () => {\n      this.timer = setTimeout(this.animate, 1000 / 60);\n    };\n\n    this.animate = () => {\n      if (!this.parentElement) {\n        return false;\n      }\n\n      const height = this.parentElement.offsetHeight;\n      const time = +new Date(); //little trick, gives unix time in ms\n\n      for (let i = 0; i < this.items.length; i++) {\n        const item = this.items[i];\n        const transformString = \"translate3d(\" + item.x(time) + \"px, \" + item.y + \"px, 0px)\";\n        item.element.style.transform = transformString;\n        item.element.style.visibility = \"visible\";\n\n        if (item.y <= height) {\n          item.element.classList.add(\"fade\");\n        }\n\n        item.y += item.ySpeed;\n      }\n\n      this.requestAnimation();\n    };\n\n    this.parentElement = /*#__PURE__*/React.createRef();\n    this.counter = 0;\n    this.verticalSpeed = 5;\n    this.horizontalSpeed = 2;\n    this.items = [];\n    this.before = Date.now();\n    const reaction = props.reaction ? enums.CONSTANTS[\"LIVE_REACTIONS\"][props.reaction] : enums.CONSTANTS[\"LIVE_REACTIONS\"][\"heart\"];\n    const reactionImg = jsx(\"img\", {\n      src: heartIcon,\n      alt: reaction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 30\n      }\n    });\n    this.emojis = Array(6).fill(reactionImg);\n  }\n\n  componentDidMount() {\n    this.setItems();\n    this.requestAnimation();\n  }\n\n  componentWillUnmount() {\n    this.timer = null;\n  }\n\n  render() {\n    const emojis = this.emojis.map((emoji, index) => jsx(\"span\", {\n      className: \"emoji\",\n      css: reactionEmojiStyle(),\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 59\n      }\n    }, emoji));\n    return jsx(\"div\", {\n      ref: el => this.parentElement = el,\n      css: reactionContainerStyle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, emojis);\n  }\n\n}\n\nexport { CometChatLiveReactions };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatLiveReactions/index.js"],"names":["React","jsx","enums","reactionContainerStyle","reactionEmojiStyle","heartIcon","CometChatLiveReactions","PureComponent","constructor","props","setItems","width","parentElement","offsetWidth","height","offsetHeight","elements","querySelectorAll","i","length","element","elementWidth","elementHeight","item","ySpeed","verticalSpeed","omega","Math","PI","horizontalSpeed","random","x","time","sin","y","items","push","requestAnimation","timer","setTimeout","animate","Date","transformString","style","transform","visibility","classList","add","createRef","counter","before","now","reaction","CONSTANTS","reactionImg","emojis","Array","fill","componentDidMount","componentWillUnmount","render","map","emoji","index","el"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\n\nimport * as enums from \"../../../util/enums.js\";\n\nimport {\n    reactionContainerStyle,\n    reactionEmojiStyle\n} from \"./style\";\n\nimport heartIcon from \"./resources/heart.png\";\n\nclass CometChatLiveReactions extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        this.parentElement = React.createRef();\n\n        this.counter = 0;\n        this.verticalSpeed = 5;\n        this.horizontalSpeed = 2;\n        this.items = [];\n\n        this.before = Date.now();\n\n        const reaction = (props.reaction) ? enums.CONSTANTS[\"LIVE_REACTIONS\"][props.reaction] : enums.CONSTANTS[\"LIVE_REACTIONS\"][\"heart\"];\n        const reactionImg = (<img src={heartIcon} alt={reaction} />);\n        this.emojis = Array(6).fill(reactionImg);\n    }\n\n    componentDidMount() {\n\n        this.setItems();\n        this.requestAnimation();\n    }\n\n    componentWillUnmount() {\n\n        this.timer = null;\n    }\n\n    setItems = () => {\n\n        const width = this.parentElement.offsetWidth;\n        const height = this.parentElement.offsetHeight;\n\n        const elements = this.parentElement.querySelectorAll(\".emoji\");\n\n        for (let i = 0; i < elements.length; i++) {\n\n            const element = elements[i],\n                elementWidth = element.offsetWidth,\n                elementHeight = element.offsetHeight;\n\n            const item = {\n                element: element,\n                elementHeight: elementHeight,\n                elementWidth: elementWidth,\n                ySpeed: -this.verticalSpeed,\n                omega: 2 * Math.PI * this.horizontalSpeed / (width * 60), //omega= 2Pi*frequency\n                random: (Math.random() / 2 + 0.5) * i * 10000, //random time offset\n                x: function (time) {\n                    return (Math.sin(this.omega * (time + this.random)) + 1) / 2 * (width - elementWidth);\n                },\n                y: height + (Math.random() + 1) * i * elementHeight,\n            }\n            \n            this.items.push(item);\n        }\n    }\n\n    requestAnimation = () => {\n        this.timer = setTimeout(this.animate, 1000/60);\n    }\n\n    animate = () => {\n\n        if (!this.parentElement) {\n            return false;\n        }\n\n        const height = this.parentElement.offsetHeight;\n        const time = +new Date(); //little trick, gives unix time in ms\n\n        for (let i = 0; i < this.items.length; i++) {\n\n            const item = this.items[i];\n            \n            const transformString = \"translate3d(\" + item.x(time) + \"px, \" + item.y + \"px, 0px)\";\n            item.element.style.transform = transformString;\n\n            item.element.style.visibility = \"visible\";\n\n            if (item.y <= height) {\n                item.element.classList.add(\"fade\");\n            }\n\n            item.y += item.ySpeed;\n        }\n\n        this.requestAnimation();\n    }\n\n    render () {\n        \n        const emojis = this.emojis.map((emoji, index) => (<span className=\"emoji\" css={reactionEmojiStyle()} key={index}>{emoji}</span>))\n        return (\n            <div ref={el => this.parentElement = el} css={reactionContainerStyle()}>{emojis}</div>\n        )\n    }\n}\n\nexport { CometChatLiveReactions };"]},"metadata":{},"sourceType":"module"}