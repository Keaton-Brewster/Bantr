{"ast":null,"code":"import _extends from \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/Extensions/CometChatSenderWhiteboardBubble/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChatMessageActions, CometChatThreadedMessageReplyCount, CometChatReadReceipt } from \"../../\";\nimport { CometChatMessageReactions } from \"../\";\nimport { CometChatContext } from \"../../../../util/CometChatContext\";\nimport { checkMessageForExtensionsData } from \"../../../../util/common\";\nimport { theme } from \"../../../../resources/theme\";\nimport Translator from \"../../../../resources/localization/translator\";\nimport { messageContainerStyle, messageWrapperStyle, messageTxtWrapperStyle, messageTxtContainerStyle, messageTxtStyle, messageTxtIconStyle, messageBtnStyle, messageInfoWrapperStyle, messageReactionsWrapperStyle } from \"./style\";\nimport whiteboardIcon from \"./resources/collaborative-whiteboard.svg\";\n\nclass CometChatSenderWhiteboardBubble extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.messageFrom = \"sender\";\n\n    this.launchCollaborativeWhiteboard = () => {\n      let whiteboardUrl = null;\n      let whiteboardData = checkMessageForExtensionsData(this.state.message, \"whiteboard\");\n\n      if (whiteboardData && whiteboardData.hasOwnProperty(\"board_url\") && whiteboardData.board_url.length) {\n        let username = this.props.loggedInUser.name.split(' ').join('_'); // Appending the username to the board_url\n\n        whiteboardUrl = whiteboardData.board_url + '&username=' + username;\n        window.open(whiteboardUrl, '', 'fullscreen=yes, scrollbars=auto');\n      }\n    };\n\n    this.handleMouseHover = () => {\n      this.setState(this.toggleHoverState);\n    };\n\n    this.toggleHoverState = state => {\n      return {\n        isHovering: !state.isHovering\n      };\n    };\n\n    const message = Object.assign({}, props.message, {\n      messageFrom: this.messageFrom\n    });\n    this.state = {\n      message: message,\n      isHovering: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const previousMessageStr = JSON.stringify(prevProps.message);\n    const currentMessageStr = JSON.stringify(this.props.message);\n\n    if (previousMessageStr !== currentMessageStr) {\n      const message = Object.assign({}, this.props.message, {\n        messageFrom: this.messageFrom\n      });\n      this.setState({\n        message: message\n      });\n    }\n  }\n\n  render() {\n    let messageReactions = null;\n    const reactionsData = checkMessageForExtensionsData(this.state.message, \"reactions\");\n\n    if (reactionsData) {\n      if (Object.keys(reactionsData).length) {\n        messageReactions = jsx(\"div\", {\n          css: messageReactionsWrapperStyle(),\n          className: \"message__reaction__wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }\n        }, jsx(CometChatMessageReactions, _extends({}, this.props, {\n          message: this.state.message,\n          reaction: reactionsData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }\n        })));\n      }\n    }\n\n    let toolTipView = null;\n\n    if (this.state.isHovering) {\n      toolTipView = jsx(CometChatMessageActions, _extends({}, this.props, {\n        message: this.state.message,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 28\n        }\n      }));\n    }\n\n    const documentTitle = Translator.translate(\"CREATED_WHITEBOARD\", this.props.lang);\n    return jsx(\"div\", {\n      css: messageContainerStyle(),\n      className: \"sender__message__container message__document\",\n      onMouseEnter: this.handleMouseHover,\n      onMouseLeave: this.handleMouseHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, toolTipView, jsx(\"div\", {\n      css: messageWrapperStyle(),\n      className: \"message__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, jsx(\"div\", {\n      css: messageTxtWrapperStyle(this.context),\n      className: \"message__whiteboard__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, jsx(\"div\", {\n      css: messageTxtContainerStyle(),\n      className: \"message__whiteboard__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, jsx(\"i\", {\n      css: messageTxtIconStyle(whiteboardIcon, this.context),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }), jsx(\"p\", {\n      css: messageTxtStyle(),\n      className: \"document__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    }, documentTitle)), jsx(\"ul\", {\n      css: messageBtnStyle(this.context),\n      className: \"document__button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, jsx(\"li\", {\n      onClick: this.launchCollaborativeWhiteboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }, jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }, Translator.translate(\"LAUNCH\", this.props.lang)))))), messageReactions, jsx(\"div\", {\n      css: messageInfoWrapperStyle(),\n      className: \"message__info__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, jsx(CometChatThreadedMessageReplyCount, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    })), jsx(CometChatReadReceipt, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatSenderWhiteboardBubble.contextType = CometChatContext;\nCometChatSenderWhiteboardBubble.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme\n};\nCometChatSenderWhiteboardBubble.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object\n};\nexport { CometChatSenderWhiteboardBubble };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/Extensions/CometChatSenderWhiteboardBubble/index.js"],"names":["React","jsx","PropTypes","CometChatMessageActions","CometChatThreadedMessageReplyCount","CometChatReadReceipt","CometChatMessageReactions","CometChatContext","checkMessageForExtensionsData","theme","Translator","messageContainerStyle","messageWrapperStyle","messageTxtWrapperStyle","messageTxtContainerStyle","messageTxtStyle","messageTxtIconStyle","messageBtnStyle","messageInfoWrapperStyle","messageReactionsWrapperStyle","CometChatSenderWhiteboardBubble","PureComponent","constructor","props","messageFrom","launchCollaborativeWhiteboard","whiteboardUrl","whiteboardData","state","message","hasOwnProperty","board_url","length","username","loggedInUser","name","split","join","window","open","handleMouseHover","setState","toggleHoverState","isHovering","Object","assign","componentDidUpdate","prevProps","previousMessageStr","JSON","stringify","currentMessageStr","render","messageReactions","reactionsData","keys","toolTipView","documentTitle","translate","lang","context","whiteboardIcon","contextType","defaultProps","getDefaultLanguage","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\n\nimport { CometChatMessageActions, CometChatThreadedMessageReplyCount, CometChatReadReceipt } from \"../../\";\nimport { CometChatMessageReactions } from \"../\";\n\nimport { CometChatContext } from \"../../../../util/CometChatContext\";\nimport { checkMessageForExtensionsData } from \"../../../../util/common\";\n\nimport { theme } from \"../../../../resources/theme\";\nimport Translator from \"../../../../resources/localization/translator\";\n\nimport {\n    messageContainerStyle,\n    messageWrapperStyle,\n    messageTxtWrapperStyle,\n    messageTxtContainerStyle,\n    messageTxtStyle,\n    messageTxtIconStyle,\n    messageBtnStyle,\n    messageInfoWrapperStyle,\n    messageReactionsWrapperStyle,\n} from \"./style\";\n\nimport whiteboardIcon from \"./resources/collaborative-whiteboard.svg\";\n\nclass CometChatSenderWhiteboardBubble extends React.PureComponent {\n\n    static contextType = CometChatContext;\n    messageFrom = \"sender\";\n\n    constructor(props) {\n\n        super(props);\n        const message = Object.assign({}, props.message, { messageFrom: this.messageFrom });\n\n        this.state = {\n            message: message,\n            isHovering: false\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n\n        const previousMessageStr = JSON.stringify(prevProps.message);\n        const currentMessageStr = JSON.stringify(this.props.message);\n\n        if (previousMessageStr !== currentMessageStr) {\n\n            const message = Object.assign({}, this.props.message, { messageFrom: this.messageFrom });\n            this.setState({ message: message })\n        }\n    }\n\n    launchCollaborativeWhiteboard = () => {\n\n        let whiteboardUrl = null;\n        let whiteboardData = checkMessageForExtensionsData(this.state.message, \"whiteboard\");\n        if (whiteboardData\n        && whiteboardData.hasOwnProperty(\"board_url\")\n        && whiteboardData.board_url.length) {\n\n            let username = this.props.loggedInUser.name.split(' ').join('_');\n            // Appending the username to the board_url\n            whiteboardUrl = whiteboardData.board_url + '&username=' + username;\n            window.open(whiteboardUrl, '', 'fullscreen=yes, scrollbars=auto');\n        }\n    }\n\n    handleMouseHover = () => {\n        this.setState(this.toggleHoverState);\n    }\n\n    toggleHoverState = (state) => {\n\n        return {\n            isHovering: !state.isHovering,\n        };\n    }\n\n    render() {\n\n        let messageReactions = null;\n        const reactionsData = checkMessageForExtensionsData(this.state.message, \"reactions\");\n        if (reactionsData) {\n\n            if (Object.keys(reactionsData).length) {\n                messageReactions = (\n                    <div css={messageReactionsWrapperStyle()} className=\"message__reaction__wrapper\">\n                        <CometChatMessageReactions {...this.props} message={this.state.message} reaction={reactionsData} />\n                    </div>\n                );\n            }\n        }\n\n        let toolTipView = null;\n        if (this.state.isHovering) {\n            toolTipView = (<CometChatMessageActions {...this.props} message={this.state.message} />);\n        }\n\n        const documentTitle = Translator.translate(\"CREATED_WHITEBOARD\", this.props.lang); \n        return (\n            <div \n            css={messageContainerStyle()} \n            className=\"sender__message__container message__document\"\n            onMouseEnter={this.handleMouseHover}\n            onMouseLeave={this.handleMouseHover}>\n\n                {toolTipView}\n                    \n                <div css={messageWrapperStyle()} className=\"message__wrapper\">\n                    <div css={messageTxtWrapperStyle(this.context)} className=\"message__whiteboard__wrapper\">\n                        <div css={messageTxtContainerStyle()} className=\"message__whiteboard__container\">\n                            <i css={messageTxtIconStyle(whiteboardIcon, this.context)}></i>\n                            <p css={messageTxtStyle()} className=\"document__title\">{documentTitle}</p>\n                        </div>\n                        <ul css={messageBtnStyle(this.context)} className=\"document__button\">\n                            <li onClick={this.launchCollaborativeWhiteboard}>\n                                <p>{Translator.translate(\"LAUNCH\", this.props.lang)}</p>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n\n                {messageReactions}\n\n                <div css={messageInfoWrapperStyle()} className=\"message__info__wrapper\">\n                    <CometChatThreadedMessageReplyCount {...this.props} message={this.state.message} />\n                    <CometChatReadReceipt {...this.props} message={this.state.message} />\n                </div>\n\n            </div>\n        )\n    }\n}\n\n// Specifies the default values for props:\nCometChatSenderWhiteboardBubble.defaultProps = {\n    lang: Translator.getDefaultLanguage(),\n    theme: theme\n};\n\nCometChatSenderWhiteboardBubble.propTypes = {\n    lang: PropTypes.string,\n    theme: PropTypes.object\n}\n\nexport { CometChatSenderWhiteboardBubble };"]},"metadata":{},"sourceType":"module"}