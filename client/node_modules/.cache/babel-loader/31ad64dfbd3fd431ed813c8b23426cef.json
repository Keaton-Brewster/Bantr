{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatThreadedMessageReplyCount/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { replyCountStyle } from \"./style\";\n\nconst CometChatThreadedMessageReplyCount = props => {\n  _s();\n\n  const context = React.useContext(CometChatContext);\n  const [reply, setReply] = React.useState(false);\n\n  const toggleReply = () => {\n    context.FeatureRestriction.isThreadedMessagesEnabled().then(response => {\n      if (response !== reply) {\n        setReply(response);\n      }\n    }).catch(error => {\n      if (reply !== false) {\n        setReply(false);\n      }\n    });\n  };\n\n  React.useEffect(toggleReply);\n  const replyCount = props.message.replyCount;\n  const replyText = replyCount === 1 ? `${replyCount} ${Translator.translate(\"REPLY\", props.lang)}` : `${replyCount} ${Translator.translate(\"REPLIES\", props.lang)}`;\n  let replies = jsx(\"span\", {\n    css: replyCountStyle(context),\n    className: \"replycount\",\n    onClick: () => props.actionGenerated(enums.ACTIONS[\"VIEW_THREADED_MESSAGE\"], props.message),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, replyText);\n\n  if (props.message.hasOwnProperty(\"replyCount\") === false) {\n    replies = null;\n  } //if threadedchats feature is disabled\n\n\n  if (reply === false) {\n    replies = null;\n  }\n\n  return replies;\n}; // Specifies the default values for props:\n\n\n_s(CometChatThreadedMessageReplyCount, \"gNDMO4U4KYUq0Wb8TQwxzKlUBPU=\");\n\n_c = CometChatThreadedMessageReplyCount;\nCometChatThreadedMessageReplyCount.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  message: {}\n};\nCometChatThreadedMessageReplyCount.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  message: PropTypes.object\n};\nexport { CometChatThreadedMessageReplyCount };\n\nvar _c;\n\n$RefreshReg$(_c, \"CometChatThreadedMessageReplyCount\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatThreadedMessageReplyCount/index.js"],"names":["React","jsx","PropTypes","CometChatContext","enums","theme","Translator","replyCountStyle","CometChatThreadedMessageReplyCount","props","context","useContext","reply","setReply","useState","toggleReply","FeatureRestriction","isThreadedMessagesEnabled","then","response","catch","error","useEffect","replyCount","message","replyText","translate","lang","replies","actionGenerated","ACTIONS","hasOwnProperty","defaultProps","getDefaultLanguage","propTypes","string","object"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;;AACA;;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,OAAO,KAAKC,KAAZ,MAAuB,wBAAvB;AAEA,SAASC,KAAT,QAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,4CAAvB;AAEA,SAASC,eAAT,QAAgC,SAAhC;;AAEA,MAAMC,kCAAkC,GAAIC,KAAD,IAAW;AAAA;;AACpD,QAAMC,OAAO,GAAGV,KAAK,CAACW,UAAN,CAAiBR,gBAAjB,CAAhB;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBb,KAAK,CAACc,QAAN,CAAe,KAAf,CAA1B;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBL,IAAAA,OAAO,CAACM,kBAAR,CAA2BC,yBAA3B,GACGC,IADH,CACSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,KAAKP,KAAjB,EAAwB;AACtBC,QAAAA,QAAQ,CAACM,QAAD,CAAR;AACD;AACF,KALH,EAMGC,KANH,CAMUC,KAAD,IAAW;AAChB,UAAIT,KAAK,KAAK,KAAd,EAAqB;AACnBC,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACF,KAVH;AAWD,GAZD;;AAcAb,EAAAA,KAAK,CAACsB,SAAN,CAAgBP,WAAhB;AAEA,QAAMQ,UAAU,GAAGd,KAAK,CAACe,OAAN,CAAcD,UAAjC;AACA,QAAME,SAAS,GACbF,UAAU,KAAK,CAAf,GACK,GAAEA,UAAW,IAAGjB,UAAU,CAACoB,SAAX,CAAqB,OAArB,EAA8BjB,KAAK,CAACkB,IAApC,CAA0C,EAD/D,GAEK,GAAEJ,UAAW,IAAGjB,UAAU,CAACoB,SAAX,CAAqB,SAArB,EAAgCjB,KAAK,CAACkB,IAAtC,CAA4C,EAHnE;AAKA,MAAIC,OAAO,GACT;AACE,IAAA,GAAG,EAAErB,eAAe,CAACG,OAAD,CADtB;AAEE,IAAA,SAAS,EAAC,YAFZ;AAGE,IAAA,OAAO,EAAE,MACPD,KAAK,CAACoB,eAAN,CACEzB,KAAK,CAAC0B,OAAN,CAAc,uBAAd,CADF,EAEErB,KAAK,CAACe,OAFR,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGC,SAVH,CADF;;AAeA,MAAIhB,KAAK,CAACe,OAAN,CAAcO,cAAd,CAA6B,YAA7B,MAA+C,KAAnD,EAA0D;AACxDH,IAAAA,OAAO,GAAG,IAAV;AACD,GA3CmD,CA6CpD;;;AACA,MAAIhB,KAAK,KAAK,KAAd,EAAqB;AACnBgB,IAAAA,OAAO,GAAG,IAAV;AACD;;AAED,SAAOA,OAAP;AACD,CAnDD,C,CAqDA;;;GArDMpB,kC;;KAAAA,kC;AAsDNA,kCAAkC,CAACwB,YAAnC,GAAkD;AAChDL,EAAAA,IAAI,EAAErB,UAAU,CAAC2B,kBAAX,EAD0C;AAEhD5B,EAAAA,KAAK,EAAEA,KAFyC;AAGhDmB,EAAAA,OAAO,EAAE;AAHuC,CAAlD;AAMAhB,kCAAkC,CAAC0B,SAAnC,GAA+C;AAC7CP,EAAAA,IAAI,EAAEzB,SAAS,CAACiC,MAD6B;AAE7C9B,EAAAA,KAAK,EAAEH,SAAS,CAACkC,MAF4B;AAG7CZ,EAAAA,OAAO,EAAEtB,SAAS,CAACkC;AAH0B,CAA/C;AAMA,SAAS5B,kCAAT","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\n\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\n\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\n\nimport { replyCountStyle } from \"./style\";\n\nconst CometChatThreadedMessageReplyCount = (props) => {\n  const context = React.useContext(CometChatContext);\n  const [reply, setReply] = React.useState(false);\n\n  const toggleReply = () => {\n    context.FeatureRestriction.isThreadedMessagesEnabled()\n      .then((response) => {\n        if (response !== reply) {\n          setReply(response);\n        }\n      })\n      .catch((error) => {\n        if (reply !== false) {\n          setReply(false);\n        }\n      });\n  };\n\n  React.useEffect(toggleReply);\n\n  const replyCount = props.message.replyCount;\n  const replyText =\n    replyCount === 1\n      ? `${replyCount} ${Translator.translate(\"REPLY\", props.lang)}`\n      : `${replyCount} ${Translator.translate(\"REPLIES\", props.lang)}`;\n\n  let replies = (\n    <span\n      css={replyCountStyle(context)}\n      className=\"replycount\"\n      onClick={() =>\n        props.actionGenerated(\n          enums.ACTIONS[\"VIEW_THREADED_MESSAGE\"],\n          props.message\n        )\n      }\n    >\n      {replyText}\n    </span>\n  );\n\n  if (props.message.hasOwnProperty(\"replyCount\") === false) {\n    replies = null;\n  }\n\n  //if threadedchats feature is disabled\n  if (reply === false) {\n    replies = null;\n  }\n\n  return replies;\n};\n\n// Specifies the default values for props:\nCometChatThreadedMessageReplyCount.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  message: {},\n};\n\nCometChatThreadedMessageReplyCount.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  message: PropTypes.object,\n};\n\nexport { CometChatThreadedMessageReplyCount };\n"]},"metadata":{},"sourceType":"module"}