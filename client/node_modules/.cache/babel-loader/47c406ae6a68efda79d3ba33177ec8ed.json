{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useViewport = () => {\n  _s();\n\n  const [width, setWidth] = useState(window.innerWidth);\n  const [mobile, setMobile] = useState(false);\n  const [mobileView, setMobileView] = useState({\n    conversations: true,\n    messages: false\n  });\n  useEffect(() => {\n    const handleWindowResize = () => setWidth(window.innerWidth);\n\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []);\n  useEffect(() => {\n    if (width < 575) {\n      setMobileView({\n        conversations: true,\n        messages: false\n      });\n      return;\n    }\n\n    setMobileView({\n      conversations: true,\n      messages: true\n    });\n    setMobile(false);\n  }, [width]);\n  return {\n    mobile,\n    mobileView,\n    setMobileView\n  };\n};\n\n_s(useViewport, \"5DzPGFBsx0lL+WcG1CWptqAp2iI=\");\n\nexport default useViewport;","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/utils/useViewport.js"],"names":["useState","useEffect","useViewport","width","setWidth","window","innerWidth","mobile","setMobile","mobileView","setMobileView","conversations","messages","handleWindowResize","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACK,MAAM,CAACC,UAAR,CAAlC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC;AAC3CW,IAAAA,aAAa,EAAE,IAD4B;AAE3CC,IAAAA,QAAQ,EAAE;AAFiC,GAAD,CAA5C;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,kBAAkB,GAAG,MAAMT,QAAQ,CAACC,MAAM,CAACC,UAAR,CAAzC;;AACAD,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCD,kBAAlC;AACA,WAAO,MAAMR,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCF,kBAArC,CAAb;AACD,GAJQ,EAIN,EAJM,CAAT;AAMAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,KAAK,GAAG,GAAZ,EAAiB;AACfO,MAAAA,aAAa,CAAC;AAAEC,QAAAA,aAAa,EAAE,IAAjB;AAAuBC,QAAAA,QAAQ,EAAE;AAAjC,OAAD,CAAb;AACA;AACD;;AACDF,IAAAA,aAAa,CAAC;AAAEC,MAAAA,aAAa,EAAE,IAAjB;AAAuBC,MAAAA,QAAQ,EAAE;AAAjC,KAAD,CAAb;AACAJ,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAPQ,EAON,CAACL,KAAD,CAPM,CAAT;AASA,SAAO;AAAEI,IAAAA,MAAF;AAAUE,IAAAA,UAAV;AAAsBC,IAAAA;AAAtB,GAAP;AACD,CAxBD;;GAAMR,W;;AA0BN,eAAeA,WAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useViewport = () => {\n  const [width, setWidth] = useState(window.innerWidth);\n  const [mobile, setMobile] = useState(false);\n  const [mobileView, setMobileView] = useState({\n    conversations: true,\n    messages: false,\n  });\n\n  useEffect(() => {\n    const handleWindowResize = () => setWidth(window.innerWidth);\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []);\n\n  useEffect(() => {\n    if (width < 575) {\n      setMobileView({ conversations: true, messages: false });\n      return;\n    }\n    setMobileView({ conversations: true, messages: true });\n    setMobile(false);\n  }, [width]);\n\n  return { mobile, mobileView, setMobileView };\n};\n\nexport default useViewport;\n"]},"metadata":{},"sourceType":"module"}