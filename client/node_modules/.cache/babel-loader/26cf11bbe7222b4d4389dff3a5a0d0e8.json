{"ast":null,"code":"import _extends from \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/Extensions/CometChatSenderStickerBubble/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChatMessageActions, CometChatThreadedMessageReplyCount, CometChatReadReceipt } from \"../../\";\nimport { CometChatMessageReactions } from \"../\";\nimport { CometChatContext } from \"../../../../util/CometChatContext\";\nimport { checkMessageForExtensionsData } from \"../../../../util/common\";\nimport { theme } from \"../../../../resources/theme\";\nimport Translator from \"../../../../resources/localization/translator\";\nimport { messageContainerStyle, messageWrapperStyle, messageImgWrapper, messageInfoWrapperStyle, messageReactionsWrapperStyle } from \"./style\";\n\nclass CometChatSenderStickerBubble extends React.Component {\n  constructor(props) {\n    super(props);\n    this.messageFrom = \"sender\";\n\n    this.handleMouseHover = () => {\n      this.setState(this.toggleHoverState);\n    };\n\n    this.toggleHoverState = state => {\n      return {\n        isHovering: !state.isHovering\n      };\n    };\n\n    const message = Object.assign({}, props.message, {\n      messageFrom: this.messageFrom\n    });\n    this.state = {\n      message: message,\n      isHovering: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const previousMessageStr = JSON.stringify(prevProps.message);\n    const currentMessageStr = JSON.stringify(this.props.message);\n\n    if (previousMessageStr !== currentMessageStr) {\n      const message = Object.assign({}, this.props.message, {\n        messageFrom: this.messageFrom\n      });\n      this.setState({\n        message: message\n      });\n    }\n  }\n\n  render() {\n    let stickerData = null;\n    let stickerImg = null;\n\n    if (this.state.message.hasOwnProperty(\"data\") && this.state.message.data.hasOwnProperty(\"customData\")) {\n      stickerData = this.state.message.data.customData;\n\n      if (stickerData.hasOwnProperty(\"sticker_url\")) {\n        const stickerName = stickerData.hasOwnProperty(\"sticker_name\") ? stickerData.sticker_name : Translator.translate(\"STICKER\", this.props.lang);\n        stickerImg = jsx(\"img\", {\n          src: stickerData.sticker_url,\n          alt: stickerName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 22\n          }\n        });\n      }\n    }\n\n    let messageReactions = null;\n    const reactionsData = checkMessageForExtensionsData(this.state.message, \"reactions\");\n\n    if (reactionsData) {\n      if (Object.keys(reactionsData).length) {\n        messageReactions = jsx(\"div\", {\n          css: messageReactionsWrapperStyle(),\n          className: \"message__reaction__wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }\n        }, jsx(CometChatMessageReactions, _extends({}, this.props, {\n          message: this.state.message,\n          reaction: reactionsData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }\n        })));\n      }\n    }\n\n    let toolTipView = null;\n\n    if (this.state.isHovering) {\n      toolTipView = jsx(CometChatMessageActions, _extends({}, this.props, {\n        message: this.state.message,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    return jsx(\"div\", {\n      css: messageContainerStyle(),\n      className: \"sender__message__container message__sticker\",\n      onMouseEnter: this.handleMouseHover,\n      onMouseLeave: this.handleMouseHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, toolTipView, jsx(\"div\", {\n      css: messageWrapperStyle(),\n      className: \"message__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, jsx(\"div\", {\n      css: messageImgWrapper(this.context),\n      className: \"message__img__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, stickerImg, \" \")), messageReactions, jsx(\"div\", {\n      css: messageInfoWrapperStyle(),\n      className: \"message__info__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, jsx(CometChatThreadedMessageReplyCount, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    })), jsx(CometChatReadReceipt, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatSenderStickerBubble.contextType = CometChatContext;\nCometChatSenderStickerBubble.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme\n};\nCometChatSenderStickerBubble.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object\n};\nexport { CometChatSenderStickerBubble };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/Extensions/CometChatSenderStickerBubble/index.js"],"names":["React","jsx","PropTypes","CometChatMessageActions","CometChatThreadedMessageReplyCount","CometChatReadReceipt","CometChatMessageReactions","CometChatContext","checkMessageForExtensionsData","theme","Translator","messageContainerStyle","messageWrapperStyle","messageImgWrapper","messageInfoWrapperStyle","messageReactionsWrapperStyle","CometChatSenderStickerBubble","Component","constructor","props","messageFrom","handleMouseHover","setState","toggleHoverState","state","isHovering","message","Object","assign","componentDidUpdate","prevProps","previousMessageStr","JSON","stringify","currentMessageStr","render","stickerData","stickerImg","hasOwnProperty","data","customData","stickerName","sticker_name","translate","lang","sticker_url","messageReactions","reactionsData","keys","length","toolTipView","context","contextType","defaultProps","getDefaultLanguage","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  CometChatMessageActions,\n  CometChatThreadedMessageReplyCount,\n  CometChatReadReceipt,\n} from \"../../\";\nimport { CometChatMessageReactions } from \"../\";\n\nimport { CometChatContext } from \"../../../../util/CometChatContext\";\nimport { checkMessageForExtensionsData } from \"../../../../util/common\";\n\nimport { theme } from \"../../../../resources/theme\";\nimport Translator from \"../../../../resources/localization/translator\";\n\nimport {\n  messageContainerStyle,\n  messageWrapperStyle,\n  messageImgWrapper,\n  messageInfoWrapperStyle,\n  messageReactionsWrapperStyle,\n} from \"./style\";\n\nclass CometChatSenderStickerBubble extends React.Component {\n  static contextType = CometChatContext;\n  messageFrom = \"sender\";\n\n  constructor(props) {\n    super(props);\n\n    const message = Object.assign({}, props.message, {\n      messageFrom: this.messageFrom,\n    });\n    this.state = {\n      message: message,\n      isHovering: false,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const previousMessageStr = JSON.stringify(prevProps.message);\n    const currentMessageStr = JSON.stringify(this.props.message);\n\n    if (previousMessageStr !== currentMessageStr) {\n      const message = Object.assign({}, this.props.message, {\n        messageFrom: this.messageFrom,\n      });\n      this.setState({ message: message });\n    }\n  }\n\n  handleMouseHover = () => {\n    this.setState(this.toggleHoverState);\n  };\n\n  toggleHoverState = (state) => {\n    return {\n      isHovering: !state.isHovering,\n    };\n  };\n\n  render() {\n    let stickerData = null;\n    let stickerImg = null;\n    if (\n      this.state.message.hasOwnProperty(\"data\") &&\n      this.state.message.data.hasOwnProperty(\"customData\")\n    ) {\n      stickerData = this.state.message.data.customData;\n\n      if (stickerData.hasOwnProperty(\"sticker_url\")) {\n        const stickerName = stickerData.hasOwnProperty(\"sticker_name\")\n          ? stickerData.sticker_name\n          : Translator.translate(\"STICKER\", this.props.lang);\n        stickerImg = <img src={stickerData.sticker_url} alt={stickerName} />;\n      }\n    }\n\n    let messageReactions = null;\n    const reactionsData = checkMessageForExtensionsData(\n      this.state.message,\n      \"reactions\"\n    );\n    if (reactionsData) {\n      if (Object.keys(reactionsData).length) {\n        messageReactions = (\n          <div\n            css={messageReactionsWrapperStyle()}\n            className=\"message__reaction__wrapper\"\n          >\n            <CometChatMessageReactions\n              {...this.props}\n              message={this.state.message}\n              reaction={reactionsData}\n            />\n          </div>\n        );\n      }\n    }\n\n    let toolTipView = null;\n    if (this.state.isHovering) {\n      toolTipView = (\n        <CometChatMessageActions {...this.props} message={this.state.message} />\n      );\n    }\n\n    return (\n      <div\n        css={messageContainerStyle()}\n        className=\"sender__message__container message__sticker\"\n        onMouseEnter={this.handleMouseHover}\n        onMouseLeave={this.handleMouseHover}\n      >\n        {toolTipView}\n\n        <div css={messageWrapperStyle()} className=\"message__wrapper\">\n          <div\n            css={messageImgWrapper(this.context)}\n            className=\"message__img__wrapper\"\n          >\n            {stickerImg}{\" \"}\n          </div>\n        </div>\n\n        {messageReactions}\n\n        <div css={messageInfoWrapperStyle()} className=\"message__info__wrapper\">\n          <CometChatThreadedMessageReplyCount\n            {...this.props}\n            message={this.state.message}\n          />\n          <CometChatReadReceipt {...this.props} message={this.state.message} />\n        </div>\n      </div>\n    );\n  }\n}\n\n// Specifies the default values for props:\nCometChatSenderStickerBubble.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n};\n\nCometChatSenderStickerBubble.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n};\n\nexport { CometChatSenderStickerBubble };\n"]},"metadata":{},"sourceType":"module"}