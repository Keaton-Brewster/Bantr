{"ast":null,"code":"import _extends from \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatSenderImageMessageBubble/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChatMessageActions, CometChatThreadedMessageReplyCount, CometChatReadReceipt } from \"../\";\nimport { CometChatMessageReactions } from \"../Extensions\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport { checkMessageForExtensionsData } from \"../../../util/common\";\nimport { theme } from \"../../../resources/theme\";\nimport { messageContainerStyle, messageWrapperStyle, messageImgWrapper, messageInfoWrapperStyle, messageReactionsWrapperStyle } from \"./style\";\nimport srcIcon from \"./resources/1px.png\";\n\nclass CometChatSenderImageMessageBubble extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.timer = null;\n    this.messageFrom = \"sender\";\n\n    this.chooseImage = thumbnailGenerationObject => {\n      const smallUrl = thumbnailGenerationObject[\"url_small\"];\n      const mediumUrl = thumbnailGenerationObject[\"url_medium\"];\n      const mq = window.matchMedia(this.props.theme.breakPoints[0]);\n      let imageToDownload = mediumUrl;\n\n      if (mq.matches) {\n        imageToDownload = smallUrl;\n      }\n\n      return imageToDownload;\n    };\n\n    this.setImage = () => {\n      const thumbnailGenerationData = checkMessageForExtensionsData(this.state.message, \"thumbnail-generation\");\n\n      if (thumbnailGenerationData) {\n        const mq = window.matchMedia(this.props.theme.breakPoints[0]);\n        mq.addListener(() => {\n          const imageToDownload = this.chooseImage(thumbnailGenerationData);\n          let img = new Image();\n          img.src = imageToDownload;\n\n          img.onload = () => {\n            if (this._isMounted) {\n              this.setState({\n                imageUrl: img.src\n              });\n            }\n          };\n        });\n        const imageToDownload = this.chooseImage(thumbnailGenerationData);\n        this.downloadImage(imageToDownload).then(response => {\n          let img = new Image();\n          img.src = imageToDownload;\n\n          img.onload = () => {\n            if (this._isMounted) {\n              this.setState({\n                imageUrl: img.src\n              });\n            }\n          };\n        }).catch(error => console.error(error));\n      } else {\n        this.setMessageImageUrl();\n      }\n    };\n\n    this.setMessageImageUrl = () => {\n      let img = new Image();\n\n      if (this.state.message.data.hasOwnProperty(\"url\")) {\n        img.src = this.state.message.data.url;\n      } else if (this.state.message.data.hasOwnProperty(\"file\")) {\n        const reader = new FileReader();\n\n        reader.onload = function () {\n          img.src = reader.result;\n        };\n\n        reader.readAsDataURL(this.state.message.data.file);\n      }\n\n      img.onload = () => {\n        if (this._isMounted) {\n          this.setState({\n            imageUrl: img.src\n          });\n        }\n      };\n    };\n\n    this.open = () => {\n      this.props.actionGenerated(enums.ACTIONS[\"VIEW_ORIGINAL_IMAGE\"], this.state.message);\n    };\n\n    this.handleMouseHover = () => {\n      this.setState(this.toggleHoverState);\n    };\n\n    this.toggleHoverState = state => {\n      return {\n        isHovering: !state.isHovering\n      };\n    };\n\n    this._isMounted = false;\n    this.imgRef = /*#__PURE__*/React.createRef();\n    const message = Object.assign({}, props.message, {\n      messageFrom: this.messageFrom\n    });\n    this.state = {\n      message: message,\n      imageUrl: srcIcon,\n      fullScreenView: false,\n      isHovering: false\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.setImage();\n  }\n\n  componentDidUpdate(prevProps) {\n    const previousMessageStr = JSON.stringify(prevProps.message);\n    const currentMessageStr = JSON.stringify(this.props.message);\n\n    if (previousMessageStr !== currentMessageStr) {\n      const message = Object.assign({}, this.props.message, {\n        messageFrom: this.messageFrom\n      });\n      this.setState({\n        message: message\n      });\n      this.setImage();\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  downloadImage(imgUrl) {\n    const promise = new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", imgUrl, true);\n      xhr.responseType = \"blob\";\n\n      xhr.onload = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            this.timer = null;\n            resolve(imgUrl);\n          } else if (xhr.status === 403) {\n            this.timer = setTimeout(() => {\n              this.downloadImage(imgUrl).then(response => resolve(imgUrl)).catch(error => reject(error));\n            }, 800);\n          }\n        } else {\n          reject(xhr.statusText);\n        }\n      };\n\n      xhr.onerror = event => reject(new Error(\"There was a network error.\", event));\n\n      xhr.ontimeout = event => reject(new Error(\"There was a timeout error.\", event));\n\n      xhr.send();\n    });\n    return promise;\n  }\n\n  render() {\n    let messageReactions = null;\n    const reactionsData = checkMessageForExtensionsData(this.state.message, \"reactions\");\n\n    if (reactionsData) {\n      if (Object.keys(reactionsData).length) {\n        messageReactions = jsx(\"div\", {\n          css: messageReactionsWrapperStyle(),\n          className: \"message__reaction__wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 11\n          }\n        }, jsx(CometChatMessageReactions, _extends({}, this.props, {\n          message: this.state.message,\n          reaction: reactionsData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }\n        })));\n      }\n    }\n\n    let toolTipView = null;\n\n    if (this.state.isHovering) {\n      toolTipView = jsx(CometChatMessageActions, _extends({}, this.props, {\n        message: this.state.message,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    return jsx(\"div\", {\n      css: messageContainerStyle(),\n      className: \"sender__message__container message__image\",\n      onMouseEnter: this.handleMouseHover,\n      onMouseLeave: this.handleMouseHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }\n    }, toolTipView, jsx(\"div\", {\n      css: messageWrapperStyle(),\n      className: \"message__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }\n    }, jsx(\"div\", {\n      css: messageImgWrapper(this.context),\n      onClick: this.open,\n      className: \"message__img__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }\n    }, jsx(\"img\", {\n      src: this.state.imageUrl,\n      alt: this.state.imageUrl,\n      ref: el => {\n        this.imgRef = el;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }))), messageReactions, jsx(\"div\", {\n      css: messageInfoWrapperStyle(),\n      className: \"message__info__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }\n    }, jsx(CometChatThreadedMessageReplyCount, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }\n    })), jsx(CometChatReadReceipt, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatSenderImageMessageBubble.contextType = CometChatContext;\nCometChatSenderImageMessageBubble.defaultProps = {\n  theme: theme\n};\nCometChatSenderImageMessageBubble.propTypes = {\n  theme: PropTypes.object\n};\nexport { CometChatSenderImageMessageBubble };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatSenderImageMessageBubble/index.js"],"names":["React","jsx","PropTypes","CometChatMessageActions","CometChatThreadedMessageReplyCount","CometChatReadReceipt","CometChatMessageReactions","CometChatContext","enums","checkMessageForExtensionsData","theme","messageContainerStyle","messageWrapperStyle","messageImgWrapper","messageInfoWrapperStyle","messageReactionsWrapperStyle","srcIcon","CometChatSenderImageMessageBubble","PureComponent","constructor","props","timer","messageFrom","chooseImage","thumbnailGenerationObject","smallUrl","mediumUrl","mq","window","matchMedia","breakPoints","imageToDownload","matches","setImage","thumbnailGenerationData","state","message","addListener","img","Image","src","onload","_isMounted","setState","imageUrl","downloadImage","then","response","catch","error","console","setMessageImageUrl","data","hasOwnProperty","url","reader","FileReader","result","readAsDataURL","file","open","actionGenerated","ACTIONS","handleMouseHover","toggleHoverState","isHovering","imgRef","createRef","Object","assign","fullScreenView","componentDidMount","componentDidUpdate","prevProps","previousMessageStr","JSON","stringify","currentMessageStr","componentWillUnmount","imgUrl","promise","Promise","resolve","reject","xhr","XMLHttpRequest","responseType","readyState","status","setTimeout","statusText","onerror","event","Error","ontimeout","send","render","messageReactions","reactionsData","keys","length","toolTipView","context","el","contextType","defaultProps","propTypes","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  CometChatMessageActions,\n  CometChatThreadedMessageReplyCount,\n  CometChatReadReceipt,\n} from \"../\";\nimport { CometChatMessageReactions } from \"../Extensions\";\n\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport { checkMessageForExtensionsData } from \"../../../util/common\";\n\nimport { theme } from \"../../../resources/theme\";\n\nimport {\n  messageContainerStyle,\n  messageWrapperStyle,\n  messageImgWrapper,\n  messageInfoWrapperStyle,\n  messageReactionsWrapperStyle,\n} from \"./style\";\n\nimport srcIcon from \"./resources/1px.png\";\n\nclass CometChatSenderImageMessageBubble extends React.PureComponent {\n  static contextType = CometChatContext;\n  timer = null;\n  messageFrom = \"sender\";\n\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this.imgRef = React.createRef();\n    const message = Object.assign({}, props.message, {\n      messageFrom: this.messageFrom,\n    });\n\n    this.state = {\n      message: message,\n      imageUrl: srcIcon,\n      fullScreenView: false,\n      isHovering: false,\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.setImage();\n  }\n\n  componentDidUpdate(prevProps) {\n    const previousMessageStr = JSON.stringify(prevProps.message);\n    const currentMessageStr = JSON.stringify(this.props.message);\n\n    if (previousMessageStr !== currentMessageStr) {\n      const message = Object.assign({}, this.props.message, {\n        messageFrom: this.messageFrom,\n      });\n      this.setState({ message: message });\n      this.setImage();\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  chooseImage = (thumbnailGenerationObject) => {\n    const smallUrl = thumbnailGenerationObject[\"url_small\"];\n    const mediumUrl = thumbnailGenerationObject[\"url_medium\"];\n\n    const mq = window.matchMedia(this.props.theme.breakPoints[0]);\n\n    let imageToDownload = mediumUrl;\n    if (mq.matches) {\n      imageToDownload = smallUrl;\n    }\n\n    return imageToDownload;\n  };\n\n  setImage = () => {\n    const thumbnailGenerationData = checkMessageForExtensionsData(\n      this.state.message,\n      \"thumbnail-generation\"\n    );\n\n    if (thumbnailGenerationData) {\n      const mq = window.matchMedia(this.props.theme.breakPoints[0]);\n      mq.addListener(() => {\n        const imageToDownload = this.chooseImage(thumbnailGenerationData);\n        let img = new Image();\n        img.src = imageToDownload;\n        img.onload = () => {\n          if (this._isMounted) {\n            this.setState({ imageUrl: img.src });\n          }\n        };\n      });\n\n      const imageToDownload = this.chooseImage(thumbnailGenerationData);\n      this.downloadImage(imageToDownload)\n        .then((response) => {\n          let img = new Image();\n          img.src = imageToDownload;\n          img.onload = () => {\n            if (this._isMounted) {\n              this.setState({ imageUrl: img.src });\n            }\n          };\n        })\n        .catch((error) => console.error(error));\n    } else {\n      this.setMessageImageUrl();\n    }\n  };\n\n  setMessageImageUrl = () => {\n    let img = new Image();\n    if (this.state.message.data.hasOwnProperty(\"url\")) {\n      img.src = this.state.message.data.url;\n    } else if (this.state.message.data.hasOwnProperty(\"file\")) {\n      const reader = new FileReader();\n      reader.onload = function () {\n        img.src = reader.result;\n      };\n\n      reader.readAsDataURL(this.state.message.data.file);\n    }\n\n    img.onload = () => {\n      if (this._isMounted) {\n        this.setState({ imageUrl: img.src });\n      }\n    };\n  };\n\n  downloadImage(imgUrl) {\n    const promise = new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", imgUrl, true);\n      xhr.responseType = \"blob\";\n\n      xhr.onload = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            this.timer = null;\n            resolve(imgUrl);\n          } else if (xhr.status === 403) {\n            this.timer = setTimeout(() => {\n              this.downloadImage(imgUrl)\n                .then((response) => resolve(imgUrl))\n                .catch((error) => reject(error));\n            }, 800);\n          }\n        } else {\n          reject(xhr.statusText);\n        }\n      };\n\n      xhr.onerror = (event) =>\n        reject(new Error(\"There was a network error.\", event));\n      xhr.ontimeout = (event) =>\n        reject(new Error(\"There was a timeout error.\", event));\n      xhr.send();\n    });\n\n    return promise;\n  }\n\n  open = () => {\n    this.props.actionGenerated(\n      enums.ACTIONS[\"VIEW_ORIGINAL_IMAGE\"],\n      this.state.message\n    );\n  };\n\n  handleMouseHover = () => {\n    this.setState(this.toggleHoverState);\n  };\n\n  toggleHoverState = (state) => {\n    return {\n      isHovering: !state.isHovering,\n    };\n  };\n\n  render() {\n    let messageReactions = null;\n    const reactionsData = checkMessageForExtensionsData(\n      this.state.message,\n      \"reactions\"\n    );\n    if (reactionsData) {\n      if (Object.keys(reactionsData).length) {\n        messageReactions = (\n          <div\n            css={messageReactionsWrapperStyle()}\n            className=\"message__reaction__wrapper\"\n          >\n            <CometChatMessageReactions\n              {...this.props}\n              message={this.state.message}\n              reaction={reactionsData}\n            />\n          </div>\n        );\n      }\n    }\n\n    let toolTipView = null;\n    if (this.state.isHovering) {\n      toolTipView = (\n        <CometChatMessageActions {...this.props} message={this.state.message} />\n      );\n    }\n\n    return (\n      <div\n        css={messageContainerStyle()}\n        className=\"sender__message__container message__image\"\n        onMouseEnter={this.handleMouseHover}\n        onMouseLeave={this.handleMouseHover}\n      >\n        {toolTipView}\n\n        <div css={messageWrapperStyle()} className=\"message__wrapper\">\n          <div\n            css={messageImgWrapper(this.context)}\n            onClick={this.open}\n            className=\"message__img__wrapper\"\n          >\n            <img\n              src={this.state.imageUrl}\n              alt={this.state.imageUrl}\n              ref={(el) => {\n                this.imgRef = el;\n              }}\n            />\n          </div>\n        </div>\n\n        {messageReactions}\n\n        <div css={messageInfoWrapperStyle()} className=\"message__info__wrapper\">\n          <CometChatThreadedMessageReplyCount\n            {...this.props}\n            message={this.state.message}\n          />\n          <CometChatReadReceipt {...this.props} message={this.state.message} />\n        </div>\n      </div>\n    );\n  }\n}\n\n// Specifies the default values for props:\nCometChatSenderImageMessageBubble.defaultProps = {\n  theme: theme,\n};\n\nCometChatSenderImageMessageBubble.propTypes = {\n  theme: PropTypes.object,\n};\n\nexport { CometChatSenderImageMessageBubble };\n"]},"metadata":{},"sourceType":"module"}