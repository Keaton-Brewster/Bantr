{"ast":null,"code":"import _extends from \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Messages/Extensions/CometChatReceiverWhiteboardBubble/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatMessageActions, CometChatThreadedMessageReplyCount, CometChatReadReceipt } from \"../../\";\nimport { CometChatMessageReactions } from \"../\";\nimport { CometChatAvatar } from \"../../../Shared\";\nimport { CometChatContext } from \"../../../../util/CometChatContext\";\nimport { checkMessageForExtensionsData } from \"../../../../util/common\";\nimport { theme } from \"../../../../resources/theme\";\nimport Translator from \"../../../../resources/localization/translator\";\nimport { messageContainerStyle, messageWrapperStyle, messageThumbnailStyle, messageDetailStyle, nameWrapperStyle, nameStyle, messageTxtContainerStyle, messageTxtWrapperStyle, messageTxtTitleStyle, messageTxtStyle, messageBtnStyle, messageInfoWrapperStyle, messageReactionsWrapperStyle, iconStyle } from \"./style\";\nimport whiteboardIcon from \"./resources/collaborative-whiteboard.svg\";\n\nclass CometChatReceiverWhiteboardBubble extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.messageFrom = \"receiver\";\n\n    this.launchCollaborativeWhiteboard = () => {\n      let whiteboardUrl = null;\n      let whiteboardData = checkMessageForExtensionsData(this.state.message, \"whiteboard\");\n\n      if (whiteboardData && whiteboardData.hasOwnProperty(\"board_url\") && whiteboardData.board_url.length) {\n        let username = this.props.loggedInUser.name.split(' ').join('_'); // Appending the username to the board_url\n\n        whiteboardUrl = whiteboardData.board_url + '&username=' + username;\n        window.open(whiteboardUrl, '', 'fullscreen=yes, scrollbars=auto');\n      }\n    };\n\n    this.handleMouseHover = () => {\n      this.setState(this.toggleHoverState);\n    };\n\n    this.toggleHoverState = state => {\n      return {\n        isHovering: !state.isHovering\n      };\n    };\n\n    const message = Object.assign({}, props.message, {\n      messageFrom: this.messageFrom\n    });\n    this.state = {\n      message: message,\n      isHovering: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const previousMessageStr = JSON.stringify(prevProps.message);\n    const currentMessageStr = JSON.stringify(this.props.message);\n\n    if (previousMessageStr !== currentMessageStr) {\n      const message = Object.assign({}, this.props.message, {\n        messageFrom: this.messageFrom\n      });\n      this.setState({\n        message: message\n      });\n    }\n  }\n\n  render() {\n    let avatar = null,\n        name = null;\n\n    if (this.state.message.receiverType === CometChat.RECEIVER_TYPE.GROUP) {\n      avatar = jsx(\"div\", {\n        css: messageThumbnailStyle,\n        className: \"message__thumbnail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, jsx(CometChatAvatar, {\n        user: this.state.message.sender,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }));\n      name = jsx(\"div\", {\n        css: nameWrapperStyle(avatar),\n        className: \"message__name__wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, jsx(\"span\", {\n        css: nameStyle(this.context),\n        className: \"message__name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, this.props.message.sender.name));\n    }\n\n    let messageReactions = null;\n    const reactionsData = checkMessageForExtensionsData(this.state.message, \"reactions\");\n\n    if (reactionsData) {\n      if (Object.keys(reactionsData).length) {\n        messageReactions = jsx(\"div\", {\n          css: messageReactionsWrapperStyle(),\n          className: \"message__reaction__wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }\n        }, jsx(CometChatMessageReactions, _extends({}, this.props, {\n          message: this.state.message,\n          reaction: reactionsData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }\n        })));\n      }\n    }\n\n    let toolTipView = null;\n\n    if (this.state.isHovering) {\n      toolTipView = jsx(CometChatMessageActions, _extends({}, this.props, {\n        message: this.state.message,\n        name: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 28\n        }\n      }));\n    }\n\n    const documentTitle = `${this.state.message.sender.name} ${Translator.translate(\"SHARED_COLLABORATIVE_WHITEBOARD\", this.props.lang)}`;\n    return jsx(\"div\", {\n      css: messageContainerStyle(),\n      className: \"receiver__message__container message__whiteboard\",\n      onMouseEnter: this.handleMouseHover,\n      onMouseLeave: this.handleMouseHover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 6\n      }\n    }, jsx(\"div\", {\n      css: messageWrapperStyle(),\n      className: \"message__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, avatar, jsx(\"div\", {\n      css: messageDetailStyle(),\n      className: \"message__details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 8\n      }\n    }, name, toolTipView, jsx(\"div\", {\n      css: messageTxtContainerStyle(),\n      className: \"message__whiteboard__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, jsx(\"div\", {\n      css: messageTxtWrapperStyle(this.context),\n      className: \"message__whiteboard__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 10\n      }\n    }, jsx(\"div\", {\n      css: messageTxtTitleStyle(this.context),\n      className: \"message__whiteboard__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, jsx(\"i\", {\n      css: iconStyle(whiteboardIcon, this.context),\n      title: Translator.translate(\"COLLABORATIVE_WHITEBOARD\", this.props.lang),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 12\n      }\n    }), jsx(\"p\", {\n      css: messageTxtStyle(),\n      className: \"whiteboard__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 12\n      }\n    }, documentTitle)), jsx(\"ul\", {\n      css: messageBtnStyle(this.context),\n      className: \"whiteboard__button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, jsx(\"li\", {\n      onClick: this.launchCollaborativeWhiteboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 12\n      }\n    }, jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, Translator.translate(\"JOIN\", this.props.lang)))))), messageReactions, jsx(\"div\", {\n      css: messageInfoWrapperStyle(),\n      className: \"message__info__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, jsx(CometChatReadReceipt, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 10\n      }\n    })), jsx(CometChatThreadedMessageReplyCount, _extends({}, this.props, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 10\n      }\n    }))))));\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatReceiverWhiteboardBubble.contextType = CometChatContext;\nCometChatReceiverWhiteboardBubble.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme\n};\nCometChatReceiverWhiteboardBubble.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object\n};\nexport { CometChatReceiverWhiteboardBubble };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Messages/Extensions/CometChatReceiverWhiteboardBubble/index.js"],"names":["React","jsx","PropTypes","CometChat","CometChatMessageActions","CometChatThreadedMessageReplyCount","CometChatReadReceipt","CometChatMessageReactions","CometChatAvatar","CometChatContext","checkMessageForExtensionsData","theme","Translator","messageContainerStyle","messageWrapperStyle","messageThumbnailStyle","messageDetailStyle","nameWrapperStyle","nameStyle","messageTxtContainerStyle","messageTxtWrapperStyle","messageTxtTitleStyle","messageTxtStyle","messageBtnStyle","messageInfoWrapperStyle","messageReactionsWrapperStyle","iconStyle","CometChatReceiverWhiteboardBubble","PureComponent","constructor","props","messageFrom","launchCollaborativeWhiteboard","whiteboardUrl","whiteboardData","state","message","hasOwnProperty","board_url","length","username","loggedInUser","name","split","join","window","open","handleMouseHover","setState","toggleHoverState","isHovering","Object","assign","componentDidUpdate","prevProps","previousMessageStr","JSON","stringify","currentMessageStr","render","avatar","receiverType","RECEIVER_TYPE","GROUP","sender","context","messageReactions","reactionsData","keys","toolTipView","documentTitle","translate","lang","whiteboardIcon","contextType","defaultProps","getDefaultLanguage","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { CometChatMessageActions, CometChatThreadedMessageReplyCount, CometChatReadReceipt } from \"../../\";\nimport { CometChatMessageReactions } from \"../\";\nimport { CometChatAvatar } from \"../../../Shared\";\n\nimport { CometChatContext } from \"../../../../util/CometChatContext\";\nimport { checkMessageForExtensionsData } from \"../../../../util/common\";\n\nimport { theme } from \"../../../../resources/theme\";\nimport Translator from \"../../../../resources/localization/translator\";\n\nimport {\n\tmessageContainerStyle,\n\tmessageWrapperStyle,\n\tmessageThumbnailStyle,\n\tmessageDetailStyle,\n\tnameWrapperStyle,\n\tnameStyle,\n\tmessageTxtContainerStyle,\n\tmessageTxtWrapperStyle,\n\tmessageTxtTitleStyle,\n\tmessageTxtStyle,\n\tmessageBtnStyle,\n\tmessageInfoWrapperStyle,\n\tmessageReactionsWrapperStyle,\n\ticonStyle,\n} from \"./style\";\n\nimport whiteboardIcon from \"./resources/collaborative-whiteboard.svg\";\n\nclass CometChatReceiverWhiteboardBubble extends React.PureComponent {\n\n    static contextType = CometChatContext;\n    messageFrom = \"receiver\";\n\n    constructor(props) {\n\n        super(props);\n\n        const message = Object.assign({}, props.message, { messageFrom: this.messageFrom });\n        this.state = {\n            message: message,\n            isHovering: false\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n\n        const previousMessageStr = JSON.stringify(prevProps.message);\n        const currentMessageStr = JSON.stringify(this.props.message);\n\n        if (previousMessageStr !== currentMessageStr) {\n\n            const message = Object.assign({}, this.props.message, { messageFrom: this.messageFrom });\n            this.setState({ message: message })\n        }\n    }\n\n    launchCollaborativeWhiteboard = () => {\n\n        let whiteboardUrl = null;\n        let whiteboardData = checkMessageForExtensionsData(this.state.message, \"whiteboard\");\n        if (whiteboardData\n        && whiteboardData.hasOwnProperty(\"board_url\")\n        && whiteboardData.board_url.length) {\n\n            let username = this.props.loggedInUser.name.split(' ').join('_');\n            // Appending the username to the board_url\n            whiteboardUrl = whiteboardData.board_url + '&username=' + username;\n            window.open(whiteboardUrl, '', 'fullscreen=yes, scrollbars=auto');\n        }\n    }\n\n    handleMouseHover = () => {\n        this.setState(this.toggleHoverState);\n    }\n\n    toggleHoverState = (state) => {\n\n        return {\n            isHovering: !state.isHovering,\n        };\n    }\n\n    render() {\n\n        let avatar = null, name = null;\n        if (this.state.message.receiverType === CometChat.RECEIVER_TYPE.GROUP) {\n\n            avatar = (\n                <div css={messageThumbnailStyle} className=\"message__thumbnail\">\n                    <CometChatAvatar user={this.state.message.sender} />\n                </div>\n            );\n\n            name = (<div css={nameWrapperStyle(avatar)} className=\"message__name__wrapper\">\n                <span css={nameStyle(this.context)} className=\"message__name\">{this.props.message.sender.name}</span>\n            </div>);\n        }\n\n        let messageReactions = null;\n        const reactionsData = checkMessageForExtensionsData(this.state.message, \"reactions\");\n        if (reactionsData) {\n\n            if (Object.keys(reactionsData).length) {\n                messageReactions = (\n                    <div css={messageReactionsWrapperStyle()} className=\"message__reaction__wrapper\">\n                        <CometChatMessageReactions  {...this.props} message={this.state.message} reaction={reactionsData} />\n                    </div>\n                );\n            }\n        }\n\n        let toolTipView = null;\n        if (this.state.isHovering) {\n            toolTipView = (<CometChatMessageActions {...this.props} message={this.state.message} name={name} />);\n        }\n\n        const documentTitle = `${this.state.message.sender.name} ${Translator.translate(\"SHARED_COLLABORATIVE_WHITEBOARD\", this.props.lang)}`;\n\n        return (\n\t\t\t\t\t<div css={messageContainerStyle()} className=\"receiver__message__container message__whiteboard\" onMouseEnter={this.handleMouseHover} onMouseLeave={this.handleMouseHover}>\n\t\t\t\t\t\t<div css={messageWrapperStyle()} className=\"message__wrapper\">\n\t\t\t\t\t\t\t{avatar}\n\t\t\t\t\t\t\t<div css={messageDetailStyle()} className=\"message__details\">\n\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t{toolTipView}\n\t\t\t\t\t\t\t\t<div css={messageTxtContainerStyle()} className=\"message__whiteboard__container\">\n\t\t\t\t\t\t\t\t\t<div css={messageTxtWrapperStyle(this.context)} className=\"message__whiteboard__wrapper\">\n\t\t\t\t\t\t\t\t\t\t<div css={messageTxtTitleStyle(this.context)} className=\"message__whiteboard__title\">\n\t\t\t\t\t\t\t\t\t\t\t<i css={iconStyle(whiteboardIcon, this.context)} title={Translator.translate(\"COLLABORATIVE_WHITEBOARD\", this.props.lang)}></i>\n\t\t\t\t\t\t\t\t\t\t\t<p css={messageTxtStyle()} className=\"whiteboard__title\">\n\t\t\t\t\t\t\t\t\t\t\t\t{documentTitle}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<ul css={messageBtnStyle(this.context)} className=\"whiteboard__button\">\n\t\t\t\t\t\t\t\t\t\t\t<li onClick={this.launchCollaborativeWhiteboard}>\n\t\t\t\t\t\t\t\t\t\t\t\t<p>{Translator.translate(\"JOIN\", this.props.lang)}</p>\n\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t{messageReactions}\n\n\t\t\t\t\t\t\t\t<div css={messageInfoWrapperStyle()} className=\"message__info__wrapper\">\n\t\t\t\t\t\t\t\t\t<CometChatReadReceipt {...this.props} message={this.state.message} />\n\t\t\t\t\t\t\t\t\t<CometChatThreadedMessageReplyCount {...this.props} message={this.state.message} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n    }\n}\n\n// Specifies the default values for props:\nCometChatReceiverWhiteboardBubble.defaultProps = {\n    lang: Translator.getDefaultLanguage(),\n    theme: theme\n};\n\nCometChatReceiverWhiteboardBubble.propTypes = {\n    lang: PropTypes.string,\n    theme: PropTypes.object\n}\n\nexport { CometChatReceiverWhiteboardBubble };"]},"metadata":{},"sourceType":"module"}