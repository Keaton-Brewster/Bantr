{"ast":null,"code":"export const messageContainerStyle = () => {\n  return {\n    alignSelf: \"flex-start\",\n    marginBottom: \"16px\",\n    paddingLeft: \"16px\",\n    paddingRight: \"16px\",\n    maxWidth: \"65%\",\n    clear: \"both\",\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexShrink: \"0\",\n    \":hover\": {\n      \"ul.message__actions\": {\n        display: \"flex\"\n      }\n    }\n  };\n};\nexport const messageWrapperStyle = () => {\n  return {\n    width: \"auto\",\n    flex: \"1 1\",\n    alignSelf: \"flex-start\",\n    display: \"flex\"\n  };\n};\nexport const messageThumbnailStyle = () => {\n  return {\n    width: \"36px\",\n    height: \"36px\",\n    margin: \"10px 5px\",\n    float: \"left\",\n    flexShrink: \"0\"\n  };\n};\nexport const messageDetailStyle = () => {\n  return {\n    flex: \"1 1\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  };\n};\nexport const nameWrapperStyle = avatar => {\n  const paddingValue = avatar ? {\n    padding: \"3px 5px\"\n  } : {};\n  return {\n    alignSelf: \"flex-start\",\n    ...paddingValue\n  };\n};\nexport const nameStyle = context => {\n  return {\n    fontSize: \"10px\",\n    color: `${context.theme.color.helpText}`\n  };\n};\nexport const messageTxtContainerStyle = () => {\n  return {\n    width: \"auto\",\n    flex: \"1 1\",\n    display: \"flex\",\n    alignSelf: \"flex-start\"\n  };\n};\nexport const messageTxtWrapperStyle = context => {\n  return {\n    display: \"inline-block\",\n    borderRadius: \"12px\",\n    backgroundColor: `${context.theme.backgroundColor.secondary}`,\n    padding: \"8px 16px\",\n    width: \"auto\"\n  };\n};\nexport const messageTxtStyle = (parsedMessage, emojiMessage, showVariation) => {\n  let emojiAlignmentProp = {\n    \" > img\": {\n      width: \"24px\",\n      height: \"24px\",\n      display: \"inline-block\",\n      verticalAlign: \"top\",\n      zoom: \"1\",\n      margin: \"0 2px\"\n    }\n  };\n  let emojiProp = {};\n\n  if (parsedMessage.length === emojiMessage.length && emojiMessage.length === 1) {\n    emojiProp = {\n      \"> img\": {\n        width: \"48px\",\n        height: \"48px\"\n      }\n    };\n  } else if (parsedMessage.length === emojiMessage.length && emojiMessage.length === 2) {\n    emojiProp = {\n      \"> img\": {\n        width: \"36px\",\n        height: \"36px\"\n      }\n    };\n  } else if (parsedMessage.length === emojiMessage.length && emojiMessage.length > 2) {\n    emojiProp = {\n      \"> img\": {\n        width: \"24px\",\n        height: \"24px\"\n      }\n    };\n  }\n\n  if (showVariation === false) {\n    emojiProp = {\n      \"> img\": {\n        width: \"24px\",\n        height: \"24px\"\n      }\n    };\n  }\n\n  return {\n    margin: \"0\",\n    fontSize: \"14px\",\n    whiteSpace: \"pre-wrap\",\n    wordBreak: \"break-word\",\n    textAlign: \"left\",\n    width: \"auto\",\n    \" a\": {\n      color: \"#0432FF\",\n      \"&:hover\": {\n        color: \"#04009D\"\n      }\n    },\n    \" a[href^='mailto:']\": {\n      color: \"#F38C00\",\n      \"&:hover\": {\n        color: \"#F36800\"\n      }\n    },\n    \" a[href^='tel:']\": {\n      color: \"#3802DA\",\n      \"&:hover\": {\n        color: \"#2D038F\"\n      }\n    },\n    ...emojiAlignmentProp,\n    ...emojiProp\n  };\n};\nexport const messageInfoWrapperStyle = () => {\n  return {\n    alignSelf: \"flex-start\",\n    padding: \"3px 5px\"\n  };\n};\nexport const messageReactionsWrapperStyle = () => {\n  return {\n    display: \"inline-flex\",\n    alignSelf: \"flex-start\",\n    width: \"100%\",\n    flexWrap: \"wrap\",\n    justifyContent: \"flex-start\"\n  };\n};","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Messages/CometChatReceiverTextMessageBubble/style.js"],"names":["messageContainerStyle","alignSelf","marginBottom","paddingLeft","paddingRight","maxWidth","clear","position","display","flexDirection","flexShrink","messageWrapperStyle","width","flex","messageThumbnailStyle","height","margin","float","messageDetailStyle","nameWrapperStyle","avatar","paddingValue","padding","nameStyle","context","fontSize","color","theme","helpText","messageTxtContainerStyle","messageTxtWrapperStyle","borderRadius","backgroundColor","secondary","messageTxtStyle","parsedMessage","emojiMessage","showVariation","emojiAlignmentProp","verticalAlign","zoom","emojiProp","length","whiteSpace","wordBreak","textAlign","messageInfoWrapperStyle","messageReactionsWrapperStyle","flexWrap","justifyContent"],"mappings":"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","sourcesContent":["export const messageContainerStyle = () => {\n\n    return {\n        alignSelf: \"flex-start\",\n        marginBottom: \"16px\",\n        paddingLeft: \"16px\",\n        paddingRight: \"16px\",\n        maxWidth: \"65%\",\n        clear: \"both\",\n        position: \"relative\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flexShrink: \"0\",\n        \":hover\": {\n            \"ul.message__actions\": {\n                display: \"flex\"\n            }\n        }\n    }\n}\n\nexport const messageWrapperStyle = () => {\n\n    return {\n        width: \"auto\",\n        flex: \"1 1\",\n        alignSelf: \"flex-start\",\n        display: \"flex\",\n    }\n}\n\nexport const messageThumbnailStyle = () => {\n\n    return {\n        width: \"36px\",\n        height: \"36px\",\n        margin: \"10px 5px\",\n        float: \"left\",\n        flexShrink: \"0\",\n    }\n}\n\nexport const messageDetailStyle = () => {\n\n    return {\n        flex: \"1 1\",\n        display: \"flex\",\n        flexDirection: \"column\",\n    }\n}\n\nexport const nameWrapperStyle = (avatar) => {\n\n    const paddingValue = (avatar) ? {\n        padding: \"3px 5px\",\n    } : {};\n\n    return {\n        alignSelf: \"flex-start\",\n        ...paddingValue\n    }\n}\n\nexport const nameStyle = context => {\n\n\treturn {\n\t\tfontSize: \"10px\",\n\t\tcolor: `${context.theme.color.helpText}`,\n\t};\n};\n\nexport const messageTxtContainerStyle = () => {\n\n    return {\n        width: \"auto\",\n        flex: \"1 1\",\n        display: \"flex\",\n        alignSelf: \"flex-start\",\n    }\n}\n\nexport const messageTxtWrapperStyle = context => {\n\n\treturn {\n\t\tdisplay: \"inline-block\",\n\t\tborderRadius: \"12px\",\n\t\tbackgroundColor: `${context.theme.backgroundColor.secondary}`,\n\t\tpadding: \"8px 16px\",\n\t\twidth: \"auto\",\n\t};\n};\n\nexport const messageTxtStyle = (parsedMessage, emojiMessage, showVariation) => {\n\n    let emojiAlignmentProp = {\n        \" > img\": {\n            width: \"24px\",\n            height: \"24px\",\n            display: \"inline-block\",\n            verticalAlign: \"top\",\n            zoom: \"1\",\n            margin: \"0 2px\"\n        }\n    };\n\n    let emojiProp = {};\n\n    if (parsedMessage.length === emojiMessage.length && emojiMessage.length === 1) {\n        emojiProp = {\n            \"> img\": {\n                width: \"48px\",\n                height: \"48px\",\n            }\n        };\n    } else if (parsedMessage.length === emojiMessage.length && emojiMessage.length === 2) {\n        emojiProp = {\n            \"> img\": {\n                width: \"36px\",\n                height: \"36px\",\n            }\n        };\n    } else if (parsedMessage.length === emojiMessage.length && emojiMessage.length > 2) {\n        emojiProp = {\n            \"> img\": {\n                width: \"24px\",\n                height: \"24px\",\n            }\n        };\n    }\n\n    if (showVariation === false) {\n        emojiProp = {\n            \"> img\": {\n                width: \"24px\",\n                height: \"24px\",\n            }\n        };\n    }\n\n    return {\n        margin: \"0\",\n        fontSize: \"14px\",\n        whiteSpace: \"pre-wrap\",\n        wordBreak: \"break-word\",\n        textAlign: \"left\",\n        width: \"auto\",\n        \" a\": {\n            color: \"#0432FF\",\n            \"&:hover\": {\n                color: \"#04009D\"\n            }\n        },\n        \" a[href^='mailto:']\": {\n            color: \"#F38C00\",\n            \"&:hover\": {\n                color: \"#F36800\"\n            }\n        },\n        \" a[href^='tel:']\": {\n            color: \"#3802DA\",\n            \"&:hover\": {\n                color: \"#2D038F\"\n            }\n        },\n        ...emojiAlignmentProp,\n        ...emojiProp\n    }\n}\n\nexport const messageInfoWrapperStyle = () => {\n\n    return {\n        alignSelf: \"flex-start\",\n        padding: \"3px 5px\",\n    }\n}\n\nexport const messageReactionsWrapperStyle = () => {\n\n    return {\n        display: \"inline-flex\",\n        alignSelf: \"flex-start\",\n        width: \"100%\",\n        flexWrap: \"wrap\",\n        justifyContent: \"flex-start\",\n    }\n}"]},"metadata":{},"sourceType":"module"}