{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/Mobile/Conversations.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport { useConversations } from \"../../utils/ConvorsationProvider\";\nimport API from \"../../utils/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Conversations() {\n  _s();\n\n  const {\n    messageState,\n    conversationState,\n    selectedConversationState,\n    mobileViewState\n  } = useConversations();\n  const [messages, setMessages] = messageState;\n  const [conversations, setConversations] = conversationState;\n  const [selectedConversation, setSelectedConversation] = selectedConversationState;\n  const [mobileView, setMobileView] = mobileViewState;\n  const searchRef = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: mobileView.conversations ? \"show\" : \"hide\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"searchConversationsInput\",\n      type: \"text\",\n      ref: searchRef,\n      placeholder: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), conversations.map((convo, i) => {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        className: \"convoBox\" // className={selectedConversation._id === convo._id ? \"selected\" : \"notSelected\"}\n        // Just another place where I am having to use a different \"id\"\n        // onClick={(e) => selectConversation(e, convo._id)}\n        ,\n        onClick: () => API.selectConversation(convo.id).then(messages => {\n          setMobileView({\n            conversations: false,\n            messages: true\n          });\n          setSelectedConversation(convo);\n          setMessages(messages);\n        }),\n        children: convo.name || \"New Conversation\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bottomOfConvos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Conversations, \"cj8L/VGhe0MLU27zL9IENVtcnGE=\", false, function () {\n  return [useConversations];\n});\n\n_c = Conversations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversations\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/Mobile/Conversations.jsx"],"names":["useRef","Row","useConversations","API","Conversations","messageState","conversationState","selectedConversationState","mobileViewState","messages","setMessages","conversations","setConversations","selectedConversation","setSelectedConversation","mobileView","setMobileView","searchRef","map","convo","i","selectConversation","id","then","name"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,gBAAT,QAAiC,kCAAjC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,yBAHI;AAIJC,IAAAA;AAJI,MAKFN,gBAAgB,EALpB;AAMA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BL,YAAhC;AACA,QAAM,CAACM,aAAD,EAAgBC,gBAAhB,IAAoCN,iBAA1C;AACA,QAAM,CAACO,oBAAD,EAAuBC,uBAAvB,IACJP,yBADF;AAEA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BR,eAApC;AAEA,QAAMS,SAAS,GAAGjB,MAAM,EAAxB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEe,UAAU,CAACJ,aAAX,GAA2B,MAA3B,GAAoC,MAApD;AAAA,4BACE;AACE,MAAA,EAAE,EAAC,0BADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,GAAG,EAAEM,SAHP;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,YADF,EAQGN,aAAa,CAACO,GAAd,CAAkB,CAACC,KAAD,EAAQC,CAAR,KAAc;AAC/B,0BACE,QAAC,GAAD;AAEE,QAAA,SAAS,EAAC,UAFZ,CAGE;AACA;AACA;AALF;AAME,QAAA,OAAO,EAAE,MACPjB,GAAG,CAACkB,kBAAJ,CAAuBF,KAAK,CAACG,EAA7B,EAAiCC,IAAjC,CAAuCd,QAAD,IAAc;AAClDO,UAAAA,aAAa,CAAC;AACZL,YAAAA,aAAa,EAAE,KADH;AAEZF,YAAAA,QAAQ,EAAE;AAFE,WAAD,CAAb;AAIAK,UAAAA,uBAAuB,CAACK,KAAD,CAAvB;AACAT,UAAAA,WAAW,CAACD,QAAD,CAAX;AACD,SAPD,CAPJ;AAAA,kBAiBGU,KAAK,CAACK,IAAN,IAAc;AAjBjB,SACOJ,CADP;AAAA;AAAA;AAAA;AAAA,cADF;AAqBD,KAtBA,CARH,eA+BE;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAlDuBhB,a;UAMlBF,gB;;;KANkBE,a","sourcesContent":["import { useRef } from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport { useConversations } from \"../../utils/ConvorsationProvider\";\nimport API from \"../../utils/API\";\n\nexport default function Conversations() {\n  const {\n    messageState,\n    conversationState,\n    selectedConversationState,\n    mobileViewState,\n  } = useConversations();\n  const [messages, setMessages] = messageState;\n  const [conversations, setConversations] = conversationState;\n  const [selectedConversation, setSelectedConversation] =\n    selectedConversationState;\n  const [mobileView, setMobileView] = mobileViewState;\n\n  const searchRef = useRef();\n\n  return (\n    <div className={mobileView.conversations ? \"show\" : \"hide\"}>\n      <input\n        id=\"searchConversationsInput\"\n        type=\"text\"\n        ref={searchRef}\n        placeholder=\"search\"\n      />\n\n      {conversations.map((convo, i) => {\n        return (\n          <Row\n            key={i}\n            className=\"convoBox\"\n            // className={selectedConversation._id === convo._id ? \"selected\" : \"notSelected\"}\n            // Just another place where I am having to use a different \"id\"\n            // onClick={(e) => selectConversation(e, convo._id)}\n            onClick={() =>\n              API.selectConversation(convo.id).then((messages) => {\n                setMobileView({\n                  conversations: false,\n                  messages: true,\n                });\n                setSelectedConversation(convo);\n                setMessages(messages);\n              })\n            }\n          >\n            {convo.name || \"New Conversation\"}\n          </Row>\n        );\n      })}\n      <div id=\"bottomOfConvos\" />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}