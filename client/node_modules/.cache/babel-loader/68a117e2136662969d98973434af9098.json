{"ast":null,"code":"export const messageReactionsStyle = (props, reactionData, context) => {\n  const uid = props.loggedInUser.uid;\n  let borderStyle = {};\n  let hoveredBorderStyle = {};\n\n  if (reactionData.hasOwnProperty(uid)) {\n    borderStyle = {\n      border: `1px solid ${context.theme.primaryColor}`\n    };\n    hoveredBorderStyle = { ...borderStyle\n    };\n  } else {\n    borderStyle = {\n      border: \"1px solid transparent\"\n    };\n    hoveredBorderStyle = {\n      border: `1px solid ${context.theme.borderColor.primary}`\n    };\n  }\n\n  return {\n    fontSize: \"11px\",\n    padding: \"2px 6px\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    verticalAlign: \"top\",\n    backgroundColor: `${context.theme.backgroundColor.secondary}`,\n    borderRadius: \"12px\",\n    margin: \"4px 4px 0 0\",\n    cursor: \"pointer\",\n    ...borderStyle,\n    \".emoji-mart-emoji\": {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    \"&:hover\": { ...hoveredBorderStyle\n    }\n  };\n};\nexport const emojiButtonStyle = (img, context) => {\n  return {\n    outline: \"0\",\n    border: \"0\",\n    borderRadius: \"4px\",\n    alignItems: \"center\",\n    display: \"inline-flex\",\n    justifyContent: \"center\",\n    position: \"relative\",\n    \"i\": {\n      height: \"24px\",\n      width: \"24px\",\n      mask: `url(${img}) center center no-repeat`,\n      backgroundColor: `${context.theme.secondaryTextColor}`\n    }\n  };\n};\nexport const reactionCountStyle = context => {\n  return {\n    color: `${context.theme.color.primary}`,\n    padding: \"0 1px 0 3px\"\n  };\n};","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Messages/Extensions/CometChatMessageReactions/style.js"],"names":["messageReactionsStyle","props","reactionData","context","uid","loggedInUser","borderStyle","hoveredBorderStyle","hasOwnProperty","border","theme","primaryColor","borderColor","primary","fontSize","padding","display","alignItems","verticalAlign","backgroundColor","secondary","borderRadius","margin","cursor","justifyContent","emojiButtonStyle","img","outline","position","height","width","mask","secondaryTextColor","reactionCountStyle","color"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAG,CAACC,KAAD,EAAQC,YAAR,EAAsBC,OAAtB,KAAkC;AAEtE,QAAMC,GAAG,GAAGH,KAAK,CAACI,YAAN,CAAmBD,GAA/B;AACA,MAAIE,WAAW,GAAG,EAAlB;AACA,MAAIC,kBAAkB,GAAG,EAAzB;;AAEA,MAAIL,YAAY,CAACM,cAAb,CAA4BJ,GAA5B,CAAJ,EAAsC;AACrCE,IAAAA,WAAW,GAAG;AACbG,MAAAA,MAAM,EAAG,aAAYN,OAAO,CAACO,KAAR,CAAcC,YAAa;AADnC,KAAd;AAIAJ,IAAAA,kBAAkB,GAAG,EAAE,GAAGD;AAAL,KAArB;AACA,GAND,MAMO;AACNA,IAAAA,WAAW,GAAG;AACbG,MAAAA,MAAM,EAAE;AADK,KAAd;AAIAF,IAAAA,kBAAkB,GAAG;AACpBE,MAAAA,MAAM,EAAG,aAAYN,OAAO,CAACO,KAAR,CAAcE,WAAd,CAA0BC,OAAQ;AADnC,KAArB;AAGA;;AAED,SAAO;AACNC,IAAAA,QAAQ,EAAE,MADJ;AAENC,IAAAA,OAAO,EAAE,SAFH;AAGNC,IAAAA,OAAO,EAAE,aAHH;AAINC,IAAAA,UAAU,EAAE,QAJN;AAKNC,IAAAA,aAAa,EAAE,KALT;AAMNC,IAAAA,eAAe,EAAG,GAAEhB,OAAO,CAACO,KAAR,CAAcS,eAAd,CAA8BC,SAAU,EANtD;AAONC,IAAAA,YAAY,EAAE,MAPR;AAQNC,IAAAA,MAAM,EAAE,aARF;AASNC,IAAAA,MAAM,EAAE,SATF;AAUN,OAAGjB,WAVG;AAWN,yBAAqB;AACpBU,MAAAA,OAAO,EAAE,aADW;AAEpBC,MAAAA,UAAU,EAAE,QAFQ;AAGpBO,MAAAA,cAAc,EAAE;AAHI,KAXf;AAgBN,eAAW,EACV,GAAGjB;AADO;AAhBL,GAAP;AAoBA,CA1CM;AA4CP,OAAO,MAAMkB,gBAAgB,GAAG,CAACC,GAAD,EAAMvB,OAAN,KAAkB;AAE9C,SAAO;AACHwB,IAAAA,OAAO,EAAE,GADN;AAEHlB,IAAAA,MAAM,EAAE,GAFL;AAGHY,IAAAA,YAAY,EAAE,KAHX;AAIHJ,IAAAA,UAAU,EAAE,QAJT;AAKHD,IAAAA,OAAO,EAAE,aALN;AAMHQ,IAAAA,cAAc,EAAE,QANb;AAOHI,IAAAA,QAAQ,EAAE,UAPP;AAQH,SAAK;AACDC,MAAAA,MAAM,EAAE,MADP;AAEDC,MAAAA,KAAK,EAAE,MAFN;AAGDC,MAAAA,IAAI,EAAG,OAAML,GAAI,2BAHhB;AAIVP,MAAAA,eAAe,EAAG,GAAEhB,OAAO,CAACO,KAAR,CAAcsB,kBAAmB;AAJ3C;AARF,GAAP;AAeH,CAjBM;AAmBP,OAAO,MAAMC,kBAAkB,GAAG9B,OAAO,IAAI;AAE5C,SAAO;AACN+B,IAAAA,KAAK,EAAG,GAAE/B,OAAO,CAACO,KAAR,CAAcwB,KAAd,CAAoBrB,OAAQ,EADhC;AAENE,IAAAA,OAAO,EAAE;AAFH,GAAP;AAIA,CANM","sourcesContent":["export const messageReactionsStyle = (props, reactionData, context) => {\n\n\tconst uid = props.loggedInUser.uid;\n\tlet borderStyle = {};\n\tlet hoveredBorderStyle = {};\n\n\tif (reactionData.hasOwnProperty(uid)) {\n\t\tborderStyle = {\n\t\t\tborder: `1px solid ${context.theme.primaryColor}`,\n\t\t};\n\n\t\thoveredBorderStyle = { ...borderStyle };\n\t} else {\n\t\tborderStyle = {\n\t\t\tborder: \"1px solid transparent\",\n\t\t};\n\n\t\thoveredBorderStyle = {\n\t\t\tborder: `1px solid ${context.theme.borderColor.primary}`,\n\t\t};\n\t}\n\n\treturn {\n\t\tfontSize: \"11px\",\n\t\tpadding: \"2px 6px\",\n\t\tdisplay: \"inline-flex\",\n\t\talignItems: \"center\",\n\t\tverticalAlign: \"top\",\n\t\tbackgroundColor: `${context.theme.backgroundColor.secondary}`,\n\t\tborderRadius: \"12px\",\n\t\tmargin: \"4px 4px 0 0\",\n\t\tcursor: \"pointer\",\n\t\t...borderStyle,\n\t\t\".emoji-mart-emoji\": {\n\t\t\tdisplay: \"inline-flex\",\n\t\t\talignItems: \"center\",\n\t\t\tjustifyContent: \"center\",\n\t\t},\n\t\t\"&:hover\": {\n\t\t\t...hoveredBorderStyle,\n\t\t},\n\t};\n};\n\nexport const emojiButtonStyle = (img, context) => {\n\n    return {\n        outline: \"0\",\n        border: \"0\",\n        borderRadius: \"4px\",\n        alignItems: \"center\",\n        display: \"inline-flex\",\n        justifyContent: \"center\",\n        position: \"relative\",\n        \"i\": {\n            height: \"24px\",\n            width: \"24px\",\n            mask: `url(${img}) center center no-repeat`,\n\t\t\tbackgroundColor: `${context.theme.secondaryTextColor}`,\n        }        \n    }\n}\n\nexport const reactionCountStyle = context => {\n\n\treturn {\n\t\tcolor: `${context.theme.color.primary}`,\n\t\tpadding: \"0 1px 0 3px\",\n\t};\n};"]},"metadata":{},"sourceType":"module"}