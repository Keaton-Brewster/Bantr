{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/MainContent/Messaging/ChatInput.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect, useState } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { FaArrowUp } from \"react-icons/fa\";\nimport { FaRegSmile } from \"react-icons/fa\";\nimport { useConversations } from \"../../../utils/ConversationProvider\";\nimport { useViewport } from \"../../../utils/ViewportProvider\";\nimport Picker from \"emoji-picker-react\";\nimport \"./chatInput.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatInput({\n  containerRef\n}) {\n  _s();\n\n  const [currentInput, setCurrentInput] = useState(null);\n  const {\n    sendMessage\n  } = useConversations();\n  const {\n    width,\n    scrollToBottomMessages\n  } = useViewport();\n  const [chatboxWidth, setChatboxWidth] = useState(\"100%\");\n  const [emojiPickerShow, setEmojiPickerShow] = useState(false);\n  const textRef = useRef();\n\n  function messageSubmit(event) {\n    event.preventDefault();\n    if (!currentInput) return;\n    scrollToBottomMessages();\n    sendMessage(currentInput);\n    textRef.current.value = \"\";\n  }\n\n  function handleInputChange(event) {\n    event.preventDefault();\n    setCurrentInput(textRef.current.value);\n  }\n\n  function toggleEmojiMenu(event) {\n    event.preventDefault();\n    setEmojiPickerShow(!emojiPickerShow);\n  }\n\n  function addEmoji(event, emojiData) {\n    event.preventDefault();\n    const messagePlusEmoji = `${textRef.current.value} ${emojiData.emoji}`;\n    setCurrentInput(messagePlusEmoji);\n    textRef.current.value = messagePlusEmoji;\n  }\n\n  useEffect(() => {\n    if (width >= 680) setChatboxWidth(`${containerRef.current.offsetWidth}px`);else setChatboxWidth(\"100%\"); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [width]);\n  return (\n    /*#__PURE__*/\n\n    /*  At some point in time it would be good to re visit this so that you can do CMD+Enter and have the message send. \n        Obviously this would only work for computers, but it would be a good basic function to have */\n    _jsxDEV(\"div\", {\n      id: \"chatBox\",\n      style: {\n        width: chatboxWidth\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${emojiPickerShow ? \"show\" : \"hide\"}`,\n          children: /*#__PURE__*/_jsxDEV(Picker, {\n            disableSkinTonePicker: true,\n            onEmojiClick: addEmoji,\n            pickerStyle: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 9,\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: textRef,\n            rows: \"1\",\n            id: \"chatInput\",\n            type: \"text\",\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 2,\n          className: \"text-center chatInputButton\",\n          children: /*#__PURE__*/_jsxDEV(FaRegSmile, {\n            id: \"openEmojisButton\",\n            onClick: toggleEmojiMenu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 1,\n          className: \"text-center chatInputButton\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"sendButton\",\n            onClick: messageSubmit,\n            children: /*#__PURE__*/_jsxDEV(FaArrowUp, {\n              className: \"sendButton\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(ChatInput, \"ICwGdd7evH/+pqhbwLA1MQQ8IO0=\", false, function () {\n  return [useConversations, useViewport];\n});\n\n_c = ChatInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/Comps/MainContent/Messaging/ChatInput.jsx"],"names":["useRef","useEffect","useState","Row","Col","FaArrowUp","FaRegSmile","useConversations","useViewport","Picker","ChatInput","containerRef","currentInput","setCurrentInput","sendMessage","width","scrollToBottomMessages","chatboxWidth","setChatboxWidth","emojiPickerShow","setEmojiPickerShow","textRef","messageSubmit","event","preventDefault","current","value","handleInputChange","toggleEmojiMenu","addEmoji","emojiData","messagePlusEmoji","emoji","offsetWidth"],"mappings":"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","sourcesContent":["import { useRef, useEffect, useState } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { FaArrowUp } from \"react-icons/fa\";\nimport { FaRegSmile } from \"react-icons/fa\";\nimport { useConversations } from \"../../../utils/ConversationProvider\";\nimport { useViewport } from \"../../../utils/ViewportProvider\";\nimport Picker from \"emoji-picker-react\";\nimport \"./chatInput.css\";\n\nexport default function ChatInput({ containerRef }) {\n  const [currentInput, setCurrentInput] = useState(null);\n  const { sendMessage } = useConversations();\n  const { width, scrollToBottomMessages } = useViewport();\n  const [chatboxWidth, setChatboxWidth] = useState(\"100%\");\n  const [emojiPickerShow, setEmojiPickerShow] = useState(false);\n  const textRef = useRef();\n\n  function messageSubmit(event) {\n    event.preventDefault();\n    if (!currentInput) return;\n    scrollToBottomMessages();\n    sendMessage(currentInput);\n    textRef.current.value = \"\";\n  }\n\n  function handleInputChange(event) {\n    event.preventDefault();\n    setCurrentInput(textRef.current.value);\n  }\n\n  function toggleEmojiMenu(event) {\n    event.preventDefault();\n    setEmojiPickerShow(!emojiPickerShow);\n  }\n\n  function addEmoji(event, emojiData) {\n    event.preventDefault();\n    const messagePlusEmoji = `${textRef.current.value} ${emojiData.emoji}`;\n    setCurrentInput(messagePlusEmoji);\n    textRef.current.value = messagePlusEmoji;\n  }\n\n  useEffect(() => {\n    if (width >= 680) setChatboxWidth(`${containerRef.current.offsetWidth}px`);\n    else setChatboxWidth(\"100%\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [width]);\n\n  return (\n    /*  At some point in time it would be good to re visit this so that you can do CMD+Enter and have the message send. \n        Obviously this would only work for computers, but it would be a good basic function to have */\n    <div id=\"chatBox\" style={{ width: chatboxWidth }}>\n      <Row>\n        <div className={`${emojiPickerShow ? \"show\" : \"hide\"}`}>\n          <Picker\n            disableSkinTonePicker={true}\n            onEmojiClick={addEmoji}\n            pickerStyle={{ width: \"100%\" }}\n          />\n        </div>\n      </Row>\n      <Row>\n        <Col xs={9}>\n          <textarea\n            ref={textRef}\n            rows=\"1\"\n            id=\"chatInput\"\n            type=\"text\"\n            onChange={handleInputChange}\n          />\n        </Col>\n        <Col xs={2} className=\"text-center chatInputButton\">\n          <FaRegSmile id=\"openEmojisButton\" onClick={toggleEmojiMenu} />\n        </Col>\n        <Col xs={1} className=\"text-center chatInputButton\">\n          <button id=\"sendButton\" onClick={messageSubmit}>\n            <FaArrowUp className=\"sendButton\" />\n          </button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}