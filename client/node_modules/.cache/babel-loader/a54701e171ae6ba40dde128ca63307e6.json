{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Groups/CometChatGroupList/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { GroupListManager } from \"./controller\";\nimport { CometChatCreateGroup, CometChatGroupListItem } from \"../../Groups\";\nimport { CometChatToastNotification } from \"../../Shared\";\nimport { CometChatContextProvider, CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { groupWrapperStyle, groupHeaderStyle, groupHeaderCloseStyle, groupHeaderTitleStyle, groupAddStyle, groupSearchStyle, groupSearchButtonStyle, groupSearchInputStyle, groupMsgStyle, groupMsgTxtStyle, groupListStyle } from \"./style\";\nimport searchIcon from \"./resources/search.svg\";\nimport navigateIcon from \"./resources/back.svg\";\nimport addIcon from \"./resources/create.svg\";\n\nclass CometChatGroupList extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.loggedInUser = null;\n\n    this.enableSearchGroup = () => {\n      this.getContext().FeatureRestriction.isGroupSearchEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableSearchGroup) {\n          this.setState({\n            enableSearchGroup: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableSearchGroup !== false) {\n          this.setState({\n            enableSearchGroup: false\n          });\n        }\n      });\n    };\n\n    this.enableCreateGroup = () => {\n      this.getContext().FeatureRestriction.isGroupCreationEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableCreateGroup) {\n          this.setState({\n            enableCreateGroup: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableCreateGroup !== false) {\n          this.setState({\n            enableCreateGroup: false\n          });\n        }\n      });\n    };\n\n    this.enableJoinGroup = () => {\n      this.getContext().FeatureRestriction.isJoinLeaveGroupsEnabled().then(response => {\n        /**\n         * Don't update state if the response has the same value\n         */\n        if (response !== this.state.enableJoinGroup) {\n          this.setState({\n            enableJoinGroup: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableJoinGroup !== false) {\n          this.setState({\n            enableJoinGroup: false\n          });\n        }\n      });\n    };\n\n    this.groupUpdated = (key, message, group, options) => {\n      switch (key) {\n        case enums.GROUP_MEMBER_SCOPE_CHANGED:\n          this.updateMemberChanged(group, options);\n          break;\n\n        case enums.GROUP_MEMBER_KICKED:\n        case enums.GROUP_MEMBER_BANNED:\n        case enums.GROUP_MEMBER_LEFT:\n          this.updateMemberRemoved(group, options);\n          break;\n\n        case enums.GROUP_MEMBER_ADDED:\n          this.updateMemberAdded(group, options);\n          break;\n\n        case enums.GROUP_MEMBER_JOINED:\n          this.updateMemberJoined(group, options);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.updateMemberRemoved = (group, options) => {\n      let grouplist = [...this.state.grouplist]; //search for group\n\n      let groupKey = grouplist.findIndex(g => g.guid === group.guid);\n\n      if (groupKey > -1) {\n        if (options && this.loggedInUser.uid === options.user.uid) {\n          let groupObj = { ...grouplist[groupKey]\n          };\n          let membersCount = parseInt(group.membersCount);\n          let hasJoined = group.hasJoined;\n          let newgroupObj = Object.assign({}, groupObj, {\n            membersCount: membersCount,\n            hasJoined: hasJoined\n          });\n          grouplist.splice(groupKey, 1, newgroupObj);\n          this.setState({\n            grouplist: grouplist\n          });\n        } else {\n          let groupObj = { ...grouplist[groupKey]\n          };\n          let membersCount = parseInt(group.membersCount);\n          let newgroupObj = Object.assign({}, groupObj, {\n            membersCount: membersCount\n          });\n          grouplist.splice(groupKey, 1, newgroupObj);\n          this.setState({\n            grouplist: grouplist\n          });\n        }\n      }\n    };\n\n    this.updateMemberAdded = (group, options) => {\n      let grouplist = [...this.state.grouplist]; //search for group\n\n      let groupKey = grouplist.findIndex(g => g.guid === group.guid);\n\n      if (groupKey > -1) {\n        let groupObj = { ...grouplist[groupKey]\n        };\n        let membersCount = parseInt(group.membersCount);\n        let scope = group.hasOwnProperty(\"scope\") ? group.scope : \"\";\n        let hasJoined = group.hasOwnProperty(\"hasJoined\") ? group.hasJoined : false;\n\n        if (options && this.loggedInUser.uid === options.user.uid) {\n          scope = CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT;\n          hasJoined = true;\n        }\n\n        let newgroupObj = Object.assign({}, groupObj, {\n          membersCount: membersCount,\n          scope: scope,\n          hasJoined: hasJoined\n        });\n        grouplist.splice(groupKey, 1, newgroupObj);\n        this.setState({\n          grouplist: grouplist\n        });\n      } else {\n        let groupObj = { ...group\n        };\n        let scope = groupObj.hasOwnProperty(\"scope\") ? groupObj.scope : \"\";\n        let hasJoined = groupObj.hasOwnProperty(\"hasJoined\") ? groupObj.hasJoined : false;\n        let membersCount = parseInt(groupObj.membersCount);\n\n        if (options && this.loggedInUser.uid === options.user.uid) {\n          scope = CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT;\n          hasJoined = true;\n        }\n\n        let newgroupObj = Object.assign({}, groupObj, {\n          membersCount: membersCount,\n          scope: scope,\n          hasJoined: hasJoined\n        });\n        grouplist.unshift(newgroupObj);\n        this.setState({\n          grouplist: grouplist\n        });\n      }\n    };\n\n    this.updateMemberJoined = (group, options) => {\n      let grouplist = [...this.state.grouplist]; //search for group\n\n      let groupKey = grouplist.findIndex(g => g.guid === group.guid);\n\n      if (groupKey > -1) {\n        let groupObj = { ...grouplist[groupKey]\n        };\n        let scope = groupObj.scope;\n        let membersCount = parseInt(group.membersCount);\n\n        if (options && this.loggedInUser.uid === options.user.uid) {\n          scope = CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT;\n        }\n\n        let newgroupObj = Object.assign({}, groupObj, {\n          membersCount: membersCount,\n          scope: scope\n        });\n        grouplist.splice(groupKey, 1, newgroupObj);\n        this.setState({\n          grouplist: grouplist\n        });\n      }\n    };\n\n    this.updateMemberChanged = (group, options) => {\n      let grouplist = [...this.state.grouplist]; //search for group\n\n      let groupKey = grouplist.findIndex(g => g.guid === group.guid);\n\n      if (groupKey > -1) {\n        let groupObj = { ...grouplist[groupKey]\n        };\n\n        if (options && this.loggedInUser.uid === options.user.uid) {\n          let newgroupObj = Object.assign({}, groupObj, {\n            scope: options.scope\n          });\n          grouplist.splice(groupKey, 1, newgroupObj);\n          this.setState({\n            grouplist: grouplist\n          });\n        }\n      }\n    };\n\n    this.handleScroll = e => {\n      const bottom = Math.round(e.currentTarget.scrollHeight - e.currentTarget.scrollTop) === Math.round(e.currentTarget.clientHeight);\n      if (bottom) this.getGroups();\n    };\n\n    this.handleClick = group => {\n      if (!this.props.onItemClick) return;\n\n      if (group.hasJoined === false) {\n        //if join group feature is disabled\n        if (this.state.enableJoinGroup === false) {\n          return false;\n        }\n\n        let password = \"\";\n\n        if (group.type === CometChat.GROUP_TYPE.PASSWORD) {\n          password = prompt(Translator.translate(\"ENTER_YOUR_PASSWORD\", this.state.lang));\n        }\n\n        const guid = group.guid;\n        const groupType = group.type;\n        CometChat.joinGroup(guid, groupType, password).then(response => {\n          if (typeof response === \"object\" && Object.keys(response).length) {\n            const groups = [...this.state.grouplist];\n            let groupKey = groups.findIndex((g, k) => g.guid === guid);\n\n            if (groupKey > -1) {\n              const groupObj = groups[groupKey];\n              const newGroupObj = Object.assign({}, groupObj, response, {\n                scope: CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT\n              });\n              groups.splice(groupKey, 1, newGroupObj);\n              this.setState({\n                grouplist: groups\n              });\n              this.props.onItemClick(newGroupObj, CometChat.ACTION_TYPE.TYPE_GROUP);\n            }\n          } else {\n            this.toastRef.setError(\"SOMETHING_WRONG\");\n          }\n        }).catch(error => {\n          if (error.hasOwnProperty(\"code\") && error.code && error.code === \"ERR_WRONG_GROUP_PASS\") {\n            this.toastRef.setError(\"WRONG_PASSWORD\");\n          } else {\n            this.toastRef.setError(\"SOMETHING_WRONG\");\n          }\n        });\n      } else {\n        this.props.onItemClick(group, CometChat.ACTION_TYPE.TYPE_GROUP);\n      }\n    };\n\n    this.handleMenuClose = () => {\n      if (!this.props.actionGenerated) {\n        return false;\n      }\n\n      this.props.actionGenerated(enums.ACTIONS[\"TOGGLE_SIDEBAR\"]);\n    };\n\n    this.searchGroup = e => {\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n      }\n\n      let val = e.target.value;\n      this.timeout = setTimeout(() => {\n        this.setState({\n          grouplist: [],\n          decoratorMessage: Translator.translate(\"LOADING\", this.state.lang)\n        });\n        this.GroupListManager = new GroupListManager(val);\n        this.getGroups();\n      }, 500);\n    };\n\n    this.markMessagesRead = message => {\n      if (!(message.getReadAt() || message.getReadByMeAt())) {\n        if (message.getReceiverType() === CometChat.RECEIVER_TYPE.USER) {\n          CometChat.markAsRead(message.getId().toString(), message.getSender().getUid(), message.getReceiverType());\n        } else {\n          CometChat.markAsRead(message.getId().toString(), message.getReceiverId(), message.getReceiverType());\n        }\n      }\n    };\n\n    this.getGroups = () => {\n      this.GroupListManager.fetchNextGroups().then(groupList => {\n        if (groupList.length === 0) {\n          if (this.state.grouplist.length === 0) {\n            this.setState({\n              decoratorMessage: Translator.translate(\"NO_GROUPS_FOUND\", this.state.lang)\n            });\n          }\n        } else {\n          this.setState({\n            grouplist: [...this.state.grouplist, ...groupList],\n            decoratorMessage: \"\"\n          });\n        }\n      }).catch(error => this.setState({\n        decoratorMessage: Translator.translate(\"SOMETHING_WRONG\", this.state.lang)\n      }));\n    };\n\n    this.createGroupHandler = flag => {\n      this.setState({\n        createGroup: flag\n      });\n    };\n\n    this.createGroupActionHandler = (action, group) => {\n      if (action === enums.ACTIONS[\"GROUP_CREATED\"]) {\n        this.handleClick(group);\n        const groupList = [...this.state.grouplist];\n        groupList.unshift(group);\n        this.setState({\n          grouplist: groupList,\n          createGroup: false\n        });\n      }\n    };\n\n    this.getContext = () => {\n      if (this.props._parent.length) {\n        return this.context;\n      } else {\n        return this.contextProviderRef.state;\n      }\n    };\n\n    this.state = {\n      grouplist: [],\n      createGroup: false,\n      lang: props.lang,\n      enableSearchGroup: false,\n      enableCreateGroup: false,\n      enableJoinGroup: false,\n      decoratorMessage: Translator.translate(\"LOADING\", props.lang)\n    };\n    this.contextProviderRef = /*#__PURE__*/React.createRef();\n    this.groupListRef = /*#__PURE__*/React.createRef();\n    this.toastRef = /*#__PURE__*/React.createRef();\n    CometChat.getLoggedinUser().then(user => this.loggedInUser = user).catch(error => this.setState({\n      decoratorMessage: Translator.translate(\"SOMETHING_WRONG\", this.state.lang)\n    }));\n  }\n\n  componentDidMount() {\n    this.item = this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP ? this.getContext().item : null;\n    this.enableSearchGroup();\n    this.enableCreateGroup();\n    this.enableJoinGroup();\n    this.GroupListManager = new GroupListManager();\n    this.getGroups();\n    this.GroupListManager.attachListeners(this.groupUpdated);\n  }\n\n  componentDidUpdate(prevProps) {\n    //if group detail(membersCount) is updated, update grouplist\n    if (this.item && Object.keys(this.item).length && this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP && this.item.guid === this.getContext().item.guid && this.item.membersCount !== this.getContext().item.membersCount) {\n      const groups = [...this.state.grouplist];\n      let groupKey = groups.findIndex(group => group.guid === this.getContext().item.guid);\n\n      if (groupKey > -1) {\n        const groupObj = groups[groupKey];\n        let newGroupObj = Object.assign({}, groupObj, {\n          membersCount: this.getContext().item.membersCount\n        });\n        groups.splice(groupKey, 1, newGroupObj);\n        this.setState({\n          grouplist: groups\n        });\n      }\n    } //upon user deleting a group, remove group from group list\n\n\n    if (this.getContext().deletedGroupId.trim().length) {\n      const guid = this.getContext().deletedGroupId.trim();\n      const groups = [...this.state.grouplist];\n      const groupKey = groups.findIndex(group => group.guid === guid);\n\n      if (groupKey > -1) {\n        groups.splice(groupKey, 1);\n        this.setState({\n          grouplist: groups\n        });\n      }\n    }\n\n    if (prevProps.lang !== this.props.lang) {\n      this.setState({\n        lang: this.props.lang\n      });\n    }\n\n    this.item = this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP ? this.getContext().item : null;\n    this.enableSearchGroup();\n    this.enableCreateGroup();\n    this.enableJoinGroup();\n  }\n\n  componentWillUnmount() {\n    this.GroupListManager = null;\n  }\n  /**\n   * if search group feature is disabled\n   */\n\n\n  render() {\n    let messageContainer = null;\n\n    if (this.state.decoratorMessage.length !== 0) {\n      messageContainer = jsx(\"div\", {\n        css: groupMsgStyle(),\n        className: \"groups__decorator-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 5\n        }\n      }, jsx(\"p\", {\n        css: groupMsgTxtStyle(this.getContext()),\n        className: \"decorator-message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 6\n        }\n      }, this.state.decoratorMessage));\n    }\n\n    const groups = this.state.grouplist.map(group => {\n      let selectedGroup = this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP && this.getContext().item.guid === group.guid ? group : null;\n      return jsx(CometChatGroupListItem, {\n        key: group.guid,\n        theme: this.props.theme,\n        group: group,\n        lang: this.state.lang,\n        selectedGroup: selectedGroup,\n        clickHandler: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }\n      });\n    });\n    let createGroupBtn = jsx(\"div\", {\n      css: groupAddStyle(addIcon, this.context),\n      title: Translator.translate(\"CREATE_GROUP\", this.state.lang),\n      onClick: () => this.createGroupHandler(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 4\n      }\n    }, jsx(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 5\n      }\n    })); //if create group feature is disabled\n\n    if (this.state.enableCreateGroup === false) {\n      createGroupBtn = null;\n    }\n\n    let closeBtn = jsx(\"div\", {\n      css: groupHeaderCloseStyle(navigateIcon, this.props),\n      className: \"header__close\",\n      onClick: this.handleMenuClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 18\n      }\n    });\n\n    if (this.getContext() && Object.keys(this.getContext().item).length === 0) {\n      closeBtn = null;\n    }\n\n    let searchGroup = null;\n\n    if (this.state.enableSearchGroup) {\n      searchGroup = jsx(\"div\", {\n        css: groupSearchStyle(),\n        className: \"groups__search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 5\n        }\n      }, jsx(\"button\", {\n        type: \"button\",\n        className: \"search__button\",\n        css: groupSearchButtonStyle(searchIcon, this.getContext()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 6\n        }\n      }), jsx(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        css: groupSearchInputStyle(),\n        className: \"search__input\",\n        placeholder: Translator.translate(\"SEARCH\", this.state.lang),\n        onChange: this.searchGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 6\n        }\n      }));\n    }\n\n    let createGroup = null;\n\n    if (this.state.createGroup) {\n      createGroup = jsx(CometChatCreateGroup, {\n        theme: this.props.theme,\n        lang: this.state.lang,\n        close: () => this.createGroupHandler(false),\n        actionGenerated: this.createGroupActionHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 19\n        }\n      });\n    }\n\n    const groupListTemplate = jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 4\n      }\n    }, jsx(\"div\", {\n      css: groupWrapperStyle(this.props, this.getContext()),\n      className: \"groups\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 5\n      }\n    }, jsx(\"div\", {\n      css: groupHeaderStyle(this.getContext()),\n      className: \"groups__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 6\n      }\n    }, closeBtn, jsx(\"h4\", {\n      css: groupHeaderTitleStyle(this.props),\n      className: \"header__title\",\n      dir: Translator.getDirection(this.state.lang),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 7\n      }\n    }, Translator.translate(\"GROUPS\", this.state.lang)), createGroupBtn), searchGroup, messageContainer, jsx(\"div\", {\n      css: groupListStyle(),\n      className: \"groups__list\",\n      onScroll: this.handleScroll,\n      ref: el => this.groupListRef = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 6\n      }\n    }, groups)), createGroup, jsx(CometChatToastNotification, {\n      ref: el => this.toastRef = el,\n      context: this.getContext(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 5\n      }\n    }));\n    let groupListWrapper = groupListTemplate; //if used as a standalone component, add errorboundary and context provider\n\n    if (this.props._parent === \"\") {\n      groupListWrapper = jsx(CometChatContextProvider, {\n        ref: el => this.contextProviderRef = el,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 23\n        }\n      }, groupListTemplate);\n    }\n\n    return groupListWrapper;\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatGroupList.contextType = CometChatContext;\nCometChatGroupList.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  onItemClick: () => {},\n  _parent: \"\"\n};\nCometChatGroupList.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  onItemClick: PropTypes.func,\n  _parent: PropTypes.string\n};\nexport { CometChatGroupList };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Groups/CometChatGroupList/index.js"],"names":["React","jsx","PropTypes","CometChat","GroupListManager","CometChatCreateGroup","CometChatGroupListItem","CometChatToastNotification","CometChatContextProvider","CometChatContext","enums","theme","Translator","groupWrapperStyle","groupHeaderStyle","groupHeaderCloseStyle","groupHeaderTitleStyle","groupAddStyle","groupSearchStyle","groupSearchButtonStyle","groupSearchInputStyle","groupMsgStyle","groupMsgTxtStyle","groupListStyle","CometChatGroupList","PureComponent","constructor","props","loggedInUser","enableSearchGroup","getContext","FeatureRestriction","isGroupSearchEnabled","then","response","state","setState","catch","error","enableCreateGroup","isGroupCreationEnabled","enableJoinGroup","isJoinLeaveGroupsEnabled","groupUpdated","key","message","group","options","GROUP_MEMBER_SCOPE_CHANGED","updateMemberChanged","GROUP_MEMBER_KICKED","GROUP_MEMBER_BANNED","GROUP_MEMBER_LEFT","updateMemberRemoved","GROUP_MEMBER_ADDED","updateMemberAdded","GROUP_MEMBER_JOINED","updateMemberJoined","grouplist","groupKey","findIndex","g","guid","uid","user","groupObj","membersCount","parseInt","hasJoined","newgroupObj","Object","assign","splice","scope","hasOwnProperty","GROUP_MEMBER_SCOPE","PARTICIPANT","unshift","handleScroll","e","bottom","Math","round","currentTarget","scrollHeight","scrollTop","clientHeight","getGroups","handleClick","onItemClick","password","type","GROUP_TYPE","PASSWORD","prompt","translate","lang","groupType","joinGroup","keys","length","groups","k","newGroupObj","ACTION_TYPE","TYPE_GROUP","toastRef","setError","code","handleMenuClose","actionGenerated","ACTIONS","searchGroup","timeout","clearTimeout","val","target","value","setTimeout","decoratorMessage","markMessagesRead","getReadAt","getReadByMeAt","getReceiverType","RECEIVER_TYPE","USER","markAsRead","getId","toString","getSender","getUid","getReceiverId","fetchNextGroups","groupList","createGroupHandler","flag","createGroup","createGroupActionHandler","action","_parent","context","contextProviderRef","createRef","groupListRef","getLoggedinUser","componentDidMount","item","attachListeners","componentDidUpdate","prevProps","deletedGroupId","trim","componentWillUnmount","render","messageContainer","map","selectedGroup","createGroupBtn","addIcon","closeBtn","navigateIcon","searchIcon","groupListTemplate","getDirection","el","groupListWrapper","contextType","defaultProps","getDefaultLanguage","propTypes","string","object","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;;AACA;;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,SAASC,gBAAT,QAAiC,cAAjC;AAEA,SAASC,oBAAT,EAA+BC,sBAA/B,QAA8D,cAA9D;AACA,SAASC,0BAAT,QAA2C,cAA3C;AAEA,SAASC,wBAAT,EAAmCC,gBAAnC,QAA2D,gCAA3D;AACA,OAAO,KAAKC,KAAZ,MAAuB,wBAAvB;AAEA,SAASC,KAAT,QAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,4CAAvB;AAEA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,qBAHF,EAIEC,qBAJF,EAKEC,aALF,EAMEC,gBANF,EAOEC,sBAPF,EAQEC,qBARF,EASEC,aATF,EAUEC,gBAVF,EAWEC,cAXF,QAYO,SAZP;;;;;AAkBA,MAAMC,kBAAN,SAAiCxB,KAAK,CAACyB,aAAvC,CAAqD;AAOpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AADkB,SAJnBC,YAImB,GAJJ,IAII;;AAAA,SA8EnBC,iBA9EmB,GA8EC,MAAM;AACzB,WAAKC,UAAL,GACEC,kBADF,CACqBC,oBADrB,GAEEC,IAFF,CAEOC,QAAQ,IAAI;AACjB;AACJ;AACA;AACI,YAAIA,QAAQ,KAAK,KAAKC,KAAL,CAAWN,iBAA5B,EAA+C;AAC9C,eAAKO,QAAL,CAAc;AAACP,YAAAA,iBAAiB,EAAEK;AAApB,WAAd;AACA;AACD,OATF,EAUEG,KAVF,CAUQC,KAAK,IAAI;AACf,YAAI,KAAKH,KAAL,CAAWN,iBAAX,KAAiC,KAArC,EAA4C;AAC3C,eAAKO,QAAL,CAAc;AAACP,YAAAA,iBAAiB,EAAE;AAApB,WAAd;AACA;AACD,OAdF;AAeA,KA9FkB;;AAAA,SAmGnBU,iBAnGmB,GAmGC,MAAM;AACzB,WAAKT,UAAL,GACEC,kBADF,CACqBS,sBADrB,GAEEP,IAFF,CAEOC,QAAQ,IAAI;AACjB;AACJ;AACA;AACI,YAAIA,QAAQ,KAAK,KAAKC,KAAL,CAAWI,iBAA5B,EAA+C;AAC9C,eAAKH,QAAL,CAAc;AAACG,YAAAA,iBAAiB,EAAEL;AAApB,WAAd;AACA;AACD,OATF,EAUEG,KAVF,CAUQC,KAAK,IAAI;AACf,YAAI,KAAKH,KAAL,CAAWI,iBAAX,KAAiC,KAArC,EAA4C;AAC3C,eAAKH,QAAL,CAAc;AAACG,YAAAA,iBAAiB,EAAE;AAApB,WAAd;AACA;AACD,OAdF;AAeA,KAnHkB;;AAAA,SAwHnBE,eAxHmB,GAwHD,MAAM;AACvB,WAAKX,UAAL,GACEC,kBADF,CACqBW,wBADrB,GAEET,IAFF,CAEOC,QAAQ,IAAI;AACjB;AACJ;AACA;AACI,YAAIA,QAAQ,KAAK,KAAKC,KAAL,CAAWM,eAA5B,EAA6C;AAC5C,eAAKL,QAAL,CAAc;AAACK,YAAAA,eAAe,EAAEP;AAAlB,WAAd;AACA;AACD,OATF,EAUEG,KAVF,CAUQC,KAAK,IAAI;AACf,YAAI,KAAKH,KAAL,CAAWM,eAAX,KAA+B,KAAnC,EAA0C;AACzC,eAAKL,QAAL,CAAc;AAACK,YAAAA,eAAe,EAAE;AAAlB,WAAd;AACA;AACD,OAdF;AAeA,KAxIkB;;AAAA,SA0InBE,YA1ImB,GA0IJ,CAACC,GAAD,EAAMC,OAAN,EAAeC,KAAf,EAAsBC,OAAtB,KAAkC;AAChD,cAAQH,GAAR;AACC,aAAKlC,KAAK,CAACsC,0BAAX;AACC,eAAKC,mBAAL,CAAyBH,KAAzB,EAAgCC,OAAhC;AACA;;AACD,aAAKrC,KAAK,CAACwC,mBAAX;AACA,aAAKxC,KAAK,CAACyC,mBAAX;AACA,aAAKzC,KAAK,CAAC0C,iBAAX;AACC,eAAKC,mBAAL,CAAyBP,KAAzB,EAAgCC,OAAhC;AACA;;AACD,aAAKrC,KAAK,CAAC4C,kBAAX;AACC,eAAKC,iBAAL,CAAuBT,KAAvB,EAA8BC,OAA9B;AACA;;AACD,aAAKrC,KAAK,CAAC8C,mBAAX;AACC,eAAKC,kBAAL,CAAwBX,KAAxB,EAA+BC,OAA/B;AACA;;AACD;AACC;AAhBF;AAkBA,KA7JkB;;AAAA,SA+JnBM,mBA/JmB,GA+JG,CAACP,KAAD,EAAQC,OAAR,KAAoB;AACzC,UAAIW,SAAS,GAAG,CAAC,GAAG,KAAKvB,KAAL,CAAWuB,SAAf,CAAhB,CADyC,CAGzC;;AACA,UAAIC,QAAQ,GAAGD,SAAS,CAACE,SAAV,CAAoBC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWhB,KAAK,CAACgB,IAA1C,CAAf;;AAEA,UAAIH,QAAQ,GAAG,CAAC,CAAhB,EAAmB;AAClB,YAAIZ,OAAO,IAAI,KAAKnB,YAAL,CAAkBmC,GAAlB,KAA0BhB,OAAO,CAACiB,IAAR,CAAaD,GAAtD,EAA2D;AAC1D,cAAIE,QAAQ,GAAG,EAAC,GAAGP,SAAS,CAACC,QAAD;AAAb,WAAf;AACA,cAAIO,YAAY,GAAGC,QAAQ,CAACrB,KAAK,CAACoB,YAAP,CAA3B;AACA,cAAIE,SAAS,GAAGtB,KAAK,CAACsB,SAAtB;AAEA,cAAIC,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,QAAlB,EAA4B;AAACC,YAAAA,YAAY,EAAEA,YAAf;AAA6BE,YAAAA,SAAS,EAAEA;AAAxC,WAA5B,CAAlB;AAEAV,UAAAA,SAAS,CAACc,MAAV,CAAiBb,QAAjB,EAA2B,CAA3B,EAA8BU,WAA9B;AACA,eAAKjC,QAAL,CAAc;AAACsB,YAAAA,SAAS,EAAEA;AAAZ,WAAd;AACA,SATD,MASO;AACN,cAAIO,QAAQ,GAAG,EAAC,GAAGP,SAAS,CAACC,QAAD;AAAb,WAAf;AACA,cAAIO,YAAY,GAAGC,QAAQ,CAACrB,KAAK,CAACoB,YAAP,CAA3B;AAEA,cAAIG,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,QAAlB,EAA4B;AAACC,YAAAA,YAAY,EAAEA;AAAf,WAA5B,CAAlB;AAEAR,UAAAA,SAAS,CAACc,MAAV,CAAiBb,QAAjB,EAA2B,CAA3B,EAA8BU,WAA9B;AACA,eAAKjC,QAAL,CAAc;AAACsB,YAAAA,SAAS,EAAEA;AAAZ,WAAd;AACA;AACD;AACD,KAzLkB;;AAAA,SA2LnBH,iBA3LmB,GA2LC,CAACT,KAAD,EAAQC,OAAR,KAAoB;AACvC,UAAIW,SAAS,GAAG,CAAC,GAAG,KAAKvB,KAAL,CAAWuB,SAAf,CAAhB,CADuC,CAGvC;;AACA,UAAIC,QAAQ,GAAGD,SAAS,CAACE,SAAV,CAAoBC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWhB,KAAK,CAACgB,IAA1C,CAAf;;AAEA,UAAIH,QAAQ,GAAG,CAAC,CAAhB,EAAmB;AAClB,YAAIM,QAAQ,GAAG,EAAC,GAAGP,SAAS,CAACC,QAAD;AAAb,SAAf;AAEA,YAAIO,YAAY,GAAGC,QAAQ,CAACrB,KAAK,CAACoB,YAAP,CAA3B;AAEA,YAAIO,KAAK,GAAG3B,KAAK,CAAC4B,cAAN,CAAqB,OAArB,IAAgC5B,KAAK,CAAC2B,KAAtC,GAA8C,EAA1D;AACA,YAAIL,SAAS,GAAGtB,KAAK,CAAC4B,cAAN,CAAqB,WAArB,IAAoC5B,KAAK,CAACsB,SAA1C,GAAsD,KAAtE;;AAEA,YAAIrB,OAAO,IAAI,KAAKnB,YAAL,CAAkBmC,GAAlB,KAA0BhB,OAAO,CAACiB,IAAR,CAAaD,GAAtD,EAA2D;AAC1DU,UAAAA,KAAK,GAAGtE,SAAS,CAACwE,kBAAV,CAA6BC,WAArC;AACAR,UAAAA,SAAS,GAAG,IAAZ;AACA;;AAED,YAAIC,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,QAAlB,EAA4B;AAACC,UAAAA,YAAY,EAAEA,YAAf;AAA6BO,UAAAA,KAAK,EAAEA,KAApC;AAA2CL,UAAAA,SAAS,EAAEA;AAAtD,SAA5B,CAAlB;AAEAV,QAAAA,SAAS,CAACc,MAAV,CAAiBb,QAAjB,EAA2B,CAA3B,EAA8BU,WAA9B;AACA,aAAKjC,QAAL,CAAc;AAACsB,UAAAA,SAAS,EAAEA;AAAZ,SAAd;AACA,OAjBD,MAiBO;AACN,YAAIO,QAAQ,GAAG,EAAC,GAAGnB;AAAJ,SAAf;AAEA,YAAI2B,KAAK,GAAGR,QAAQ,CAACS,cAAT,CAAwB,OAAxB,IAAmCT,QAAQ,CAACQ,KAA5C,GAAoD,EAAhE;AACA,YAAIL,SAAS,GAAGH,QAAQ,CAACS,cAAT,CAAwB,WAAxB,IAAuCT,QAAQ,CAACG,SAAhD,GAA4D,KAA5E;AACA,YAAIF,YAAY,GAAGC,QAAQ,CAACF,QAAQ,CAACC,YAAV,CAA3B;;AAEA,YAAInB,OAAO,IAAI,KAAKnB,YAAL,CAAkBmC,GAAlB,KAA0BhB,OAAO,CAACiB,IAAR,CAAaD,GAAtD,EAA2D;AAC1DU,UAAAA,KAAK,GAAGtE,SAAS,CAACwE,kBAAV,CAA6BC,WAArC;AACAR,UAAAA,SAAS,GAAG,IAAZ;AACA;;AAED,YAAIC,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,QAAlB,EAA4B;AAACC,UAAAA,YAAY,EAAEA,YAAf;AAA6BO,UAAAA,KAAK,EAAEA,KAApC;AAA2CL,UAAAA,SAAS,EAAEA;AAAtD,SAA5B,CAAlB;AAEAV,QAAAA,SAAS,CAACmB,OAAV,CAAkBR,WAAlB;AACA,aAAKjC,QAAL,CAAc;AAACsB,UAAAA,SAAS,EAAEA;AAAZ,SAAd;AACA;AACD,KAnOkB;;AAAA,SAqOnBD,kBArOmB,GAqOE,CAACX,KAAD,EAAQC,OAAR,KAAoB;AACxC,UAAIW,SAAS,GAAG,CAAC,GAAG,KAAKvB,KAAL,CAAWuB,SAAf,CAAhB,CADwC,CAGxC;;AACA,UAAIC,QAAQ,GAAGD,SAAS,CAACE,SAAV,CAAoBC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWhB,KAAK,CAACgB,IAA1C,CAAf;;AAEA,UAAIH,QAAQ,GAAG,CAAC,CAAhB,EAAmB;AAClB,YAAIM,QAAQ,GAAG,EAAC,GAAGP,SAAS,CAACC,QAAD;AAAb,SAAf;AAEA,YAAIc,KAAK,GAAGR,QAAQ,CAACQ,KAArB;AACA,YAAIP,YAAY,GAAGC,QAAQ,CAACrB,KAAK,CAACoB,YAAP,CAA3B;;AAEA,YAAInB,OAAO,IAAI,KAAKnB,YAAL,CAAkBmC,GAAlB,KAA0BhB,OAAO,CAACiB,IAAR,CAAaD,GAAtD,EAA2D;AAC1DU,UAAAA,KAAK,GAAGtE,SAAS,CAACwE,kBAAV,CAA6BC,WAArC;AACA;;AAED,YAAIP,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,QAAlB,EAA4B;AAACC,UAAAA,YAAY,EAAEA,YAAf;AAA6BO,UAAAA,KAAK,EAAEA;AAApC,SAA5B,CAAlB;AAEAf,QAAAA,SAAS,CAACc,MAAV,CAAiBb,QAAjB,EAA2B,CAA3B,EAA8BU,WAA9B;AACA,aAAKjC,QAAL,CAAc;AAACsB,UAAAA,SAAS,EAAEA;AAAZ,SAAd;AACA;AACD,KA1PkB;;AAAA,SA4PnBT,mBA5PmB,GA4PG,CAACH,KAAD,EAAQC,OAAR,KAAoB;AACzC,UAAIW,SAAS,GAAG,CAAC,GAAG,KAAKvB,KAAL,CAAWuB,SAAf,CAAhB,CADyC,CAGzC;;AACA,UAAIC,QAAQ,GAAGD,SAAS,CAACE,SAAV,CAAoBC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWhB,KAAK,CAACgB,IAA1C,CAAf;;AAEA,UAAIH,QAAQ,GAAG,CAAC,CAAhB,EAAmB;AAClB,YAAIM,QAAQ,GAAG,EAAC,GAAGP,SAAS,CAACC,QAAD;AAAb,SAAf;;AACA,YAAIZ,OAAO,IAAI,KAAKnB,YAAL,CAAkBmC,GAAlB,KAA0BhB,OAAO,CAACiB,IAAR,CAAaD,GAAtD,EAA2D;AAC1D,cAAIM,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,QAAlB,EAA4B;AAACQ,YAAAA,KAAK,EAAE1B,OAAO,CAAC0B;AAAhB,WAA5B,CAAlB;AAEAf,UAAAA,SAAS,CAACc,MAAV,CAAiBb,QAAjB,EAA2B,CAA3B,EAA8BU,WAA9B;AACA,eAAKjC,QAAL,CAAc;AAACsB,YAAAA,SAAS,EAAEA;AAAZ,WAAd;AACA;AACD;AACD,KA3QkB;;AAAA,SA6QnBoB,YA7QmB,GA6QJC,CAAC,IAAI;AACnB,YAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACI,aAAF,CAAgBC,YAAhB,GAA+BL,CAAC,CAACI,aAAF,CAAgBE,SAA1D,MAAyEJ,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACI,aAAF,CAAgBG,YAA3B,CAAxF;AACA,UAAIN,MAAJ,EAAY,KAAKO,SAAL;AACZ,KAhRkB;;AAAA,SAkRnBC,WAlRmB,GAkRL1C,KAAK,IAAI;AAEtB,UAAI,CAAC,KAAKnB,KAAL,CAAW8D,WAAhB,EAA6B;;AAE7B,UAAI3C,KAAK,CAACsB,SAAN,KAAoB,KAAxB,EAA+B;AAE9B;AACA,YAAI,KAAKjC,KAAL,CAAWM,eAAX,KAA+B,KAAnC,EAA0C;AACzC,iBAAO,KAAP;AACA;;AAED,YAAIiD,QAAQ,GAAG,EAAf;;AACA,YAAI5C,KAAK,CAAC6C,IAAN,KAAexF,SAAS,CAACyF,UAAV,CAAqBC,QAAxC,EAAkD;AACjDH,UAAAA,QAAQ,GAAGI,MAAM,CAAClF,UAAU,CAACmF,SAAX,CAAqB,qBAArB,EAA4C,KAAK5D,KAAL,CAAW6D,IAAvD,CAAD,CAAjB;AACA;;AAED,cAAMlC,IAAI,GAAGhB,KAAK,CAACgB,IAAnB;AACA,cAAMmC,SAAS,GAAGnD,KAAK,CAAC6C,IAAxB;AAEAxF,QAAAA,SAAS,CAAC+F,SAAV,CAAoBpC,IAApB,EAA0BmC,SAA1B,EAAqCP,QAArC,EACEzD,IADF,CACOC,QAAQ,IAAI;AACjB,cAAI,OAAOA,QAAP,KAAoB,QAApB,IAAgCoC,MAAM,CAAC6B,IAAP,CAAYjE,QAAZ,EAAsBkE,MAA1D,EAAkE;AACjE,kBAAMC,MAAM,GAAG,CAAC,GAAG,KAAKlE,KAAL,CAAWuB,SAAf,CAAf;AAEA,gBAAIC,QAAQ,GAAG0C,MAAM,CAACzC,SAAP,CAAiB,CAACC,CAAD,EAAIyC,CAAJ,KAAUzC,CAAC,CAACC,IAAF,KAAWA,IAAtC,CAAf;;AACA,gBAAIH,QAAQ,GAAG,CAAC,CAAhB,EAAmB;AAClB,oBAAMM,QAAQ,GAAGoC,MAAM,CAAC1C,QAAD,CAAvB;AACA,oBAAM4C,WAAW,GAAGjC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,QAAlB,EAA4B/B,QAA5B,EAAsC;AAAEuC,gBAAAA,KAAK,EAAEtE,SAAS,CAACwE,kBAAV,CAA6BC;AAAtC,eAAtC,CAApB;AAEAyB,cAAAA,MAAM,CAAC7B,MAAP,CAAcb,QAAd,EAAwB,CAAxB,EAA2B4C,WAA3B;AACA,mBAAKnE,QAAL,CAAc;AAAEsB,gBAAAA,SAAS,EAAE2C;AAAb,eAAd;AAEA,mBAAK1E,KAAL,CAAW8D,WAAX,CAAuBc,WAAvB,EAAoCpG,SAAS,CAACqG,WAAV,CAAsBC,UAA1D;AACA;AACD,WAbD,MAaO;AACN,iBAAKC,QAAL,CAAcC,QAAd,CAAuB,iBAAvB;AACA;AACD,SAlBF,EAmBEtE,KAnBF,CAmBQC,KAAK,IAAI;AAEf,cAAIA,KAAK,CAACoC,cAAN,CAAqB,MAArB,KAAgCpC,KAAK,CAACsE,IAAtC,IAA8CtE,KAAK,CAACsE,IAAN,KAAe,sBAAjE,EAAyF;AACxF,iBAAKF,QAAL,CAAcC,QAAd,CAAuB,gBAAvB;AACA,WAFD,MAEO;AACN,iBAAKD,QAAL,CAAcC,QAAd,CAAuB,iBAAvB;AACA;AAED,SA3BF;AA6BA,OA5CD,MA4CO;AACN,aAAKhF,KAAL,CAAW8D,WAAX,CAAuB3C,KAAvB,EAA8B3C,SAAS,CAACqG,WAAV,CAAsBC,UAApD;AACA;AACD,KArUkB;;AAAA,SAuUnBI,eAvUmB,GAuUD,MAAM;AACvB,UAAI,CAAC,KAAKlF,KAAL,CAAWmF,eAAhB,EAAiC;AAChC,eAAO,KAAP;AACA;;AAED,WAAKnF,KAAL,CAAWmF,eAAX,CAA2BpG,KAAK,CAACqG,OAAN,CAAc,gBAAd,CAA3B;AACA,KA7UkB;;AAAA,SA+UnBC,WA/UmB,GA+ULjC,CAAC,IAAI;AAClB,UAAI,KAAKkC,OAAT,EAAkB;AACjBC,QAAAA,YAAY,CAAC,KAAKD,OAAN,CAAZ;AACA;;AAED,UAAIE,GAAG,GAAGpC,CAAC,CAACqC,MAAF,CAASC,KAAnB;AACA,WAAKJ,OAAL,GAAeK,UAAU,CAAC,MAAM;AAE/B,aAAKlF,QAAL,CAAc;AAAEsB,UAAAA,SAAS,EAAE,EAAb;AAAiB6D,UAAAA,gBAAgB,EAAE3G,UAAU,CAACmF,SAAX,CAAqB,SAArB,EAAgC,KAAK5D,KAAL,CAAW6D,IAA3C;AAAnC,SAAd;AAEA,aAAK5F,gBAAL,GAAwB,IAAIA,gBAAJ,CAAqB+G,GAArB,CAAxB;AACA,aAAK5B,SAAL;AACA,OANwB,EAMtB,GANsB,CAAzB;AAOA,KA5VkB;;AAAA,SA8VnBiC,gBA9VmB,GA8VA3E,OAAO,IAAI;AAC7B,UAAI,EAAEA,OAAO,CAAC4E,SAAR,MAAuB5E,OAAO,CAAC6E,aAAR,EAAzB,CAAJ,EAAuD;AACtD,YAAI7E,OAAO,CAAC8E,eAAR,OAA8BxH,SAAS,CAACyH,aAAV,CAAwBC,IAA1D,EAAgE;AAC/D1H,UAAAA,SAAS,CAAC2H,UAAV,CAAqBjF,OAAO,CAACkF,KAAR,GAAgBC,QAAhB,EAArB,EAAiDnF,OAAO,CAACoF,SAAR,GAAoBC,MAApB,EAAjD,EAA+ErF,OAAO,CAAC8E,eAAR,EAA/E;AACA,SAFD,MAEO;AACNxH,UAAAA,SAAS,CAAC2H,UAAV,CAAqBjF,OAAO,CAACkF,KAAR,GAAgBC,QAAhB,EAArB,EAAiDnF,OAAO,CAACsF,aAAR,EAAjD,EAA0EtF,OAAO,CAAC8E,eAAR,EAA1E;AACA;AACD;AACD,KAtWkB;;AAAA,SAwWnBpC,SAxWmB,GAwWP,MAAM;AACjB,WAAKnF,gBAAL,CAAsBgI,eAAtB,GACEnG,IADF,CACOoG,SAAS,IAAI;AAElB,YAAIA,SAAS,CAACjC,MAAV,KAAqB,CAAzB,EAA4B;AAE3B,cAAI,KAAKjE,KAAL,CAAWuB,SAAX,CAAqB0C,MAArB,KAAgC,CAApC,EAAuC;AACtC,iBAAKhE,QAAL,CAAc;AAAEmF,cAAAA,gBAAgB,EAAE3G,UAAU,CAACmF,SAAX,CAAqB,iBAArB,EAAwC,KAAK5D,KAAL,CAAW6D,IAAnD;AAApB,aAAd;AACA;AACD,SALD,MAKO;AACN,eAAK5D,QAAL,CAAc;AAAEsB,YAAAA,SAAS,EAAE,CAAC,GAAG,KAAKvB,KAAL,CAAWuB,SAAf,EAA0B,GAAG2E,SAA7B,CAAb;AAAsDd,YAAAA,gBAAgB,EAAE;AAAxE,WAAd;AACA;AAED,OAZF,EAaElF,KAbF,CAaQC,KAAK,IAAI,KAAKF,QAAL,CAAc;AAAEmF,QAAAA,gBAAgB,EAAE3G,UAAU,CAACmF,SAAX,CAAqB,iBAArB,EAAwC,KAAK5D,KAAL,CAAW6D,IAAnD;AAApB,OAAd,CAbjB;AAcA,KAvXkB;;AAAA,SAyXnBsC,kBAzXmB,GAyXEC,IAAI,IAAI;AAC5B,WAAKnG,QAAL,CAAc;AAACoG,QAAAA,WAAW,EAAED;AAAd,OAAd;AACA,KA3XkB;;AAAA,SA6XnBE,wBA7XmB,GA6XQ,CAACC,MAAD,EAAS5F,KAAT,KAAmB;AAC7C,UAAI4F,MAAM,KAAKhI,KAAK,CAACqG,OAAN,CAAc,eAAd,CAAf,EAA+C;AAC9C,aAAKvB,WAAL,CAAiB1C,KAAjB;AAEA,cAAMuF,SAAS,GAAG,CAAC,GAAG,KAAKlG,KAAL,CAAWuB,SAAf,CAAlB;AACA2E,QAAAA,SAAS,CAACxD,OAAV,CAAkB/B,KAAlB;AAEA,aAAKV,QAAL,CAAc;AAACsB,UAAAA,SAAS,EAAE2E,SAAZ;AAAuBG,UAAAA,WAAW,EAAE;AAApC,SAAd;AACA;AACD,KAtYkB;;AAAA,SAwYnB1G,UAxYmB,GAwYN,MAAM;AAClB,UAAI,KAAKH,KAAL,CAAWgH,OAAX,CAAmBvC,MAAvB,EAA+B;AAC9B,eAAO,KAAKwC,OAAZ;AACA,OAFD,MAEO;AACN,eAAO,KAAKC,kBAAL,CAAwB1G,KAA/B;AACA;AACD,KA9YkB;;AAGlB,SAAKA,KAAL,GAAa;AACZuB,MAAAA,SAAS,EAAE,EADC;AAEZ8E,MAAAA,WAAW,EAAE,KAFD;AAGZxC,MAAAA,IAAI,EAAErE,KAAK,CAACqE,IAHA;AAIZnE,MAAAA,iBAAiB,EAAE,KAJP;AAKZU,MAAAA,iBAAiB,EAAE,KALP;AAMZE,MAAAA,eAAe,EAAE,KANL;AAOZ8E,MAAAA,gBAAgB,EAAE3G,UAAU,CAACmF,SAAX,CAAqB,SAArB,EAAgCpE,KAAK,CAACqE,IAAtC;AAPN,KAAb;AAUA,SAAK6C,kBAAL,gBAA0B7I,KAAK,CAAC8I,SAAN,EAA1B;AACA,SAAKC,YAAL,gBAAoB/I,KAAK,CAAC8I,SAAN,EAApB;AACA,SAAKpC,QAAL,gBAAgB1G,KAAK,CAAC8I,SAAN,EAAhB;AAEA3I,IAAAA,SAAS,CAAC6I,eAAV,GACE/G,IADF,CACO+B,IAAI,IAAK,KAAKpC,YAAL,GAAoBoC,IADpC,EAEE3B,KAFF,CAEQC,KAAK,IAAI,KAAKF,QAAL,CAAc;AAAEmF,MAAAA,gBAAgB,EAAE3G,UAAU,CAACmF,SAAX,CAAqB,iBAArB,EAAwC,KAAK5D,KAAL,CAAW6D,IAAnD;AAApB,KAAd,CAFjB;AAGA;;AAEDiD,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,IAAL,GAAY,KAAKpH,UAAL,GAAkB6D,IAAlB,KAA2BxF,SAAS,CAACqG,WAAV,CAAsBC,UAAjD,GAA8D,KAAK3E,UAAL,GAAkBoH,IAAhF,GAAuF,IAAnG;AACA,SAAKrH,iBAAL;AACA,SAAKU,iBAAL;AACA,SAAKE,eAAL;AAEA,SAAKrC,gBAAL,GAAwB,IAAIA,gBAAJ,EAAxB;AACA,SAAKmF,SAAL;AACA,SAAKnF,gBAAL,CAAsB+I,eAAtB,CAAsC,KAAKxG,YAA3C;AACA;;AAEDyG,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC7B;AACA,QAAI,KAAKH,IAAL,IAAa5E,MAAM,CAAC6B,IAAP,CAAY,KAAK+C,IAAjB,EAAuB9C,MAApC,IAA8C,KAAKtE,UAAL,GAAkB6D,IAAlB,KAA2BxF,SAAS,CAACqG,WAAV,CAAsBC,UAA/F,IAA6G,KAAKyC,IAAL,CAAUpF,IAAV,KAAmB,KAAKhC,UAAL,GAAkBoH,IAAlB,CAAuBpF,IAAvJ,IAA+J,KAAKoF,IAAL,CAAUhF,YAAV,KAA2B,KAAKpC,UAAL,GAAkBoH,IAAlB,CAAuBhF,YAArN,EAAmO;AAClO,YAAMmC,MAAM,GAAG,CAAC,GAAG,KAAKlE,KAAL,CAAWuB,SAAf,CAAf;AAEA,UAAIC,QAAQ,GAAG0C,MAAM,CAACzC,SAAP,CAAiBd,KAAK,IAAIA,KAAK,CAACgB,IAAN,KAAe,KAAKhC,UAAL,GAAkBoH,IAAlB,CAAuBpF,IAAhE,CAAf;;AACA,UAAIH,QAAQ,GAAG,CAAC,CAAhB,EAAmB;AAClB,cAAMM,QAAQ,GAAGoC,MAAM,CAAC1C,QAAD,CAAvB;AACA,YAAI4C,WAAW,GAAGjC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,QAAlB,EAA4B;AAACC,UAAAA,YAAY,EAAE,KAAKpC,UAAL,GAAkBoH,IAAlB,CAAuBhF;AAAtC,SAA5B,CAAlB;AAEAmC,QAAAA,MAAM,CAAC7B,MAAP,CAAcb,QAAd,EAAwB,CAAxB,EAA2B4C,WAA3B;AACA,aAAKnE,QAAL,CAAc;AAACsB,UAAAA,SAAS,EAAE2C;AAAZ,SAAd;AACA;AACD,KAb4B,CAe7B;;;AACA,QAAI,KAAKvE,UAAL,GAAkBwH,cAAlB,CAAiCC,IAAjC,GAAwCnD,MAA5C,EAAoD;AACnD,YAAMtC,IAAI,GAAG,KAAKhC,UAAL,GAAkBwH,cAAlB,CAAiCC,IAAjC,EAAb;AAEA,YAAMlD,MAAM,GAAG,CAAC,GAAG,KAAKlE,KAAL,CAAWuB,SAAf,CAAf;AACA,YAAMC,QAAQ,GAAG0C,MAAM,CAACzC,SAAP,CAAiBd,KAAK,IAAIA,KAAK,CAACgB,IAAN,KAAeA,IAAzC,CAAjB;;AAEA,UAAIH,QAAQ,GAAG,CAAC,CAAhB,EAAmB;AAClB0C,QAAAA,MAAM,CAAC7B,MAAP,CAAcb,QAAd,EAAwB,CAAxB;AACA,aAAKvB,QAAL,CAAc;AAACsB,UAAAA,SAAS,EAAE2C;AAAZ,SAAd;AACA;AACD;;AAED,QAAIgD,SAAS,CAACrD,IAAV,KAAmB,KAAKrE,KAAL,CAAWqE,IAAlC,EAAwC;AACvC,WAAK5D,QAAL,CAAc;AAAC4D,QAAAA,IAAI,EAAE,KAAKrE,KAAL,CAAWqE;AAAlB,OAAd;AACA;;AAED,SAAKkD,IAAL,GAAY,KAAKpH,UAAL,GAAkB6D,IAAlB,KAA2BxF,SAAS,CAACqG,WAAV,CAAsBC,UAAjD,GAA8D,KAAK3E,UAAL,GAAkBoH,IAAhF,GAAuF,IAAnG;AACA,SAAKrH,iBAAL;AACA,SAAKU,iBAAL;AACA,SAAKE,eAAL;AACA;;AAED+G,EAAAA,oBAAoB,GAAG;AACtB,SAAKpJ,gBAAL,GAAwB,IAAxB;AACA;AAED;AACD;AACA;;;AAmUCqJ,EAAAA,MAAM,GAAG;AACR,QAAIC,gBAAgB,GAAG,IAAvB;;AAEA,QAAI,KAAKvH,KAAL,CAAWoF,gBAAX,CAA4BnB,MAA5B,KAAuC,CAA3C,EAA8C;AAC7CsD,MAAAA,gBAAgB,GACf;AAAK,QAAA,GAAG,EAAErI,aAAa,EAAvB;AAA2B,QAAA,SAAS,EAAC,2BAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAG,QAAA,GAAG,EAAEC,gBAAgB,CAAC,KAAKQ,UAAL,EAAD,CAAxB;AAA6C,QAAA,SAAS,EAAC,mBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKK,KAAL,CAAWoF,gBADb,CADD,CADD;AAOA;;AAED,UAAMlB,MAAM,GAAG,KAAKlE,KAAL,CAAWuB,SAAX,CAAqBiG,GAArB,CAAyB7G,KAAK,IAAI;AAChD,UAAI8G,aAAa,GAAG,KAAK9H,UAAL,GAAkB6D,IAAlB,KAA2BxF,SAAS,CAACqG,WAAV,CAAsBC,UAAjD,IAA+D,KAAK3E,UAAL,GAAkBoH,IAAlB,CAAuBpF,IAAvB,KAAgChB,KAAK,CAACgB,IAArG,GAA4GhB,KAA5G,GAAoH,IAAxI;AAEA,aAAO,IAAC,sBAAD;AAAwB,QAAA,GAAG,EAAEA,KAAK,CAACgB,IAAnC;AAAyC,QAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWhB,KAA3D;AAAkE,QAAA,KAAK,EAAEmC,KAAzE;AAAgF,QAAA,IAAI,EAAE,KAAKX,KAAL,CAAW6D,IAAjG;AAAuG,QAAA,aAAa,EAAE4D,aAAtH;AAAqI,QAAA,YAAY,EAAE,KAAKpE,WAAxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA,KAJc,CAAf;AAMA,QAAIqE,cAAc,GACjB;AAAK,MAAA,GAAG,EAAE5I,aAAa,CAAC6I,OAAD,EAAU,KAAKlB,OAAf,CAAvB;AAAgD,MAAA,KAAK,EAAEhI,UAAU,CAACmF,SAAX,CAAqB,cAArB,EAAqC,KAAK5D,KAAL,CAAW6D,IAAhD,CAAvD;AAA8G,MAAA,OAAO,EAAE,MAAM,KAAKsC,kBAAL,CAAwB,IAAxB,CAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,CAnBQ,CAyBR;;AACA,QAAI,KAAKnG,KAAL,CAAWI,iBAAX,KAAiC,KAArC,EAA4C;AAC3CsH,MAAAA,cAAc,GAAG,IAAjB;AACA;;AAED,QAAIE,QAAQ,GAAG;AAAK,MAAA,GAAG,EAAEhJ,qBAAqB,CAACiJ,YAAD,EAAe,KAAKrI,KAApB,CAA/B;AAA2D,MAAA,SAAS,EAAC,eAArE;AAAqF,MAAA,OAAO,EAAE,KAAKkF,eAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf;;AACA,QAAI,KAAK/E,UAAL,MAAqBwC,MAAM,CAAC6B,IAAP,CAAY,KAAKrE,UAAL,GAAkBoH,IAA9B,EAAoC9C,MAApC,KAA+C,CAAxE,EAA2E;AAC1E2D,MAAAA,QAAQ,GAAG,IAAX;AACA;;AAED,QAAI/C,WAAW,GAAG,IAAlB;;AACA,QAAI,KAAK7E,KAAL,CAAWN,iBAAf,EAAkC;AACjCmF,MAAAA,WAAW,GACV;AAAK,QAAA,GAAG,EAAE9F,gBAAgB,EAA1B;AAA8B,QAAA,SAAS,EAAC,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,gBAAhC;AAAiD,QAAA,GAAG,EAAEC,sBAAsB,CAAC8I,UAAD,EAAa,KAAKnI,UAAL,EAAb,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,YAAY,EAAC,KAAhC;AAAsC,QAAA,GAAG,EAAEV,qBAAqB,EAAhE;AAAoE,QAAA,SAAS,EAAC,eAA9E;AAA8F,QAAA,WAAW,EAAER,UAAU,CAACmF,SAAX,CAAqB,QAArB,EAA+B,KAAK5D,KAAL,CAAW6D,IAA1C,CAA3G;AAA4J,QAAA,QAAQ,EAAE,KAAKgB,WAA3K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,CADD;AAMA;;AAED,QAAIwB,WAAW,GAAG,IAAlB;;AACA,QAAG,KAAKrG,KAAL,CAAWqG,WAAd,EAA2B;AAC1BA,MAAAA,WAAW,GAAI,IAAC,oBAAD;AACd,QAAA,KAAK,EAAE,KAAK7G,KAAL,CAAWhB,KADJ;AAEd,QAAA,IAAI,EAAE,KAAKwB,KAAL,CAAW6D,IAFH;AAGd,QAAA,KAAK,EAAE,MAAM,KAAKsC,kBAAL,CAAwB,KAAxB,CAHC;AAG+B,QAAA,eAAe,EAAE,KAAKG,wBAHrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AAIA;;AAED,UAAMyB,iBAAiB,GACtB,IAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,GAAG,EAAErJ,iBAAiB,CAAC,KAAKc,KAAN,EAAa,KAAKG,UAAL,EAAb,CAA3B;AAA4D,MAAA,SAAS,EAAC,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,GAAG,EAAEhB,gBAAgB,CAAC,KAAKgB,UAAL,EAAD,CAA1B;AAA+C,MAAA,SAAS,EAAC,gBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEiI,QADF,EAEC;AAAI,MAAA,GAAG,EAAE/I,qBAAqB,CAAC,KAAKW,KAAN,CAA9B;AAA4C,MAAA,SAAS,EAAC,eAAtD;AAAsE,MAAA,GAAG,EAAEf,UAAU,CAACuJ,YAAX,CAAwB,KAAKhI,KAAL,CAAW6D,IAAnC,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEpF,UAAU,CAACmF,SAAX,CAAqB,QAArB,EAA+B,KAAK5D,KAAL,CAAW6D,IAA1C,CADF,CAFD,EAKE6D,cALF,CADD,EAQE7C,WARF,EASE0C,gBATF,EAUC;AAAK,MAAA,GAAG,EAAEnI,cAAc,EAAxB;AAA4B,MAAA,SAAS,EAAC,cAAtC;AAAqD,MAAA,QAAQ,EAAE,KAAKuD,YAApE;AAAkF,MAAA,GAAG,EAAEsF,EAAE,IAAK,KAAKrB,YAAL,GAAoBqB,EAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE/D,MADF,CAVD,CADD,EAeEmC,WAfF,EAgBC,IAAC,0BAAD;AAA4B,MAAA,GAAG,EAAE4B,EAAE,IAAK,KAAK1D,QAAL,GAAgB0D,EAAxD;AAA6D,MAAA,OAAO,EAAE,KAAKtI,UAAL,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBD,CADD;AAqBA,QAAIuI,gBAAgB,GAAGH,iBAAvB,CA1EQ,CA2ER;;AACA,QAAI,KAAKvI,KAAL,CAAWgH,OAAX,KAAuB,EAA3B,EAA+B;AAC9B0B,MAAAA,gBAAgB,GAAG,IAAC,wBAAD;AAA0B,QAAA,GAAG,EAAED,EAAE,IAAK,KAAKvB,kBAAL,GAA0BuB,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsEF,iBAAtE,CAAnB;AACA;;AAED,WAAOG,gBAAP;AACA;;AAxemD,C,CA2erD;;;AA3eM7I,kB,CAKE8I,W,GAAc7J,gB;AAuetBe,kBAAkB,CAAC+I,YAAnB,GAAkC;AAChCvE,EAAAA,IAAI,EAAEpF,UAAU,CAAC4J,kBAAX,EAD0B;AAEhC7J,EAAAA,KAAK,EAAEA,KAFyB;AAGhC8E,EAAAA,WAAW,EAAE,MAAM,CAAE,CAHW;AAIhCkD,EAAAA,OAAO,EAAE;AAJuB,CAAlC;AAOAnH,kBAAkB,CAACiJ,SAAnB,GAA+B;AAC7BzE,EAAAA,IAAI,EAAE9F,SAAS,CAACwK,MADa;AAE7B/J,EAAAA,KAAK,EAAET,SAAS,CAACyK,MAFY;AAG7BlF,EAAAA,WAAW,EAAEvF,SAAS,CAAC0K,IAHM;AAI7BjC,EAAAA,OAAO,EAAEzI,SAAS,CAACwK;AAJU,CAA/B;AAOA,SAASlJ,kBAAT","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { GroupListManager } from \"./controller\";\n\nimport { CometChatCreateGroup, CometChatGroupListItem }  from \"../../Groups\";\nimport { CometChatToastNotification } from \"../../Shared\";\n\nimport { CometChatContextProvider, CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\n\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\n\nimport {\n  groupWrapperStyle,\n  groupHeaderStyle,\n  groupHeaderCloseStyle,\n  groupHeaderTitleStyle,\n  groupAddStyle,\n  groupSearchStyle,\n  groupSearchButtonStyle,\n  groupSearchInputStyle,\n  groupMsgStyle,\n  groupMsgTxtStyle,\n  groupListStyle\n} from \"./style\";\n\nimport searchIcon from \"./resources/search.svg\";\nimport navigateIcon from \"./resources/back.svg\";\nimport addIcon from \"./resources/create.svg\";\n\nclass CometChatGroupList extends React.PureComponent {\n\titem;\n\ttimeout;\n\tloggedInUser = null;\n\n\tstatic contextType = CometChatContext;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tgrouplist: [],\n\t\t\tcreateGroup: false,\n\t\t\tlang: props.lang,\n\t\t\tenableSearchGroup: false,\n\t\t\tenableCreateGroup: false,\n\t\t\tenableJoinGroup: false,\n\t\t\tdecoratorMessage: Translator.translate(\"LOADING\", props.lang),\n\t\t};\n\n\t\tthis.contextProviderRef = React.createRef();\n\t\tthis.groupListRef = React.createRef();\n\t\tthis.toastRef = React.createRef();\n\n\t\tCometChat.getLoggedinUser()\n\t\t\t.then(user => (this.loggedInUser = user))\n\t\t\t.catch(error => this.setState({ decoratorMessage: Translator.translate(\"SOMETHING_WRONG\", this.state.lang) }));\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.item = this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP ? this.getContext().item : null;\n\t\tthis.enableSearchGroup();\n\t\tthis.enableCreateGroup();\n\t\tthis.enableJoinGroup();\n\n\t\tthis.GroupListManager = new GroupListManager();\n\t\tthis.getGroups();\n\t\tthis.GroupListManager.attachListeners(this.groupUpdated);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t//if group detail(membersCount) is updated, update grouplist\n\t\tif (this.item && Object.keys(this.item).length && this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP && this.item.guid === this.getContext().item.guid && this.item.membersCount !== this.getContext().item.membersCount) {\n\t\t\tconst groups = [...this.state.grouplist];\n\n\t\t\tlet groupKey = groups.findIndex(group => group.guid === this.getContext().item.guid);\n\t\t\tif (groupKey > -1) {\n\t\t\t\tconst groupObj = groups[groupKey];\n\t\t\t\tlet newGroupObj = Object.assign({}, groupObj, {membersCount: this.getContext().item.membersCount});\n\n\t\t\t\tgroups.splice(groupKey, 1, newGroupObj);\n\t\t\t\tthis.setState({grouplist: groups});\n\t\t\t}\n\t\t}\n\n\t\t//upon user deleting a group, remove group from group list\n\t\tif (this.getContext().deletedGroupId.trim().length) {\n\t\t\tconst guid = this.getContext().deletedGroupId.trim();\n\n\t\t\tconst groups = [...this.state.grouplist];\n\t\t\tconst groupKey = groups.findIndex(group => group.guid === guid);\n\n\t\t\tif (groupKey > -1) {\n\t\t\t\tgroups.splice(groupKey, 1);\n\t\t\t\tthis.setState({grouplist: groups});\n\t\t\t}\n\t\t}\n\n\t\tif (prevProps.lang !== this.props.lang) {\n\t\t\tthis.setState({lang: this.props.lang});\n\t\t}\n\n\t\tthis.item = this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP ? this.getContext().item : null;\n\t\tthis.enableSearchGroup();\n\t\tthis.enableCreateGroup();\n\t\tthis.enableJoinGroup();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.GroupListManager = null;\n\t}\n\n\t/**\n\t * if search group feature is disabled\n\t */\n\tenableSearchGroup = () => {\n\t\tthis.getContext()\n\t\t\t.FeatureRestriction.isGroupSearchEnabled()\n\t\t\t.then(response => {\n\t\t\t\t/**\n\t\t\t\t * Don't update state if the response has the same value\n\t\t\t\t */\n\t\t\t\tif (response !== this.state.enableSearchGroup) {\n\t\t\t\t\tthis.setState({enableSearchGroup: response});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tif (this.state.enableSearchGroup !== false) {\n\t\t\t\t\tthis.setState({enableSearchGroup: false});\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\t/**\n\t * if create group feature is disabled\n\t */\n\tenableCreateGroup = () => {\n\t\tthis.getContext()\n\t\t\t.FeatureRestriction.isGroupCreationEnabled()\n\t\t\t.then(response => {\n\t\t\t\t/**\n\t\t\t\t * Don't update state if the response has the same value\n\t\t\t\t */\n\t\t\t\tif (response !== this.state.enableCreateGroup) {\n\t\t\t\t\tthis.setState({enableCreateGroup: response});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tif (this.state.enableCreateGroup !== false) {\n\t\t\t\t\tthis.setState({enableCreateGroup: false});\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\t/**\n\t * if join group feature is disabled\n\t */\n\tenableJoinGroup = () => {\n\t\tthis.getContext()\n\t\t\t.FeatureRestriction.isJoinLeaveGroupsEnabled()\n\t\t\t.then(response => {\n\t\t\t\t/**\n\t\t\t\t * Don't update state if the response has the same value\n\t\t\t\t */\n\t\t\t\tif (response !== this.state.enableJoinGroup) {\n\t\t\t\t\tthis.setState({enableJoinGroup: response});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tif (this.state.enableJoinGroup !== false) {\n\t\t\t\t\tthis.setState({enableJoinGroup: false});\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tgroupUpdated = (key, message, group, options) => {\n\t\tswitch (key) {\n\t\t\tcase enums.GROUP_MEMBER_SCOPE_CHANGED:\n\t\t\t\tthis.updateMemberChanged(group, options);\n\t\t\t\tbreak;\n\t\t\tcase enums.GROUP_MEMBER_KICKED:\n\t\t\tcase enums.GROUP_MEMBER_BANNED:\n\t\t\tcase enums.GROUP_MEMBER_LEFT:\n\t\t\t\tthis.updateMemberRemoved(group, options);\n\t\t\t\tbreak;\n\t\t\tcase enums.GROUP_MEMBER_ADDED:\n\t\t\t\tthis.updateMemberAdded(group, options);\n\t\t\t\tbreak;\n\t\t\tcase enums.GROUP_MEMBER_JOINED:\n\t\t\t\tthis.updateMemberJoined(group, options);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tupdateMemberRemoved = (group, options) => {\n\t\tlet grouplist = [...this.state.grouplist];\n\n\t\t//search for group\n\t\tlet groupKey = grouplist.findIndex(g => g.guid === group.guid);\n\n\t\tif (groupKey > -1) {\n\t\t\tif (options && this.loggedInUser.uid === options.user.uid) {\n\t\t\t\tlet groupObj = {...grouplist[groupKey]};\n\t\t\t\tlet membersCount = parseInt(group.membersCount);\n\t\t\t\tlet hasJoined = group.hasJoined;\n\n\t\t\t\tlet newgroupObj = Object.assign({}, groupObj, {membersCount: membersCount, hasJoined: hasJoined});\n\n\t\t\t\tgrouplist.splice(groupKey, 1, newgroupObj);\n\t\t\t\tthis.setState({grouplist: grouplist});\n\t\t\t} else {\n\t\t\t\tlet groupObj = {...grouplist[groupKey]};\n\t\t\t\tlet membersCount = parseInt(group.membersCount);\n\n\t\t\t\tlet newgroupObj = Object.assign({}, groupObj, {membersCount: membersCount});\n\n\t\t\t\tgrouplist.splice(groupKey, 1, newgroupObj);\n\t\t\t\tthis.setState({grouplist: grouplist});\n\t\t\t}\n\t\t}\n\t};\n\n\tupdateMemberAdded = (group, options) => {\n\t\tlet grouplist = [...this.state.grouplist];\n\n\t\t//search for group\n\t\tlet groupKey = grouplist.findIndex(g => g.guid === group.guid);\n\n\t\tif (groupKey > -1) {\n\t\t\tlet groupObj = {...grouplist[groupKey]};\n\n\t\t\tlet membersCount = parseInt(group.membersCount);\n\n\t\t\tlet scope = group.hasOwnProperty(\"scope\") ? group.scope : \"\";\n\t\t\tlet hasJoined = group.hasOwnProperty(\"hasJoined\") ? group.hasJoined : false;\n\n\t\t\tif (options && this.loggedInUser.uid === options.user.uid) {\n\t\t\t\tscope = CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT;\n\t\t\t\thasJoined = true;\n\t\t\t}\n\n\t\t\tlet newgroupObj = Object.assign({}, groupObj, {membersCount: membersCount, scope: scope, hasJoined: hasJoined});\n\n\t\t\tgrouplist.splice(groupKey, 1, newgroupObj);\n\t\t\tthis.setState({grouplist: grouplist});\n\t\t} else {\n\t\t\tlet groupObj = {...group};\n\n\t\t\tlet scope = groupObj.hasOwnProperty(\"scope\") ? groupObj.scope : \"\";\n\t\t\tlet hasJoined = groupObj.hasOwnProperty(\"hasJoined\") ? groupObj.hasJoined : false;\n\t\t\tlet membersCount = parseInt(groupObj.membersCount);\n\n\t\t\tif (options && this.loggedInUser.uid === options.user.uid) {\n\t\t\t\tscope = CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT;\n\t\t\t\thasJoined = true;\n\t\t\t}\n\n\t\t\tlet newgroupObj = Object.assign({}, groupObj, {membersCount: membersCount, scope: scope, hasJoined: hasJoined});\n\n\t\t\tgrouplist.unshift(newgroupObj);\n\t\t\tthis.setState({grouplist: grouplist});\n\t\t}\n\t};\n\n\tupdateMemberJoined = (group, options) => {\n\t\tlet grouplist = [...this.state.grouplist];\n\n\t\t//search for group\n\t\tlet groupKey = grouplist.findIndex(g => g.guid === group.guid);\n\n\t\tif (groupKey > -1) {\n\t\t\tlet groupObj = {...grouplist[groupKey]};\n\n\t\t\tlet scope = groupObj.scope;\n\t\t\tlet membersCount = parseInt(group.membersCount);\n\n\t\t\tif (options && this.loggedInUser.uid === options.user.uid) {\n\t\t\t\tscope = CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT;\n\t\t\t}\n\n\t\t\tlet newgroupObj = Object.assign({}, groupObj, {membersCount: membersCount, scope: scope});\n\n\t\t\tgrouplist.splice(groupKey, 1, newgroupObj);\n\t\t\tthis.setState({grouplist: grouplist});\n\t\t}\n\t};\n\n\tupdateMemberChanged = (group, options) => {\n\t\tlet grouplist = [...this.state.grouplist];\n\n\t\t//search for group\n\t\tlet groupKey = grouplist.findIndex(g => g.guid === group.guid);\n\n\t\tif (groupKey > -1) {\n\t\t\tlet groupObj = {...grouplist[groupKey]};\n\t\t\tif (options && this.loggedInUser.uid === options.user.uid) {\n\t\t\t\tlet newgroupObj = Object.assign({}, groupObj, {scope: options.scope});\n\n\t\t\t\tgrouplist.splice(groupKey, 1, newgroupObj);\n\t\t\t\tthis.setState({grouplist: grouplist});\n\t\t\t}\n\t\t}\n\t};\n\n\thandleScroll = e => {\n\t\tconst bottom = Math.round(e.currentTarget.scrollHeight - e.currentTarget.scrollTop) === Math.round(e.currentTarget.clientHeight);\n\t\tif (bottom) this.getGroups();\n\t};\n\n\thandleClick = group => {\n\n\t\tif (!this.props.onItemClick) return;\n\n\t\tif (group.hasJoined === false) {\n\n\t\t\t//if join group feature is disabled\n\t\t\tif (this.state.enableJoinGroup === false) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tlet password = \"\";\n\t\t\tif (group.type === CometChat.GROUP_TYPE.PASSWORD) {\n\t\t\t\tpassword = prompt(Translator.translate(\"ENTER_YOUR_PASSWORD\", this.state.lang));\n\t\t\t}\n\n\t\t\tconst guid = group.guid;\n\t\t\tconst groupType = group.type;\n\n\t\t\tCometChat.joinGroup(guid, groupType, password)\n\t\t\t\t.then(response => {\n\t\t\t\t\tif (typeof response === \"object\" && Object.keys(response).length) {\n\t\t\t\t\t\tconst groups = [...this.state.grouplist];\n\n\t\t\t\t\t\tlet groupKey = groups.findIndex((g, k) => g.guid === guid);\n\t\t\t\t\t\tif (groupKey > -1) {\n\t\t\t\t\t\t\tconst groupObj = groups[groupKey];\n\t\t\t\t\t\t\tconst newGroupObj = Object.assign({}, groupObj, response, { scope: CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT });\n\n\t\t\t\t\t\t\tgroups.splice(groupKey, 1, newGroupObj);\n\t\t\t\t\t\t\tthis.setState({ grouplist: groups });\n\n\t\t\t\t\t\t\tthis.props.onItemClick(newGroupObj, CometChat.ACTION_TYPE.TYPE_GROUP);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.toastRef.setError(\"SOMETHING_WRONG\");\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\n\t\t\t\t\tif (error.hasOwnProperty(\"code\") && error.code && error.code === \"ERR_WRONG_GROUP_PASS\") {\n\t\t\t\t\t\tthis.toastRef.setError(\"WRONG_PASSWORD\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.toastRef.setError(\"SOMETHING_WRONG\");\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t});\n\n\t\t} else {\n\t\t\tthis.props.onItemClick(group, CometChat.ACTION_TYPE.TYPE_GROUP);\n\t\t}\n\t};\n\n\thandleMenuClose = () => {\n\t\tif (!this.props.actionGenerated) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.props.actionGenerated(enums.ACTIONS[\"TOGGLE_SIDEBAR\"]);\n\t};\n\n\tsearchGroup = e => {\n\t\tif (this.timeout) {\n\t\t\tclearTimeout(this.timeout);\n\t\t}\n\n\t\tlet val = e.target.value;\n\t\tthis.timeout = setTimeout(() => {\n\t\t\t\n\t\t\tthis.setState({ grouplist: [], decoratorMessage: Translator.translate(\"LOADING\", this.state.lang) });\n\n\t\t\tthis.GroupListManager = new GroupListManager(val);\n\t\t\tthis.getGroups();\n\t\t}, 500);\n\t};\n\n\tmarkMessagesRead = message => {\n\t\tif (!(message.getReadAt() || message.getReadByMeAt())) {\n\t\t\tif (message.getReceiverType() === CometChat.RECEIVER_TYPE.USER) {\n\t\t\t\tCometChat.markAsRead(message.getId().toString(), message.getSender().getUid(), message.getReceiverType());\n\t\t\t} else {\n\t\t\t\tCometChat.markAsRead(message.getId().toString(), message.getReceiverId(), message.getReceiverType());\n\t\t\t}\n\t\t}\n\t};\n\n\tgetGroups = () => {\n\t\tthis.GroupListManager.fetchNextGroups()\n\t\t\t.then(groupList => {\n\n\t\t\t\tif (groupList.length === 0) {\n\n\t\t\t\t\tif (this.state.grouplist.length === 0) {\n\t\t\t\t\t\tthis.setState({ decoratorMessage: Translator.translate(\"NO_GROUPS_FOUND\", this.state.lang) });\n\t\t\t\t\t} \n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({ grouplist: [...this.state.grouplist, ...groupList], decoratorMessage: \"\" });\n\t\t\t\t}\n\n\t\t\t})\n\t\t\t.catch(error => this.setState({ decoratorMessage: Translator.translate(\"SOMETHING_WRONG\", this.state.lang) }));\n\t};\n\n\tcreateGroupHandler = flag => {\n\t\tthis.setState({createGroup: flag});\n\t};\n\n\tcreateGroupActionHandler = (action, group) => {\n\t\tif (action === enums.ACTIONS[\"GROUP_CREATED\"]) {\n\t\t\tthis.handleClick(group);\n\n\t\t\tconst groupList = [...this.state.grouplist];\n\t\t\tgroupList.unshift(group);\n\n\t\t\tthis.setState({grouplist: groupList, createGroup: false});\n\t\t}\n\t};\n\n\tgetContext = () => {\n\t\tif (this.props._parent.length) {\n\t\t\treturn this.context;\n\t\t} else {\n\t\t\treturn this.contextProviderRef.state;\n\t\t}\n\t};\n\n\trender() {\n\t\tlet messageContainer = null;\n\n\t\tif (this.state.decoratorMessage.length !== 0) {\n\t\t\tmessageContainer = (\n\t\t\t\t<div css={groupMsgStyle()} className=\"groups__decorator-message\">\n\t\t\t\t\t<p css={groupMsgTxtStyle(this.getContext())} className=\"decorator-message\">\n\t\t\t\t\t\t{this.state.decoratorMessage}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tconst groups = this.state.grouplist.map(group => {\n\t\t\tlet selectedGroup = this.getContext().type === CometChat.ACTION_TYPE.TYPE_GROUP && this.getContext().item.guid === group.guid ? group : null;\n\n\t\t\treturn <CometChatGroupListItem key={group.guid} theme={this.props.theme} group={group} lang={this.state.lang} selectedGroup={selectedGroup} clickHandler={this.handleClick} />;\n\t\t});\n\n\t\tlet createGroupBtn = (\n\t\t\t<div css={groupAddStyle(addIcon, this.context)} title={Translator.translate(\"CREATE_GROUP\", this.state.lang)} onClick={() => this.createGroupHandler(true)}>\n\t\t\t\t<i></i>\n\t\t\t</div>\n\t\t);\n\n\t\t//if create group feature is disabled\n\t\tif (this.state.enableCreateGroup === false) {\n\t\t\tcreateGroupBtn = null;\n\t\t}\n\n\t\tlet closeBtn = <div css={groupHeaderCloseStyle(navigateIcon, this.props)} className=\"header__close\" onClick={this.handleMenuClose}></div>;\n\t\tif (this.getContext() && Object.keys(this.getContext().item).length === 0) {\n\t\t\tcloseBtn = null;\n\t\t}\n\n\t\tlet searchGroup = null;\n\t\tif (this.state.enableSearchGroup) {\n\t\t\tsearchGroup = (\n\t\t\t\t<div css={groupSearchStyle()} className=\"groups__search\">\n\t\t\t\t\t<button type=\"button\" className=\"search__button\" css={groupSearchButtonStyle(searchIcon, this.getContext())} />\n\t\t\t\t\t<input type=\"text\" autoComplete=\"off\" css={groupSearchInputStyle()} className=\"search__input\" placeholder={Translator.translate(\"SEARCH\", this.state.lang)} onChange={this.searchGroup} />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tlet createGroup = null;\n\t\tif(this.state.createGroup) {\n\t\t\tcreateGroup = (<CometChatCreateGroup \n\t\t\t\ttheme={this.props.theme} \n\t\t\t\tlang={this.state.lang} \n\t\t\t\tclose={() => this.createGroupHandler(false)} actionGenerated={this.createGroupActionHandler} />);\t\n\t\t}\n\n\t\tconst groupListTemplate = (\n\t\t\t<React.Fragment>\n\t\t\t\t<div css={groupWrapperStyle(this.props, this.getContext())} className=\"groups\">\n\t\t\t\t\t<div css={groupHeaderStyle(this.getContext())} className=\"groups__header\">\n\t\t\t\t\t\t{closeBtn}\n\t\t\t\t\t\t<h4 css={groupHeaderTitleStyle(this.props)} className=\"header__title\" dir={Translator.getDirection(this.state.lang)}>\n\t\t\t\t\t\t\t{Translator.translate(\"GROUPS\", this.state.lang)}\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t{createGroupBtn}\n\t\t\t\t\t</div>\n\t\t\t\t\t{searchGroup}\n\t\t\t\t\t{messageContainer}\n\t\t\t\t\t<div css={groupListStyle()} className=\"groups__list\" onScroll={this.handleScroll} ref={el => (this.groupListRef = el)}>\n\t\t\t\t\t\t{groups}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{createGroup}\n\t\t\t\t<CometChatToastNotification ref={el => (this.toastRef = el)} context={this.getContext()}  />\n\t\t\t</React.Fragment>\n\t\t);\n\n\t\tlet groupListWrapper = groupListTemplate;\n\t\t//if used as a standalone component, add errorboundary and context provider\n\t\tif (this.props._parent === \"\") {\n\t\t\tgroupListWrapper = <CometChatContextProvider ref={el => (this.contextProviderRef = el)}>{groupListTemplate}</CometChatContextProvider>;\n\t\t}\n\n\t\treturn groupListWrapper;\n\t}\n}\n\n// Specifies the default values for props:\nCometChatGroupList.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n  onItemClick: () => {},\n  _parent: \"\"\n};\n\nCometChatGroupList.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n  onItemClick: PropTypes.func,\n  _parent: PropTypes.string\n}\n\nexport { CometChatGroupList };"]},"metadata":{},"sourceType":"module"}