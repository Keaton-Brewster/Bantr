{"ast":null,"code":"export const sectionStyle = props => {\n  const containerHeightProp = props.containerHeight ? {\n    height: `calc(100% - ${props.containerHeight})`\n  } : {\n    height: \"calc(100% - 20px)\"\n  };\n  return {\n    width: \"100%\",\n    ...containerHeightProp\n  };\n};\nexport const sectionHeaderStyle = props => {\n  return {\n    margin: \"0\",\n    width: \"100%\",\n    fontSize: \"12px\",\n    fontWeight: \"500!important\",\n    lineHeight: \"20px\",\n    color: `${props.theme.color.secondary}`,\n    textTransform: \"uppercase\"\n  };\n};\nexport const sectionContentStyle = () => {\n  return {\n    width: \"100%\",\n    margin: \"6px 0\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"calc(100% - 20px)\"\n  };\n};\nexport const mediaBtnStyle = () => {\n  return {\n    borderRadius: \"8px\",\n    backgroundColor: \"rgba(20, 20, 20, 0.08)\",\n    width: \"100%\",\n    padding: \"2px\",\n    margin: \"6px 0\",\n    clear: \"both\"\n  };\n};\nexport const buttonStyle = (state, type) => {\n  const activeBtn = state.messagetype === type ? {\n    backgroundColor: \"#fff\",\n    boxShadow: \"rgba(20, 20, 20, 0.04) 0 3px 1px, rgba(20, 20, 20, 0.12) 0 3px 8px\",\n    borderRadius: \"7px\",\n    \"&::before\": {\n      display: \"none\"\n    }\n  } : {};\n  return {\n    display: \"inline-block\",\n    width: \"33.33%\",\n    float: \"left\",\n    fontSize: \"13px\",\n    fontWeight: \"500\",\n    lineHeight: \"18px\",\n    padding: \"5px\",\n    position: \"relative\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    ...activeBtn,\n    \"&:before\": {\n      \"`content`\": \"\",\n      position: \"absolute\",\n      display: \"block\",\n      width: \"2px\",\n      height: \"16px\",\n      backgroundColor: \"rgba(20, 20, 20, 0.12)\",\n      right: \"-2px\",\n      top: \"6px\"\n    },\n    \"&:last-of-type::before\": {\n      display: \"none\"\n    }\n  };\n};\nexport const mediaItemStyle = () => {\n  return {\n    height: \"calc(100% - 45px)\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    fontSize: \"14px\"\n  };\n};\nexport const itemStyle = (state, props, img, context) => {\n  let itemTypeStyle = {};\n  let bgColor = `${props.theme.backgroundColor.lightGrey}`;\n\n  if (state.messagetype === \"image\") {\n    itemTypeStyle = {\n      height: \"120px\",\n      width: \"120px\",\n      backgroundColor: bgColor,\n      \"> img\": {\n        display: \"block\",\n        width: \"100%\",\n        height: \"100%\",\n        objectFit: \"contain\"\n      }\n    };\n  } else if (state.messagetype === \"video\") {\n    itemTypeStyle = {\n      \"> video\": {\n        height: \"120px\",\n        width: \"120px\",\n        margin: \"auto\"\n      }\n    };\n  } else if (state.messagetype === \"file\") {\n    itemTypeStyle = {\n      backgroundColor: bgColor,\n      \"> a\": {\n        maxWidth: \"100%\",\n        maxHeight: \"100%\",\n        margin: \"auto\",\n        display: \"flex\",\n        padding: \"8px\",\n        \"&:hover, &:visited\": {\n          color: `${props.theme.secondaryTextColor}`\n        },\n        \"> i\": {\n          width: \"30px\",\n          height: \"24px\",\n          display: \"inline-block\",\n          mask: `url(${img}) left center no-repeat`,\n          backgroundColor: `${context.theme.secondaryTextColor}`\n        },\n        \"> span\": {\n          fontSize: \"13px\",\n          color: `${props.theme.secondaryTextColor}`,\n          whiteSpace: \"pre-wrap\",\n          wordWrap: \"break-word\",\n          textAlign: \"left\",\n          width: \"calc(100% - 30px)\"\n        }\n      }\n    };\n  }\n\n  return {\n    margin: \"0.5rem\",\n    textAlign: \"center\",\n    flex: \"1 0 auto\",\n    ...itemTypeStyle,\n    \"@for $i from 1 through 36\": {\n      \"&:nth-of-type(#{$i})\": {\n        maxWidth: \"100%\"\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Shared/CometChatSharedMediaView/style.js"],"names":["sectionStyle","props","containerHeightProp","containerHeight","height","width","sectionHeaderStyle","margin","fontSize","fontWeight","lineHeight","color","theme","secondary","textTransform","sectionContentStyle","display","flexDirection","mediaBtnStyle","borderRadius","backgroundColor","padding","clear","buttonStyle","state","type","activeBtn","messagetype","boxShadow","float","position","textAlign","cursor","right","top","mediaItemStyle","overflowY","overflowX","flexWrap","itemStyle","img","context","itemTypeStyle","bgColor","lightGrey","objectFit","maxWidth","maxHeight","secondaryTextColor","mask","whiteSpace","wordWrap","flex"],"mappings":"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","sourcesContent":["export const sectionStyle = (props) => {\n\n    const containerHeightProp = (props.containerHeight) ? {\n        height: `calc(100% - ${props.containerHeight})`\n    } : {\n        height: \"calc(100% - 20px)\"\n    };\n\n    \n    return {\n        width: \"100%\",\n        ...containerHeightProp\n    }\n}\n\nexport const sectionHeaderStyle = (props) => {\n\n    return {\n        margin: \"0\",\n        width: \"100%\",\n        fontSize: \"12px\",\n        fontWeight: \"500!important\",\n        lineHeight: \"20px\",\n        color: `${props.theme.color.secondary}`,\n        textTransform: \"uppercase\",\n    }\n}\n\nexport const sectionContentStyle = () => {\n\n    return {\n        width: \"100%\",\n        margin: \"6px 0\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"calc(100% - 20px)\"\n    }\n}\n\nexport const mediaBtnStyle = () => {\n\n    return {\n        borderRadius: \"8px\",\n        backgroundColor: \"rgba(20, 20, 20, 0.08)\",\n        width: \"100%\",\n        padding: \"2px\",\n        margin: \"6px 0\",\n        clear: \"both\",\n    }\n}\n\nexport const buttonStyle = (state, type) => {\n\n    const activeBtn = (state.messagetype === type) ? {\n        backgroundColor : \"#fff\",\n        boxShadow: \"rgba(20, 20, 20, 0.04) 0 3px 1px, rgba(20, 20, 20, 0.12) 0 3px 8px\",\n        borderRadius: \"7px\",\n        \"&::before\": {\n            display: \"none\",\n        }\n    } : {};\n\n    return {\n        display: \"inline-block\",\n        width: \"33.33%\",\n        float: \"left\",\n        fontSize: \"13px\",\n        fontWeight: \"500\",\n        lineHeight: \"18px\",\n        padding: \"5px\",\n        position: \"relative\",\n        textAlign: \"center\",\n        cursor: \"pointer\",\n        ...activeBtn,\n        \"&:before\": {\n            \"`content`\": \"\",\n            position: \"absolute\",\n            display: \"block\",\n            width: \"2px\",\n            height: \"16px\",\n            backgroundColor: \"rgba(20, 20, 20, 0.12)\",\n            right: \"-2px\",\n            top: \"6px\",\n        },\n        \"&:last-of-type::before\": {\n            display: \"none\",\n        }\n    }\n}\n\nexport const mediaItemStyle = () => {\n\n    return {\n        height: \"calc(100% - 45px)\",\n        overflowY: \"auto\",\n        overflowX: \"hidden\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        fontSize: \"14px\",\n    }\n}\n\nexport const itemStyle = (state, props, img, context) => {\n\n    let itemTypeStyle = {};\n    let bgColor = `${props.theme.backgroundColor.lightGrey}`;\n\n    if (state.messagetype === \"image\") {\n\n        itemTypeStyle = {\n            height: \"120px\",\n            width: \"120px\",\n            backgroundColor: bgColor,\n            \"> img\": {\n                display: \"block\",\n                width: \"100%\",\n                height: \"100%\",\n                objectFit: \"contain\",\n            }\n        }\n        \n    } else if (state.messagetype === \"video\") {\n\n        itemTypeStyle = {\n            \"> video\": {\n                height: \"120px\",\n                width: \"120px\",\n                margin: \"auto\",\n            }\n        }\n\n    } else if (state.messagetype === \"file\") {\n\n        itemTypeStyle = {\n            backgroundColor: bgColor,\n            \"> a\": {\n                maxWidth: \"100%\",\n                maxHeight: \"100%\",\n                margin: \"auto\",\n                display: \"flex\",\n                padding: \"8px\",\n                \"&:hover, &:visited\": {\n                    color: `${props.theme.secondaryTextColor}`,\n                },\n                \"> i\": {\n                    width: \"30px\",\n                    height: \"24px\",\n                    display: \"inline-block\",\n                    mask: `url(${img}) left center no-repeat`,\n\t\t            backgroundColor: `${context.theme.secondaryTextColor}`,\n                },\n                \"> span\": {\n                    fontSize: \"13px\",\n                    color: `${props.theme.secondaryTextColor}`,\n                    whiteSpace: \"pre-wrap\",\n                    wordWrap: \"break-word\",\n                    textAlign: \"left\",\n                    width: \"calc(100% - 30px)\"\n                }\n\n            }\n        }\n\n    }\n\n    return {\n        margin: \"0.5rem\",\n        textAlign: \"center\",\n        flex: \"1 0 auto\",\n        ...itemTypeStyle,\n        \"@for $i from 1 through 36\": {\n            \"&:nth-of-type(#{$i})\": {\n            maxWidth: \"100%\",\n            }\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}