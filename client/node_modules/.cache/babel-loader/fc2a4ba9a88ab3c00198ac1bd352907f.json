{"ast":null,"code":"import * as enums from \"./enums\";\nexport class SoundManager {}\nSoundManager.incomingCallAudio = null;\nSoundManager.outgoingCallAudio = null;\nSoundManager.incomingMessageAudio = null;\nSoundManager.outgoingMessageAudio = null;\nSoundManager.incomingOtherMessageAudio = null;\n\nSoundManager.play = (action, context) => {\n  switch (action) {\n    case enums.CONSTANTS.AUDIO[\"INCOMING_CALL\"]:\n      SoundManager.onIncomingCall(context);\n      break;\n\n    case enums.CONSTANTS.AUDIO[\"OUTGOING_CALL\"]:\n      SoundManager.onOutgoingCall(context);\n      break;\n\n    case enums.CONSTANTS.AUDIO[\"INCOMING_MESSAGE\"]:\n      SoundManager.onIncomingMessage(context);\n      break;\n\n    case enums.CONSTANTS.AUDIO[\"INCOMING_OTHER_MESSAGE\"]:\n      SoundManager.onIncomingOtherMessage(context);\n      break;\n\n    case enums.CONSTANTS.AUDIO[\"OUTGOING_MESSAGE\"]:\n      SoundManager.onOutgoingMessage(context);\n      break;\n\n    default:\n      break;\n  }\n};\n\nSoundManager.pause = (action, context) => {\n  switch (action) {\n    case enums.CONSTANTS.AUDIO[\"INCOMING_CALL\"]:\n      SoundManager.pauseIncomingCall(context);\n      break;\n\n    case enums.CONSTANTS.AUDIO[\"OUTGOING_CALL\"]:\n      SoundManager.pauseOutgoingCall(context);\n      break;\n\n    case enums.CONSTANTS.AUDIO[\"INCOMING_MESSAGE\"]:\n    case enums.CONSTANTS.AUDIO[\"INCOMING_OTHER_MESSAGE\"]:\n    case enums.CONSTANTS.AUDIO[\"OUTGOING_MESSAGE\"]:\n    default:\n      break;\n  }\n};\n\nSoundManager.onIncomingMessage = context => {\n  SoundManager.enableSoundForMessages(context).then(response => {\n    if (response === true) {\n      if (SoundManager.incomingMessageAudio === null) {\n        import(\"../resources/audio/incomingmessage.wav\").then(response => {\n          SoundManager.incomingMessageAudio = new Audio(response.default);\n          SoundManager.playMessageAlert(SoundManager.incomingMessageAudio);\n        });\n      } else {\n        SoundManager.playMessageAlert(SoundManager.incomingMessageAudio);\n      }\n    }\n  });\n};\n\nSoundManager.onIncomingOtherMessage = context => {\n  SoundManager.enableSoundForMessages(context).then(response => {\n    if (response === true) {\n      if (SoundManager.incomingOtherMessageAudio === null) {\n        import(\"../resources/audio/incomingothermessage.wav\").then(response => {\n          SoundManager.incomingOtherMessageAudio = new Audio(response.default);\n          SoundManager.playMessageAlert(SoundManager.incomingOtherMessageAudio);\n        });\n      } else {\n        SoundManager.playMessageAlert(SoundManager.incomingOtherMessageAudio);\n      }\n    }\n  });\n};\n\nSoundManager.onOutgoingMessage = context => {\n  SoundManager.enableSoundForMessages(context).then(response => {\n    if (response === true) {\n      if (SoundManager.outgoingMessageAudio === null) {\n        import(\"../resources/audio/outgoingmessage.wav\").then(response => {\n          SoundManager.outgoingMessageAudio = new Audio(response.default);\n          SoundManager.playMessageAlert(SoundManager.outgoingMessageAudio);\n        });\n      } else {\n        SoundManager.playMessageAlert(SoundManager.outgoingMessageAudio);\n      }\n    }\n  });\n};\n\nSoundManager.playMessageAlert = messageAudio => {\n  messageAudio.currentTime = 0;\n  messageAudio.play();\n};\n\nSoundManager.onIncomingCall = context => {\n  SoundManager.enableSoundForCalls(context).then(response => {\n    if (response === true) {\n      if (SoundManager.incomingCallAudio === null) {\n        import(\"../resources/audio/incomingcall.wav\").then(response => {\n          SoundManager.incomingCallAudio = new Audio(response.default);\n          SoundManager.playCallAlert(SoundManager.incomingCallAudio);\n        });\n      } else {\n        SoundManager.playCallAlert(SoundManager.incomingCallAudio);\n      }\n    }\n  });\n};\n\nSoundManager.onOutgoingCall = context => {\n  SoundManager.enableSoundForCalls(context).then(response => {\n    if (response === true) {\n      if (SoundManager.outgoingCallAudio === null) {\n        import(\"../resources/audio/outgoingcall.wav\").then(response => {\n          SoundManager.outgoingCallAudio = new Audio(response.default);\n          SoundManager.playCallAlert(SoundManager.outgoingCallAudio);\n        });\n      } else {\n        SoundManager.playCallAlert(SoundManager.outgoingCallAudio);\n      }\n    }\n  });\n};\n\nSoundManager.playCallAlert = callAudio => {\n  try {\n    callAudio.currentTime = 0;\n\n    if (typeof callAudio.loop == \"boolean\") {\n      callAudio.loop = true;\n    } else {\n      callAudio.addEventListener(\"ended\", function () {\n        this.currentTime = 0;\n        this.play();\n      }, false);\n    }\n\n    callAudio.play();\n  } catch (error) {}\n};\n\nSoundManager.pauseIncomingCall = context => {\n  SoundManager.enableSoundForCalls(context).then(response => {\n    if (response === true) {\n      if (SoundManager.incomingCallAudio) {\n        SoundManager.incomingCallAudio.pause();\n      }\n    }\n  });\n};\n\nSoundManager.pauseOutgoingCall = context => {\n  SoundManager.enableSoundForCalls(context).then(response => {\n    if (response === true) {\n      if (SoundManager.outgoingCallAudio) {\n        SoundManager.outgoingCallAudio.pause();\n      }\n    }\n  });\n};\n\nSoundManager.enableSoundForCalls = context => {\n  return new Promise(resolve => {\n    context.FeatureRestriction.isCallsSoundEnabled().then(response => resolve(response)).catch(error => resolve(false));\n  });\n};\n\nSoundManager.enableSoundForMessages = context => {\n  return new Promise(resolve => {\n    context.FeatureRestriction.isMessagesSoundEnabled().then(response => resolve(response)).catch(error => resolve(false));\n  });\n};","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/util/SoundManager.js"],"names":["enums","SoundManager","incomingCallAudio","outgoingCallAudio","incomingMessageAudio","outgoingMessageAudio","incomingOtherMessageAudio","play","action","context","CONSTANTS","AUDIO","onIncomingCall","onOutgoingCall","onIncomingMessage","onIncomingOtherMessage","onOutgoingMessage","pause","pauseIncomingCall","pauseOutgoingCall","enableSoundForMessages","then","response","Audio","default","playMessageAlert","messageAudio","currentTime","enableSoundForCalls","playCallAlert","callAudio","loop","addEventListener","error","Promise","resolve","FeatureRestriction","isCallsSoundEnabled","catch","isMessagesSoundEnabled"],"mappings":"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","sourcesContent":["import * as enums from \"./enums\";\n\nexport class SoundManager {\n\tstatic widgetSettings;\n\tstatic incomingCallAudio = null;\n\tstatic outgoingCallAudio = null;\n\tstatic incomingMessageAudio = null;\n\tstatic outgoingMessageAudio = null;\n\tstatic incomingOtherMessageAudio = null;\n\n\tstatic play = (action, context) => {\n\t\tswitch (action) {\n\t\t\tcase enums.CONSTANTS.AUDIO[\"INCOMING_CALL\"]:\n\t\t\t\tthis.onIncomingCall(context);\n\t\t\t\tbreak;\n\t\t\tcase enums.CONSTANTS.AUDIO[\"OUTGOING_CALL\"]:\n\t\t\t\tthis.onOutgoingCall(context);\n\t\t\t\tbreak;\n\t\t\tcase enums.CONSTANTS.AUDIO[\"INCOMING_MESSAGE\"]:\n\t\t\t\tthis.onIncomingMessage(context);\n\t\t\t\tbreak;\n\t\t\tcase enums.CONSTANTS.AUDIO[\"INCOMING_OTHER_MESSAGE\"]:\n\t\t\t\tthis.onIncomingOtherMessage(context);\n\t\t\t\tbreak;\n\t\t\tcase enums.CONSTANTS.AUDIO[\"OUTGOING_MESSAGE\"]:\n\t\t\t\tthis.onOutgoingMessage(context);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tstatic pause = (action, context) => {\n\t\tswitch (action) {\n\t\t\tcase enums.CONSTANTS.AUDIO[\"INCOMING_CALL\"]:\n\t\t\t\tthis.pauseIncomingCall(context);\n\t\t\t\tbreak;\n\t\t\tcase enums.CONSTANTS.AUDIO[\"OUTGOING_CALL\"]:\n\t\t\t\tthis.pauseOutgoingCall(context);\n\t\t\t\tbreak;\n\t\t\tcase enums.CONSTANTS.AUDIO[\"INCOMING_MESSAGE\"]:\n\t\t\tcase enums.CONSTANTS.AUDIO[\"INCOMING_OTHER_MESSAGE\"]:\n\t\t\tcase enums.CONSTANTS.AUDIO[\"OUTGOING_MESSAGE\"]:\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tstatic onIncomingMessage = context => {\n\t\tthis.enableSoundForMessages(context).then(response => {\n\t\t\tif (response === true) {\n\t\t\t\tif (this.incomingMessageAudio === null) {\n\t\t\t\t\timport(\"../resources/audio/incomingmessage.wav\").then(response => {\n\t\t\t\t\t\tthis.incomingMessageAudio = new Audio(response.default);\n\t\t\t\t\t\tthis.playMessageAlert(this.incomingMessageAudio);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.playMessageAlert(this.incomingMessageAudio);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tstatic onIncomingOtherMessage = context => {\n\t\tthis.enableSoundForMessages(context).then(response => {\n\t\t\tif (response === true) {\n\t\t\t\tif (this.incomingOtherMessageAudio === null) {\n\t\t\t\t\timport(\"../resources/audio/incomingothermessage.wav\").then(response => {\n\t\t\t\t\t\tthis.incomingOtherMessageAudio = new Audio(response.default);\n\t\t\t\t\t\tthis.playMessageAlert(this.incomingOtherMessageAudio);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.playMessageAlert(this.incomingOtherMessageAudio);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tstatic onOutgoingMessage = context => {\n\t\tthis.enableSoundForMessages(context).then(response => {\n\t\t\tif (response === true) {\n\t\t\t\tif (this.outgoingMessageAudio === null) {\n\t\t\t\t\timport(\"../resources/audio/outgoingmessage.wav\").then(response => {\n\t\t\t\t\t\tthis.outgoingMessageAudio = new Audio(response.default);\n\t\t\t\t\t\tthis.playMessageAlert(this.outgoingMessageAudio);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.playMessageAlert(this.outgoingMessageAudio);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tstatic playMessageAlert = messageAudio => {\n\t\tmessageAudio.currentTime = 0;\n\t\tmessageAudio.play();\n\t};\n\n\tstatic onIncomingCall = context => {\n\t\tthis.enableSoundForCalls(context).then(response => {\n\t\t\tif (response === true) {\n\t\t\t\tif (this.incomingCallAudio === null) {\n\t\t\t\t\timport(\"../resources/audio/incomingcall.wav\").then(response => {\n\t\t\t\t\t\tthis.incomingCallAudio = new Audio(response.default);\n\t\t\t\t\t\tthis.playCallAlert(this.incomingCallAudio);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.playCallAlert(this.incomingCallAudio);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tstatic onOutgoingCall = context => {\n\t\tthis.enableSoundForCalls(context).then(response => {\n\t\t\tif (response === true) {\n\t\t\t\tif (this.outgoingCallAudio === null) {\n\t\t\t\t\timport(\"../resources/audio/outgoingcall.wav\").then(response => {\n\t\t\t\t\t\tthis.outgoingCallAudio = new Audio(response.default);\n\t\t\t\t\t\tthis.playCallAlert(this.outgoingCallAudio);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.playCallAlert(this.outgoingCallAudio);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tstatic playCallAlert = callAudio => {\n\t\ttry {\n\t\t\tcallAudio.currentTime = 0;\n\t\t\tif (typeof callAudio.loop == \"boolean\") {\n\t\t\t\tcallAudio.loop = true;\n\t\t\t} else {\n\t\t\t\tcallAudio.addEventListener(\n\t\t\t\t\t\"ended\",\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\tthis.currentTime = 0;\n\t\t\t\t\t\tthis.play();\n\t\t\t\t\t},\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\t}\n\t\t\tcallAudio.play();\n\t\t} catch (error) {}\n\t};\n\n\tstatic pauseIncomingCall = context => {\n\t\tthis.enableSoundForCalls(context).then(response => {\n\t\t\tif (response === true) {\n\t\t\t\tif (this.incomingCallAudio) {\n\t\t\t\t\tthis.incomingCallAudio.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tstatic pauseOutgoingCall = context => {\n\t\tthis.enableSoundForCalls(context).then(response => {\n\t\t\tif (response === true) {\n\t\t\t\tif (this.outgoingCallAudio) {\n\t\t\t\t\tthis.outgoingCallAudio.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tstatic enableSoundForCalls = context => {\n\t\treturn new Promise(resolve => {\n\t\t\tcontext.FeatureRestriction.isCallsSoundEnabled()\n\t\t\t\t.then(response => resolve(response))\n\t\t\t\t.catch(error => resolve(false));\n\t\t});\n\t};\n\n\tstatic enableSoundForMessages = context => {\n\t\treturn new Promise(resolve => {\n\t\t\tcontext.FeatureRestriction.isMessagesSoundEnabled()\n\t\t\t\t.then(response => resolve(response))\n\t\t\t\t.catch(error => resolve(false));\n\t\t});\n\t};\n}"]},"metadata":{},"sourceType":"module"}