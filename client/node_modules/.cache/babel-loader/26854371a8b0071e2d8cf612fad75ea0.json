{"ast":null,"code":"import _extends from \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatMessageThread/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatMessageList, CometChatMessageComposer, CometChatSenderTextMessageBubble, CometChatReceiverTextMessageBubble, CometChatSenderImageMessageBubble, CometChatReceiverImageMessageBubble, CometChatSenderFileMessageBubble, CometChatReceiverFileMessageBubble, CometChatSenderAudioMessageBubble, CometChatReceiverAudioMessageBubble, CometChatSenderVideoMessageBubble, CometChatReceiverVideoMessageBubble, CometChatSenderDirectCallBubble, CometChatReceiverDirectCallBubble, CometChatImageViewer } from \"../\";\nimport { CometChatSenderPollMessageBubble, CometChatReceiverPollMessageBubble, CometChatSenderStickerBubble, CometChatReceiverStickerMessageBubble, CometChatSenderDocumentBubble, CometChatReceiverDocumentBubble, CometChatSenderWhiteboardBubble, CometChatReceiverWhiteboardBubble } from \"../Extensions\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport { checkMessageForExtensionsData } from \"../../../util/common\";\nimport * as enums from \"../../../util/enums.js\";\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { wrapperStyle, headerStyle, headerWrapperStyle, headerDetailStyle, headerTitleStyle, headerNameStyle, headerCloseStyle, messageContainerStyle, parentMessageStyle, messageSeparatorStyle, messageReplyStyle } from \"./style\";\nimport clearIcon from \"./resources/close.svg\";\n\nclass CometChatMessageThread extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.loggedInUser = null;\n\n    this.enableSendingOneOnOneMessage = () => {\n      this.context.FeatureRestriction.isOneOnOneChatEnabled().then(response => {\n        if (response !== this.state.enableSendingOneOnOneMessage) {\n          this.setState({\n            enableSendingOneOnOneMessage: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableSendingOneOnOneMessage !== false) {\n          this.setState({\n            enableSendingOneOnOneMessage: false\n          });\n        }\n      });\n    };\n\n    this.enableSendingGroupMessage = () => {\n      this.context.FeatureRestriction.isGroupChatEnabled().then(response => {\n        if (response !== this.state.enableSendingGroupMessage) {\n          this.setState({\n            enableSendingGroupMessage: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableSendingGroupMessage !== false) {\n          this.setState({\n            enableSendingGroupMessage: false\n          });\n        }\n      });\n    };\n\n    this.enableHideDeletedMessages = () => {\n      this.context.FeatureRestriction.isHideDeletedMessagesEnabled().then(response => {\n        if (response !== this.state.enableHideDeletedMessages) {\n          this.setState({\n            enableHideDeletedMessages: response\n          });\n        }\n      }).catch(error => {\n        if (this.state.enableHideDeletedMessages !== false) {\n          this.setState({\n            enableHideDeletedMessages: false\n          });\n        }\n      });\n    };\n\n    this.errorHandler = errorCode => {\n      this.toastRef.setError(errorCode);\n    };\n\n    this.parentMessageEdited = message => {\n      const parentMessage = { ...this.props.parentMessage\n      };\n\n      if (parentMessage.id === message.id) {\n        const newMessageObj = { ...message\n        };\n        this.setState({\n          parentMessage: newMessageObj\n        });\n      }\n    };\n\n    this.actionHandler = (action, messages) => {\n      switch (action) {\n        case enums.ACTIONS[\"CUSTOM_MESSAGE_RECEIVED\"]:\n        case enums.ACTIONS[\"MESSAGE_RECEIVED\"]:\n          {\n            const message = messages[0];\n\n            if (message.hasOwnProperty(\"parentMessageId\") && message.parentMessageId === this.state.parentMessage.id) {\n              const replyCount = this.state.parentMessage.hasOwnProperty(\"replyCount\") ? this.state.parentMessage.replyCount : 0;\n              const newReplyCount = replyCount + 1;\n              let messageObj = { ...this.state.parentMessage\n              };\n              let newMessageObj = Object.assign({}, messageObj, {\n                replyCount: newReplyCount\n              });\n              this.setState({\n                parentMessage: newMessageObj\n              });\n              this.smartReplyPreview(messages);\n              this.appendMessage(messages);\n            }\n          }\n          break;\n\n        case enums.ACTIONS[\"MESSAGE_COMPOSED\"]:\n          {\n            const replyCount = this.state.parentMessage.hasOwnProperty(\"replyCount\") ? this.state.parentMessage.replyCount : 0;\n            const newReplyCount = replyCount + 1;\n            let messageObj = { ...this.state.parentMessage\n            };\n            let newMessageObj = Object.assign({}, messageObj, {\n              replyCount: newReplyCount\n            });\n            this.setState({\n              parentMessage: newMessageObj\n            });\n            this.appendMessage(messages);\n            this.props.actionGenerated(enums.ACTIONS[\"THREAD_MESSAGE_COMPOSED\"], messages);\n          }\n          break;\n\n        case enums.ACTIONS[\"MESSAGE_SENT\"]:\n        case enums.ACTIONS[\"ERROR_IN_SENDING_MESSAGE\"]:\n          this.messageSent(messages);\n          this.props.actionGenerated(action, messages);\n          break;\n\n        case enums.ACTIONS[\"ON_MESSAGE_READ_DELIVERED\"]:\n          this.updateMessages(messages);\n          break;\n\n        case enums.ACTIONS[\"ON_MESSAGE_EDITED\"]:\n          this.updateMessages(messages);\n          break;\n\n        case \"messageFetched\":\n          this.prependMessages(messages);\n          break;\n\n        case enums.ACTIONS[\"ON_MESSAGE_DELETED\"]:\n          this.removeMessages(messages);\n          break;\n\n        case enums.ACTIONS[\"EDIT_MESSAGE\"]:\n          this.editMessage(messages);\n          break;\n\n        case enums.ACTIONS[\"MESSAGE_EDITED\"]:\n          this.messageEdited(messages);\n          break;\n\n        case enums.ACTIONS[\"CLEAR_EDIT_PREVIEW\"]:\n          this.clearEditPreview();\n          break;\n\n        case enums.ACTIONS[\"DELETE_MESSAGE\"]:\n          this.deleteMessage(messages);\n          break;\n\n        case enums.ACTIONS[\"REACT_TO_MESSAGE\"]:\n          this.reactToMessage(messages);\n          break;\n\n        case enums.ACTIONS[\"VIEW_ORIGINAL_IMAGE\"]:\n          this.toggleOriginalImageView(messages);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.toggleOriginalImageView = message => {\n      this.setState({\n        viewOriginalImage: message\n      });\n    };\n\n    this.messageSent = messages => {\n      const message = messages[0];\n      const messageList = [...this.state.messageList];\n      let messageKey = messageList.findIndex(m => m._id === message._id);\n\n      if (messageKey > -1) {\n        const newMessageObj = { ...message\n        };\n        messageList.splice(messageKey, 1, newMessageObj);\n        this.updateMessages(messageList);\n      }\n    };\n\n    this.editMessage = message => {\n      this.setState({\n        messageToBeEdited: message\n      });\n    };\n\n    this.messageEdited = message => {\n      const messageList = [...this.state.messageList];\n      let messageKey = messageList.findIndex(m => m.id === message.id);\n\n      if (messageKey > -1) {\n        const messageObj = messageList[messageKey];\n        const newMessageObj = { ...messageObj,\n          ...message\n        };\n        messageList.splice(messageKey, 1, newMessageObj);\n        this.updateMessages(messageList);\n\n        if (messageList.length - messageKey === 1) {\n          this.context.setLastMessage(newMessageObj);\n        }\n      }\n    };\n\n    this.clearEditPreview = () => {\n      this.setState({\n        messageToBeEdited: \"\"\n      });\n    };\n\n    this.deleteMessage = message => {\n      const messageId = message.id;\n      CometChat.deleteMessage(messageId).then(deletedMessage => {\n        this.removeMessages([deletedMessage]);\n        const messageList = [...this.state.messageList];\n        let messageKey = messageList.findIndex(m => m.id === message.id);\n\n        if (messageList.length - messageKey === 1 && !message.replyCount) {\n          this.context.setLastMessage(deletedMessage);\n        }\n      }).catch(error => this.errorHandler(\"SOMETHING_WRONG\"));\n    };\n\n    this.smartReplyPreview = messages => {\n      const message = messages[0];\n      const smartReplyData = checkMessageForExtensionsData(message, \"smart-reply\");\n\n      if (smartReplyData && smartReplyData.hasOwnProperty(\"error\") === false) {\n        this.setState({\n          replyPreview: message\n        });\n      } else {\n        this.setState({\n          replyPreview: null\n        });\n      }\n    };\n\n    this.appendMessage = message => {\n      let messages = [...this.state.messageList];\n      messages = messages.concat(message);\n      this.setState({\n        messageList: messages,\n        scrollToBottom: true\n      });\n    };\n\n    this.updateMessages = messages => {\n      this.setState({\n        messageList: messages\n      });\n    };\n\n    this.prependMessages = messages => {\n      const messageList = [...messages, ...this.state.messageList];\n      this.setState({\n        messageList: messageList,\n        scrollToBottom: false\n      });\n    };\n\n    this.removeMessages = messages => {\n      const deletedMessage = messages[0];\n      const messagelist = [...this.state.messageList];\n      let messageKey = messagelist.findIndex(message => message.id === deletedMessage.id);\n\n      if (messageKey > -1) {\n        console.log(\"this.state.enableHideDeletedMessages\", this.state.enableHideDeletedMessages);\n\n        if (this.state.enableHideDeletedMessages) {\n          messagelist.splice(messageKey, 1);\n        } else {\n          let messageObj = { ...messagelist[messageKey]\n          };\n          let newMessageObj = Object.assign({}, messageObj, deletedMessage);\n          messagelist.splice(messageKey, 1, newMessageObj);\n        }\n\n        this.setState({\n          messageList: messagelist,\n          scrollToBottom: false\n        });\n      }\n    };\n\n    this.getSenderMessageComponent = (message, key) => {\n      let component;\n\n      switch (message.type) {\n        case CometChat.MESSAGE_TYPE.TEXT:\n          component = jsx(CometChatSenderTextMessageBubble, _extends({\n            loggedInUser: this.loggedInUser,\n            key: key,\n            message: message,\n            actionGenerated: this.actionHandler\n          }, this.props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 11\n            }\n          }));\n          break;\n\n        case CometChat.MESSAGE_TYPE.IMAGE:\n          component = jsx(CometChatSenderImageMessageBubble, _extends({\n            loggedInUser: this.loggedInUser,\n            key: key,\n            message: message,\n            actionGenerated: this.actionHandler\n          }, this.props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 11\n            }\n          }));\n          break;\n\n        case CometChat.MESSAGE_TYPE.FILE:\n          component = jsx(CometChatSenderFileMessageBubble, _extends({\n            loggedInUser: this.loggedInUser,\n            key: key,\n            message: message,\n            actionGenerated: this.actionHandler\n          }, this.props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 11\n            }\n          }));\n          break;\n\n        case CometChat.MESSAGE_TYPE.VIDEO:\n          component = jsx(CometChatSenderVideoMessageBubble, _extends({\n            loggedInUser: this.loggedInUser,\n            key: key,\n            message: message,\n            actionGenerated: this.actionHandler\n          }, this.props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 11\n            }\n          }));\n          break;\n\n        case CometChat.MESSAGE_TYPE.AUDIO:\n          component = jsx(CometChatSenderAudioMessageBubble, _extends({\n            loggedInUser: this.loggedInUser,\n            key: key,\n            message: message,\n            actionGenerated: this.actionHandler\n          }, this.props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 11\n            }\n          }));\n          break;\n\n        default:\n          break;\n      }\n\n      return component;\n    };\n\n    this.getReceiverMessageComponent = (message, key) => {\n      let component;\n\n      switch (message.type) {\n        case \"message\":\n        case CometChat.MESSAGE_TYPE.TEXT:\n          component = jsx(CometChatReceiverTextMessageBubble, _extends({\n            loggedInUser: this.loggedInUser,\n            key: key,\n            message: message,\n            actionGenerated: this.actionHandler\n          }, this.props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 11\n            }\n          }));\n          break;\n\n        case CometChat.MESSAGE_TYPE.IMAGE:\n          component = jsx(CometChatReceiverImageMessageBubble, _extends({\n            loggedInUser: this.loggedInUser,\n            key: key,\n            message: message,\n            actionGenerated: this.actionHandler\n          }, this.props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 11\n            }\n          }));\n          break;\n\n        case CometChat.MESSAGE_TYPE.FILE:\n          component = jsx(CometChatReceiverFileMessageBubble, _extends({\n            loggedInUser: this.loggedInUser,\n            key: key,\n            message: message,\n            actionGenerated: this.actionHandler\n          }, this.props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 11\n            }\n          }));\n          break;\n\n        case CometChat.MESSAGE_TYPE.AUDIO:\n          component = jsx(CometChatReceiverAudioMessageBubble, _extends({\n            loggedInUser: this.loggedInUser,\n            key: key,\n            message: message,\n            actionGenerated: this.actionHandler\n          }, this.props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 11\n            }\n          }));\n          break;\n\n        case CometChat.MESSAGE_TYPE.VIDEO:\n          component = jsx(CometChatReceiverVideoMessageBubble, _extends({\n            loggedInUser: this.loggedInUser,\n            key: key,\n            message: message,\n            actionGenerated: this.actionHandler\n          }, this.props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 11\n            }\n          }));\n          break;\n\n        default:\n          break;\n      }\n\n      return component;\n    };\n\n    this.getSenderCustomMessageComponent = (message, key) => {\n      let component;\n\n      switch (message.type) {\n        case enums.CUSTOM_TYPE_POLL:\n          component = jsx(CometChatSenderPollMessageBubble, _extends({\n            loggedInUser: this.loggedInUser,\n            key: key,\n            message: message,\n            actionGenerated: this.props.actionGenerated\n          }, this.props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 11\n            }\n          }));\n          break;\n\n        case enums.CUSTOM_TYPE_STICKER:\n          component = jsx(CometChatSenderStickerBubble, _extends({\n            loggedInUser: this.loggedInUser,\n            key: key,\n            message: message,\n            actionGenerated: this.props.actionGenerated\n          }, this.props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 11\n            }\n          }));\n          break;\n\n        case enums.CUSTOM_TYPE_DOCUMENT:\n          component = jsx(CometChatSenderDocumentBubble, _extends({\n            loggedInUser: this.loggedInUser,\n            key: key,\n            message: message,\n            actionGenerated: this.props.actionGenerated\n          }, this.props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 11\n            }\n          }));\n          break;\n\n        case enums.CUSTOM_TYPE_WHITEBOARD:\n          component = jsx(CometChatSenderWhiteboardBubble, _extends({\n            loggedInUser: this.loggedInUser,\n            key: key,\n            message: message,\n            actionGenerated: this.props.actionGenerated\n          }, this.props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 11\n            }\n          }));\n          break;\n\n        case enums.CUSTOM_TYPE_MEETING:\n          component = jsx(CometChatSenderDirectCallBubble, _extends({\n            loggedInUser: this.loggedInUser,\n            key: key,\n            message: message,\n            actionGenerated: this.props.actionGenerated\n          }, this.props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 11\n            }\n          }));\n          break;\n\n        default:\n          break;\n      }\n\n      return component;\n    };\n\n    this.getReceiverCustomMessageComponent = (message, key) => {\n      let component;\n\n      switch (message.type) {\n        case enums.CUSTOM_TYPE_POLL:\n          component = jsx(CometChatReceiverPollMessageBubble, _extends({\n            loggedInUser: this.loggedInUser,\n            key: key,\n            message: message,\n            actionGenerated: this.props.actionGenerated\n          }, this.props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 11\n            }\n          }));\n          break;\n\n        case enums.CUSTOM_TYPE_STICKER:\n          component = jsx(CometChatReceiverStickerMessageBubble, _extends({\n            loggedInUser: this.loggedInUser,\n            key: key,\n            message: message,\n            actionGenerated: this.props.actionGenerated\n          }, this.props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 11\n            }\n          }));\n          break;\n\n        case enums.CUSTOM_TYPE_DOCUMENT:\n          component = jsx(CometChatReceiverDocumentBubble, _extends({\n            loggedInUser: this.loggedInUser,\n            key: key,\n            message: message,\n            actionGenerated: this.props.actionGenerated\n          }, this.props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 11\n            }\n          }));\n          break;\n\n        case enums.CUSTOM_TYPE_WHITEBOARD:\n          component = jsx(CometChatReceiverWhiteboardBubble, _extends({\n            loggedInUser: this.loggedInUser,\n            key: key,\n            message: message,\n            actionGenerated: this.props.actionGenerated\n          }, this.props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 11\n            }\n          }));\n          break;\n\n        case enums.CUSTOM_TYPE_MEETING:\n          component = jsx(CometChatReceiverDirectCallBubble, _extends({\n            loggedInUser: this.loggedInUser,\n            key: key,\n            message: message\n          }, this.props, {\n            enableMessageReaction: this.state.enableMessageReaction,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 11\n            }\n          }));\n          break;\n\n        default:\n          break;\n      }\n\n      return component;\n    };\n\n    this.getParentMessageComponent = message => {\n      let component = null;\n      const key = 1;\n\n      switch (message.category) {\n        case CometChat.CATEGORY_MESSAGE:\n          if (this.loggedInUser.uid === message.sender.uid) {\n            component = this.getSenderMessageComponent(message, key);\n          } else {\n            component = this.getReceiverMessageComponent(message, key);\n          }\n\n          break;\n\n        case CometChat.CATEGORY_CUSTOM:\n          if (this.loggedInUser.uid === message.sender.uid) {\n            component = this.getSenderCustomMessageComponent(message, key);\n          } else {\n            component = this.getReceiverCustomMessageComponent(message, key);\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      return component;\n    };\n\n    this.reactToMessage = message => {\n      this.setState({\n        messageToReact: message\n      });\n\n      if (this.composerRef) {\n        this.composerRef.toggleEmojiPicker();\n      }\n    };\n\n    this.state = {\n      messageList: [],\n      scrollToBottom: false,\n      replyCount: 0,\n      replyPreview: null,\n      messageToBeEdited: null,\n      parentMessage: props.parentMessage,\n      viewOriginalImage: false,\n      enableSendingOneOnOneMessage: false,\n      enableSendingGroupMessage: false,\n      enableHideDeletedMessages: false\n    };\n    this.composerRef = /*#__PURE__*/React.createRef();\n    this.toastRef = /*#__PURE__*/React.createRef();\n    this.loggedInUser = this.props.loggedInUser;\n  }\n\n  componentDidMount() {\n    CometChat.getLoggedinUser().then(user => this.loggedInUser = user).catch(error => this.errorHandler(\"SOMETHING_WRONG\"));\n    this.enableSendingOneOnOneMessage();\n    this.enableSendingGroupMessage();\n    this.enableHideDeletedMessages();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.enableSendingOneOnOneMessage();\n    this.enableSendingGroupMessage();\n    this.enableHideDeletedMessages();\n\n    if (prevProps.parentMessage !== this.props.parentMessage) {\n      if (prevProps.parentMessage.id !== this.props.parentMessage.id) {\n        this.setState({\n          messageList: [],\n          scrollToBottom: true,\n          parentMessage: this.props.parentMessage\n        });\n      } else if (prevProps.parentMessage.data !== this.props.parentMessage.data) {\n        this.setState({\n          parentMessage: this.props.parentMessage\n        });\n      }\n    }\n  }\n\n  render() {\n    let parentMessage = this.getParentMessageComponent(this.state.parentMessage);\n    let seperator = jsx(\"div\", {\n      css: messageSeparatorStyle(this.props),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 7\n      }\n    }, jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }\n    }));\n\n    if (this.state.parentMessage.hasOwnProperty(\"replyCount\")) {\n      const replyCount = this.state.parentMessage.replyCount;\n      const replyText = replyCount === 1 ? `${replyCount} ${Translator.translate(\"REPLY\", this.props.lang)}` : `${replyCount} ${Translator.translate(\"REPLIES\", this.props.lang)}`;\n      seperator = jsx(\"div\", {\n        css: messageSeparatorStyle(this.context),\n        className: \"message__separator\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 9\n        }\n      }, jsx(\"span\", {\n        css: messageReplyStyle(),\n        className: \"message__replies\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 11\n        }\n      }, replyText), jsx(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    let originalImageView = null;\n\n    if (this.state.viewOriginalImage) {\n      originalImageView = jsx(CometChatImageViewer, {\n        open: true,\n        close: () => this.toggleOriginalImageView(false),\n        message: this.state.viewOriginalImage,\n        lang: this.props.lang,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 9\n        }\n      });\n    }\n\n    let messageComposer = jsx(CometChatMessageComposer, {\n      ref: el => {\n        this.composerRef = el;\n      },\n      theme: this.props.theme,\n      lang: this.props.lang,\n      widgetsettings: this.props.widgetsettings,\n      parentMessageId: this.props.parentMessage.id,\n      messageToBeEdited: this.state.messageToBeEdited,\n      replyPreview: this.state.replyPreview,\n      messageToReact: this.state.messageToReact,\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 7\n      }\n    }); //if send messages feature is disabled\n\n    if (this.context.type === CometChat.ACTION_TYPE.TYPE_USER && this.state.enableSendingOneOnOneMessage === false || this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP && this.state.enableSendingGroupMessage === false) {\n      messageComposer = null;\n    }\n\n    return jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 7\n      }\n    }, jsx(\"div\", {\n      css: wrapperStyle(this.context),\n      className: \"thread__chat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 9\n      }\n    }, jsx(\"div\", {\n      css: headerStyle(this.context),\n      className: \"chat__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 11\n      }\n    }, jsx(\"div\", {\n      css: headerWrapperStyle(),\n      className: \"header__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 13\n      }\n    }, jsx(\"div\", {\n      css: headerDetailStyle(),\n      className: \"header__details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 15\n      }\n    }, jsx(\"h6\", {\n      css: headerTitleStyle(),\n      className: \"header__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 17\n      }\n    }, Translator.translate(\"THREAD\", this.props.lang)), jsx(\"span\", {\n      css: headerNameStyle(),\n      className: \"header__username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 17\n      }\n    }, this.props.threadItem.name)), jsx(\"div\", {\n      css: headerCloseStyle(clearIcon, this.context),\n      className: \"header__close\",\n      onClick: () => this.props.actionGenerated(enums.ACTIONS[\"CLOSE_THREADED_MESSAGE\"]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 15\n      }\n    }))), jsx(\"div\", {\n      css: messageContainerStyle(),\n      className: \"chat__message__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 11\n      }\n    }, jsx(\"div\", {\n      css: parentMessageStyle(this.props.parentMessage),\n      className: \"parent__message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 13\n      }\n    }, parentMessage), seperator, jsx(CometChatMessageList, {\n      theme: this.props.theme,\n      messages: this.state.messageList,\n      item: this.props.threadItem,\n      type: this.props.threadType,\n      scrollToBottom: this.state.scrollToBottom,\n      config: this.props.config,\n      widgetsettings: this.props.widgetsettings,\n      parentMessageId: this.props.parentMessage.id,\n      lang: this.props.lang,\n      actionGenerated: this.actionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 13\n      }\n    }), messageComposer)), originalImageView);\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatMessageThread.contextType = CometChatContext;\nCometChatMessageThread.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme\n};\nCometChatMessageThread.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object\n};\nexport { CometChatMessageThread };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Messages/CometChatMessageThread/index.js"],"names":["React","jsx","PropTypes","CometChat","CometChatMessageList","CometChatMessageComposer","CometChatSenderTextMessageBubble","CometChatReceiverTextMessageBubble","CometChatSenderImageMessageBubble","CometChatReceiverImageMessageBubble","CometChatSenderFileMessageBubble","CometChatReceiverFileMessageBubble","CometChatSenderAudioMessageBubble","CometChatReceiverAudioMessageBubble","CometChatSenderVideoMessageBubble","CometChatReceiverVideoMessageBubble","CometChatSenderDirectCallBubble","CometChatReceiverDirectCallBubble","CometChatImageViewer","CometChatSenderPollMessageBubble","CometChatReceiverPollMessageBubble","CometChatSenderStickerBubble","CometChatReceiverStickerMessageBubble","CometChatSenderDocumentBubble","CometChatReceiverDocumentBubble","CometChatSenderWhiteboardBubble","CometChatReceiverWhiteboardBubble","CometChatContext","checkMessageForExtensionsData","enums","theme","Translator","wrapperStyle","headerStyle","headerWrapperStyle","headerDetailStyle","headerTitleStyle","headerNameStyle","headerCloseStyle","messageContainerStyle","parentMessageStyle","messageSeparatorStyle","messageReplyStyle","CometChatMessageThread","PureComponent","constructor","props","loggedInUser","enableSendingOneOnOneMessage","context","FeatureRestriction","isOneOnOneChatEnabled","then","response","state","setState","catch","error","enableSendingGroupMessage","isGroupChatEnabled","enableHideDeletedMessages","isHideDeletedMessagesEnabled","errorHandler","errorCode","toastRef","setError","parentMessageEdited","message","parentMessage","id","newMessageObj","actionHandler","action","messages","ACTIONS","hasOwnProperty","parentMessageId","replyCount","newReplyCount","messageObj","Object","assign","smartReplyPreview","appendMessage","actionGenerated","messageSent","updateMessages","prependMessages","removeMessages","editMessage","messageEdited","clearEditPreview","deleteMessage","reactToMessage","toggleOriginalImageView","viewOriginalImage","messageList","messageKey","findIndex","m","_id","splice","messageToBeEdited","length","setLastMessage","messageId","deletedMessage","smartReplyData","replyPreview","concat","scrollToBottom","messagelist","console","log","getSenderMessageComponent","key","component","type","MESSAGE_TYPE","TEXT","IMAGE","FILE","VIDEO","AUDIO","getReceiverMessageComponent","getSenderCustomMessageComponent","CUSTOM_TYPE_POLL","CUSTOM_TYPE_STICKER","CUSTOM_TYPE_DOCUMENT","CUSTOM_TYPE_WHITEBOARD","CUSTOM_TYPE_MEETING","getReceiverCustomMessageComponent","enableMessageReaction","getParentMessageComponent","category","CATEGORY_MESSAGE","uid","sender","CATEGORY_CUSTOM","messageToReact","composerRef","toggleEmojiPicker","createRef","componentDidMount","getLoggedinUser","user","componentDidUpdate","prevProps","data","render","seperator","replyText","translate","lang","originalImageView","messageComposer","el","widgetsettings","ACTION_TYPE","TYPE_USER","TYPE_GROUP","threadItem","name","clearIcon","threadType","config","contextType","defaultProps","getDefaultLanguage","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from \"@emotion/react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport {\n  CometChatMessageList,\n  CometChatMessageComposer,\n  CometChatSenderTextMessageBubble,\n  CometChatReceiverTextMessageBubble,\n  CometChatSenderImageMessageBubble,\n  CometChatReceiverImageMessageBubble,\n  CometChatSenderFileMessageBubble,\n  CometChatReceiverFileMessageBubble,\n  CometChatSenderAudioMessageBubble,\n  CometChatReceiverAudioMessageBubble,\n  CometChatSenderVideoMessageBubble,\n  CometChatReceiverVideoMessageBubble,\n  CometChatSenderDirectCallBubble,\n  CometChatReceiverDirectCallBubble,\n  CometChatImageViewer,\n} from \"../\";\n\nimport {\n  CometChatSenderPollMessageBubble,\n  CometChatReceiverPollMessageBubble,\n  CometChatSenderStickerBubble,\n  CometChatReceiverStickerMessageBubble,\n  CometChatSenderDocumentBubble,\n  CometChatReceiverDocumentBubble,\n  CometChatSenderWhiteboardBubble,\n  CometChatReceiverWhiteboardBubble,\n} from \"../Extensions\";\n\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport { checkMessageForExtensionsData } from \"../../../util/common\";\nimport * as enums from \"../../../util/enums.js\";\n\nimport { theme } from \"../../../resources/theme\";\nimport Translator from \"../../../resources/localization/translator\";\n\nimport {\n  wrapperStyle,\n  headerStyle,\n  headerWrapperStyle,\n  headerDetailStyle,\n  headerTitleStyle,\n  headerNameStyle,\n  headerCloseStyle,\n  messageContainerStyle,\n  parentMessageStyle,\n  messageSeparatorStyle,\n  messageReplyStyle,\n} from \"./style\";\n\nimport clearIcon from \"./resources/close.svg\";\n\nclass CometChatMessageThread extends React.PureComponent {\n  loggedInUser = null;\n  static contextType = CometChatContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      messageList: [],\n      scrollToBottom: false,\n      replyCount: 0,\n      replyPreview: null,\n      messageToBeEdited: null,\n      parentMessage: props.parentMessage,\n      viewOriginalImage: false,\n      enableSendingOneOnOneMessage: false,\n      enableSendingGroupMessage: false,\n      enableHideDeletedMessages: false,\n    };\n\n    this.composerRef = React.createRef();\n    this.toastRef = React.createRef();\n\n    this.loggedInUser = this.props.loggedInUser;\n  }\n\n  componentDidMount() {\n    CometChat.getLoggedinUser()\n      .then((user) => (this.loggedInUser = user))\n      .catch((error) => this.errorHandler(\"SOMETHING_WRONG\"));\n\n    this.enableSendingOneOnOneMessage();\n    this.enableSendingGroupMessage();\n    this.enableHideDeletedMessages();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.enableSendingOneOnOneMessage();\n    this.enableSendingGroupMessage();\n    this.enableHideDeletedMessages();\n\n    if (prevProps.parentMessage !== this.props.parentMessage) {\n      if (prevProps.parentMessage.id !== this.props.parentMessage.id) {\n        this.setState({\n          messageList: [],\n          scrollToBottom: true,\n          parentMessage: this.props.parentMessage,\n        });\n      } else if (\n        prevProps.parentMessage.data !== this.props.parentMessage.data\n      ) {\n        this.setState({ parentMessage: this.props.parentMessage });\n      }\n    }\n  }\n\n  enableSendingOneOnOneMessage = () => {\n    this.context.FeatureRestriction.isOneOnOneChatEnabled()\n      .then((response) => {\n        if (response !== this.state.enableSendingOneOnOneMessage) {\n          this.setState({ enableSendingOneOnOneMessage: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableSendingOneOnOneMessage !== false) {\n          this.setState({ enableSendingOneOnOneMessage: false });\n        }\n      });\n  };\n\n  enableSendingGroupMessage = () => {\n    this.context.FeatureRestriction.isGroupChatEnabled()\n      .then((response) => {\n        if (response !== this.state.enableSendingGroupMessage) {\n          this.setState({ enableSendingGroupMessage: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableSendingGroupMessage !== false) {\n          this.setState({ enableSendingGroupMessage: false });\n        }\n      });\n  };\n\n  enableHideDeletedMessages = () => {\n    this.context.FeatureRestriction.isHideDeletedMessagesEnabled()\n      .then((response) => {\n        if (response !== this.state.enableHideDeletedMessages) {\n          this.setState({ enableHideDeletedMessages: response });\n        }\n      })\n      .catch((error) => {\n        if (this.state.enableHideDeletedMessages !== false) {\n          this.setState({ enableHideDeletedMessages: false });\n        }\n      });\n  };\n\n  errorHandler = (errorCode) => {\n    this.toastRef.setError(errorCode);\n  };\n\n  parentMessageEdited = (message) => {\n    const parentMessage = { ...this.props.parentMessage };\n\n    if (parentMessage.id === message.id) {\n      const newMessageObj = { ...message };\n      this.setState({ parentMessage: newMessageObj });\n    }\n  };\n\n  actionHandler = (action, messages) => {\n    switch (action) {\n      case enums.ACTIONS[\"CUSTOM_MESSAGE_RECEIVED\"]:\n      case enums.ACTIONS[\"MESSAGE_RECEIVED\"]:\n        {\n          const message = messages[0];\n          if (\n            message.hasOwnProperty(\"parentMessageId\") &&\n            message.parentMessageId === this.state.parentMessage.id\n          ) {\n            const replyCount = this.state.parentMessage.hasOwnProperty(\n              \"replyCount\"\n            )\n              ? this.state.parentMessage.replyCount\n              : 0;\n            const newReplyCount = replyCount + 1;\n\n            let messageObj = { ...this.state.parentMessage };\n            let newMessageObj = Object.assign({}, messageObj, {\n              replyCount: newReplyCount,\n            });\n            this.setState({ parentMessage: newMessageObj });\n\n            this.smartReplyPreview(messages);\n            this.appendMessage(messages);\n          }\n        }\n        break;\n      case enums.ACTIONS[\"MESSAGE_COMPOSED\"]:\n        {\n          const replyCount = this.state.parentMessage.hasOwnProperty(\n            \"replyCount\"\n          )\n            ? this.state.parentMessage.replyCount\n            : 0;\n          const newReplyCount = replyCount + 1;\n\n          let messageObj = { ...this.state.parentMessage };\n          let newMessageObj = Object.assign({}, messageObj, {\n            replyCount: newReplyCount,\n          });\n          this.setState({ parentMessage: newMessageObj });\n\n          this.appendMessage(messages);\n          this.props.actionGenerated(\n            enums.ACTIONS[\"THREAD_MESSAGE_COMPOSED\"],\n            messages\n          );\n        }\n        break;\n      case enums.ACTIONS[\"MESSAGE_SENT\"]:\n      case enums.ACTIONS[\"ERROR_IN_SENDING_MESSAGE\"]:\n        this.messageSent(messages);\n        this.props.actionGenerated(action, messages);\n        break;\n      case enums.ACTIONS[\"ON_MESSAGE_READ_DELIVERED\"]:\n        this.updateMessages(messages);\n        break;\n      case enums.ACTIONS[\"ON_MESSAGE_EDITED\"]:\n        this.updateMessages(messages);\n        break;\n      case \"messageFetched\":\n        this.prependMessages(messages);\n        break;\n      case enums.ACTIONS[\"ON_MESSAGE_DELETED\"]:\n        this.removeMessages(messages);\n        break;\n      case enums.ACTIONS[\"EDIT_MESSAGE\"]:\n        this.editMessage(messages);\n        break;\n      case enums.ACTIONS[\"MESSAGE_EDITED\"]:\n        this.messageEdited(messages);\n        break;\n      case enums.ACTIONS[\"CLEAR_EDIT_PREVIEW\"]:\n        this.clearEditPreview();\n        break;\n      case enums.ACTIONS[\"DELETE_MESSAGE\"]:\n        this.deleteMessage(messages);\n        break;\n      case enums.ACTIONS[\"REACT_TO_MESSAGE\"]:\n        this.reactToMessage(messages);\n        break;\n      case enums.ACTIONS[\"VIEW_ORIGINAL_IMAGE\"]:\n        this.toggleOriginalImageView(messages);\n        break;\n      default:\n        break;\n    }\n  };\n\n  toggleOriginalImageView = (message) => {\n    this.setState({ viewOriginalImage: message });\n  };\n\n  messageSent = (messages) => {\n    const message = messages[0];\n    const messageList = [...this.state.messageList];\n    let messageKey = messageList.findIndex((m) => m._id === message._id);\n    if (messageKey > -1) {\n      const newMessageObj = { ...message };\n\n      messageList.splice(messageKey, 1, newMessageObj);\n      this.updateMessages(messageList);\n    }\n  };\n\n  editMessage = (message) => {\n    this.setState({ messageToBeEdited: message });\n  };\n\n  messageEdited = (message) => {\n    const messageList = [...this.state.messageList];\n    let messageKey = messageList.findIndex((m) => m.id === message.id);\n    if (messageKey > -1) {\n      const messageObj = messageList[messageKey];\n\n      const newMessageObj = { ...messageObj, ...message };\n\n      messageList.splice(messageKey, 1, newMessageObj);\n      this.updateMessages(messageList);\n\n      if (messageList.length - messageKey === 1) {\n        this.context.setLastMessage(newMessageObj);\n      }\n    }\n  };\n\n  clearEditPreview = () => {\n    this.setState({ messageToBeEdited: \"\" });\n  };\n\n  deleteMessage = (message) => {\n    const messageId = message.id;\n    CometChat.deleteMessage(messageId)\n      .then((deletedMessage) => {\n        this.removeMessages([deletedMessage]);\n\n        const messageList = [...this.state.messageList];\n        let messageKey = messageList.findIndex((m) => m.id === message.id);\n\n        if (messageList.length - messageKey === 1 && !message.replyCount) {\n          this.context.setLastMessage(deletedMessage);\n        }\n      })\n      .catch((error) => this.errorHandler(\"SOMETHING_WRONG\"));\n  };\n\n  smartReplyPreview = (messages) => {\n    const message = messages[0];\n\n    const smartReplyData = checkMessageForExtensionsData(\n      message,\n      \"smart-reply\"\n    );\n    if (smartReplyData && smartReplyData.hasOwnProperty(\"error\") === false) {\n      this.setState({ replyPreview: message });\n    } else {\n      this.setState({ replyPreview: null });\n    }\n  };\n\n  //message is received or composed & sent\n  appendMessage = (message) => {\n    let messages = [...this.state.messageList];\n    messages = messages.concat(message);\n    this.setState({ messageList: messages, scrollToBottom: true });\n  };\n\n  //message status is updated\n  updateMessages = (messages) => {\n    this.setState({ messageList: messages });\n  };\n\n  //messages are fetched from backend\n  prependMessages = (messages) => {\n    const messageList = [...messages, ...this.state.messageList];\n    this.setState({ messageList: messageList, scrollToBottom: false });\n  };\n\n  //messages are deleted\n  removeMessages = (messages) => {\n    const deletedMessage = messages[0];\n    const messagelist = [...this.state.messageList];\n\n    let messageKey = messagelist.findIndex(\n      (message) => message.id === deletedMessage.id\n    );\n    if (messageKey > -1) {\n      console.log(\n        \"this.state.enableHideDeletedMessages\",\n        this.state.enableHideDeletedMessages\n      );\n      if (this.state.enableHideDeletedMessages) {\n        messagelist.splice(messageKey, 1);\n      } else {\n        let messageObj = { ...messagelist[messageKey] };\n        let newMessageObj = Object.assign({}, messageObj, deletedMessage);\n        messagelist.splice(messageKey, 1, newMessageObj);\n      }\n\n      this.setState({ messageList: messagelist, scrollToBottom: false });\n    }\n  };\n\n  getSenderMessageComponent = (message, key) => {\n    let component;\n\n    switch (message.type) {\n      case CometChat.MESSAGE_TYPE.TEXT:\n        component = (\n          <CometChatSenderTextMessageBubble\n            loggedInUser={this.loggedInUser}\n            key={key}\n            message={message}\n            actionGenerated={this.actionHandler}\n            {...this.props}\n          />\n        );\n        break;\n      case CometChat.MESSAGE_TYPE.IMAGE:\n        component = (\n          <CometChatSenderImageMessageBubble\n            loggedInUser={this.loggedInUser}\n            key={key}\n            message={message}\n            actionGenerated={this.actionHandler}\n            {...this.props}\n          />\n        );\n        break;\n      case CometChat.MESSAGE_TYPE.FILE:\n        component = (\n          <CometChatSenderFileMessageBubble\n            loggedInUser={this.loggedInUser}\n            key={key}\n            message={message}\n            actionGenerated={this.actionHandler}\n            {...this.props}\n          />\n        );\n        break;\n      case CometChat.MESSAGE_TYPE.VIDEO:\n        component = (\n          <CometChatSenderVideoMessageBubble\n            loggedInUser={this.loggedInUser}\n            key={key}\n            message={message}\n            actionGenerated={this.actionHandler}\n            {...this.props}\n          />\n        );\n        break;\n      case CometChat.MESSAGE_TYPE.AUDIO:\n        component = (\n          <CometChatSenderAudioMessageBubble\n            loggedInUser={this.loggedInUser}\n            key={key}\n            message={message}\n            actionGenerated={this.actionHandler}\n            {...this.props}\n          />\n        );\n        break;\n      default:\n        break;\n    }\n\n    return component;\n  };\n\n  getReceiverMessageComponent = (message, key) => {\n    let component;\n\n    switch (message.type) {\n      case \"message\":\n      case CometChat.MESSAGE_TYPE.TEXT:\n        component = (\n          <CometChatReceiverTextMessageBubble\n            loggedInUser={this.loggedInUser}\n            key={key}\n            message={message}\n            actionGenerated={this.actionHandler}\n            {...this.props}\n          />\n        );\n        break;\n      case CometChat.MESSAGE_TYPE.IMAGE:\n        component = (\n          <CometChatReceiverImageMessageBubble\n            loggedInUser={this.loggedInUser}\n            key={key}\n            message={message}\n            actionGenerated={this.actionHandler}\n            {...this.props}\n          />\n        );\n        break;\n      case CometChat.MESSAGE_TYPE.FILE:\n        component = (\n          <CometChatReceiverFileMessageBubble\n            loggedInUser={this.loggedInUser}\n            key={key}\n            message={message}\n            actionGenerated={this.actionHandler}\n            {...this.props}\n          />\n        );\n        break;\n      case CometChat.MESSAGE_TYPE.AUDIO:\n        component = (\n          <CometChatReceiverAudioMessageBubble\n            loggedInUser={this.loggedInUser}\n            key={key}\n            message={message}\n            actionGenerated={this.actionHandler}\n            {...this.props}\n          />\n        );\n        break;\n      case CometChat.MESSAGE_TYPE.VIDEO:\n        component = (\n          <CometChatReceiverVideoMessageBubble\n            loggedInUser={this.loggedInUser}\n            key={key}\n            message={message}\n            actionGenerated={this.actionHandler}\n            {...this.props}\n          />\n        );\n        break;\n      default:\n        break;\n    }\n\n    return component;\n  };\n\n  getSenderCustomMessageComponent = (message, key) => {\n    let component;\n\n    switch (message.type) {\n      case enums.CUSTOM_TYPE_POLL:\n        component = (\n          <CometChatSenderPollMessageBubble\n            loggedInUser={this.loggedInUser}\n            key={key}\n            message={message}\n            actionGenerated={this.props.actionGenerated}\n            {...this.props}\n          />\n        );\n        break;\n      case enums.CUSTOM_TYPE_STICKER:\n        component = (\n          <CometChatSenderStickerBubble\n            loggedInUser={this.loggedInUser}\n            key={key}\n            message={message}\n            actionGenerated={this.props.actionGenerated}\n            {...this.props}\n          />\n        );\n        break;\n      case enums.CUSTOM_TYPE_DOCUMENT:\n        component = (\n          <CometChatSenderDocumentBubble\n            loggedInUser={this.loggedInUser}\n            key={key}\n            message={message}\n            actionGenerated={this.props.actionGenerated}\n            {...this.props}\n          />\n        );\n        break;\n      case enums.CUSTOM_TYPE_WHITEBOARD:\n        component = (\n          <CometChatSenderWhiteboardBubble\n            loggedInUser={this.loggedInUser}\n            key={key}\n            message={message}\n            actionGenerated={this.props.actionGenerated}\n            {...this.props}\n          />\n        );\n        break;\n      case enums.CUSTOM_TYPE_MEETING:\n        component = (\n          <CometChatSenderDirectCallBubble\n            loggedInUser={this.loggedInUser}\n            key={key}\n            message={message}\n            actionGenerated={this.props.actionGenerated}\n            {...this.props}\n          />\n        );\n        break;\n      default:\n        break;\n    }\n\n    return component;\n  };\n\n  getReceiverCustomMessageComponent = (message, key) => {\n    let component;\n    switch (message.type) {\n      case enums.CUSTOM_TYPE_POLL:\n        component = (\n          <CometChatReceiverPollMessageBubble\n            loggedInUser={this.loggedInUser}\n            key={key}\n            message={message}\n            actionGenerated={this.props.actionGenerated}\n            {...this.props}\n          />\n        );\n        break;\n      case enums.CUSTOM_TYPE_STICKER:\n        component = (\n          <CometChatReceiverStickerMessageBubble\n            loggedInUser={this.loggedInUser}\n            key={key}\n            message={message}\n            actionGenerated={this.props.actionGenerated}\n            {...this.props}\n          />\n        );\n        break;\n      case enums.CUSTOM_TYPE_DOCUMENT:\n        component = (\n          <CometChatReceiverDocumentBubble\n            loggedInUser={this.loggedInUser}\n            key={key}\n            message={message}\n            actionGenerated={this.props.actionGenerated}\n            {...this.props}\n          />\n        );\n        break;\n      case enums.CUSTOM_TYPE_WHITEBOARD:\n        component = (\n          <CometChatReceiverWhiteboardBubble\n            loggedInUser={this.loggedInUser}\n            key={key}\n            message={message}\n            actionGenerated={this.props.actionGenerated}\n            {...this.props}\n          />\n        );\n        break;\n      case enums.CUSTOM_TYPE_MEETING:\n        component = (\n          <CometChatReceiverDirectCallBubble\n            loggedInUser={this.loggedInUser}\n            key={key}\n            message={message}\n            {...this.props}\n            enableMessageReaction={this.state.enableMessageReaction}\n          />\n        );\n        break;\n      default:\n        break;\n    }\n\n    return component;\n  };\n\n  getParentMessageComponent = (message) => {\n    let component = null;\n    const key = 1;\n\n    switch (message.category) {\n      case CometChat.CATEGORY_MESSAGE:\n        if (this.loggedInUser.uid === message.sender.uid) {\n          component = this.getSenderMessageComponent(message, key);\n        } else {\n          component = this.getReceiverMessageComponent(message, key);\n        }\n        break;\n      case CometChat.CATEGORY_CUSTOM:\n        if (this.loggedInUser.uid === message.sender.uid) {\n          component = this.getSenderCustomMessageComponent(message, key);\n        } else {\n          component = this.getReceiverCustomMessageComponent(message, key);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return component;\n  };\n\n  reactToMessage = (message) => {\n    this.setState({ messageToReact: message });\n\n    if (this.composerRef) {\n      this.composerRef.toggleEmojiPicker();\n    }\n  };\n\n  render() {\n    let parentMessage = this.getParentMessageComponent(\n      this.state.parentMessage\n    );\n\n    let seperator = (\n      <div css={messageSeparatorStyle(this.props)}>\n        <hr />\n      </div>\n    );\n    if (this.state.parentMessage.hasOwnProperty(\"replyCount\")) {\n      const replyCount = this.state.parentMessage.replyCount;\n      const replyText =\n        replyCount === 1\n          ? `${replyCount} ${Translator.translate(\"REPLY\", this.props.lang)}`\n          : `${replyCount} ${Translator.translate(\"REPLIES\", this.props.lang)}`;\n\n      seperator = (\n        <div\n          css={messageSeparatorStyle(this.context)}\n          className=\"message__separator\"\n        >\n          <span css={messageReplyStyle()} className=\"message__replies\">\n            {replyText}\n          </span>\n          <hr />\n        </div>\n      );\n    }\n\n    let originalImageView = null;\n    if (this.state.viewOriginalImage) {\n      originalImageView = (\n        <CometChatImageViewer\n          open={true}\n          close={() => this.toggleOriginalImageView(false)}\n          message={this.state.viewOriginalImage}\n          lang={this.props.lang}\n        />\n      );\n    }\n\n    let messageComposer = (\n      <CometChatMessageComposer\n        ref={(el) => {\n          this.composerRef = el;\n        }}\n        theme={this.props.theme}\n        lang={this.props.lang}\n        widgetsettings={this.props.widgetsettings}\n        parentMessageId={this.props.parentMessage.id}\n        messageToBeEdited={this.state.messageToBeEdited}\n        replyPreview={this.state.replyPreview}\n        messageToReact={this.state.messageToReact}\n        actionGenerated={this.actionHandler}\n      />\n    );\n\n    //if send messages feature is disabled\n    if (\n      (this.context.type === CometChat.ACTION_TYPE.TYPE_USER &&\n        this.state.enableSendingOneOnOneMessage === false) ||\n      (this.context.type === CometChat.ACTION_TYPE.TYPE_GROUP &&\n        this.state.enableSendingGroupMessage === false)\n    ) {\n      messageComposer = null;\n    }\n\n    return (\n      <React.Fragment>\n        <div css={wrapperStyle(this.context)} className=\"thread__chat\">\n          <div css={headerStyle(this.context)} className=\"chat__header\">\n            <div css={headerWrapperStyle()} className=\"header__wrapper\">\n              <div css={headerDetailStyle()} className=\"header__details\">\n                <h6 css={headerTitleStyle()} className=\"header__title\">\n                  {Translator.translate(\"THREAD\", this.props.lang)}\n                </h6>\n                <span css={headerNameStyle()} className=\"header__username\">\n                  {this.props.threadItem.name}\n                </span>\n              </div>\n              <div\n                css={headerCloseStyle(clearIcon, this.context)}\n                className=\"header__close\"\n                onClick={() =>\n                  this.props.actionGenerated(\n                    enums.ACTIONS[\"CLOSE_THREADED_MESSAGE\"]\n                  )\n                }\n              ></div>\n            </div>\n          </div>\n          <div\n            css={messageContainerStyle()}\n            className=\"chat__message__container\"\n          >\n            <div\n              css={parentMessageStyle(this.props.parentMessage)}\n              className=\"parent__message\"\n            >\n              {parentMessage}\n            </div>\n            {seperator}\n            <CometChatMessageList\n              theme={this.props.theme}\n              messages={this.state.messageList}\n              item={this.props.threadItem}\n              type={this.props.threadType}\n              scrollToBottom={this.state.scrollToBottom}\n              config={this.props.config}\n              widgetsettings={this.props.widgetsettings}\n              parentMessageId={this.props.parentMessage.id}\n              lang={this.props.lang}\n              actionGenerated={this.actionHandler}\n            />\n            {messageComposer}\n          </div>\n        </div>\n        {originalImageView}\n      </React.Fragment>\n    );\n  }\n}\n\n// Specifies the default values for props:\nCometChatMessageThread.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme,\n};\n\nCometChatMessageThread.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object,\n};\n\nexport { CometChatMessageThread };\n"]},"metadata":{},"sourceType":"module"}