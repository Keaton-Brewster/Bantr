{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Calls/CometChatOutgoingCall/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx, keyframes } from \"@emotion/core\";\nimport PropTypes from 'prop-types';\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CallScreenManager } from \"./controller\";\nimport { CometChatCallScreen } from \"../CometChatCallScreen\";\nimport { CometChatAvatar } from \"../../Shared\";\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport { SoundManager } from \"../../../util/SoundManager\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { theme } from \"../../../resources/theme\";\nimport { callScreenWrapperStyle, callScreenContainerStyle, headerStyle, headerDurationStyle, headerNameStyle, thumbnailWrapperStyle, thumbnailStyle, headerIconStyle, iconWrapperStyle, iconStyle, errorContainerStyle } from \"./style\";\nimport callIcon from \"./resources/end-call.svg\";\n\nclass CometChatOutgoingCall extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.callScreenUpdated = (key, call) => {\n      switch (key) {\n        case enums.OUTGOING_CALL_ACCEPTED:\n          //occurs at the caller end\n          this.outgoingCallAccepted(call);\n          break;\n\n        case enums.OUTGOING_CALL_REJECTED:\n          //occurs at the caller end, callee rejects the call\n          this.outgoingCallRejected(call);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.outgoingCallAccepted = call => {\n      if (this.state.outgoingCallScreen === true) {\n        this.props.actionGenerated(enums.ACTIONS[\"OUTGOING_CALL_ACCEPTED\"], call);\n        SoundManager.pause(enums.CONSTANTS.AUDIO[\"OUTGOING_CALL\"], this.context);\n        this.setState({\n          outgoingCallScreen: false,\n          callInProgress: call,\n          errorScreen: false,\n          errorMessage: null\n        });\n\n        if (this.context) {\n          this.context.setCallInProgress(call, enums.CONSTANTS[\"OUTGOING_DEFAULT_CALLING\"]);\n        }\n      }\n    };\n\n    this.outgoingCallRejected = call => {\n      SoundManager.pause(enums.CONSTANTS.AUDIO[\"OUTGOING_CALL\"], this.context);\n\n      if (call.hasOwnProperty(\"status\") && call.status === CometChat.CALL_STATUS.BUSY) {\n        //show busy message.\n        const errorMessage = `${call.sender.name} ${Translator.translate(\"ON_ANOTHER_CALL\", this.props.lang)}`;\n        this.setState({\n          errorScreen: true,\n          errorMessage: errorMessage\n        });\n        this.clearCallInProgress();\n      } else {\n        this.props.actionGenerated(enums.ACTIONS[\"OUTGOING_CALL_REJECTED\"], call);\n        this.setState({\n          outgoingCallScreen: false,\n          callInProgress: null,\n          errorScreen: false,\n          errorMessage: null\n        });\n        this.clearCallInProgress();\n      }\n    };\n\n    this.startCall = call => {\n      SoundManager.play(enums.CONSTANTS.AUDIO[\"OUTGOING_CALL\"], this.context);\n      this.setState({\n        outgoingCallScreen: true,\n        callInProgress: call,\n        errorScreen: false,\n        errorMessage: null\n      });\n    };\n\n    this.actionHandler = (action, call) => {\n      switch (action) {\n        case enums.ACTIONS[\"OUTGOING_CALL_ENDED\"]:\n          this.setState({\n            callInProgress: null\n          });\n          break;\n\n        case enums.ACTIONS[\"USER_JOINED_CALL\"]:\n        case enums.ACTIONS[\"USER_LEFT_CALL\"]:\n          this.props.actionGenerated(action, call);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.cancelCall = () => {\n      SoundManager.pause(enums.CONSTANTS.AUDIO[\"OUTGOING_CALL\"], this.context); //if user busy error, just close the callscreen, no need to reject the call\n\n      if (this.state.errorScreen) {\n        this.setState({\n          errorScreen: false,\n          errorMessage: null,\n          outgoingCallScreen: false,\n          callInProgress: null\n        });\n        this.clearCallInProgress();\n        this.props.actionGenerated(enums.ACTIONS[\"OUTGOING_CALL_CANCELLED\"]);\n      } else {\n        CometChat.rejectCall(this.state.callInProgress.sessionId, CometChat.CALL_STATUS.CANCELLED).then(call => {\n          this.setState({\n            outgoingCallScreen: false,\n            callInProgress: null\n          });\n          this.clearCallInProgress();\n          this.props.actionGenerated(enums.ACTIONS[\"OUTGOING_CALL_CANCELLED\"]);\n        }).catch(error => {\n          this.setState({\n            outgoingCallScreen: false,\n            callInProgress: null\n          });\n          this.clearCallInProgress();\n        });\n      }\n    };\n\n    this.clearCallInProgress = () => {\n      if (this.context) {\n        this.context.setCallInProgress(null, \"\");\n      }\n    };\n\n    this.callScreenFrame = /*#__PURE__*/React.createRef();\n    this.state = {\n      errorScreen: false,\n      errorMessage: null,\n      outgoingCallScreen: false,\n      callInProgress: null\n    };\n    CometChat.getLoggedinUser().then(user => this.loggedInUser = user).catch(error => {\n      console.error(error);\n    });\n  }\n\n  componentDidMount() {\n    this.CallScreenManager = new CallScreenManager();\n    this.CallScreenManager.attachListeners(this.callScreenUpdated);\n  }\n\n  componentWillUnmount() {\n    this.CallScreenManager.removeListeners();\n    this.CallScreenManager = null;\n  }\n\n  render() {\n    let callScreen = null,\n        errorScreen = null;\n\n    if (this.state.callInProgress) {\n      let avatar = jsx(CometChatAvatar, {\n        user: this.state.callInProgress.receiver,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 18\n        }\n      });\n\n      if (this.state.errorScreen) {\n        errorScreen = jsx(\"div\", {\n          css: errorContainerStyle(),\n          className: \"callscreen__error__wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 6\n          }\n        }, jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 78\n          }\n        }, this.state.errorMessage));\n      }\n\n      if (this.state.outgoingCallScreen) {\n        callScreen = jsx(\"div\", {\n          css: callScreenWrapperStyle(this.props, keyframes),\n          className: \"callscreen__wrapper\",\n          ref: el => {\n            this.callScreenFrame = el;\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 6\n          }\n        }, jsx(\"div\", {\n          css: callScreenContainerStyle(),\n          className: \"callscreen__container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 7\n          }\n        }, jsx(\"div\", {\n          css: headerStyle(),\n          className: \"callscreen__header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 8\n          }\n        }, jsx(\"span\", {\n          css: headerDurationStyle(),\n          className: \"header__calling\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 9\n          }\n        }, Translator.translate(\"CALLING\", this.props.lang)), jsx(\"h6\", {\n          css: headerNameStyle(),\n          className: \"header__name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 9\n          }\n        }, this.state.callInProgress.receiver.name)), jsx(\"div\", {\n          css: thumbnailWrapperStyle(),\n          className: \"callscreen__thumbnail__wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 8\n          }\n        }, jsx(\"div\", {\n          css: thumbnailStyle(),\n          className: \"callscreen__thumbnail\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 9\n          }\n        }, avatar)), errorScreen, jsx(\"div\", {\n          css: headerIconStyle(),\n          className: \"callscreen__icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 8\n          }\n        }, jsx(\"div\", {\n          css: iconWrapperStyle(),\n          className: \"icon__block\",\n          onClick: this.cancelCall,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 9\n          }\n        }, jsx(\"div\", {\n          css: iconStyle(callIcon),\n          className: \"icon icon__end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 10\n          }\n        }, jsx(\"i\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 68\n          }\n        }))))));\n      } else {\n        callScreen = jsx(CometChatCallScreen, {\n          loggedInUser: this.loggedInUser,\n          call: this.state.callInProgress,\n          actionGenerated: this.actionHandler,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 19\n          }\n        });\n      }\n    }\n\n    return callScreen;\n  }\n\n} // Specifies the default values for props:\n\n\nCometChatOutgoingCall.contextType = CometChatContext;\nCometChatOutgoingCall.defaultProps = {\n  lang: Translator.getDefaultLanguage(),\n  theme: theme\n};\nCometChatOutgoingCall.propTypes = {\n  lang: PropTypes.string,\n  theme: PropTypes.object\n};\nexport { CometChatOutgoingCall };","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChatWorkspace/src/components/Calls/CometChatOutgoingCall/index.js"],"names":["React","jsx","keyframes","PropTypes","CometChat","CallScreenManager","CometChatCallScreen","CometChatAvatar","CometChatContext","enums","SoundManager","Translator","theme","callScreenWrapperStyle","callScreenContainerStyle","headerStyle","headerDurationStyle","headerNameStyle","thumbnailWrapperStyle","thumbnailStyle","headerIconStyle","iconWrapperStyle","iconStyle","errorContainerStyle","CometChatOutgoingCall","PureComponent","constructor","props","callScreenUpdated","key","call","OUTGOING_CALL_ACCEPTED","outgoingCallAccepted","OUTGOING_CALL_REJECTED","outgoingCallRejected","state","outgoingCallScreen","actionGenerated","ACTIONS","pause","CONSTANTS","AUDIO","context","setState","callInProgress","errorScreen","errorMessage","setCallInProgress","hasOwnProperty","status","CALL_STATUS","BUSY","sender","name","translate","lang","clearCallInProgress","startCall","play","actionHandler","action","cancelCall","rejectCall","sessionId","CANCELLED","then","catch","error","callScreenFrame","createRef","getLoggedinUser","user","loggedInUser","console","componentDidMount","attachListeners","componentWillUnmount","removeListeners","render","callScreen","avatar","receiver","el","callIcon","contextType","defaultProps","getDefaultLanguage","propTypes","string","object"],"mappings":"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","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx, keyframes } from \"@emotion/core\";\nimport PropTypes from 'prop-types';\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { CallScreenManager } from \"./controller\";\n\nimport { CometChatCallScreen } from \"../CometChatCallScreen\";\nimport { CometChatAvatar } from \"../../Shared\";\n\nimport { CometChatContext } from \"../../../util/CometChatContext\";\nimport * as enums from \"../../../util/enums.js\";\nimport { SoundManager } from \"../../../util/SoundManager\";\n\nimport Translator from \"../../../resources/localization/translator\";\nimport { theme } from \"../../../resources/theme\";\n\nimport {\n\tcallScreenWrapperStyle,\n\tcallScreenContainerStyle,\n\theaderStyle,\n\theaderDurationStyle,\n\theaderNameStyle,\n\tthumbnailWrapperStyle,\n\tthumbnailStyle,\n\theaderIconStyle,\n\ticonWrapperStyle,\n\ticonStyle,\n\terrorContainerStyle\n} from \"./style\"; \n\nimport callIcon from \"./resources/end-call.svg\";\n\nclass CometChatOutgoingCall extends React.PureComponent {\n\n\tstatic contextType = CometChatContext;\n\n\tconstructor(props) {\n\n\t\tsuper(props);\n\n\t\tthis.callScreenFrame = React.createRef();\n\n\t\tthis.state = {\n\t\t\terrorScreen: false,\n\t\t\terrorMessage: null,\n\t\t\toutgoingCallScreen: false,\n\t\t\tcallInProgress: null,\n\t\t}\n\n\t\tCometChat.getLoggedinUser().then(user => this.loggedInUser = user).catch(error => {\n\t\t\tconsole.error(error);\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\n\t\tthis.CallScreenManager = new CallScreenManager();\n\t\tthis.CallScreenManager.attachListeners(this.callScreenUpdated);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.CallScreenManager.removeListeners();\n\t\tthis.CallScreenManager = null;\n\t}\n\n\tcallScreenUpdated = (key, call) => {\n\n\t\tswitch (key) {\n\n\t\t\tcase enums.OUTGOING_CALL_ACCEPTED://occurs at the caller end\n\t\t\t\tthis.outgoingCallAccepted(call);\n\t\t\tbreak;\n\t\t\tcase enums.OUTGOING_CALL_REJECTED://occurs at the caller end, callee rejects the call\n\t\t\t\tthis.outgoingCallRejected(call);\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t}\n\n\toutgoingCallAccepted = (call) => {\n\n\t\tif (this.state.outgoingCallScreen === true) {\n\n\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"OUTGOING_CALL_ACCEPTED\"], call);\n\n\t\t\tSoundManager.pause(enums.CONSTANTS.AUDIO[\"OUTGOING_CALL\"], this.context);\n\t\t\tthis.setState({ outgoingCallScreen: false, callInProgress: call, errorScreen: false, errorMessage: null });\n\n\t\t\tif(this.context) {\n\t\t\t\tthis.context.setCallInProgress(call, enums.CONSTANTS[\"OUTGOING_DEFAULT_CALLING\"]);\n\t\t\t}\n\t\t}\n\t}\n\n\toutgoingCallRejected = (call) => {\n\n\t\tSoundManager.pause(enums.CONSTANTS.AUDIO[\"OUTGOING_CALL\"], this.context);\n\t\tif (call.hasOwnProperty(\"status\") && call.status === CometChat.CALL_STATUS.BUSY) {\n\n\t\t\t//show busy message.\n\t\t\tconst errorMessage = `${call.sender.name} ${Translator.translate(\"ON_ANOTHER_CALL\", this.props.lang)}`;\n\t\t\tthis.setState({ errorScreen: true, errorMessage: errorMessage });\n\t\t\tthis.clearCallInProgress();\n\n\t\t} else {\n\n\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"OUTGOING_CALL_REJECTED\"], call);\n\t\t\tthis.setState({ outgoingCallScreen: false, callInProgress: null, errorScreen: false, errorMessage: null });\n\t\t\tthis.clearCallInProgress();\n\n\t\t}\n\t}\n\n\tstartCall = (call) => {\n\n\t\tSoundManager.play(enums.CONSTANTS.AUDIO[\"OUTGOING_CALL\"], this.context);\n\t\tthis.setState({ outgoingCallScreen: true, callInProgress: call, errorScreen: false, errorMessage: null });\n\t}\n\n\tactionHandler = (action, call) => {\n\n\t\tswitch (action) {\n\n\t\t\tcase enums.ACTIONS[\"OUTGOING_CALL_ENDED\"]:\n\t\t\t\tthis.setState({ callInProgress: null });\n\t\t\tbreak;\n\t\t\tcase enums.ACTIONS[\"USER_JOINED_CALL\"]:\n\t\t\tcase enums.ACTIONS[\"USER_LEFT_CALL\"]:\n\t\t\t\tthis.props.actionGenerated(action, call);\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t//cancelling an outgoing call\n\tcancelCall = () => {\n\n\t\tSoundManager.pause(enums.CONSTANTS.AUDIO[\"OUTGOING_CALL\"], this.context);\n\t\t//if user busy error, just close the callscreen, no need to reject the call\n\t\tif (this.state.errorScreen) {\n\n\t\t\tthis.setState({ errorScreen: false, errorMessage: null, outgoingCallScreen: false, callInProgress: null });\n\t\t\tthis.clearCallInProgress();\n\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"OUTGOING_CALL_CANCELLED\"]);\n\n\t\t} else {\n\n\t\t\tCometChat.rejectCall(this.state.callInProgress.sessionId, CometChat.CALL_STATUS.CANCELLED).then(call => {\n\n\t\t\t\tthis.setState({ outgoingCallScreen: false, callInProgress: null });\n\t\t\t\tthis.clearCallInProgress();\n\t\t\t\tthis.props.actionGenerated(enums.ACTIONS[\"OUTGOING_CALL_CANCELLED\"]);\n\n\t\t\t}).catch(error => {\n\n\t\t\t\tthis.setState({ outgoingCallScreen: false, callInProgress: null });\n\t\t\t\tthis.clearCallInProgress();\n\n\t\t\t});\n\t\t}\n\t}\n\n\tclearCallInProgress = () => {\n\t\tif (this.context) {\n\t\t\tthis.context.setCallInProgress(null, \"\");\n\t\t}\n\t}\n\n\trender() {\n\n\t\tlet callScreen = null, errorScreen = null;\n\t\tif (this.state.callInProgress) {\n\n\t\t\tlet avatar = (<CometChatAvatar user={this.state.callInProgress.receiver} />);\n\t\t\tif (this.state.errorScreen) {\n\t\t\t\terrorScreen = (\n\t\t\t\t\t<div css={errorContainerStyle()} className=\"callscreen__error__wrapper\"><div>{this.state.errorMessage}</div></div>\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (this.state.outgoingCallScreen) {\n\t\t\t\tcallScreen = (\n\t\t\t\t\t<div css={callScreenWrapperStyle(this.props, keyframes)} className=\"callscreen__wrapper\" ref={el => { this.callScreenFrame = el; }}>\n\t\t\t\t\t\t<div css={callScreenContainerStyle()} className=\"callscreen__container\">\n\t\t\t\t\t\t\t<div css={headerStyle()} className=\"callscreen__header\">\n\t\t\t\t\t\t\t\t<span css={headerDurationStyle()} className=\"header__calling\">{Translator.translate(\"CALLING\", this.props.lang)}</span>\n\t\t\t\t\t\t\t\t<h6 css={headerNameStyle()} className=\"header__name\">{this.state.callInProgress.receiver.name}</h6>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div css={thumbnailWrapperStyle()} className=\"callscreen__thumbnail__wrapper\">\n\t\t\t\t\t\t\t\t<div css={thumbnailStyle()} className=\"callscreen__thumbnail\">{avatar}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{errorScreen}\n\t\t\t\t\t\t\t<div css={headerIconStyle()} className=\"callscreen__icons\">\n\t\t\t\t\t\t\t\t<div css={iconWrapperStyle()} className=\"icon__block\" onClick={this.cancelCall}>\n\t\t\t\t\t\t\t\t\t<div css={iconStyle(callIcon)} className=\"icon icon__end\"><i></i></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tcallScreen = (<CometChatCallScreen loggedInUser={this.loggedInUser} call={this.state.callInProgress} actionGenerated={this.actionHandler} />);\n\t\t\t}\n\t\t}\n\t\treturn callScreen;\n\t}\n}\n\n// Specifies the default values for props:\nCometChatOutgoingCall.defaultProps = {\n\tlang: Translator.getDefaultLanguage(),\n\ttheme: theme,\n};\n\nCometChatOutgoingCall.propTypes = {\n\tlang: PropTypes.string,\n\ttheme: PropTypes.object,\n}\n\nexport { CometChatOutgoingCall };"]},"metadata":{},"sourceType":"module"}