{"ast":null,"code":"var _jsxFileName = \"/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Shared/CometChatToastNotification/index.js\";\nimport React from \"react\";\n/** @jsxRuntime classic */\n\n/** @jsx jsx */\n\nimport { jsx, keyframes } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\nimport Translator from \"../../../resources/localization/translator\";\nimport { theme } from \"../../../resources/theme\";\nimport { notificationContainerStyle, notificationStyle, notificationIconStyle, notificationMessageContainerStyle, notificationMessageStyle, notificationCloseButtonStyle, iconStyle } from \"./style\";\nimport closeIcon from \"./resources/close-circle-filled.svg\";\nimport successIcon from \"./resources/checkmark-filled.svg\";\nimport errorIcon from \"./resources/warning-filled.svg\";\nimport infoIcon from \"./resources/info-filled.svg\";\nimport warningIcon from \"./resources/warning-filled.svg\";\nexport class CometChatToastNotification extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentWillUnmount = () => {\n      this._isMounted = false;\n      this.clearAutoDismiss();\n    };\n\n    this.setInfo = message => {\n      if (this._isMounted) {\n        this.setState({\n          type: \"INFO\",\n          message: message,\n          icon: infoIcon\n        });\n        this.setAutoDismiss();\n      }\n    };\n\n    this.setError = message => {\n      if (this._isMounted) {\n        this.setState({\n          type: \"ERROR\",\n          message: message,\n          icon: errorIcon\n        }); //this.setAutoDismiss();\n      }\n    };\n\n    this.setSuccess = message => {\n      if (this._isMounted) {\n        this.setState({\n          type: \"SUCCESS\",\n          message: message,\n          icon: successIcon\n        });\n        this.setAutoDismiss();\n      }\n    };\n\n    this.setWarning = message => {\n      if (this._isMounted) {\n        this.setState({\n          type: \"WARNING\",\n          message: message,\n          icon: warningIcon\n        });\n        this.setAutoDismiss();\n      }\n    };\n\n    this.setAutoDismiss = () => {\n      this.clearAutoDismiss();\n\n      if (this.props.autoDelete) {\n        this.interval = setTimeout(() => this.deleteToast(), this.props.dismissTime);\n      }\n    };\n\n    this.clearAutoDismiss = () => {\n      clearTimeout(this.interval);\n    };\n\n    this.deleteToast = () => {\n      this.setState({\n        type: \"\",\n        message: \"\",\n        icon: \"\"\n      });\n    };\n\n    this._isMounted = false;\n    this.state = {\n      type: \"\",\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n\n  render() {\n    if (!this.state.type.trim().length || !this.state.message.trim().length) {\n      return null;\n    }\n\n    const messageClassName = `toast__message message-${CometChatToastNotification.types[this.state.type]}`;\n    const iconClassName = `toast__icon icon-${CometChatToastNotification.types[this.state.type]}`;\n    let toastIcon = this.state.icon.trim().length ? jsx(\"div\", {\n      css: notificationIconStyle(),\n      className: iconClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, jsx(\"i\", {\n      css: iconStyle(this.state.icon, this.props.theme),\n      title: Translator.translate(\"CLOSE\", this.props.lang),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    })) : null;\n    return jsx(\"div\", {\n      css: notificationContainerStyle(this.props, keyframes),\n      className: \"toast__notification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, jsx(\"div\", {\n      css: notificationStyle(this.props, this.state, keyframes, CometChatToastNotification),\n      className: \"toast__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, toastIcon, jsx(\"div\", {\n      css: notificationMessageContainerStyle(),\n      className: messageClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, jsx(\"p\", {\n      css: notificationMessageStyle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, Translator.translate(this.state.message, this.props.lang))), jsx(\"button\", {\n      css: notificationCloseButtonStyle(),\n      type: \"button\",\n      onClick: this.deleteToast,\n      className: \"toast__close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, jsx(\"i\", {\n      css: iconStyle(closeIcon, this.props.theme),\n      title: Translator.translate(\"CLOSE\", this.props.lang),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\nCometChatToastNotification.types = {\n  \"INFO\": \"info\",\n  \"WARNING\": \"warning\",\n  \"SUCCESS\": \"success\",\n  \"ERROR\": \"error\"\n};\nCometChatToastNotification.defaultProps = {\n  type: \"\",\n  message: \"\",\n  icon: \"\",\n  position: \"center\",\n  autoDelete: true,\n  dismissTime: 3000,\n  lang: Translator.getDefaultLanguage(),\n  theme: theme\n};\nCometChatToastNotification.propTypes = {\n  type: PropTypes.oneOf(Object.values(CometChatToastNotification.types).concat(\"\")),\n  message: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  position: PropTypes.oneOf([\"top-right\", \"bottom-right\", \"top-left\", \"bottom-left\", \"center\"]),\n  autoDelete: PropTypes.bool,\n  dismissTime: PropTypes.number,\n  lang: PropTypes.string,\n  theme: PropTypes.object\n};","map":{"version":3,"sources":["/Users/timmereeestes/Desktop/Keaton/family_messaging/client/src/CometChat/src/components/Shared/CometChatToastNotification/index.js"],"names":["React","jsx","keyframes","PropTypes","Translator","theme","notificationContainerStyle","notificationStyle","notificationIconStyle","notificationMessageContainerStyle","notificationMessageStyle","notificationCloseButtonStyle","iconStyle","CometChatToastNotification","Component","constructor","props","componentWillUnmount","_isMounted","clearAutoDismiss","setInfo","message","setState","type","icon","infoIcon","setAutoDismiss","setError","errorIcon","setSuccess","successIcon","setWarning","warningIcon","autoDelete","interval","setTimeout","deleteToast","dismissTime","clearTimeout","state","componentDidMount","render","trim","length","messageClassName","types","iconClassName","toastIcon","translate","lang","closeIcon","defaultProps","position","getDefaultLanguage","propTypes","oneOf","Object","values","concat","string","isRequired","bool","number","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;;AACA;;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,eAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,UAAP,MAAuB,4CAAvB;AACA,SAASC,KAAT,QAAsB,0BAAtB;AAEA,SACIC,0BADJ,EAEIC,iBAFJ,EAGIC,qBAHJ,EAIIC,iCAJJ,EAKIC,wBALJ,EAMIC,4BANJ,EAOIC,SAPJ,QAQO,SARP;;;;;;AAgBA,OAAO,MAAMC,0BAAN,SAAyCb,KAAK,CAACc,SAA/C,CAAyD;AAU5DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEf,UAAMA,KAAN;;AAFe,SAenBC,oBAfmB,GAeI,MAAM;AAEzB,WAAKC,UAAL,GAAkB,KAAlB;AACA,WAAKC,gBAAL;AACH,KAnBkB;;AAAA,SAqBnBC,OArBmB,GAqBRC,OAAD,IAAa;AAEnB,UAAI,KAAKH,UAAT,EAAqB;AAEjB,aAAKI,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAE,MAAR;AAAgBF,UAAAA,OAAO,EAAEA,OAAzB;AAAkCG,UAAAA,IAAI,EAAEC;AAAxC,SAAd;AACA,aAAKC,cAAL;AACH;AACJ,KA5BkB;;AAAA,SA8BnBC,QA9BmB,GA8BPN,OAAD,IAAa;AAEpB,UAAI,KAAKH,UAAT,EAAqB;AAEjB,aAAKI,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAE,OAAR;AAAiBF,UAAAA,OAAO,EAAEA,OAA1B;AAAmCG,UAAAA,IAAI,EAAEI;AAAzC,SAAd,EAFiB,CAGjB;AACH;AACJ,KArCkB;;AAAA,SAuCnBC,UAvCmB,GAuCLR,OAAD,IAAa;AAEtB,UAAI,KAAKH,UAAT,EAAqB;AAEjB,aAAKI,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAE,SAAR;AAAmBF,UAAAA,OAAO,EAAEA,OAA5B;AAAqCG,UAAAA,IAAI,EAAEM;AAA3C,SAAd;AACA,aAAKJ,cAAL;AACH;AACJ,KA9CkB;;AAAA,SAgDnBK,UAhDmB,GAgDLV,OAAD,IAAa;AAEtB,UAAI,KAAKH,UAAT,EAAqB;AAEjB,aAAKI,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAE,SAAR;AAAmBF,UAAAA,OAAO,EAAEA,OAA5B;AAAqCG,UAAAA,IAAI,EAAEQ;AAA3C,SAAd;AACA,aAAKN,cAAL;AACH;AACJ,KAvDkB;;AAAA,SAyDnBA,cAzDmB,GAyDF,MAAM;AAEnB,WAAKP,gBAAL;;AAEA,UAAI,KAAKH,KAAL,CAAWiB,UAAf,EAA2B;AACvB,aAAKC,QAAL,GAAgBC,UAAU,CAAC,MAAM,KAAKC,WAAL,EAAP,EAA2B,KAAKpB,KAAL,CAAWqB,WAAtC,CAA1B;AACH;AACJ,KAhEkB;;AAAA,SAkEnBlB,gBAlEmB,GAkEA,MAAM;AACrBmB,MAAAA,YAAY,CAAC,KAAKJ,QAAN,CAAZ;AACH,KApEkB;;AAAA,SAsEnBE,WAtEmB,GAsEL,MAAM;AAChB,WAAKd,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE,EAAR;AAAYF,QAAAA,OAAO,EAAE,EAArB;AAAyBG,QAAAA,IAAI,EAAE;AAA/B,OAAd;AACH,KAxEkB;;AAIf,SAAKN,UAAL,GAAkB,KAAlB;AACA,SAAKqB,KAAL,GAAa;AACThB,MAAAA,IAAI,EAAE,EADG;AAETF,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIH;;AAEDmB,EAAAA,iBAAiB,GAAG;AAChB,SAAKtB,UAAL,GAAkB,IAAlB;AACH;;AA6DDuB,EAAAA,MAAM,GAAG;AAEL,QAAI,CAAC,KAAKF,KAAL,CAAWhB,IAAX,CAAgBmB,IAAhB,GAAuBC,MAAxB,IAAkC,CAAC,KAAKJ,KAAL,CAAWlB,OAAX,CAAmBqB,IAAnB,GAA0BC,MAAjE,EAAyE;AACrE,aAAO,IAAP;AACH;;AAED,UAAMC,gBAAgB,GAAI,0BAAyB/B,0BAA0B,CAACgC,KAA3B,CAAiC,KAAKN,KAAL,CAAWhB,IAA5C,CAAkD,EAArG;AACA,UAAMuB,aAAa,GAAI,oBAAmBjC,0BAA0B,CAACgC,KAA3B,CAAiC,KAAKN,KAAL,CAAWhB,IAA5C,CAAkD,EAA5F;AACA,QAAIwB,SAAS,GAAI,KAAKR,KAAL,CAAWf,IAAX,CAAgBkB,IAAhB,GAAuBC,MAAxB,GAEZ;AAAK,MAAA,GAAG,EAAEnC,qBAAqB,EAA/B;AAAmC,MAAA,SAAS,EAAEsC,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,GAAG,EAAElC,SAAS,CAAC,KAAK2B,KAAL,CAAWf,IAAZ,EAAkB,KAAKR,KAAL,CAAWX,KAA7B,CAAjB;AAAsD,MAAA,KAAK,EAAED,UAAU,CAAC4C,SAAX,CAAqB,OAArB,EAA8B,KAAKhC,KAAL,CAAWiC,IAAzC,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFY,GAKZ,IALJ;AAOA,WACI;AAAK,MAAA,GAAG,EAAE3C,0BAA0B,CAAC,KAAKU,KAAN,EAAad,SAAb,CAApC;AAA6D,MAAA,SAAS,EAAC,qBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAEK,iBAAiB,CAAC,KAAKS,KAAN,EAAa,KAAKuB,KAAlB,EAAyBrC,SAAzB,EAAoCW,0BAApC,CAA3B;AAA4F,MAAA,SAAS,EAAC,kBAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKkC,SADL,EAEI;AAAK,MAAA,GAAG,EAAEtC,iCAAiC,EAA3C;AAA+C,MAAA,SAAS,EAAEmC,gBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,GAAG,EAAElC,wBAAwB,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCN,UAAU,CAAC4C,SAAX,CAAqB,KAAKT,KAAL,CAAWlB,OAAhC,EAAyC,KAAKL,KAAL,CAAWiC,IAApD,CAArC,CADJ,CAFJ,EAKI;AAAQ,MAAA,GAAG,EAAEtC,4BAA4B,EAAzC;AAA6C,MAAA,IAAI,EAAC,QAAlD;AAA2D,MAAA,OAAO,EAAE,KAAKyB,WAAzE;AAAsF,MAAA,SAAS,EAAC,cAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,GAAG,EAAExB,SAAS,CAACsC,SAAD,EAAY,KAAKlC,KAAL,CAAWX,KAAvB,CAAjB;AAAgD,MAAA,KAAK,EAAED,UAAU,CAAC4C,SAAX,CAAqB,OAArB,EAA8B,KAAKhC,KAAL,CAAWiC,IAAzC,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALJ,CADJ,CADJ;AAaH;;AAhH2D;AAAnDpC,0B,CAGFgC,K,GAAQ;AACX,UAAQ,MADG;AAEX,aAAW,SAFA;AAGX,aAAW,SAHA;AAIX,WAAS;AAJE,C;AAgHnBhC,0BAA0B,CAACsC,YAA3B,GAA0C;AACzC5B,EAAAA,IAAI,EAAE,EADmC;AAEzCF,EAAAA,OAAO,EAAE,EAFgC;AAGzCG,EAAAA,IAAI,EAAE,EAHmC;AAIzC4B,EAAAA,QAAQ,EAAE,QAJ+B;AAKzCnB,EAAAA,UAAU,EAAE,IAL6B;AAMzCI,EAAAA,WAAW,EAAE,IAN4B;AAOzCY,EAAAA,IAAI,EAAE7C,UAAU,CAACiD,kBAAX,EAPmC;AAQzChD,EAAAA,KAAK,EAAEA;AARkC,CAA1C;AAWAQ,0BAA0B,CAACyC,SAA3B,GAAuC;AACtC/B,EAAAA,IAAI,EAAEpB,SAAS,CAACoD,KAAV,CAAgBC,MAAM,CAACC,MAAP,CAAc5C,0BAA0B,CAACgC,KAAzC,EAAgDa,MAAhD,CAAuD,EAAvD,CAAhB,CADgC;AAEtCrC,EAAAA,OAAO,EAAElB,SAAS,CAACwD,MAAV,CAAiBC,UAFY;AAGtCpC,EAAAA,IAAI,EAAErB,SAAS,CAACwD,MAAV,CAAiBC,UAHe;AAItCR,EAAAA,QAAQ,EAAEjD,SAAS,CAACoD,KAAV,CAAgB,CAAC,WAAD,EAAc,cAAd,EAA8B,UAA9B,EAA0C,aAA1C,EAAyD,QAAzD,CAAhB,CAJ4B;AAKtCtB,EAAAA,UAAU,EAAE9B,SAAS,CAAC0D,IALgB;AAMtCxB,EAAAA,WAAW,EAAElC,SAAS,CAAC2D,MANe;AAOtCb,EAAAA,IAAI,EAAE9C,SAAS,CAACwD,MAPsB;AAQtCtD,EAAAA,KAAK,EAAEF,SAAS,CAAC4D;AARqB,CAAvC","sourcesContent":["import React from \"react\";\n/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx, keyframes } from \"@emotion/core\";\nimport PropTypes from \"prop-types\";\n\nimport Translator from \"../../../resources/localization/translator\";\nimport { theme } from \"../../../resources/theme\";\n\nimport {\n    notificationContainerStyle,\n    notificationStyle,\n    notificationIconStyle,\n    notificationMessageContainerStyle,\n    notificationMessageStyle,\n    notificationCloseButtonStyle,\n    iconStyle\n} from \"./style\";\n\nimport closeIcon from \"./resources/close-circle-filled.svg\";\nimport successIcon from \"./resources/checkmark-filled.svg\";\nimport errorIcon from \"./resources/warning-filled.svg\";\nimport infoIcon from \"./resources/info-filled.svg\";\nimport warningIcon from \"./resources/warning-filled.svg\";\n\nexport class CometChatToastNotification extends React.Component {\n\n    interval;\n    static types = {\n        \"INFO\": \"info\",\n        \"WARNING\": \"warning\",\n        \"SUCCESS\": \"success\",\n        \"ERROR\": \"error\",\n    }\n\n    constructor(props) {\n\n        super(props);\n\n        this._isMounted = false;\n        this.state = { \n            type: \"\",\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n    }\n\n    componentWillUnmount = () => {\n\n        this._isMounted = false;\n        this.clearAutoDismiss();\n    }\n\n    setInfo = (message) => {\n\n        if (this._isMounted) {\n\n            this.setState({ type: \"INFO\", message: message, icon: infoIcon });\n            this.setAutoDismiss();\n        }\n    }\n\n    setError = (message) => {\n        \n        if (this._isMounted) {\n\n            this.setState({ type: \"ERROR\", message: message, icon: errorIcon });\n            //this.setAutoDismiss();\n        }\n    }\n\n    setSuccess = (message) => {\n\n        if (this._isMounted) {\n\n            this.setState({ type: \"SUCCESS\", message: message, icon: successIcon });\n            this.setAutoDismiss();\n        }\n    }\n\n    setWarning = (message) => {\n\n        if (this._isMounted) {\n\n            this.setState({ type: \"WARNING\", message: message, icon: warningIcon });\n            this.setAutoDismiss();\n        }\n    }\n\n    setAutoDismiss = () => {\n\n        this.clearAutoDismiss();\n        \n        if (this.props.autoDelete) {\n            this.interval = setTimeout(() => this.deleteToast(), this.props.dismissTime);\n        }\n    }\n\n    clearAutoDismiss = () => {\n        clearTimeout(this.interval);\n    }\n\n    deleteToast = () => {\n        this.setState({ type: \"\", message: \"\", icon: \"\" });\n    }\n\n    render() {\n\n        if (!this.state.type.trim().length || !this.state.message.trim().length) {\n            return null;\n        }\n\n        const messageClassName = `toast__message message-${CometChatToastNotification.types[this.state.type]}`;\n        const iconClassName = `toast__icon icon-${CometChatToastNotification.types[this.state.type]}`;\n        let toastIcon = (this.state.icon.trim().length) ? (\n\n            <div css={notificationIconStyle()} className={iconClassName}>\n                <i css={iconStyle(this.state.icon, this.props.theme)} title={Translator.translate(\"CLOSE\", this.props.lang)}></i>\n            </div>\n        ) : null;\n\n        return (\n            <div css={notificationContainerStyle(this.props, keyframes)} className=\"toast__notification\">\n                <div css={notificationStyle(this.props, this.state, keyframes, CometChatToastNotification)} className=\"toast__container\">\n                    {toastIcon}\n                    <div css={notificationMessageContainerStyle()} className={messageClassName}>\n                        <p css={notificationMessageStyle()}>{Translator.translate(this.state.message, this.props.lang)}</p>\n                    </div>\n                    <button css={notificationCloseButtonStyle()} type=\"button\" onClick={this.deleteToast} className=\"toast__close\">\n                        <i css={iconStyle(closeIcon, this.props.theme)} title={Translator.translate(\"CLOSE\", this.props.lang)}></i>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nCometChatToastNotification.defaultProps = {\n\ttype: \"\",\n\tmessage: \"\",\n\ticon: \"\",\n\tposition: \"center\",\n\tautoDelete: true,\n\tdismissTime: 3000,\n\tlang: Translator.getDefaultLanguage(),\n\ttheme: theme,\n};\n\nCometChatToastNotification.propTypes = {\n\ttype: PropTypes.oneOf(Object.values(CometChatToastNotification.types).concat(\"\")),\n\tmessage: PropTypes.string.isRequired,\n\ticon: PropTypes.string.isRequired,\n\tposition: PropTypes.oneOf([\"top-right\", \"bottom-right\", \"top-left\", \"bottom-left\", \"center\"]),\n\tautoDelete: PropTypes.bool,\n\tdismissTime: PropTypes.number,\n\tlang: PropTypes.string,\n\ttheme: PropTypes.object,\n};"]},"metadata":{},"sourceType":"module"}